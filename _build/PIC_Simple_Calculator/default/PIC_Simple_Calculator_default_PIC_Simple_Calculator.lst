

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Feb 22 15:22:08 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,space=0,delta=2
    10                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2,group=3
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=3
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=3
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=3
    31                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=3
    32                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=3
    33                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=3
    34                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=3
    35                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=3
    36                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=3
    37                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=3
    38                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2,group=2
    39                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2,group=2
    41                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2,group=2
    42                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=2
    43                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=2
    44                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2,group=2
    45                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2,group=2
    46                           	psect	text32,local,class=CODE,space=0,merge=1,delta=2,group=2
    47                           	psect	text13_split_1,local,class=CODE,space=0,merge=1,delta=2
    48                           	dabs	1,0x7E,2
    49     0000                     
    50                           ; Generated 12/10/2023 GMT
    51                           ; 
    52                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F877A Definitions
    82                           ; 
    83                           ; SFR Addresses
    84     0004                     fsr             equ	4
    85     0004                     fsr0            equ	4
    86     0000                     indf            equ	0
    87     0000                     indf0           equ	0
    88     0002                     pc              equ	2
    89     0002                     pcl             equ	2
    90     000A                     pclath          equ	10
    91     0003                     status          equ	3
    92     0000                     INDF            equ	0	;# 
    93     0001                     TMR0            equ	1	;# 
    94     0002                     PCL             equ	2	;# 
    95     0003                     STATUS          equ	3	;# 
    96     0004                     FSR             equ	4	;# 
    97     0005                     PORTA           equ	5	;# 
    98     0006                     PORTB           equ	6	;# 
    99     0007                     PORTC           equ	7	;# 
   100     0008                     PORTD           equ	8	;# 
   101     0009                     PORTE           equ	9	;# 
   102     000A                     PCLATH          equ	10	;# 
   103     000B                     INTCON          equ	11	;# 
   104     000C                     PIR1            equ	12	;# 
   105     000D                     PIR2            equ	13	;# 
   106     000E                     TMR1            equ	14	;# 
   107     000E                     TMR1L           equ	14	;# 
   108     000F                     TMR1H           equ	15	;# 
   109     0010                     T1CON           equ	16	;# 
   110     0011                     TMR2            equ	17	;# 
   111     0012                     T2CON           equ	18	;# 
   112     0013                     SSPBUF          equ	19	;# 
   113     0014                     SSPCON          equ	20	;# 
   114     0015                     CCPR1           equ	21	;# 
   115     0015                     CCPR1L          equ	21	;# 
   116     0016                     CCPR1H          equ	22	;# 
   117     0017                     CCP1CON         equ	23	;# 
   118     0018                     RCSTA           equ	24	;# 
   119     0019                     TXREG           equ	25	;# 
   120     001A                     RCREG           equ	26	;# 
   121     001B                     CCPR2           equ	27	;# 
   122     001B                     CCPR2L          equ	27	;# 
   123     001C                     CCPR2H          equ	28	;# 
   124     001D                     CCP2CON         equ	29	;# 
   125     001E                     ADRESH          equ	30	;# 
   126     001F                     ADCON0          equ	31	;# 
   127     0081                     OPTION_REG      equ	129	;# 
   128     0085                     TRISA           equ	133	;# 
   129     0086                     TRISB           equ	134	;# 
   130     0087                     TRISC           equ	135	;# 
   131     0088                     TRISD           equ	136	;# 
   132     0089                     TRISE           equ	137	;# 
   133     008C                     PIE1            equ	140	;# 
   134     008D                     PIE2            equ	141	;# 
   135     008E                     PCON            equ	142	;# 
   136     0091                     SSPCON2         equ	145	;# 
   137     0092                     PR2             equ	146	;# 
   138     0093                     SSPADD          equ	147	;# 
   139     0094                     SSPSTAT         equ	148	;# 
   140     0098                     TXSTA           equ	152	;# 
   141     0099                     SPBRG           equ	153	;# 
   142     009C                     CMCON           equ	156	;# 
   143     009D                     CVRCON          equ	157	;# 
   144     009E                     ADRESL          equ	158	;# 
   145     009F                     ADCON1          equ	159	;# 
   146     010C                     EEDATA          equ	268	;# 
   147     010D                     EEADR           equ	269	;# 
   148     010E                     EEDATH          equ	270	;# 
   149     010F                     EEADRH          equ	271	;# 
   150     018C                     EECON1          equ	396	;# 
   151     018D                     EECON2          equ	397	;# 
   152     0000                     INDF            equ	0	;# 
   153     0001                     TMR0            equ	1	;# 
   154     0002                     PCL             equ	2	;# 
   155     0003                     STATUS          equ	3	;# 
   156     0004                     FSR             equ	4	;# 
   157     0005                     PORTA           equ	5	;# 
   158     0006                     PORTB           equ	6	;# 
   159     0007                     PORTC           equ	7	;# 
   160     0008                     PORTD           equ	8	;# 
   161     0009                     PORTE           equ	9	;# 
   162     000A                     PCLATH          equ	10	;# 
   163     000B                     INTCON          equ	11	;# 
   164     000C                     PIR1            equ	12	;# 
   165     000D                     PIR2            equ	13	;# 
   166     000E                     TMR1            equ	14	;# 
   167     000E                     TMR1L           equ	14	;# 
   168     000F                     TMR1H           equ	15	;# 
   169     0010                     T1CON           equ	16	;# 
   170     0011                     TMR2            equ	17	;# 
   171     0012                     T2CON           equ	18	;# 
   172     0013                     SSPBUF          equ	19	;# 
   173     0014                     SSPCON          equ	20	;# 
   174     0015                     CCPR1           equ	21	;# 
   175     0015                     CCPR1L          equ	21	;# 
   176     0016                     CCPR1H          equ	22	;# 
   177     0017                     CCP1CON         equ	23	;# 
   178     0018                     RCSTA           equ	24	;# 
   179     0019                     TXREG           equ	25	;# 
   180     001A                     RCREG           equ	26	;# 
   181     001B                     CCPR2           equ	27	;# 
   182     001B                     CCPR2L          equ	27	;# 
   183     001C                     CCPR2H          equ	28	;# 
   184     001D                     CCP2CON         equ	29	;# 
   185     001E                     ADRESH          equ	30	;# 
   186     001F                     ADCON0          equ	31	;# 
   187     0081                     OPTION_REG      equ	129	;# 
   188     0085                     TRISA           equ	133	;# 
   189     0086                     TRISB           equ	134	;# 
   190     0087                     TRISC           equ	135	;# 
   191     0088                     TRISD           equ	136	;# 
   192     0089                     TRISE           equ	137	;# 
   193     008C                     PIE1            equ	140	;# 
   194     008D                     PIE2            equ	141	;# 
   195     008E                     PCON            equ	142	;# 
   196     0091                     SSPCON2         equ	145	;# 
   197     0092                     PR2             equ	146	;# 
   198     0093                     SSPADD          equ	147	;# 
   199     0094                     SSPSTAT         equ	148	;# 
   200     0098                     TXSTA           equ	152	;# 
   201     0099                     SPBRG           equ	153	;# 
   202     009C                     CMCON           equ	156	;# 
   203     009D                     CVRCON          equ	157	;# 
   204     009E                     ADRESL          equ	158	;# 
   205     009F                     ADCON1          equ	159	;# 
   206     010C                     EEDATA          equ	268	;# 
   207     010D                     EEADR           equ	269	;# 
   208     010E                     EEDATH          equ	270	;# 
   209     010F                     EEADRH          equ	271	;# 
   210     018C                     EECON1          equ	396	;# 
   211     018D                     EECON2          equ	397	;# 
   212     0008                     _PORTDbits      set	8
   213     0006                     _PORTB          set	6
   214     0007                     _PORTCbits      set	7
   215     0087                     _TRISCbits      set	135
   216     0086                     _TRISB          set	134
   217     0088                     _TRISDbits      set	136
   218                           
   219                           	psect	strings
   220     1800                     __pstrings:
   221     1800                     stringtab:
   222     1800                     __stringtab:
   223                           
   224                           ;	String table - string pointers are 1 byte each
   225     1800  1BFF               	btfsc	btemp+1,7
   226     1801  280A               	ljmp	stringcode
   227     1802  1383               	bcf	3,7
   228     1803  187F               	btfsc	btemp+1,0
   229     1804  1783               	bsf	3,7
   230     1805  0800               	movf	0,w
   231     1806  0A84               	incf	4,f
   232     1807  1903               	skipnz
   233     1808  0AFF               	incf	btemp+1,f
   234     1809  0008               	return
   235     180A                     stringcode:
   236     180A                     stringdir:
   237     180A  3018               	movlw	high stringdir
   238     180B  008A               	movwf	10
   239     180C  0804               	movf	4,w
   240     180D  0A84               	incf	4,f
   241     180E  0782               	addwf	2,f
   242     180F                     __stringbase:
   243     180F  3400               	retlw	0
   244     1810                     __end_of__stringtab:
   245     1810                     STR_20:
   246     1810  3469               	retlw	105	;'i'
   247     1811  346E               	retlw	110	;'n'
   248     1812  3466               	retlw	102	;'f'
   249     1813  3400               	retlw	0
   250     1814                     STR_23:
   251     1814  346E               	retlw	110	;'n'
   252     1815  3461               	retlw	97	;'a'
   253     1816  346E               	retlw	110	;'n'
   254     1817  3400               	retlw	0
   255     1818                     STR_19:
   256     1818  3425               	retlw	37	;'%'
   257     1819  3466               	retlw	102	;'f'
   258     181A  3400               	retlw	0
   259     181B                     STR_17:
   260     181B  342B               	retlw	43	;'+'
   261     181C  3400               	retlw	0
   262     181D                     STR_16:
   263     181D  342D               	retlw	45	;'-'
   264     181E  3400               	retlw	0
   265     181F                     STR_14:
   266     181F  342F               	retlw	47	;'/'
   267     1820  3400               	retlw	0
   268     1821                     STR_9:
   269     1821  3430               	retlw	48	;'0'
   270     1822  3400               	retlw	0
   271     1823                     STR_4:
   272     1823  3431               	retlw	49	;'1'
   273     1824  3400               	retlw	0
   274     1825                     STR_8:
   275     1825  3432               	retlw	50	;'2'
   276     1826  3400               	retlw	0
   277     1827                     STR_12:
   278     1827  3433               	retlw	51	;'3'
   279     1828  3400               	retlw	0
   280     1829                     STR_3:
   281     1829  3434               	retlw	52	;'4'
   282     182A  3400               	retlw	0
   283     182B                     STR_7:
   284     182B  3435               	retlw	53	;'5'
   285     182C  3400               	retlw	0
   286     182D                     STR_11:
   287     182D  3436               	retlw	54	;'6'
   288     182E  3400               	retlw	0
   289     182F                     STR_2:
   290     182F  3437               	retlw	55	;'7'
   291     1830  3400               	retlw	0
   292     1831                     STR_6:
   293     1831  3438               	retlw	56	;'8'
   294     1832  3400               	retlw	0
   295     1833                     STR_10:
   296     1833  3439               	retlw	57	;'9'
   297     1834  3400               	retlw	0
   298     1835                     STR_13:
   299     1835  343D               	retlw	61	;'='
   300     1836  3400               	retlw	0
   301     1837                     STR_5:
   302     1837  3443               	retlw	67	;'C'
   303     1838  3400               	retlw	0
   304     1839                     STR_15:
   305     1839  3478               	retlw	120	;'x'
   306     183A  3400               	retlw	0
   307     1814                     STR_24          equ	STR_23
   308     1814                     STR_25          equ	STR_23
   309     1810                     STR_21          equ	STR_20
   310     1810                     STR_22          equ	STR_20
   311     181C                     STR_1           equ	STR_17+1
   312     181C                     STR_18          equ	STR_17+1
   313                           
   314                           	psect	cinit
   315     07E4                     start_initialization:	
   316                           ; #config settings
   317                           
   318     07E4                     __initialization:
   319                           
   320                           ; Clear objects allocated to BANK1
   321     07E4  1683               	bsf	3,5	;RP0=1, select bank1
   322     07E5  1303               	bcf	3,6	;RP1=0, select bank1
   323     07E6  01EB               	clrf	__pbssBANK1& (0+127)
   324     07E7  01EC               	clrf	(__pbssBANK1+1)& (0+127)
   325     07E8  01ED               	clrf	(__pbssBANK1+2)& (0+127)
   326     07E9  01EE               	clrf	(__pbssBANK1+3)& (0+127)
   327     07EA  01EF               	clrf	(__pbssBANK1+4)& (0+127)
   328                           
   329                           ; Clear objects allocated to BANK3
   330     07EB  1783               	bsf	3,7	;select IRP bank2
   331     07EC  3090               	movlw	low __pbssBANK3
   332     07ED  0084               	movwf	4
   333     07EE  30B4               	movlw	low (__pbssBANK3+36)
   334     07EF  160A  158A  2304  120A  118A  	fcall	clear_ram0
   335                           
   336                           ; Clear objects allocated to BANK2
   337     07F4  3010               	movlw	low __pbssBANK2
   338     07F5  0084               	movwf	4
   339     07F6  3060               	movlw	low (__pbssBANK2+80)
   340     07F7  160A  158A  2304  120A  118A  	fcall	clear_ram0
   341     07FC                     end_of_initialization:	
   342                           ;End of C runtime variable initialization code
   343                           
   344     07FC                     __end_of__initialization:
   345     07FC  0183               	clrf	3
   346     07FD  160A  118A  2C9C   	ljmp	_main	;jump to C main() function
   347                           
   348                           	psect	bssBANK1
   349     00EB                     __pbssBANK1:
   350     00EB                     _width:
   351     00EB                     	ds	2
   352     00ED                     _prec:
   353     00ED                     	ds	2
   354     00EF                     _flags:
   355     00EF                     	ds	1
   356                           
   357                           	psect	bssBANK3
   358     0190                     __pbssBANK3:
   359     0190                     main@F1517:
   360     0190                     	ds	8
   361     0198                     floorf@F521:
   362     0198                     	ds	4
   363     019C                     ___fpclassifyf@F465:
   364     019C                     	ds	4
   365     01A0                     _nout:
   366     01A0                     	ds	2
   367     01A2                     _errno:
   368     01A2                     	ds	2
   369     01A4                     calculate@result:
   370     01A4                     	ds	16
   371                           
   372                           	psect	bssBANK2
   373     0110                     __pbssBANK2:
   374     0110                     _dbuf:
   375     0110                     	ds	80
   376                           
   377                           	psect	clrtext
   378     1B04                     clear_ram0:	
   379                           ;	Called with FSR containing the base address, and
   380                           ;	W with the last address+1
   381                           
   382     1B04  0064               	clrwdt	;clear the watchdog before getting into this loop
   383     1B05                     clrloop0:
   384     1B05  0180               	clrf	0	;clear RAM location pointed to by FSR
   385     1B06  0A84               	incf	4,f	;increment pointer
   386     1B07  0604               	xorwf	4,w	;XOR with final address
   387     1B08  1903               	btfsc	3,2	;have we reached the end yet?
   388     1B09  3400               	retlw	0	;all done for this memory range, return
   389     1B0A  0604               	xorwf	4,w	;XOR again to restore value
   390     1B0B  2B05               	goto	clrloop0	;do the next byte
   391                           
   392                           	psect	cstackBANK3
   393     01B4                     __pcstackBANK3:
   394     01B4                     main@output:
   395                           
   396                           ; 16 bytes @ 0x0
   397     01B4                     	ds	16
   398     01C4                     main@x:
   399                           
   400                           ; 2 bytes @ 0x10
   401     01C4                     	ds	2
   402     01C6                     _main$1087:
   403                           
   404                           ; 2 bytes @ 0x12
   405     01C6                     	ds	2
   406     01C8                     main@operator:
   407                           
   408                           ; 1 bytes @ 0x14
   409     01C8                     	ds	1
   410     01C9                     main@valueNo:
   411                           
   412                           ; 2 bytes @ 0x15
   413     01C9                     	ds	2
   414     01CB                     main@values:
   415                           
   416                           ; 8 bytes @ 0x17
   417     01CB                     	ds	8
   418     01D3                     main@newInput:
   419                           
   420                           ; 1 bytes @ 0x1F
   421     01D3                     	ds	1
   422                           
   423                           	psect	cstackBANK1
   424     00A0                     __pcstackBANK1:
   425     00A0                     efgtoa@ne:
   426                           
   427                           ; 2 bytes @ 0x0
   428     00A0                     	ds	2
   429     00A2                     efgtoa@p:
   430                           
   431                           ; 2 bytes @ 0x2
   432     00A2                     	ds	2
   433     00A4                     efgtoa@t:
   434                           
   435                           ; 2 bytes @ 0x4
   436     00A4                     	ds	2
   437     00A6                     _efgtoa$802:
   438                           
   439                           ; 2 bytes @ 0x6
   440     00A6                     	ds	2
   441     00A8                     efgtoa@pp:
   442                           
   443                           ; 1 bytes @ 0x8
   444     00A8                     	ds	1
   445     00A9                     efgtoa@mode:
   446                           
   447                           ; 1 bytes @ 0x9
   448     00A9                     	ds	1
   449     00AA                     efgtoa@nmode:
   450                           
   451                           ; 1 bytes @ 0xA
   452     00AA                     	ds	1
   453     00AB                     efgtoa@d:
   454                           
   455                           ; 2 bytes @ 0xB
   456     00AB                     	ds	2
   457     00AD                     efgtoa@m:
   458                           
   459                           ; 2 bytes @ 0xD
   460     00AD                     	ds	2
   461     00AF                     efgtoa@e:
   462                           
   463                           ; 2 bytes @ 0xF
   464     00AF                     	ds	2
   465     00B1                     efgtoa@w:
   466                           
   467                           ; 2 bytes @ 0x11
   468     00B1                     	ds	2
   469     00B3                     efgtoa@ou:
   470                           
   471                           ; 4 bytes @ 0x13
   472     00B3                     	ds	4
   473     00B7                     efgtoa@i:
   474                           
   475                           ; 2 bytes @ 0x17
   476     00B7                     	ds	2
   477     00B9                     efgtoa@h:
   478                           
   479                           ; 4 bytes @ 0x19
   480     00B9                     	ds	4
   481     00BD                     efgtoa@l:
   482                           
   483                           ; 4 bytes @ 0x1D
   484     00BD                     	ds	4
   485     00C1                     efgtoa@sign:
   486                           
   487                           ; 1 bytes @ 0x21
   488     00C1                     	ds	1
   489     00C2                     efgtoa@n:
   490                           
   491                           ; 2 bytes @ 0x22
   492     00C2                     	ds	2
   493     00C4                     efgtoa@g:
   494                           
   495                           ; 4 bytes @ 0x24
   496     00C4                     	ds	4
   497     00C8                     efgtoa@u:
   498                           
   499                           ; 4 bytes @ 0x28
   500     00C8                     	ds	4
   501     00CC                     ?_snprintf:
   502     00CC                     snprintf@s:	
   503                           ; 2 bytes @ 0x2C
   504                           
   505                           
   506                           ; 1 bytes @ 0x2C
   507     00CC                     	ds	1
   508     00CD                     snprintf@n:
   509                           
   510                           ; 2 bytes @ 0x2D
   511     00CD                     	ds	2
   512     00CF                     snprintf@fmt:
   513                           
   514                           ; 1 bytes @ 0x2F
   515     00CF                     	ds	5
   516     00D4                     _snprintf$715:
   517                           
   518                           ; 2 bytes @ 0x34
   519     00D4                     	ds	2
   520     00D6                     snprintf@ap:
   521                           
   522                           ; 1 bytes @ 0x36
   523     00D6                     	ds	1
   524     00D7                     snprintf@cnt:
   525                           
   526                           ; 2 bytes @ 0x37
   527     00D7                     	ds	2
   528     00D9                     snprintf@f:
   529                           
   530                           ; 11 bytes @ 0x39
   531     00D9                     	ds	11
   532     00E4                     ?_calculate:
   533     00E4                     calculate@values:	
   534                           ; 2 bytes @ 0x44
   535                           
   536                           
   537                           ; 1 bytes @ 0x44
   538     00E4                     	ds	1
   539     00E5                     calculate@operator:
   540                           
   541                           ; 1 bytes @ 0x45
   542     00E5                     	ds	1
   543     00E6                     calculate@x:
   544                           
   545                           ; 2 bytes @ 0x46
   546     00E6                     	ds	2
   547     00E8                     ??_main:
   548                           
   549                           ; 1 bytes @ 0x48
   550     00E8                     	ds	3
   551                           
   552                           	psect	cstackCOMMON
   553     0070                     __pcstackCOMMON:
   554     0070                     ?_strcpy:
   555     0070                     ?_memset:	
   556                           ; 1 bytes @ 0x0
   557                           
   558     0070                     ?_getInput:	
   559                           ; 1 bytes @ 0x0
   560                           
   561     0070                     ?_memcpy:	
   562                           ; 1 bytes @ 0x0
   563                           
   564     0070                     ?_putch:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ?_toggleEnable:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ?_sendCommand:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     ?___fleq:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ?_strlen:	
   577                           ; 1 bit 
   578                           
   579     0070                     ?__Umul8_16:	
   580                           ; 2 bytes @ 0x0
   581                           
   582     0070                     ?_fputc:	
   583                           ; 2 bytes @ 0x0
   584                           
   585     0070                     ?___fpclassifyf:	
   586                           ; 2 bytes @ 0x0
   587                           
   588     0070                     ?_main:	
   589                           ; 2 bytes @ 0x0
   590                           
   591     0070                     ?_labs:	
   592                           ; 2 bytes @ 0x0
   593                           
   594     0070                     ?___flneg:	
   595                           ; 4 bytes @ 0x0
   596                           
   597     0070                     ?___fltol:	
   598                           ; 4 bytes @ 0x0
   599                           
   600     0070                     ?___fldiv:	
   601                           ; 4 bytes @ 0x0
   602                           
   603     0070                     ?___xxtofl:	
   604                           ; 4 bytes @ 0x0
   605                           
   606     0070                     __Umul8_16@multiplicand:	
   607                           ; 4 bytes @ 0x0
   608                           
   609     0070                     memset@dest:	
   610                           ; 1 bytes @ 0x0
   611                           
   612     0070                     memcpy@d1:	
   613                           ; 1 bytes @ 0x0
   614                           
   615     0070                     putch@c:	
   616                           ; 1 bytes @ 0x0
   617                           
   618     0070                     strcpy@dest:	
   619                           ; 1 bytes @ 0x0
   620                           
   621     0070                     fputc@c:	
   622                           ; 1 bytes @ 0x0
   623                           
   624     0070                     strlen@s:	
   625                           ; 2 bytes @ 0x0
   626                           
   627     0070                     ___fleq@ff1:	
   628                           ; 2 bytes @ 0x0
   629                           
   630     0070                     ___flneg@f1:	
   631                           ; 4 bytes @ 0x0
   632                           
   633     0070                     ___fltol@f1:	
   634                           ; 4 bytes @ 0x0
   635                           
   636     0070                     ___fldiv@a:	
   637                           ; 4 bytes @ 0x0
   638                           
   639     0070                     ___xxtofl@val:	
   640                           ; 4 bytes @ 0x0
   641                           
   642     0070                     ___fpclassifyf@x:	
   643                           ; 4 bytes @ 0x0
   644                           
   645     0070                     labs@a:	
   646                           ; 4 bytes @ 0x0
   647                           
   648     0070                     ??_putch:	
   649                           ; 4 bytes @ 0x0
   650                           
   651     0070                     ??_toggleEnable:	
   652                           ; 1 bytes @ 0x0
   653                           
   654                           
   655                           ; 1 bytes @ 0x0
   656     0070                     	ds	1
   657     0071                     memcpy@s1:
   658     0071                     memset@c:	
   659                           ; 1 bytes @ 0x1
   660                           
   661     0071                     strcpy@src:	
   662                           ; 2 bytes @ 0x1
   663                           
   664                           
   665                           ; 2 bytes @ 0x1
   666     0071                     	ds	1
   667     0072                     sendCommand@command:
   668     0072                     memcpy@n:	
   669                           ; 1 bytes @ 0x2
   670                           
   671     0072                     fputc@fp:	
   672                           ; 2 bytes @ 0x2
   673                           
   674     0072                     strlen@a:	
   675                           ; 2 bytes @ 0x2
   676                           
   677     0072                     ??_strlen:	
   678                           ; 2 bytes @ 0x2
   679                           
   680     0072                     ??__Umul8_16:	
   681                           ; 1 bytes @ 0x2
   682                           
   683     0072                     ??_sendCommand:	
   684                           ; 1 bytes @ 0x2
   685                           
   686                           
   687                           ; 1 bytes @ 0x2
   688     0072                     	ds	1
   689     0073                     ?_selectRow:
   690     0073                     selectRow@row:	
   691                           ; 1 bytes @ 0x3
   692                           
   693     0073                     memset@n:	
   694                           ; 2 bytes @ 0x3
   695                           
   696     0073                     ??_strcpy:	
   697                           ; 2 bytes @ 0x3
   698                           
   699                           
   700                           ; 1 bytes @ 0x3
   701     0073                     	ds	1
   702     0074                     ?_LCDdisplay:
   703     0074                     memcpy@tmp:	
   704                           ; 1 bytes @ 0x4
   705                           
   706     0074                     LCDdisplay@sentence:	
   707                           ; 1 bytes @ 0x4
   708                           
   709     0074                     __Umul8_16@product:	
   710                           ; 2 bytes @ 0x4
   711                           
   712     0074                     ___fleq@ff2:	
   713                           ; 2 bytes @ 0x4
   714                           
   715     0074                     ___fldiv@b:	
   716                           ; 4 bytes @ 0x4
   717                           
   718     0074                     ??_getInput:	
   719                           ; 4 bytes @ 0x4
   720                           
   721     0074                     ??_fputc:	
   722                           ; 1 bytes @ 0x4
   723                           
   724     0074                     ??___fpclassifyf:	
   725                           ; 1 bytes @ 0x4
   726                           
   727     0074                     ??_labs:	
   728                           ; 1 bytes @ 0x4
   729                           
   730     0074                     ??_memcpy:	
   731                           ; 1 bytes @ 0x4
   732                           
   733     0074                     ??___flneg:	
   734                           ; 1 bytes @ 0x4
   735                           
   736     0074                     ??___fltol:	
   737                           ; 1 bytes @ 0x4
   738                           
   739     0074                     ??___xxtofl:	
   740                           ; 1 bytes @ 0x4
   741                           
   742                           
   743                           ; 1 bytes @ 0x4
   744     0074                     	ds	1
   745     0075                     memset@p:
   746     0075                     memcpy@d:	
   747                           ; 1 bytes @ 0x5
   748                           
   749     0075                     strcpy@d:	
   750                           ; 1 bytes @ 0x5
   751                           
   752     0075                     ??_memset:	
   753                           ; 1 bytes @ 0x5
   754                           
   755     0075                     ??_selectRow:	
   756                           ; 1 bytes @ 0x5
   757                           
   758                           
   759                           ; 1 bytes @ 0x5
   760     0075                     	ds	1
   761     0076                     memcpy@s:
   762     0076                     LCDdisplay@lineLength:	
   763                           ; 1 bytes @ 0x6
   764                           
   765     0076                     __Umul8_16@word_mpld:	
   766                           ; 2 bytes @ 0x6
   767                           
   768     0076                     ??_LCDdisplay:	
   769                           ; 2 bytes @ 0x6
   770                           
   771                           
   772                           ; 1 bytes @ 0x6
   773     0076                     	ds	1
   774     0077                     getInput@output:
   775                           
   776                           ; 1 bytes @ 0x7
   777     0077                     	ds	1
   778     0078                     ___fltol@sign1:
   779     0078                     __Umul8_16@multiplier:	
   780                           ; 1 bytes @ 0x8
   781                           
   782     0078                     ___xxtofl@sign:	
   783                           ; 1 bytes @ 0x8
   784                           
   785     0078                     LCDdisplay@ind:	
   786                           ; 1 bytes @ 0x8
   787                           
   788     0078                     ??___fleq:	
   789                           ; 2 bytes @ 0x8
   790                           
   791     0078                     ??___fldiv:	
   792                           ; 1 bytes @ 0x8
   793                           
   794                           
   795                           ; 1 bytes @ 0x8
   796     0078                     	ds	1
   797     0079                     ___fltol@exp1:
   798     0079                     ___xxtofl@exp:	
   799                           ; 1 bytes @ 0x9
   800                           
   801     0079                     ??___flmul:	
   802                           ; 1 bytes @ 0x9
   803                           
   804                           
   805                           ; 1 bytes @ 0x9
   806     0079                     	ds	1
   807     007A                     ___xxtofl@arg:
   808                           
   809                           ; 4 bytes @ 0xA
   810     007A                     	ds	3
   811     007D                     ??_pad:
   812                           
   813                           ; 1 bytes @ 0xD
   814     007D                     	ds	1
   815     007E                     ??_calculate:
   816     007E                     ??_vfprintf:	
   817                           ; 1 bytes @ 0xE
   818                           
   819     007E                     ??___flsub:	
   820                           ; 1 bytes @ 0xE
   821                           
   822                           
   823                           	psect	cstackBANK0
   824     0020                     __pcstackBANK0:	
   825                           ; 1 bytes @ 0xE
   826                           
   827     0020                     ?_fputs:
   828     0020                     ?___flmul:	
   829                           ; 2 bytes @ 0x0
   830                           
   831     0020                     fputs@s:	
   832                           ; 4 bytes @ 0x0
   833                           
   834     0020                     ___fpclassifyf@e:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0020                     ___fldiv@rem:	
   838                           ; 2 bytes @ 0x0
   839                           
   840     0020                     ___flmul@b:	
   841                           ; 4 bytes @ 0x0
   842                           
   843                           
   844                           ; 4 bytes @ 0x0
   845     0020                     	ds	1
   846     0021                     fputs@fp:
   847                           
   848                           ; 2 bytes @ 0x1
   849     0021                     	ds	1
   850     0022                     ___fpclassifyf@u:
   851                           
   852                           ; 4 bytes @ 0x2
   853     0022                     	ds	1
   854     0023                     ??_fputs:
   855                           
   856                           ; 1 bytes @ 0x3
   857     0023                     	ds	1
   858     0024                     ___fldiv@sign:
   859     0024                     ___flmul@a:	
   860                           ; 1 bytes @ 0x4
   861                           
   862                           
   863                           ; 4 bytes @ 0x4
   864     0024                     	ds	1
   865     0025                     fputs@c:
   866     0025                     ___fldiv@new_exp:	
   867                           ; 1 bytes @ 0x5
   868                           
   869                           
   870                           ; 2 bytes @ 0x5
   871     0025                     	ds	1
   872     0026                     fputs@i:
   873                           
   874                           ; 2 bytes @ 0x6
   875     0026                     	ds	1
   876     0027                     ___fldiv@grs:
   877                           
   878                           ; 4 bytes @ 0x7
   879     0027                     	ds	1
   880     0028                     ?_pad:
   881     0028                     ___flmul@sign:	
   882                           ; 2 bytes @ 0x8
   883                           
   884     0028                     pad@fp:	
   885                           ; 1 bytes @ 0x8
   886                           
   887                           
   888                           ; 2 bytes @ 0x8
   889     0028                     	ds	1
   890     0029                     ___flmul@grs:
   891                           
   892                           ; 4 bytes @ 0x9
   893     0029                     	ds	1
   894     002A                     pad@buf:
   895                           
   896                           ; 1 bytes @ 0xA
   897     002A                     	ds	1
   898     002B                     ___fldiv@bexp:
   899     002B                     pad@p:	
   900                           ; 1 bytes @ 0xB
   901                           
   902                           
   903                           ; 2 bytes @ 0xB
   904     002B                     	ds	1
   905     002C                     ___fldiv@aexp:
   906                           
   907                           ; 1 bytes @ 0xC
   908     002C                     	ds	1
   909     002D                     ?_floorf:
   910     002D                     ___flmul@aexp:	
   911                           ; 4 bytes @ 0xD
   912                           
   913     002D                     pad@i:	
   914                           ; 1 bytes @ 0xD
   915                           
   916     002D                     floorf@x:	
   917                           ; 2 bytes @ 0xD
   918                           
   919                           
   920                           ; 4 bytes @ 0xD
   921     002D                     	ds	1
   922     002E                     ___flmul@bexp:
   923                           
   924                           ; 1 bytes @ 0xE
   925     002E                     	ds	1
   926     002F                     ___flmul@prod:
   927                           
   928                           ; 4 bytes @ 0xF
   929     002F                     	ds	2
   930     0031                     ??_floorf:
   931                           
   932                           ; 1 bytes @ 0x11
   933     0031                     	ds	2
   934     0033                     ___flmul@temp:
   935                           
   936                           ; 2 bytes @ 0x13
   937     0033                     	ds	2
   938     0035                     ?___flge:
   939     0035                     ?___fladd:	
   940                           ; 1 bit 
   941                           
   942     0035                     ___flge@ff1:	
   943                           ; 4 bytes @ 0x15
   944                           
   945     0035                     ___fladd@b:	
   946                           ; 4 bytes @ 0x15
   947                           
   948                           
   949                           ; 4 bytes @ 0x15
   950     0035                     	ds	2
   951     0037                     floorf@m:
   952                           
   953                           ; 4 bytes @ 0x17
   954     0037                     	ds	2
   955     0039                     ___flge@ff2:
   956     0039                     ___fladd@a:	
   957                           ; 4 bytes @ 0x19
   958                           
   959                           
   960                           ; 4 bytes @ 0x19
   961     0039                     	ds	2
   962     003B                     floorf@e:
   963                           
   964                           ; 2 bytes @ 0x1B
   965     003B                     	ds	2
   966     003D                     floorf@u:
   967     003D                     ??___flge:	
   968                           ; 4 bytes @ 0x1D
   969                           
   970     003D                     ??___fladd:	
   971                           ; 1 bytes @ 0x1D
   972                           
   973                           
   974                           ; 1 bytes @ 0x1D
   975     003D                     	ds	8
   976     0045                     ___fladd@signs:
   977                           
   978                           ; 1 bytes @ 0x25
   979     0045                     	ds	1
   980     0046                     ___fladd@aexp:
   981                           
   982                           ; 1 bytes @ 0x26
   983     0046                     	ds	1
   984     0047                     ___fladd@bexp:
   985                           
   986                           ; 1 bytes @ 0x27
   987     0047                     	ds	1
   988     0048                     ___fladd@grs:
   989                           
   990                           ; 1 bytes @ 0x28
   991     0048                     	ds	1
   992     0049                     ?_setDigit:
   993     0049                     ?___flsub:	
   994                           ; 1 bytes @ 0x29
   995                           
   996     0049                     setDigit@oldValue:	
   997                           ; 4 bytes @ 0x29
   998                           
   999     0049                     ___flsub@a:	
  1000                           ; 1 bytes @ 0x29
  1001                           
  1002                           
  1003                           ; 4 bytes @ 0x29
  1004     0049                     	ds	1
  1005     004A                     setDigit@newValue:
  1006                           
  1007                           ; 1 bytes @ 0x2A
  1008     004A                     	ds	1
  1009     004B                     ??_setDigit:
  1010                           
  1011                           ; 1 bytes @ 0x2B
  1012     004B                     	ds	2
  1013     004D                     ___flsub@b:
  1014                           
  1015                           ; 4 bytes @ 0x2D
  1016     004D                     	ds	4
  1017     0051                     ?_efgtoa:
  1018     0051                     efgtoa@fp:	
  1019                           ; 2 bytes @ 0x31
  1020                           
  1021                           
  1022                           ; 2 bytes @ 0x31
  1023     0051                     	ds	2
  1024     0053                     efgtoa@f:
  1025                           
  1026                           ; 4 bytes @ 0x33
  1027     0053                     	ds	4
  1028     0057                     efgtoa@c:
  1029                           
  1030                           ; 1 bytes @ 0x37
  1031     0057                     	ds	1
  1032     0058                     ??_efgtoa:
  1033                           
  1034                           ; 1 bytes @ 0x38
  1035     0058                     	ds	4
  1036     005C                     ?_vfpfcnvrt:
  1037     005C                     vfpfcnvrt@fp:	
  1038                           ; 2 bytes @ 0x3C
  1039                           
  1040                           
  1041                           ; 2 bytes @ 0x3C
  1042     005C                     	ds	2
  1043     005E                     vfpfcnvrt@fmt:
  1044                           
  1045                           ; 1 bytes @ 0x3E
  1046     005E                     	ds	1
  1047     005F                     vfpfcnvrt@ap:
  1048                           
  1049                           ; 1 bytes @ 0x3F
  1050     005F                     	ds	1
  1051     0060                     ??_vfpfcnvrt:
  1052                           
  1053                           ; 1 bytes @ 0x40
  1054     0060                     	ds	2
  1055     0062                     vfpfcnvrt@convarg:
  1056                           
  1057                           ; 4 bytes @ 0x42
  1058     0062                     	ds	4
  1059     0066                     vfpfcnvrt@c:
  1060                           
  1061                           ; 1 bytes @ 0x46
  1062     0066                     	ds	1
  1063     0067                     vfpfcnvrt@cp:
  1064                           
  1065                           ; 1 bytes @ 0x47
  1066     0067                     	ds	1
  1067     0068                     ?_vfprintf:
  1068     0068                     vfprintf@fp:	
  1069                           ; 2 bytes @ 0x48
  1070                           
  1071                           
  1072                           ; 2 bytes @ 0x48
  1073     0068                     	ds	2
  1074     006A                     vfprintf@fmt:
  1075                           
  1076                           ; 1 bytes @ 0x4A
  1077     006A                     	ds	1
  1078     006B                     vfprintf@ap:
  1079                           
  1080                           ; 1 bytes @ 0x4B
  1081     006B                     	ds	1
  1082     006C                     vfprintf@cfmt:
  1083                           
  1084                           ; 1 bytes @ 0x4C
  1085     006C                     	ds	1
  1086     006D                     ??_snprintf:
  1087                           
  1088                           ; 1 bytes @ 0x4D
  1089     006D                     	ds	3
  1090                           
  1091                           	psect	maintext
  1092     149C                     __pmaintext:	
  1093 ;;
  1094 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1095 ;;
  1096 ;; *************** function _main *****************
  1097 ;; Defined at:
  1098 ;;		line 240 in file "C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  newInput        1   31[BANK3 ] PTR unsigned char [1]
  1103 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(2), 
  1104 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(2), 
  1105 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  1106 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  1107 ;;		 -> STR_1(1), 
  1108 ;;  x               2   16[BANK3 ] unsigned short 
  1109 ;;  output         16    0[BANK3 ] unsigned char [16]
  1110 ;;  values          8   23[BANK3 ] [2]
  1111 ;;  valueNo         2   21[BANK3 ] unsigned short 
  1112 ;;  operator        1   20[BANK3 ] unsigned char 
  1113 ;; Return value:  Size  Location     Type
  1114 ;;                  2  120[None  ] int 
  1115 ;; Registers used:
  1116 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1117 ;; Tracked objects:
  1118 ;;		On entry : B00/0
  1119 ;;		On exit  : 0/0
  1120 ;;		Unchanged: 0/0
  1121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1122 ;;      Params:         0       0       0       0       0
  1123 ;;      Locals:         0       0       0      32       0
  1124 ;;      Temps:          0       0       3       0       0
  1125 ;;      Totals:         0       0       3      32       0
  1126 ;;Total ram usage:       35 bytes
  1127 ;; Hardware stack levels required when called: 9
  1128 ;; This function calls:
  1129 ;;		_LCDdisplay
  1130 ;;		_calculate
  1131 ;;		_getInput
  1132 ;;		_memset
  1133 ;;		_selectRow
  1134 ;;		_sendCommand
  1135 ;;		_setDigit
  1136 ;;		_strcpy
  1137 ;; This function is called by:
  1138 ;;		Startup code after reset
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142     149C                     _main:	
  1143                           ;psect for function _main
  1144                           
  1145     149C                     l3603:	
  1146                           ;incstack = 0
  1147 ;; hardware stack exceeded
  1148                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1149                           
  1150                           
  1151                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 243:     TRISDbits.TRI
      +                          SD0 = 1;
  1152     149C  1683               	bsf	3,5	;RP0=1, select bank1
  1153     149D  1303               	bcf	3,6	;RP1=0, select bank1
  1154     149E  1408               	bsf	8,0	;volatile
  1155                           
  1156                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 244:     TRISDbits.TRI
      +                          SD1 = 1;
  1157     149F  1488               	bsf	8,1	;volatile
  1158                           
  1159                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 245:     TRISDbits.TRI
      +                          SD2 = 1;
  1160     14A0  1508               	bsf	8,2	;volatile
  1161                           
  1162                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 246:     TRISDbits.TRI
      +                          SD3 = 1;
  1163     14A1  1588               	bsf	8,3	;volatile
  1164                           
  1165                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 247:     TRISDbits.TRI
      +                          SD4 = 0;
  1166     14A2  1208               	bcf	8,4	;volatile
  1167                           
  1168                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 248:     TRISDbits.TRI
      +                          SD5 = 0;
  1169     14A3  1288               	bcf	8,5	;volatile
  1170                           
  1171                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 249:     TRISDbits.TRI
      +                          SD6 = 0;
  1172     14A4  1308               	bcf	8,6	;volatile
  1173                           
  1174                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 250:     TRISDbits.TRI
      +                          SD7 = 0;
  1175     14A5  1388               	bcf	8,7	;volatile
  1176                           
  1177                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 251:     PORTDbits.RD4
      +                           = 0;
  1178     14A6  1283               	bcf	3,5	;RP0=0, select bank0
  1179     14A7  1303               	bcf	3,6	;RP1=0, select bank0
  1180     14A8  1208               	bcf	8,4	;volatile
  1181                           
  1182                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 252:     PORTDbits.RD5
      +                           = 0;
  1183     14A9  1288               	bcf	8,5	;volatile
  1184                           
  1185                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 253:     PORTDbits.RD6
      +                           = 0;
  1186     14AA  1308               	bcf	8,6	;volatile
  1187                           
  1188                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 254:     PORTDbits.RD7
      +                           = 0;
  1189     14AB  1388               	bcf	8,7	;volatile
  1190     14AC                     l3605:
  1191                           
  1192                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 258:     TRISB = 0x00;
  1193     14AC  1683               	bsf	3,5	;RP0=1, select bank1
  1194     14AD  1303               	bcf	3,6	;RP1=0, select bank1
  1195     14AE  0186               	clrf	6	;volatile
  1196     14AF                     l3607:
  1197                           
  1198                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 259:     TRISCbits.TRI
      +                          SC2 = 0;
  1199     14AF  1107               	bcf	7,2	;volatile
  1200     14B0                     l3609:
  1201                           
  1202                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 260:     TRISCbits.TRI
      +                          SC0 = 0;
  1203     14B0  1007               	bcf	7,0	;volatile
  1204     14B1                     l3611:
  1205                           
  1206                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 261:     TRISCbits.TRI
      +                          SC1 = 0;
  1207     14B1  1087               	bcf	7,1	;volatile
  1208                           
  1209                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 262:     for(uint16_t 
      +                          x = 0; x < 3; x++){
  1210     14B2  1683               	bsf	3,5	;RP0=1, select bank3
  1211     14B3  1703               	bsf	3,6	;RP1=1, select bank3
  1212     14B4  01C4               	clrf	main@x^(0+384)
  1213     14B5  01C5               	clrf	(main@x+1)^(0+384)
  1214     14B6                     l3617:
  1215                           
  1216                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 263:         _delay((u
      +                          nsigned long)((100)*(20000000/4000.0)));
  1217     14B6  3003               	movlw	3
  1218     14B7  1683               	bsf	3,5	;RP0=1, select bank1
  1219     14B8  1303               	bcf	3,6	;RP1=0, select bank1
  1220     14B9  00EA               	movwf	(??_main^(0+128)+2)
  1221     14BA  308A               	movlw	138
  1222     14BB  00E9               	movwf	(??_main^(0+128)+1)
  1223     14BC  3055               	movlw	85
  1224     14BD  00E8               	movwf	??_main^(0+128)
  1225     14BE                     u5397:
  1226     14BE  0BE8               	decfsz	??_main^(0+128),f
  1227     14BF  2CBE               	goto	u5397
  1228     14C0  0BE9               	decfsz	(??_main^(0+128)+1),f
  1229     14C1  2CBE               	goto	u5397
  1230     14C2  0BEA               	decfsz	(??_main^(0+128)+2),f
  1231     14C3  2CBE               	goto	u5397
  1232     14C4                     l3619:
  1233                           
  1234                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 264:         sendComma
      +                          nd(0x30);
  1235     14C4  3030               	movlw	48
  1236     14C5  160A  158A  2317  160A  118A  	fcall	_sendCommand
  1237     14CA                     l3621:
  1238                           
  1239                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 265:     }
  1240     14CA  3001               	movlw	1
  1241     14CB  1683               	bsf	3,5	;RP0=1, select bank3
  1242     14CC  1703               	bsf	3,6	;RP1=1, select bank3
  1243     14CD  07C4               	addwf	main@x^(0+384),f
  1244     14CE  1803               	skipnc
  1245     14CF  0AC5               	incf	(main@x+1)^(0+384),f
  1246     14D0  3000               	movlw	0
  1247     14D1  07C5               	addwf	(main@x+1)^(0+384),f
  1248     14D2                     l3623:
  1249     14D2  3000               	movlw	0
  1250     14D3  0245               	subwf	(main@x+1)^(0+384),w
  1251     14D4  3003               	movlw	3
  1252     14D5  1903               	skipnz
  1253     14D6  0244               	subwf	main@x^(0+384),w
  1254     14D7  1C03               	skipc
  1255     14D8  2CDA               	goto	u5331
  1256     14D9  2CDB               	goto	u5330
  1257     14DA                     u5331:
  1258     14DA  2CB6               	goto	l3617
  1259     14DB                     u5330:
  1260     14DB                     l3625:
  1261                           
  1262                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 266:     _delay((unsig
      +                          ned long)((100)*(20000000/4000.0)));
  1263     14DB  3003               	movlw	3
  1264     14DC  1683               	bsf	3,5	;RP0=1, select bank1
  1265     14DD  1303               	bcf	3,6	;RP1=0, select bank1
  1266     14DE  00EA               	movwf	(??_main^(0+128)+2)
  1267     14DF  308A               	movlw	138
  1268     14E0  00E9               	movwf	(??_main^(0+128)+1)
  1269     14E1  3055               	movlw	85
  1270     14E2  00E8               	movwf	??_main^(0+128)
  1271     14E3                     u5407:
  1272     14E3  0BE8               	decfsz	??_main^(0+128),f
  1273     14E4  2CE3               	goto	u5407
  1274     14E5  0BE9               	decfsz	(??_main^(0+128)+1),f
  1275     14E6  2CE3               	goto	u5407
  1276     14E7  0BEA               	decfsz	(??_main^(0+128)+2),f
  1277     14E8  2CE3               	goto	u5407
  1278     14E9                     l3627:
  1279                           
  1280                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 267:     sendCommand(0
      +                          x38);
  1281     14E9  3038               	movlw	56
  1282     14EA  160A  158A  2317  160A  118A  	fcall	_sendCommand
  1283     14EF                     l3629:
  1284                           
  1285                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 268:     sendCommand(0
      +                          x08);
  1286     14EF  3008               	movlw	8
  1287     14F0  160A  158A  2317  160A  118A  	fcall	_sendCommand
  1288     14F5                     l3631:
  1289                           
  1290                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 269:     sendCommand(0
      +                          x01);
  1291     14F5  3001               	movlw	1
  1292     14F6  160A  158A  2317  160A  118A  	fcall	_sendCommand
  1293     14FB                     l3633:
  1294                           
  1295                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 270:     sendCommand(0
      +                          x06);
  1296     14FB  3006               	movlw	6
  1297     14FC  160A  158A  2317  160A  118A  	fcall	_sendCommand
  1298     1501                     l3635:
  1299                           
  1300                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 271:     sendCommand(0
      +                          x0F);
  1301     1501  300F               	movlw	15
  1302     1502  160A  158A  2317  160A  118A  	fcall	_sendCommand
  1303     1507                     l3637:
  1304                           
  1305                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 272:     selectRow(1);
  1306     1507  3001               	movlw	1
  1307     1508  00F3               	movwf	selectRow@row
  1308     1509  3000               	movlw	0
  1309     150A  00F4               	movwf	selectRow@row+1
  1310     150B  160A  158A  2367  160A  118A  	fcall	_selectRow
  1311     1510                     l3639:
  1312                           
  1313                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 276:     char output[1
      +                          6], operator = '+';
  1314     1510  302B               	movlw	43
  1315     1511  1683               	bsf	3,5	;RP0=1, select bank3
  1316     1512  1703               	bsf	3,6	;RP1=1, select bank3
  1317     1513  00C8               	movwf	main@operator^(0+384)
  1318     1514                     l3641:
  1319                           
  1320                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 277:     double values
      +                          [2] = {0,0};
  1321     1514  30CB               	movlw	main@values& (0+255)
  1322     1515  0084               	movwf	4
  1323     1516  3008               	movlw	8
  1324     1517  00FF               	movwf	btemp+1
  1325     1518                     u5340:
  1326     1518  1783               	bsf	3,7	;select IRP bank3
  1327     1519  0180               	clrf	0
  1328     151A  0A84               	incf	4,f
  1329     151B  0BFF               	decfsz	btemp+1,f
  1330     151C  2D18               	goto	u5340
  1331     151D                     l3643:
  1332                           
  1333                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 278:     uint16_t valu
      +                          eNo = 0;
  1334     151D  01C9               	clrf	main@valueNo^(0+384)
  1335     151E  01CA               	clrf	(main@valueNo+1)^(0+384)
  1336     151F                     l3645:
  1337                           
  1338                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 281:         char *new
      +                          Input[1];;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 282:         
      +                          *newInput = getInput();
  1339     151F  160A  118A  2648  160A  118A  	fcall	_getInput
  1340     1524  1683               	bsf	3,5	;RP0=1, select bank3
  1341     1525  1703               	bsf	3,6	;RP1=1, select bank3
  1342     1526  00D3               	movwf	main@newInput^(0+384)
  1343                           
  1344                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 283:         switch(*n
      +                          ewInput[0]){
  1345     1527  2E2E               	goto	l3687
  1346     1528                     l129:	
  1347                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 286:             case 
      +                          '/':
  1348                           
  1349     1528                     l3647:
  1350                           
  1351                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 288:             opera
      +                          tor = *newInput[0];
  1352     1528  0853               	movf	main@newInput^(0+384),w
  1353     1529  0084               	movwf	4
  1354     152A  160A  158A  200A  160A  118A  	fcall	stringdir
  1355     152F  00C8               	movwf	main@operator^(0+384)
  1356                           
  1357                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 289:             switc
      +                          h(valueNo){
  1358     1530  2D74               	goto	l3659
  1359     1531                     l3649:
  1360                           
  1361                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 291:                 v
      +                          alueNo++;
  1362     1531  3001               	movlw	1
  1363     1532  07C9               	addwf	main@valueNo^(0+384),f
  1364     1533  1803               	skipnc
  1365     1534  0ACA               	incf	(main@valueNo+1)^(0+384),f
  1366     1535  3000               	movlw	0
  1367     1536  07CA               	addwf	(main@valueNo+1)^(0+384),f
  1368                           
  1369                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 292:                 b
      +                          reak;
  1370     1537  2D81               	goto	l3661
  1371     1538                     l3651:
  1372                           
  1373                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 295:                 s
      +                          trcpy(output, calculate(values, operator));
  1374     1538  30CB               	movlw	(low (main@values| (0+256)))& (0+255)
  1375     1539  1683               	bsf	3,5	;RP0=1, select bank1
  1376     153A  1303               	bcf	3,6	;RP1=0, select bank1
  1377     153B  00E4               	movwf	calculate@values^(0+128)
  1378     153C  1683               	bsf	3,5	;RP0=1, select bank3
  1379     153D  1703               	bsf	3,6	;RP1=1, select bank3
  1380     153E  0848               	movf	main@operator^(0+384),w
  1381     153F  1683               	bsf	3,5	;RP0=1, select bank1
  1382     1540  1303               	bcf	3,6	;RP1=0, select bank1
  1383     1541  00E5               	movwf	calculate@operator^(0+128)
  1384     1542  160A  118A  2340  160A  118A  	fcall	_calculate
  1385     1547  1683               	bsf	3,5	;RP0=1, select bank1
  1386     1548  1303               	bcf	3,6	;RP1=0, select bank1
  1387     1549  0864               	movf	?_calculate^(0+128),w
  1388     154A  1683               	bsf	3,5	;RP0=1, select bank3
  1389     154B  1703               	bsf	3,6	;RP1=1, select bank3
  1390     154C  00C6               	movwf	_main$1087^(0+384)
  1391     154D  1683               	bsf	3,5	;RP0=1, select bank1
  1392     154E  1303               	bcf	3,6	;RP1=0, select bank1
  1393     154F  0865               	movf	(?_calculate+1)^(0+128),w
  1394     1550  1683               	bsf	3,5	;RP0=1, select bank3
  1395     1551  1703               	bsf	3,6	;RP1=1, select bank3
  1396     1552  00C7               	movwf	(_main$1087+1)^(0+384)
  1397                           
  1398                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 295:                 s
      +                          trcpy(output, calculate(values, operator));
  1399     1553  30B4               	movlw	(low (main@output| (0+256)))& (0+255)
  1400     1554  00F0               	movwf	strcpy@dest
  1401     1555  0846               	movf	_main$1087^(0+384),w
  1402     1556  00F1               	movwf	strcpy@src
  1403     1557  0847               	movf	(_main$1087+1)^(0+384),w
  1404     1558  00F2               	movwf	strcpy@src+1
  1405     1559  160A  158A  23A5  160A  118A  	fcall	_strcpy
  1406     155E                     l3653:
  1407                           
  1408                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 298:                 s
      +                          endCommand(0x01);
  1409     155E  3001               	movlw	1
  1410     155F  160A  158A  2317  160A  118A  	fcall	_sendCommand
  1411     1564                     l3655:
  1412                           
  1413                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 299:                 v
      +                          alueNo = 1;
  1414     1564  3001               	movlw	1
  1415     1565  1683               	bsf	3,5	;RP0=1, select bank3
  1416     1566  1703               	bsf	3,6	;RP1=1, select bank3
  1417     1567  00C9               	movwf	main@valueNo^(0+384)
  1418     1568  3000               	movlw	0
  1419     1569  00CA               	movwf	(main@valueNo^(0+384)+1)
  1420     156A                     l3657:
  1421                           
  1422                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 300:                 L
      +                          CDdisplay(output);
  1423     156A  30B4               	movlw	(low (main@output| (0+256)))& (0+255)
  1424     156B  00F4               	movwf	LCDdisplay@sentence
  1425     156C  3001               	movlw	1
  1426     156D  00F5               	movwf	LCDdisplay@sentence+1
  1427     156E  160A  158A  2460  160A  118A  	fcall	_LCDdisplay
  1428                           
  1429                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 301:             }
  1430     1573  2D81               	goto	l3661
  1431     1574                     l3659:
  1432                           
  1433                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1434                           ; Switch size 1, requested type "simple"
  1435                           ; Number of cases is 1, Range of values is 0 to 0
  1436                           ; switch strategies available:
  1437                           ; Name         Instructions Cycles
  1438                           ; simple_byte            4     3 (average)
  1439                           ; direct_byte           11     8 (fixed)
  1440                           ; jumptable            260     6 (fixed)
  1441                           ;	Chosen strategy is simple_byte
  1442     1574  084A               	movf	(main@valueNo+1)^(0+384),w
  1443     1575  3A00               	xorlw	0	; case 0
  1444     1576  1903               	skipnz
  1445     1577  2D79               	goto	l3757
  1446     1578  2D5E               	goto	l3653
  1447     1579                     l3757:
  1448                           
  1449                           ; Switch size 1, requested type "simple"
  1450                           ; Number of cases is 2, Range of values is 0 to 1
  1451                           ; switch strategies available:
  1452                           ; Name         Instructions Cycles
  1453                           ; simple_byte            7     4 (average)
  1454                           ; direct_byte           14     8 (fixed)
  1455                           ; jumptable            260     6 (fixed)
  1456                           ;	Chosen strategy is simple_byte
  1457     1579  0849               	movf	main@valueNo^(0+384),w
  1458     157A  3A00               	xorlw	0	; case 0
  1459     157B  1903               	skipnz
  1460     157C  2D31               	goto	l3649
  1461     157D  3A01               	xorlw	1	; case 1
  1462     157E  1903               	skipnz
  1463     157F  2D38               	goto	l3651
  1464     1580  2D5E               	goto	l3653
  1465     1581                     l3661:
  1466                           
  1467                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 302:             LCDdi
      +                          splay(*newInput);
  1468     1581  1683               	bsf	3,5	;RP0=1, select bank3
  1469     1582  1703               	bsf	3,6	;RP1=1, select bank3
  1470     1583  0853               	movf	main@newInput^(0+384),w
  1471     1584  00F4               	movwf	LCDdisplay@sentence
  1472     1585  3000               	movlw	0
  1473     1586  1D03               	btfss	3,2
  1474     1587  3080               	movlw	128
  1475     1588  00F5               	movwf	LCDdisplay@sentence+1
  1476     1589  160A  158A  2460  160A  118A  	fcall	_LCDdisplay
  1477                           
  1478                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 303:             break
      +                          ;
  1479     158E  2D1F               	goto	l3645
  1480     158F                     l3663:
  1481                           
  1482                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 306:             strcp
      +                          y(output, calculate(values, operator));
  1483     158F  30CB               	movlw	(low (main@values| (0+256)))& (0+255)
  1484     1590  1683               	bsf	3,5	;RP0=1, select bank1
  1485     1591  1303               	bcf	3,6	;RP1=0, select bank1
  1486     1592  00E4               	movwf	calculate@values^(0+128)
  1487     1593  1683               	bsf	3,5	;RP0=1, select bank3
  1488     1594  1703               	bsf	3,6	;RP1=1, select bank3
  1489     1595  0848               	movf	main@operator^(0+384),w
  1490     1596  1683               	bsf	3,5	;RP0=1, select bank1
  1491     1597  1303               	bcf	3,6	;RP1=0, select bank1
  1492     1598  00E5               	movwf	calculate@operator^(0+128)
  1493     1599  160A  118A  2340  160A  118A  	fcall	_calculate
  1494     159E  1683               	bsf	3,5	;RP0=1, select bank1
  1495     159F  1303               	bcf	3,6	;RP1=0, select bank1
  1496     15A0  0864               	movf	?_calculate^(0+128),w
  1497     15A1  1683               	bsf	3,5	;RP0=1, select bank3
  1498     15A2  1703               	bsf	3,6	;RP1=1, select bank3
  1499     15A3  00C6               	movwf	_main$1087^(0+384)
  1500     15A4  1683               	bsf	3,5	;RP0=1, select bank1
  1501     15A5  1303               	bcf	3,6	;RP1=0, select bank1
  1502     15A6  0865               	movf	(?_calculate+1)^(0+128),w
  1503     15A7  1683               	bsf	3,5	;RP0=1, select bank3
  1504     15A8  1703               	bsf	3,6	;RP1=1, select bank3
  1505     15A9  00C7               	movwf	(_main$1087+1)^(0+384)
  1506                           
  1507                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 306:             strcp
      +                          y(output, calculate(values, operator));
  1508     15AA  30B4               	movlw	(low (main@output| (0+256)))& (0+255)
  1509     15AB  00F0               	movwf	strcpy@dest
  1510     15AC  0846               	movf	_main$1087^(0+384),w
  1511     15AD  00F1               	movwf	strcpy@src
  1512     15AE  0847               	movf	(_main$1087+1)^(0+384),w
  1513     15AF  00F2               	movwf	strcpy@src+1
  1514     15B0  160A  158A  23A5  160A  118A  	fcall	_strcpy
  1515     15B5                     l3665:
  1516                           
  1517                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 307:             selec
      +                          tRow(2);
  1518     15B5  3002               	movlw	2
  1519     15B6  00F3               	movwf	selectRow@row
  1520     15B7  3000               	movlw	0
  1521     15B8  00F4               	movwf	selectRow@row+1
  1522     15B9  160A  158A  2367  160A  118A  	fcall	_selectRow
  1523     15BE                     l3667:
  1524                           
  1525                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 308:             LCDdi
      +                          splay(output);
  1526     15BE  30B4               	movlw	(low (main@output| (0+256)))& (0+255)
  1527     15BF  00F4               	movwf	LCDdisplay@sentence
  1528     15C0  3001               	movlw	1
  1529     15C1  00F5               	movwf	LCDdisplay@sentence+1
  1530     15C2  160A  158A  2460  160A  118A  	fcall	_LCDdisplay
  1531                           
  1532                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 309:             selec
      +                          tRow(1);
  1533     15C7  3001               	movlw	1
  1534     15C8  00F3               	movwf	selectRow@row
  1535     15C9  3000               	movlw	0
  1536     15CA  00F4               	movwf	selectRow@row+1
  1537     15CB  160A  158A  2367  160A  118A  	fcall	_selectRow
  1538     15D0                     l3669:
  1539                           
  1540                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 310:             value
      +                          No = 2;
  1541     15D0  3002               	movlw	2
  1542     15D1  1683               	bsf	3,5	;RP0=1, select bank3
  1543     15D2  1703               	bsf	3,6	;RP1=1, select bank3
  1544     15D3  00C9               	movwf	main@valueNo^(0+384)
  1545     15D4  3000               	movlw	0
  1546     15D5  00CA               	movwf	(main@valueNo^(0+384)+1)
  1547                           
  1548                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 311:             break
      +                          ;
  1549     15D6  2D1F               	goto	l3645
  1550     15D7                     l3671:
  1551                           
  1552                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 314:             if(*n
      +                          ewInput[0] == 'C' || valueNo == 2){
  1553     15D7  0853               	movf	main@newInput^(0+384),w
  1554     15D8  0084               	movwf	4
  1555     15D9  160A  158A  200A  160A  118A  	fcall	stringdir
  1556     15DE  3A43               	xorlw	67
  1557     15DF  1903               	skipnz
  1558     15E0  2DE2               	goto	u5351
  1559     15E1  2DE3               	goto	u5350
  1560     15E2                     u5351:
  1561     15E2  2DEA               	goto	l3675
  1562     15E3                     u5350:
  1563     15E3                     l3673:
  1564     15E3  3002               	movlw	2
  1565     15E4  0649               	xorwf	main@valueNo^(0+384),w
  1566     15E5  044A               	iorwf	(main@valueNo+1)^(0+384),w
  1567     15E6  1D03               	btfss	3,2
  1568     15E7  2DE9               	goto	u5361
  1569     15E8  2DEA               	goto	u5360
  1570     15E9                     u5361:
  1571     15E9  2E04               	goto	l3683
  1572     15EA                     u5360:
  1573     15EA                     l3675:
  1574                           
  1575                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 315:                 v
      +                          alueNo = 0;
  1576     15EA  01C9               	clrf	main@valueNo^(0+384)
  1577     15EB  01CA               	clrf	(main@valueNo+1)^(0+384)
  1578     15EC                     l3677:
  1579                           
  1580                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 316:                 s
      +                          endCommand(0x01);
  1581     15EC  3001               	movlw	1
  1582     15ED  160A  158A  2317  160A  118A  	fcall	_sendCommand
  1583     15F2                     l3679:
  1584                           
  1585                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 317:                 o
      +                          perator = '+';
  1586     15F2  302B               	movlw	43
  1587     15F3  1683               	bsf	3,5	;RP0=1, select bank3
  1588     15F4  1703               	bsf	3,6	;RP1=1, select bank3
  1589     15F5  00C8               	movwf	main@operator^(0+384)
  1590     15F6                     l3681:
  1591                           
  1592                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 318:                 m
      +                          emset(values, 0, 2);
  1593     15F6  30CB               	movlw	(low (main@values| (0+256)))& (0+255)
  1594     15F7  00F0               	movwf	memset@dest
  1595     15F8  3000               	movlw	0
  1596     15F9  00F1               	movwf	memset@c
  1597     15FA  00F2               	movwf	memset@c+1
  1598     15FB  3002               	movlw	2
  1599     15FC  00F3               	movwf	memset@n
  1600     15FD  3000               	movlw	0
  1601     15FE  00F4               	movwf	memset@n+1
  1602     15FF  160A  158A  234E  160A  118A  	fcall	_memset
  1603     1604                     l3683:
  1604                           
  1605                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 320:             if(*n
      +                          ewInput[0] != 'C'){
  1606     1604  1683               	bsf	3,5	;RP0=1, select bank3
  1607     1605  1703               	bsf	3,6	;RP1=1, select bank3
  1608     1606  0853               	movf	main@newInput^(0+384),w
  1609     1607  0084               	movwf	4
  1610     1608  160A  158A  200A  160A  118A  	fcall	stringdir
  1611     160D  3A43               	xorlw	67
  1612     160E  1903               	skipnz
  1613     160F  2E11               	goto	u5371
  1614     1610  2E12               	goto	u5370
  1615     1611                     u5371:
  1616     1611  2D1F               	goto	l3645
  1617     1612                     u5370:
  1618     1612                     l3685:
  1619                           
  1620                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 321:                 s
      +                          etDigit(&values[valueNo], newInput[0]);
  1621     1612  0849               	movf	main@valueNo^(0+384),w
  1622     1613  1683               	bsf	3,5	;RP0=1, select bank1
  1623     1614  1303               	bcf	3,6	;RP1=0, select bank1
  1624     1615  00E8               	movwf	??_main^(0+128)
  1625     1616  3001               	movlw	1
  1626     1617                     u5385:
  1627     1617  1003               	clrc
  1628     1618  0DE8               	rlf	??_main^(0+128),f
  1629     1619  3EFF               	addlw	-1
  1630     161A  1D03               	skipz
  1631     161B  2E17               	goto	u5385
  1632     161C  1003               	clrc
  1633     161D  0D68               	rlf	??_main^(0+128),w
  1634     161E  3ECB               	addlw	(low (main@values| (0+256)))& (0+255)
  1635     161F  1283               	bcf	3,5	;RP0=0, select bank0
  1636     1620  1303               	bcf	3,6	;RP1=0, select bank0
  1637     1621  00C9               	movwf	setDigit@oldValue
  1638     1622  1683               	bsf	3,5	;RP0=1, select bank3
  1639     1623  1703               	bsf	3,6	;RP1=1, select bank3
  1640     1624  0853               	movf	main@newInput^(0+384),w
  1641     1625  1283               	bcf	3,5	;RP0=0, select bank0
  1642     1626  1303               	bcf	3,6	;RP1=0, select bank0
  1643     1627  00CA               	movwf	setDigit@newValue
  1644     1628  160A  158A  25AE  160A  118A  	fcall	_setDigit
  1645     162D  2D1F               	goto	l3645
  1646     162E                     l3687:
  1647     162E  0853               	movf	main@newInput^(0+384),w
  1648     162F  0084               	movwf	4
  1649     1630  160A  158A  200A  160A  118A  	fcall	stringdir
  1650                           
  1651                           ; Switch size 1, requested type "simple"
  1652                           ; Number of cases is 5, Range of values is 43 to 120
  1653                           ; switch strategies available:
  1654                           ; Name         Instructions Cycles
  1655                           ; simple_byte           16     9 (average)
  1656                           ; direct_byte          245    11 (fixed)
  1657                           ; jumptable            263     9 (fixed)
  1658                           ;	Chosen strategy is simple_byte
  1659     1635  3A2B               	xorlw	43	; case 43
  1660     1636  1903               	skipnz
  1661     1637  2D28               	goto	l129
  1662     1638  3A06               	xorlw	6	; case 45
  1663     1639  1903               	skipnz
  1664     163A  2D28               	goto	l3647
  1665     163B  3A02               	xorlw	2	; case 47
  1666     163C  1903               	skipnz
  1667     163D  2D28               	goto	l3647
  1668     163E  3A12               	xorlw	18	; case 61
  1669     163F  1903               	skipnz
  1670     1640  2D8F               	goto	l3663
  1671     1641  3A45               	xorlw	69	; case 120
  1672     1642  1903               	skipnz
  1673     1643  2D28               	goto	l3647
  1674     1644  2DD7               	goto	l3671
  1675     1645  120A  118A  2800   	ljmp	start
  1676     1648                     __end_of_main:
  1677                           
  1678                           	psect	text1
  1679     1DAE                     __ptext1:	
  1680 ;; *************** function _setDigit *****************
  1681 ;; Defined at:
  1682 ;;		line 71 in file "C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  oldValue        1   41[BANK0 ] PTR 
  1685 ;;		 -> main@values(8), 
  1686 ;;  newValue        1   42[BANK0 ] PTR unsigned char 
  1687 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(2), 
  1688 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(2), 
  1689 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  1690 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  1691 ;;		 -> STR_1(1), 
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;		None
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  1    wreg      void 
  1696 ;; Registers used:
  1697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1703 ;;      Params:         0       2       0       0       0
  1704 ;;      Locals:         0       0       0       0       0
  1705 ;;      Temps:          0       3       0       0       0
  1706 ;;      Totals:         0       5       0       0       0
  1707 ;;Total ram usage:        5 bytes
  1708 ;; Hardware stack levels used: 1
  1709 ;; Hardware stack levels required when called: 3
  1710 ;; This function calls:
  1711 ;;		_LCDdisplay
  1712 ;;		___fladd
  1713 ;;		___flmul
  1714 ;;		___xxtofl
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720     1DAE                     _setDigit:	
  1721                           ;psect for function _setDigit
  1722                           
  1723     1DAE                     l3415:	
  1724                           ;incstack = 0
  1725                           ; Regs used in _setDigit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1726                           
  1727                           
  1728                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 72:     LCDdisplay(new
      +                          Value);
  1729     1DAE  1283               	bcf	3,5	;RP0=0, select bank0
  1730     1DAF  1303               	bcf	3,6	;RP1=0, select bank0
  1731     1DB0  084A               	movf	setDigit@newValue,w
  1732     1DB1  00F4               	movwf	LCDdisplay@sentence
  1733     1DB2  3000               	movlw	0
  1734     1DB3  1D03               	btfss	3,2
  1735     1DB4  3080               	movlw	128
  1736     1DB5  00F5               	movwf	LCDdisplay@sentence+1
  1737     1DB6  160A  158A  2460  160A  158A  	fcall	_LCDdisplay
  1738                           
  1739                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 73:     *oldValue = *o
      +                          ldValue * 10 + (double)(*newValue - '0');
  1740     1DBB  1283               	bcf	3,5	;RP0=0, select bank0
  1741     1DBC  1303               	bcf	3,6	;RP1=0, select bank0
  1742     1DBD  084A               	movf	setDigit@newValue,w
  1743     1DBE  0084               	movwf	4
  1744     1DBF  160A  158A  200A  160A  158A  	fcall	stringdir
  1745     1DC4  3ED0               	addlw	208
  1746     1DC5  00F0               	movwf	___xxtofl@val
  1747     1DC6  30FF               	movlw	255
  1748     1DC7  1803               	skipnc
  1749     1DC8  3000               	movlw	0
  1750     1DC9  00F1               	movwf	___xxtofl@val+1
  1751     1DCA  01F2               	clrf	___xxtofl@val+2
  1752     1DCB  01F3               	clrf	___xxtofl@val+3
  1753     1DCC  3000               	movlw	0
  1754     1DCD  160A  158A  274C  160A  158A  	fcall	___xxtofl
  1755     1DD2  0873               	movf	?___xxtofl+3,w
  1756     1DD3  1283               	bcf	3,5	;RP0=0, select bank0
  1757     1DD4  1303               	bcf	3,6	;RP1=0, select bank0
  1758     1DD5  00B8               	movwf	___fladd@b+3
  1759     1DD6  0872               	movf	?___xxtofl+2,w
  1760     1DD7  00B7               	movwf	___fladd@b+2
  1761     1DD8  0871               	movf	?___xxtofl+1,w
  1762     1DD9  00B6               	movwf	___fladd@b+1
  1763     1DDA  0870               	movf	?___xxtofl,w
  1764     1DDB  00B5               	movwf	___fladd@b
  1765     1DDC  3041               	movlw	65
  1766     1DDD  00A3               	movwf	___flmul@b+3
  1767     1DDE  3020               	movlw	32
  1768     1DDF  00A2               	movwf	___flmul@b+2
  1769     1DE0  3000               	movlw	0
  1770     1DE1  00A1               	movwf	___flmul@b+1
  1771     1DE2  3000               	movlw	0
  1772     1DE3  00A0               	movwf	___flmul@b
  1773     1DE4  0849               	movf	setDigit@oldValue,w
  1774     1DE5  0084               	movwf	4
  1775     1DE6  1783               	bsf	3,7	;select IRP bank2
  1776     1DE7  0800               	movf	0,w
  1777     1DE8  00A4               	movwf	___flmul@a
  1778     1DE9  0A84               	incf	4,f
  1779     1DEA  0800               	movf	0,w
  1780     1DEB  00A5               	movwf	___flmul@a+1
  1781     1DEC  0A84               	incf	4,f
  1782     1DED  0800               	movf	0,w
  1783     1DEE  00A6               	movwf	___flmul@a+2
  1784     1DEF  0A84               	incf	4,f
  1785     1DF0  0800               	movf	0,w
  1786     1DF1  00A7               	movwf	___flmul@a+3
  1787     1DF2  120A  158A  24BE  160A  158A  	fcall	___flmul
  1788     1DF7  1283               	bcf	3,5	;RP0=0, select bank0
  1789     1DF8  1303               	bcf	3,6	;RP1=0, select bank0
  1790     1DF9  0823               	movf	?___flmul+3,w
  1791     1DFA  00BC               	movwf	___fladd@a+3
  1792     1DFB  0822               	movf	?___flmul+2,w
  1793     1DFC  00BB               	movwf	___fladd@a+2
  1794     1DFD  0821               	movf	?___flmul+1,w
  1795     1DFE  00BA               	movwf	___fladd@a+1
  1796     1DFF  0820               	movf	?___flmul,w
  1797     1E00  00B9               	movwf	___fladd@a
  1798     1E01  120A  158A  226E  160A  158A  	fcall	___fladd
  1799     1E06  1283               	bcf	3,5	;RP0=0, select bank0
  1800     1E07  1303               	bcf	3,6	;RP1=0, select bank0
  1801     1E08  0849               	movf	setDigit@oldValue,w
  1802     1E09  0084               	movwf	4
  1803     1E0A  0835               	movf	?___fladd,w
  1804     1E0B  1783               	bsf	3,7	;select IRP bank2
  1805     1E0C  0080               	movwf	0
  1806     1E0D  0A84               	incf	4,f
  1807     1E0E  0836               	movf	?___fladd+1,w
  1808     1E0F  0080               	movwf	0
  1809     1E10  0A84               	incf	4,f
  1810     1E11  0837               	movf	?___fladd+2,w
  1811     1E12  0080               	movwf	0
  1812     1E13  0A84               	incf	4,f
  1813     1E14  0838               	movf	?___fladd+3,w
  1814     1E15  0080               	movwf	0
  1815     1E16                     l3417:
  1816                           
  1817                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 74:     _delay((unsign
      +                          ed long)((300)*(20000000/4000.0)));
  1818     1E16  3008               	movlw	8
  1819     1E17  1283               	bcf	3,5	;RP0=0, select bank0
  1820     1E18  1303               	bcf	3,6	;RP1=0, select bank0
  1821     1E19  00CD               	movwf	??_setDigit+2
  1822     1E1A  309D               	movlw	157
  1823     1E1B  00CC               	movwf	??_setDigit+1
  1824     1E1C  3005               	movlw	5
  1825     1E1D  00CB               	movwf	??_setDigit
  1826     1E1E                     u5417:
  1827     1E1E  0BCB               	decfsz	??_setDigit,f
  1828     1E1F  2E1E               	goto	u5417
  1829     1E20  0BCC               	decfsz	??_setDigit+1,f
  1830     1E21  2E1E               	goto	u5417
  1831     1E22  0BCD               	decfsz	??_setDigit+2,f
  1832     1E23  2E1E               	goto	u5417
  1833     1E24                     l44:
  1834     1E24  0008               	return
  1835     1E25                     __end_of_setDigit:
  1836                           
  1837                           	psect	text2
  1838     1F4C                     __ptext2:	
  1839 ;; *************** function ___xxtofl *****************
  1840 ;; Defined at:
  1841 ;;		line 10 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;  sign            1    wreg     unsigned char 
  1844 ;;  val             4    0[COMMON] long 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  sign            1    8[COMMON] unsigned char 
  1847 ;;  arg             4   10[COMMON] unsigned long 
  1848 ;;  exp             1    9[COMMON] unsigned char 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  4    0[COMMON] unsigned char 
  1851 ;; Registers used:
  1852 ;;		wreg, status,2, status,0
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1858 ;;      Params:         4       0       0       0       0
  1859 ;;      Locals:         6       0       0       0       0
  1860 ;;      Temps:          4       0       0       0       0
  1861 ;;      Totals:        14       0       0       0       0
  1862 ;;Total ram usage:       14 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_setDigit
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871     1F4C                     ___xxtofl:	
  1872                           ;psect for function ___xxtofl
  1873                           
  1874                           
  1875                           ;incstack = 0
  1876                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1877                           ;___xxtofl@sign stored from wreg
  1878     1F4C  00F8               	movwf	___xxtofl@sign
  1879     1F4D                     l3359:
  1880     1F4D  0878               	movf	___xxtofl@sign,w
  1881     1F4E  1903               	btfsc	3,2
  1882     1F4F  2F51               	goto	u4831
  1883     1F50  2F52               	goto	u4830
  1884     1F51                     u4831:
  1885     1F51  2F66               	goto	l3365
  1886     1F52                     u4830:
  1887     1F52                     l3361:
  1888     1F52  1FF3               	btfss	___xxtofl@val+3,7
  1889     1F53  2F55               	goto	u4841
  1890     1F54  2F56               	goto	u4840
  1891     1F55                     u4841:
  1892     1F55  2F66               	goto	l3365
  1893     1F56                     u4840:
  1894     1F56                     l3363:
  1895     1F56  0970               	comf	___xxtofl@val,w
  1896     1F57  00FA               	movwf	___xxtofl@arg
  1897     1F58  0971               	comf	___xxtofl@val+1,w
  1898     1F59  00FB               	movwf	___xxtofl@arg+1
  1899     1F5A  0972               	comf	___xxtofl@val+2,w
  1900     1F5B  00FC               	movwf	___xxtofl@arg+2
  1901     1F5C  0973               	comf	___xxtofl@val+3,w
  1902     1F5D  00FD               	movwf	___xxtofl@arg+3
  1903     1F5E  0AFA               	incf	___xxtofl@arg,f
  1904     1F5F  1903               	skipnz
  1905     1F60  0AFB               	incf	___xxtofl@arg+1,f
  1906     1F61  1903               	skipnz
  1907     1F62  0AFC               	incf	___xxtofl@arg+2,f
  1908     1F63  1903               	skipnz
  1909     1F64  0AFD               	incf	___xxtofl@arg+3,f
  1910     1F65  2F6E               	goto	l672
  1911     1F66                     l3365:
  1912     1F66  0873               	movf	___xxtofl@val+3,w
  1913     1F67  00FD               	movwf	___xxtofl@arg+3
  1914     1F68  0872               	movf	___xxtofl@val+2,w
  1915     1F69  00FC               	movwf	___xxtofl@arg+2
  1916     1F6A  0871               	movf	___xxtofl@val+1,w
  1917     1F6B  00FB               	movwf	___xxtofl@arg+1
  1918     1F6C  0870               	movf	___xxtofl@val,w
  1919     1F6D  00FA               	movwf	___xxtofl@arg
  1920     1F6E                     l672:
  1921     1F6E  0873               	movf	___xxtofl@val+3,w
  1922     1F6F  0472               	iorwf	___xxtofl@val+2,w
  1923     1F70  0471               	iorwf	___xxtofl@val+1,w
  1924     1F71  0470               	iorwf	___xxtofl@val,w
  1925     1F72  1D03               	skipz
  1926     1F73  2F75               	goto	u4851
  1927     1F74  2F76               	goto	u4850
  1928     1F75                     u4851:
  1929     1F75  2F7F               	goto	l673
  1930     1F76                     u4850:
  1931     1F76                     l3367:
  1932     1F76  3000               	movlw	0
  1933     1F77  00F3               	movwf	?___xxtofl+3
  1934     1F78  3000               	movlw	0
  1935     1F79  00F2               	movwf	?___xxtofl+2
  1936     1F7A  3000               	movlw	0
  1937     1F7B  00F1               	movwf	?___xxtofl+1
  1938     1F7C  3000               	movlw	0
  1939     1F7D  00F0               	movwf	?___xxtofl
  1940     1F7E  2FFF               	goto	l674
  1941     1F7F                     l673:
  1942     1F7F  3096               	movlw	150
  1943     1F80  00F9               	movwf	___xxtofl@exp
  1944     1F81  2F8D               	goto	l3373
  1945     1F82                     l3371:
  1946     1F82  3001               	movlw	1
  1947     1F83  07F9               	addwf	___xxtofl@exp,f
  1948     1F84  3001               	movlw	1
  1949     1F85                     u4865:
  1950     1F85  1003               	clrc
  1951     1F86  0CFD               	rrf	___xxtofl@arg+3,f
  1952     1F87  0CFC               	rrf	___xxtofl@arg+2,f
  1953     1F88  0CFB               	rrf	___xxtofl@arg+1,f
  1954     1F89  0CFA               	rrf	___xxtofl@arg,f
  1955     1F8A  3EFF               	addlw	-1
  1956     1F8B  1D03               	skipz
  1957     1F8C  2F85               	goto	u4865
  1958     1F8D                     l3373:
  1959     1F8D  30FE               	movlw	254
  1960     1F8E  057D               	andwf	___xxtofl@arg+3,w
  1961     1F8F  1D03               	btfss	3,2
  1962     1F90  2F92               	goto	u4871
  1963     1F91  2F93               	goto	u4870
  1964     1F92                     u4871:
  1965     1F92  2F82               	goto	l3371
  1966     1F93                     u4870:
  1967     1F93  2FAD               	goto	l678
  1968     1F94                     l3375:
  1969     1F94  3001               	movlw	1
  1970     1F95  07F9               	addwf	___xxtofl@exp,f
  1971     1F96                     l3377:
  1972     1F96  3001               	movlw	1
  1973     1F97  07FA               	addwf	___xxtofl@arg,f
  1974     1F98  3000               	movlw	0
  1975     1F99  1803               	skipnc
  1976     1F9A  3001               	movlw	1
  1977     1F9B  07FB               	addwf	___xxtofl@arg+1,f
  1978     1F9C  3000               	movlw	0
  1979     1F9D  1803               	skipnc
  1980     1F9E  3001               	movlw	1
  1981     1F9F  07FC               	addwf	___xxtofl@arg+2,f
  1982     1FA0  3000               	movlw	0
  1983     1FA1  1803               	skipnc
  1984     1FA2  3001               	movlw	1
  1985     1FA3  07FD               	addwf	___xxtofl@arg+3,f
  1986     1FA4                     l3379:
  1987     1FA4  3001               	movlw	1
  1988     1FA5                     u4885:
  1989     1FA5  1003               	clrc
  1990     1FA6  0CFD               	rrf	___xxtofl@arg+3,f
  1991     1FA7  0CFC               	rrf	___xxtofl@arg+2,f
  1992     1FA8  0CFB               	rrf	___xxtofl@arg+1,f
  1993     1FA9  0CFA               	rrf	___xxtofl@arg,f
  1994     1FAA  3EFF               	addlw	-1
  1995     1FAB  1D03               	skipz
  1996     1FAC  2FA5               	goto	u4885
  1997     1FAD                     l678:
  1998     1FAD  30FF               	movlw	255
  1999     1FAE  057D               	andwf	___xxtofl@arg+3,w
  2000     1FAF  1D03               	btfss	3,2
  2001     1FB0  2FB2               	goto	u4891
  2002     1FB1  2FB3               	goto	u4890
  2003     1FB2                     u4891:
  2004     1FB2  2F94               	goto	l3375
  2005     1FB3                     u4890:
  2006     1FB3  2FBF               	goto	l3383
  2007     1FB4                     l3381:
  2008     1FB4  3001               	movlw	1
  2009     1FB5  02F9               	subwf	___xxtofl@exp,f
  2010     1FB6  3001               	movlw	1
  2011     1FB7  00F4               	movwf	??___xxtofl
  2012     1FB8                     u4905:
  2013     1FB8  1003               	clrc
  2014     1FB9  0DFA               	rlf	___xxtofl@arg,f
  2015     1FBA  0DFB               	rlf	___xxtofl@arg+1,f
  2016     1FBB  0DFC               	rlf	___xxtofl@arg+2,f
  2017     1FBC  0DFD               	rlf	___xxtofl@arg+3,f
  2018     1FBD  0BF4               	decfsz	??___xxtofl,f
  2019     1FBE  2FB8               	goto	u4905
  2020     1FBF                     l3383:
  2021     1FBF  1BFC               	btfsc	___xxtofl@arg+2,7
  2022     1FC0  2FC2               	goto	u4911
  2023     1FC1  2FC3               	goto	u4910
  2024     1FC2                     u4911:
  2025     1FC2  2FC9               	goto	l685
  2026     1FC3                     u4910:
  2027     1FC3                     l3385:
  2028     1FC3  3002               	movlw	2
  2029     1FC4  0279               	subwf	___xxtofl@exp,w
  2030     1FC5  1803               	skipnc
  2031     1FC6  2FC8               	goto	u4921
  2032     1FC7  2FC9               	goto	u4920
  2033     1FC8                     u4921:
  2034     1FC8  2FB4               	goto	l3381
  2035     1FC9                     u4920:
  2036     1FC9                     l685:
  2037     1FC9  1879               	btfsc	___xxtofl@exp,0
  2038     1FCA  2FCC               	goto	u4931
  2039     1FCB  2FCD               	goto	u4930
  2040     1FCC                     u4931:
  2041     1FCC  2FD5               	goto	l686
  2042     1FCD                     u4930:
  2043     1FCD                     l3387:
  2044     1FCD  30FF               	movlw	255
  2045     1FCE  05FA               	andwf	___xxtofl@arg,f
  2046     1FCF  30FF               	movlw	255
  2047     1FD0  05FB               	andwf	___xxtofl@arg+1,f
  2048     1FD1  307F               	movlw	127
  2049     1FD2  05FC               	andwf	___xxtofl@arg+2,f
  2050     1FD3  30FF               	movlw	255
  2051     1FD4  05FD               	andwf	___xxtofl@arg+3,f
  2052     1FD5                     l686:
  2053     1FD5  1003               	clrc
  2054     1FD6  0CF9               	rrf	___xxtofl@exp,f
  2055     1FD7                     l3389:
  2056     1FD7  0879               	movf	___xxtofl@exp,w
  2057     1FD8  00F4               	movwf	??___xxtofl
  2058     1FD9  01F5               	clrf	??___xxtofl+1
  2059     1FDA  01F6               	clrf	??___xxtofl+2
  2060     1FDB  01F7               	clrf	??___xxtofl+3
  2061     1FDC  3018               	movlw	24
  2062     1FDD                     u4945:
  2063     1FDD  1003               	clrc
  2064     1FDE  0DF4               	rlf	??___xxtofl,f
  2065     1FDF  0DF5               	rlf	??___xxtofl+1,f
  2066     1FE0  0DF6               	rlf	??___xxtofl+2,f
  2067     1FE1  0DF7               	rlf	??___xxtofl+3,f
  2068     1FE2                     u4940:
  2069     1FE2  3EFF               	addlw	-1
  2070     1FE3  1D03               	skipz
  2071     1FE4  2FDD               	goto	u4945
  2072     1FE5  0874               	movf	??___xxtofl,w
  2073     1FE6  04FA               	iorwf	___xxtofl@arg,f
  2074     1FE7  0875               	movf	??___xxtofl+1,w
  2075     1FE8  04FB               	iorwf	___xxtofl@arg+1,f
  2076     1FE9  0876               	movf	??___xxtofl+2,w
  2077     1FEA  04FC               	iorwf	___xxtofl@arg+2,f
  2078     1FEB  0877               	movf	??___xxtofl+3,w
  2079     1FEC  04FD               	iorwf	___xxtofl@arg+3,f
  2080     1FED                     l3391:
  2081     1FED  0878               	movf	___xxtofl@sign,w
  2082     1FEE  1903               	btfsc	3,2
  2083     1FEF  2FF1               	goto	u4951
  2084     1FF0  2FF2               	goto	u4950
  2085     1FF1                     u4951:
  2086     1FF1  2FF7               	goto	l3397
  2087     1FF2                     u4950:
  2088     1FF2                     l3393:
  2089     1FF2  1FF3               	btfss	___xxtofl@val+3,7
  2090     1FF3  2FF5               	goto	u4961
  2091     1FF4  2FF6               	goto	u4960
  2092     1FF5                     u4961:
  2093     1FF5  2FF7               	goto	l3397
  2094     1FF6                     u4960:
  2095     1FF6                     l3395:
  2096     1FF6  17FD               	bsf	___xxtofl@arg+3,7
  2097     1FF7                     l3397:
  2098     1FF7  087D               	movf	___xxtofl@arg+3,w
  2099     1FF8  00F3               	movwf	?___xxtofl+3
  2100     1FF9  087C               	movf	___xxtofl@arg+2,w
  2101     1FFA  00F2               	movwf	?___xxtofl+2
  2102     1FFB  087B               	movf	___xxtofl@arg+1,w
  2103     1FFC  00F1               	movwf	?___xxtofl+1
  2104     1FFD  087A               	movf	___xxtofl@arg,w
  2105     1FFE  00F0               	movwf	?___xxtofl
  2106     1FFF                     l674:
  2107     1FFF  0008               	return
  2108     2000                     __end_of___xxtofl:
  2109                           
  2110                           	psect	text3
  2111     1C60                     __ptext3:	
  2112 ;; *************** function _LCDdisplay *****************
  2113 ;; Defined at:
  2114 ;;		line 55 in file "C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;  sentence        2    4[COMMON] PTR unsigned char 
  2117 ;;		 -> main@output(16), STR_17(2), STR_16(2), STR_15(2), 
  2118 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2119 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2120 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  2121 ;;		 -> STR_2(2), STR_1(1), 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  ind             2    8[COMMON] unsigned short 
  2124 ;;  lineLength      2    6[COMMON] unsigned short 
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2134 ;;      Params:         2       0       0       0       0
  2135 ;;      Locals:         4       0       0       0       0
  2136 ;;      Temps:          0       0       0       0       0
  2137 ;;      Totals:         6       0       0       0       0
  2138 ;;Total ram usage:        6 bytes
  2139 ;; Hardware stack levels used: 1
  2140 ;; Hardware stack levels required when called: 2
  2141 ;; This function calls:
  2142 ;;		_strlen
  2143 ;;		_toggleEnable
  2144 ;; This function is called by:
  2145 ;;		_setDigit
  2146 ;;		_main
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150     1C60                     _LCDdisplay:	
  2151                           ;psect for function _LCDdisplay
  2152                           
  2153     1C60                     l3311:	
  2154                           ;incstack = 0
  2155                           ; Regs used in _LCDdisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2156                           
  2157                           
  2158                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 56:     PORTCbits.RC0 
      +                          = 1;
  2159     1C60  1283               	bcf	3,5	;RP0=0, select bank0
  2160     1C61  1303               	bcf	3,6	;RP1=0, select bank0
  2161     1C62  1407               	bsf	7,0	;volatile
  2162                           
  2163                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 57:     PORTCbits.RC1 
      +                          = 0;
  2164     1C63  1087               	bcf	7,1	;volatile
  2165     1C64                     l3313:
  2166                           
  2167                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 58:     uint16_t lineL
      +                          ength = strlen(sentence);
  2168     1C64  0874               	movf	LCDdisplay@sentence,w
  2169     1C65  00F0               	movwf	strlen@s
  2170     1C66  0875               	movf	LCDdisplay@sentence+1,w
  2171     1C67  00F1               	movwf	strlen@s+1
  2172     1C68  160A  158A  23EA  160A  158A  	fcall	_strlen
  2173     1C6D  0871               	movf	?_strlen+1,w
  2174     1C6E  00F7               	movwf	LCDdisplay@lineLength+1
  2175     1C6F  0870               	movf	?_strlen,w
  2176     1C70  00F6               	movwf	LCDdisplay@lineLength
  2177     1C71                     l3315:
  2178                           
  2179                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 59:     for(uint16_t i
      +                          nd = 0; ind < lineLength; ind++){
  2180     1C71  01F8               	clrf	LCDdisplay@ind
  2181     1C72  01F9               	clrf	LCDdisplay@ind+1
  2182     1C73  2C8E               	goto	l3323
  2183     1C74                     l3317:
  2184                           
  2185                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 60:         PORTB = (u
      +                          int8_t)sentence[ind];
  2186     1C74  0878               	movf	LCDdisplay@ind,w
  2187     1C75  0774               	addwf	LCDdisplay@sentence,w
  2188     1C76  0084               	movwf	4
  2189     1C77  0875               	movf	LCDdisplay@sentence+1,w
  2190     1C78  1803               	skipnc
  2191     1C79  0A75               	incf	LCDdisplay@sentence+1,w
  2192     1C7A  1283               	bcf	3,5	;RP0=0, select bank0
  2193     1C7B  1303               	bcf	3,6	;RP1=0, select bank0
  2194     1C7C  00FF               	movwf	btemp+1
  2195     1C7D  160A  158A  2000  160A  158A  	fcall	stringtab
  2196     1C82  0086               	movwf	6	;volatile
  2197     1C83                     l3319:
  2198                           
  2199                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 61:         toggleEnab
      +                          le();
  2200     1C83  160A  158A  2339  160A  158A  	fcall	_toggleEnable
  2201     1C88                     l3321:
  2202                           
  2203                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 62:     }
  2204     1C88  3001               	movlw	1
  2205     1C89  07F8               	addwf	LCDdisplay@ind,f
  2206     1C8A  1803               	skipnc
  2207     1C8B  0AF9               	incf	LCDdisplay@ind+1,f
  2208     1C8C  3000               	movlw	0
  2209     1C8D  07F9               	addwf	LCDdisplay@ind+1,f
  2210     1C8E                     l3323:
  2211     1C8E  0877               	movf	LCDdisplay@lineLength+1,w
  2212     1C8F  0279               	subwf	LCDdisplay@ind+1,w
  2213     1C90  1D03               	skipz
  2214     1C91  2C94               	goto	u4775
  2215     1C92  0876               	movf	LCDdisplay@lineLength,w
  2216     1C93  0278               	subwf	LCDdisplay@ind,w
  2217     1C94                     u4775:
  2218     1C94  1C03               	skipc
  2219     1C95  2C97               	goto	u4771
  2220     1C96  2C98               	goto	u4770
  2221     1C97                     u4771:
  2222     1C97  2C74               	goto	l3317
  2223     1C98                     u4770:
  2224     1C98                     l34:
  2225     1C98  0008               	return
  2226     1C99                     __end_of_LCDdisplay:
  2227                           
  2228                           	psect	text4
  2229     1B67                     __ptext4:	
  2230 ;; *************** function _selectRow *****************
  2231 ;; Defined at:
  2232 ;;		line 64 in file "C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  row             2    3[COMMON] unsigned short 
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;		None
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  1    wreg      void 
  2239 ;; Registers used:
  2240 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2246 ;;      Params:         2       0       0       0       0
  2247 ;;      Locals:         0       0       0       0       0
  2248 ;;      Temps:          0       0       0       0       0
  2249 ;;      Totals:         2       0       0       0       0
  2250 ;;Total ram usage:        2 bytes
  2251 ;; Hardware stack levels used: 1
  2252 ;; Hardware stack levels required when called: 2
  2253 ;; This function calls:
  2254 ;;		_sendCommand
  2255 ;; This function is called by:
  2256 ;;		_main
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260     1B67                     _selectRow:	
  2261                           ;psect for function _selectRow
  2262                           
  2263     1B67                     l3401:	
  2264                           ;incstack = 0
  2265                           ; Regs used in _selectRow: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2266                           
  2267                           
  2268                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 65:     switch(row){
  2269     1B67  2B76               	goto	l3409
  2270     1B68                     l3403:
  2271     1B68  3080               	movlw	128
  2272     1B69  160A  158A  2317  160A  158A  	fcall	_sendCommand
  2273     1B6E  2B83               	goto	l41
  2274     1B6F                     l3405:
  2275     1B6F  30C0               	movlw	192
  2276     1B70  160A  158A  2317  160A  158A  	fcall	_sendCommand
  2277     1B75  2B83               	goto	l41
  2278     1B76                     l3409:
  2279                           
  2280                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2281                           ; Switch size 1, requested type "simple"
  2282                           ; Number of cases is 1, Range of values is 0 to 0
  2283                           ; switch strategies available:
  2284                           ; Name         Instructions Cycles
  2285                           ; simple_byte            4     3 (average)
  2286                           ; direct_byte           11     8 (fixed)
  2287                           ; jumptable            260     6 (fixed)
  2288                           ;	Chosen strategy is simple_byte
  2289     1B76  0874               	movf	selectRow@row+1,w
  2290     1B77  3A00               	xorlw	0	; case 0
  2291     1B78  1903               	skipnz
  2292     1B79  2B7B               	goto	l3759
  2293     1B7A  2B83               	goto	l41
  2294     1B7B                     l3759:
  2295                           
  2296                           ; Switch size 1, requested type "simple"
  2297                           ; Number of cases is 2, Range of values is 1 to 2
  2298                           ; switch strategies available:
  2299                           ; Name         Instructions Cycles
  2300                           ; simple_byte            7     4 (average)
  2301                           ; direct_byte           17    11 (fixed)
  2302                           ; jumptable            263     9 (fixed)
  2303                           ;	Chosen strategy is simple_byte
  2304     1B7B  0873               	movf	selectRow@row,w
  2305     1B7C  3A01               	xorlw	1	; case 1
  2306     1B7D  1903               	skipnz
  2307     1B7E  2B68               	goto	l3403
  2308     1B7F  3A03               	xorlw	3	; case 2
  2309     1B80  1903               	skipnz
  2310     1B81  2B6F               	goto	l3405
  2311     1B82  2B83               	goto	l41
  2312     1B83                     l41:
  2313     1B83  0008               	return
  2314     1B84                     __end_of_selectRow:
  2315                           
  2316                           	psect	text5
  2317     1B17                     __ptext5:	
  2318 ;; *************** function _sendCommand *****************
  2319 ;; Defined at:
  2320 ;;		line 49 in file "C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  command         1    wreg     unsigned char 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  command         1    2[COMMON] unsigned char 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0, pclath, cstack
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2334 ;;      Params:         0       0       0       0       0
  2335 ;;      Locals:         1       0       0       0       0
  2336 ;;      Temps:          0       0       0       0       0
  2337 ;;      Totals:         1       0       0       0       0
  2338 ;;Total ram usage:        1 bytes
  2339 ;; Hardware stack levels used: 1
  2340 ;; Hardware stack levels required when called: 1
  2341 ;; This function calls:
  2342 ;;		_toggleEnable
  2343 ;; This function is called by:
  2344 ;;		_selectRow
  2345 ;;		_main
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349     1B17                     _sendCommand:	
  2350                           ;psect for function _sendCommand
  2351                           
  2352                           
  2353                           ;incstack = 0
  2354                           ; Regs used in _sendCommand: [wreg+status,2+status,0+pclath+cstack]
  2355                           ;sendCommand@command stored from wreg
  2356     1B17  00F2               	movwf	sendCommand@command
  2357     1B18                     l3305:
  2358                           
  2359                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 50:     PORTCbits.RC0 
      +                          = 0;
  2360     1B18  1283               	bcf	3,5	;RP0=0, select bank0
  2361     1B19  1303               	bcf	3,6	;RP1=0, select bank0
  2362     1B1A  1007               	bcf	7,0	;volatile
  2363                           
  2364                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 51:     PORTCbits.RC1 
      +                          = 0;
  2365     1B1B  1087               	bcf	7,1	;volatile
  2366     1B1C                     l3307:
  2367                           
  2368                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 52:     PORTB = comman
      +                          d;
  2369     1B1C  0872               	movf	sendCommand@command,w
  2370     1B1D  0086               	movwf	6	;volatile
  2371     1B1E                     l3309:
  2372                           
  2373                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 53:     toggleEnable()
      +                          ;
  2374     1B1E  160A  158A  2339  160A  158A  	fcall	_toggleEnable
  2375     1B23                     l28:
  2376     1B23  0008               	return
  2377     1B24                     __end_of_sendCommand:
  2378                           
  2379                           	psect	text6
  2380     1B39                     __ptext6:	
  2381 ;; *************** function _toggleEnable *****************
  2382 ;; Defined at:
  2383 ;;		line 43 in file "C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;		None
  2386 ;; Auto vars:     Size  Location     Type
  2387 ;;		None
  2388 ;; Return value:  Size  Location     Type
  2389 ;;                  1    wreg      void 
  2390 ;; Registers used:
  2391 ;;		wreg
  2392 ;; Tracked objects:
  2393 ;;		On entry : 0/0
  2394 ;;		On exit  : 0/0
  2395 ;;		Unchanged: 0/0
  2396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2397 ;;      Params:         0       0       0       0       0
  2398 ;;      Locals:         0       0       0       0       0
  2399 ;;      Temps:          2       0       0       0       0
  2400 ;;      Totals:         2       0       0       0       0
  2401 ;;Total ram usage:        2 bytes
  2402 ;; Hardware stack levels used: 1
  2403 ;; This function calls:
  2404 ;;		Nothing
  2405 ;; This function is called by:
  2406 ;;		_sendCommand
  2407 ;;		_LCDdisplay
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411     1B39                     _toggleEnable:	
  2412                           ;psect for function _toggleEnable
  2413                           
  2414     1B39                     l3287:	
  2415                           ;incstack = 0
  2416                           ; Regs used in _toggleEnable: [wreg]
  2417                           
  2418                           
  2419                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 44:     PORTCbits.RC2 
      +                          = 1;
  2420     1B39  1283               	bcf	3,5	;RP0=0, select bank0
  2421     1B3A  1303               	bcf	3,6	;RP1=0, select bank0
  2422     1B3B  1507               	bsf	7,2	;volatile
  2423     1B3C                     l3289:
  2424                           
  2425                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 45:     _delay((unsign
      +                          ed long)((10)*(20000000/4000000.0)));
  2426     1B3C  3010               	movlw	16
  2427     1B3D  00F0               	movwf	??_toggleEnable
  2428     1B3E                     u5427:
  2429     1B3E  0BF0               	decfsz	??_toggleEnable,f
  2430     1B3F  2B3E               	goto	u5427
  2431     1B40  0000               	nop
  2432     1B41                     l3291:
  2433                           
  2434                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 46:     PORTCbits.RC2 
      +                          = 0;
  2435     1B41  1283               	bcf	3,5	;RP0=0, select bank0
  2436     1B42  1303               	bcf	3,6	;RP1=0, select bank0
  2437     1B43  1107               	bcf	7,2	;volatile
  2438                           
  2439                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 47:     _delay((unsign
      +                          ed long)((10)*(20000000/4000.0)));
  2440     1B44  3041               	movlw	65
  2441     1B45  00F1               	movwf	??_toggleEnable+1
  2442     1B46  30EE               	movlw	238
  2443     1B47  00F0               	movwf	??_toggleEnable
  2444     1B48                     u5437:
  2445     1B48  0BF0               	decfsz	??_toggleEnable,f
  2446     1B49  2B48               	goto	u5437
  2447     1B4A  0BF1               	decfsz	??_toggleEnable+1,f
  2448     1B4B  2B48               	goto	u5437
  2449     1B4C  0000               	nop
  2450     1B4D                     l25:
  2451     1B4D  0008               	return
  2452     1B4E                     __end_of_toggleEnable:
  2453                           
  2454                           	psect	text7
  2455     1B4E                     __ptext7:	
  2456 ;; *************** function _memset *****************
  2457 ;; Defined at:
  2458 ;;		line 3 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\memset.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  dest            1    0[COMMON] PTR void 
  2461 ;;		 -> main@values(8), 
  2462 ;;  c               2    1[COMMON] int 
  2463 ;;  n               2    3[COMMON] unsigned int 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;  p               1    5[COMMON] PTR unsigned char 
  2466 ;;		 -> main@values(8), 
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    0[COMMON] PTR void 
  2469 ;; Registers used:
  2470 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2476 ;;      Params:         5       0       0       0       0
  2477 ;;      Locals:         1       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0
  2479 ;;      Totals:         6       0       0       0       0
  2480 ;;Total ram usage:        6 bytes
  2481 ;; Hardware stack levels used: 1
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		_main
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489     1B4E                     _memset:	
  2490                           ;psect for function _memset
  2491                           
  2492     1B4E                     l3595:	
  2493                           ;incstack = 0
  2494                           ; Regs used in _memset: [wreg-fsr0h+status,2+status,0]
  2495                           
  2496     1B4E  0870               	movf	memset@dest,w
  2497     1B4F  00F5               	movwf	memset@p
  2498     1B50  2B58               	goto	l3601
  2499     1B51                     l3597:
  2500     1B51  0875               	movf	memset@p,w
  2501     1B52  0084               	movwf	4
  2502     1B53  0871               	movf	memset@c,w
  2503     1B54  1783               	bsf	3,7	;select IRP bank2
  2504     1B55  0080               	movwf	0
  2505     1B56                     l3599:
  2506     1B56  3001               	movlw	1
  2507     1B57  07F5               	addwf	memset@p,f
  2508     1B58                     l3601:
  2509     1B58  3001               	movlw	1
  2510     1B59  02F3               	subwf	memset@n,f
  2511     1B5A  3000               	movlw	0
  2512     1B5B  1C03               	skipc
  2513     1B5C  03F4               	decf	memset@n+1,f
  2514     1B5D  02F4               	subwf	memset@n+1,f
  2515     1B5E  0A73               	incf	memset@n,w
  2516     1B5F  1D03               	skipz
  2517     1B60  2B65               	goto	u5321
  2518     1B61  0A74               	incf	memset@n+1,w
  2519     1B62  1D03               	btfss	3,2
  2520     1B63  2B65               	goto	u5321
  2521     1B64  2B66               	goto	u5320
  2522     1B65                     u5321:
  2523     1B65  2B51               	goto	l3597
  2524     1B66                     u5320:
  2525     1B66                     l693:
  2526     1B66  0008               	return
  2527     1B67                     __end_of_memset:
  2528                           
  2529                           	psect	text8
  2530     1648                     __ptext8:	
  2531 ;; *************** function _getInput *****************
  2532 ;; Defined at:
  2533 ;;		line 76 in file "C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;		None
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  output          1    7[COMMON] PTR unsigned char [1]
  2538 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(2), 
  2539 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(2), 
  2540 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  2541 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  2542 ;;		 -> STR_1(1), 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1   46[None  ] PTR unsigned char 
  2545 ;; Registers used:
  2546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2552 ;;      Params:         0       0       0       0       0
  2553 ;;      Locals:         1       0       0       0       0
  2554 ;;      Temps:          3       0       0       0       0
  2555 ;;      Totals:         4       0       0       0       0
  2556 ;;Total ram usage:        4 bytes
  2557 ;; Hardware stack levels used: 1
  2558 ;; Hardware stack levels required when called: 2
  2559 ;; This function calls:
  2560 ;;		_strlen
  2561 ;; This function is called by:
  2562 ;;		_main
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566     1648                     _getInput:	
  2567                           ;psect for function _getInput
  2568                           
  2569     1648                     l3419:	
  2570                           ;incstack = 0
  2571                           ; Regs used in _getInput: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2572                           
  2573                           
  2574                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 77:     char *output[1
      +                          ];;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 78:     *output = ""
      +                          ;
  2575     1648  300D               	movlw	(low (((STR_17+1)-__stringbase)| (0+32768)))& (0+255)
  2576     1649  00F7               	movwf	getInput@output
  2577                           
  2578                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 79:     _delay((unsign
      +                          ed long)((300)*(20000000/4000.0)));
  2579     164A  3008               	movlw	8
  2580     164B  00F6               	movwf	??_getInput+2
  2581     164C  309D               	movlw	157
  2582     164D  00F5               	movwf	??_getInput+1
  2583     164E  3005               	movlw	5
  2584     164F  00F4               	movwf	??_getInput
  2585     1650                     u5447:
  2586     1650  0BF4               	decfsz	??_getInput,f
  2587     1651  2E50               	goto	u5447
  2588     1652  0BF5               	decfsz	??_getInput+1,f
  2589     1653  2E50               	goto	u5447
  2590     1654  0BF6               	decfsz	??_getInput+2,f
  2591     1655  2E50               	goto	u5447
  2592     1656  2E57               	nop2
  2593     1657                     l3421:
  2594                           
  2595                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 81:         PORTDbits.
      +                          RD4 = 1;
  2596     1657  1283               	bcf	3,5	;RP0=0, select bank0
  2597     1658  1303               	bcf	3,6	;RP1=0, select bank0
  2598     1659  1608               	bsf	8,4	;volatile
  2599     165A                     l3423:
  2600                           
  2601                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 82:         if(PORTDbi
      +                          ts.RD0){
  2602     165A  1C08               	btfss	8,0	;volatile
  2603     165B  2E5D               	goto	u4971
  2604     165C  2E5E               	goto	u4970
  2605     165D                     u4971:
  2606     165D  2E70               	goto	l48
  2607     165E                     u4970:
  2608     165E                     l3425:
  2609                           
  2610                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 83:             _delay
      +                          ((unsigned long)((10)*(20000000/4000.0)));
  2611     165E  3041               	movlw	65
  2612     165F  00F5               	movwf	??_getInput+1
  2613     1660  30EE               	movlw	238
  2614     1661  00F4               	movwf	??_getInput
  2615     1662                     u5457:
  2616     1662  0BF4               	decfsz	??_getInput,f
  2617     1663  2E62               	goto	u5457
  2618     1664  0BF5               	decfsz	??_getInput+1,f
  2619     1665  2E62               	goto	u5457
  2620     1666  0000               	nop
  2621     1667                     l3427:
  2622                           
  2623                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 84:             if(POR
      +                          TDbits.RD0){
  2624     1667  1283               	bcf	3,5	;RP0=0, select bank0
  2625     1668  1303               	bcf	3,6	;RP1=0, select bank0
  2626     1669  1C08               	btfss	8,0	;volatile
  2627     166A  2E6C               	goto	u4981
  2628     166B  2E6D               	goto	u4980
  2629     166C                     u4981:
  2630     166C  2EBB               	goto	l3451
  2631     166D                     u4980:
  2632     166D                     l3429:
  2633                           
  2634                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 85:                 *o
      +                          utput = "7";
  2635     166D  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2636     166E  00F7               	movwf	getInput@output
  2637     166F  2EBB               	goto	l3451
  2638     1670                     l48:	
  2639                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 88:         else if(PO
      +                          RTDbits.RD1){
  2640                           
  2641     1670  1C88               	btfss	8,1	;volatile
  2642     1671  2E73               	goto	u4991
  2643     1672  2E74               	goto	u4990
  2644     1673                     u4991:
  2645     1673  2E86               	goto	l51
  2646     1674                     u4990:
  2647     1674                     l3431:
  2648                           
  2649                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 89:             _delay
      +                          ((unsigned long)((10)*(20000000/4000.0)));
  2650     1674  3041               	movlw	65
  2651     1675  00F5               	movwf	??_getInput+1
  2652     1676  30EE               	movlw	238
  2653     1677  00F4               	movwf	??_getInput
  2654     1678                     u5467:
  2655     1678  0BF4               	decfsz	??_getInput,f
  2656     1679  2E78               	goto	u5467
  2657     167A  0BF5               	decfsz	??_getInput+1,f
  2658     167B  2E78               	goto	u5467
  2659     167C  0000               	nop
  2660     167D                     l3433:
  2661                           
  2662                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 90:             if(POR
      +                          TDbits.RD1){
  2663     167D  1283               	bcf	3,5	;RP0=0, select bank0
  2664     167E  1303               	bcf	3,6	;RP1=0, select bank0
  2665     167F  1C88               	btfss	8,1	;volatile
  2666     1680  2E82               	goto	u5001
  2667     1681  2E83               	goto	u5000
  2668     1682                     u5001:
  2669     1682  2EBB               	goto	l3451
  2670     1683                     u5000:
  2671     1683                     l3435:
  2672                           
  2673                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 91:                 *o
      +                          utput = "4";
  2674     1683  301A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2675     1684  00F7               	movwf	getInput@output
  2676     1685  2EBB               	goto	l3451
  2677     1686                     l51:	
  2678                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 94:         else if(PO
      +                          RTDbits.RD2){
  2679                           
  2680     1686  1D08               	btfss	8,2	;volatile
  2681     1687  2E89               	goto	u5011
  2682     1688  2E8A               	goto	u5010
  2683     1689                     u5011:
  2684     1689  2E9C               	goto	l54
  2685     168A                     u5010:
  2686     168A                     l3437:
  2687                           
  2688                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 95:             _delay
      +                          ((unsigned long)((10)*(20000000/4000.0)));
  2689     168A  3041               	movlw	65
  2690     168B  00F5               	movwf	??_getInput+1
  2691     168C  30EE               	movlw	238
  2692     168D  00F4               	movwf	??_getInput
  2693     168E                     u5477:
  2694     168E  0BF4               	decfsz	??_getInput,f
  2695     168F  2E8E               	goto	u5477
  2696     1690  0BF5               	decfsz	??_getInput+1,f
  2697     1691  2E8E               	goto	u5477
  2698     1692  0000               	nop
  2699     1693                     l3439:
  2700                           
  2701                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 96:             if(POR
      +                          TDbits.RD2){
  2702     1693  1283               	bcf	3,5	;RP0=0, select bank0
  2703     1694  1303               	bcf	3,6	;RP1=0, select bank0
  2704     1695  1D08               	btfss	8,2	;volatile
  2705     1696  2E98               	goto	u5021
  2706     1697  2E99               	goto	u5020
  2707     1698                     u5021:
  2708     1698  2EBB               	goto	l3451
  2709     1699                     u5020:
  2710     1699                     l3441:
  2711                           
  2712                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 97:                 *o
      +                          utput = "1";
  2713     1699  3014               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2714     169A  00F7               	movwf	getInput@output
  2715     169B  2EBB               	goto	l3451
  2716     169C                     l54:	
  2717                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 100:         else if(P
      +                          ORTDbits.RD3){
  2718                           
  2719     169C  1D88               	btfss	8,3	;volatile
  2720     169D  2E9F               	goto	u5031
  2721     169E  2EA0               	goto	u5030
  2722     169F                     u5031:
  2723     169F  2EB2               	goto	l3449
  2724     16A0                     u5030:
  2725     16A0                     l3443:
  2726                           
  2727                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 101:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  2728     16A0  3041               	movlw	65
  2729     16A1  00F5               	movwf	??_getInput+1
  2730     16A2  30EE               	movlw	238
  2731     16A3  00F4               	movwf	??_getInput
  2732     16A4                     u5487:
  2733     16A4  0BF4               	decfsz	??_getInput,f
  2734     16A5  2EA4               	goto	u5487
  2735     16A6  0BF5               	decfsz	??_getInput+1,f
  2736     16A7  2EA4               	goto	u5487
  2737     16A8  0000               	nop
  2738     16A9                     l3445:
  2739                           
  2740                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 102:             if(PO
      +                          RTDbits.RD3){
  2741     16A9  1283               	bcf	3,5	;RP0=0, select bank0
  2742     16AA  1303               	bcf	3,6	;RP1=0, select bank0
  2743     16AB  1D88               	btfss	8,3	;volatile
  2744     16AC  2EAE               	goto	u5041
  2745     16AD  2EAF               	goto	u5040
  2746     16AE                     u5041:
  2747     16AE  2EBB               	goto	l3451
  2748     16AF                     u5040:
  2749     16AF                     l3447:
  2750                           
  2751                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 103:                 *
      +                          output = "C";
  2752     16AF  3028               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2753     16B0  00F7               	movwf	getInput@output
  2754     16B1  2EBB               	goto	l3451
  2755     16B2                     l3449:
  2756                           
  2757                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 107:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  2758     16B2  3041               	movlw	65
  2759     16B3  00F5               	movwf	??_getInput+1
  2760     16B4  30EE               	movlw	238
  2761     16B5  00F4               	movwf	??_getInput
  2762     16B6                     u5497:
  2763     16B6  0BF4               	decfsz	??_getInput,f
  2764     16B7  2EB6               	goto	u5497
  2765     16B8  0BF5               	decfsz	??_getInput+1,f
  2766     16B9  2EB6               	goto	u5497
  2767     16BA  0000               	nop
  2768     16BB                     l3451:
  2769                           
  2770                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 109:         PORTDbits
      +                          .RD4 = 0;
  2771     16BB  1283               	bcf	3,5	;RP0=0, select bank0
  2772     16BC  1303               	bcf	3,6	;RP1=0, select bank0
  2773     16BD  1208               	bcf	8,4	;volatile
  2774     16BE                     l3453:
  2775                           
  2776                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 110:         PORTDbits
      +                          .RD5 = 1;
  2777     16BE  1688               	bsf	8,5	;volatile
  2778     16BF                     l3455:
  2779                           
  2780                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 111:         if(PORTDb
      +                          its.RD0){
  2781     16BF  1C08               	btfss	8,0	;volatile
  2782     16C0  2EC2               	goto	u5051
  2783     16C1  2EC3               	goto	u5050
  2784     16C2                     u5051:
  2785     16C2  2ED5               	goto	l60
  2786     16C3                     u5050:
  2787     16C3                     l3457:
  2788                           
  2789                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 112:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  2790     16C3  3041               	movlw	65
  2791     16C4  00F5               	movwf	??_getInput+1
  2792     16C5  30EE               	movlw	238
  2793     16C6  00F4               	movwf	??_getInput
  2794     16C7                     u5507:
  2795     16C7  0BF4               	decfsz	??_getInput,f
  2796     16C8  2EC7               	goto	u5507
  2797     16C9  0BF5               	decfsz	??_getInput+1,f
  2798     16CA  2EC7               	goto	u5507
  2799     16CB  0000               	nop
  2800     16CC                     l3459:
  2801                           
  2802                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 113:             if(PO
      +                          RTDbits.RD0){
  2803     16CC  1283               	bcf	3,5	;RP0=0, select bank0
  2804     16CD  1303               	bcf	3,6	;RP1=0, select bank0
  2805     16CE  1C08               	btfss	8,0	;volatile
  2806     16CF  2ED1               	goto	u5061
  2807     16D0  2ED2               	goto	u5060
  2808     16D1                     u5061:
  2809     16D1  2F20               	goto	l3483
  2810     16D2                     u5060:
  2811     16D2                     l3461:
  2812                           
  2813                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 114:                 *
      +                          output = "8";
  2814     16D2  3022               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2815     16D3  00F7               	movwf	getInput@output
  2816     16D4  2F20               	goto	l3483
  2817     16D5                     l60:	
  2818                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 117:         else if(P
      +                          ORTDbits.RD1){
  2819                           
  2820     16D5  1C88               	btfss	8,1	;volatile
  2821     16D6  2ED8               	goto	u5071
  2822     16D7  2ED9               	goto	u5070
  2823     16D8                     u5071:
  2824     16D8  2EEB               	goto	l63
  2825     16D9                     u5070:
  2826     16D9                     l3463:
  2827                           
  2828                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 118:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  2829     16D9  3041               	movlw	65
  2830     16DA  00F5               	movwf	??_getInput+1
  2831     16DB  30EE               	movlw	238
  2832     16DC  00F4               	movwf	??_getInput
  2833     16DD                     u5517:
  2834     16DD  0BF4               	decfsz	??_getInput,f
  2835     16DE  2EDD               	goto	u5517
  2836     16DF  0BF5               	decfsz	??_getInput+1,f
  2837     16E0  2EDD               	goto	u5517
  2838     16E1  0000               	nop
  2839     16E2                     l3465:
  2840                           
  2841                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 119:             if(PO
      +                          RTDbits.RD1){
  2842     16E2  1283               	bcf	3,5	;RP0=0, select bank0
  2843     16E3  1303               	bcf	3,6	;RP1=0, select bank0
  2844     16E4  1C88               	btfss	8,1	;volatile
  2845     16E5  2EE7               	goto	u5081
  2846     16E6  2EE8               	goto	u5080
  2847     16E7                     u5081:
  2848     16E7  2F20               	goto	l3483
  2849     16E8                     u5080:
  2850     16E8                     l3467:
  2851                           
  2852                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 120:                 *
      +                          output = "5";
  2853     16E8  301C               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2854     16E9  00F7               	movwf	getInput@output
  2855     16EA  2F20               	goto	l3483
  2856     16EB                     l63:	
  2857                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 123:         else if(P
      +                          ORTDbits.RD2){
  2858                           
  2859     16EB  1D08               	btfss	8,2	;volatile
  2860     16EC  2EEE               	goto	u5091
  2861     16ED  2EEF               	goto	u5090
  2862     16EE                     u5091:
  2863     16EE  2F01               	goto	l66
  2864     16EF                     u5090:
  2865     16EF                     l3469:
  2866                           
  2867                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 124:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  2868     16EF  3041               	movlw	65
  2869     16F0  00F5               	movwf	??_getInput+1
  2870     16F1  30EE               	movlw	238
  2871     16F2  00F4               	movwf	??_getInput
  2872     16F3                     u5527:
  2873     16F3  0BF4               	decfsz	??_getInput,f
  2874     16F4  2EF3               	goto	u5527
  2875     16F5  0BF5               	decfsz	??_getInput+1,f
  2876     16F6  2EF3               	goto	u5527
  2877     16F7  0000               	nop
  2878     16F8                     l3471:
  2879                           
  2880                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 125:             if(PO
      +                          RTDbits.RD2){
  2881     16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2882     16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2883     16FA  1D08               	btfss	8,2	;volatile
  2884     16FB  2EFD               	goto	u5101
  2885     16FC  2EFE               	goto	u5100
  2886     16FD                     u5101:
  2887     16FD  2F20               	goto	l3483
  2888     16FE                     u5100:
  2889     16FE                     l3473:
  2890                           
  2891                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 126:                 *
      +                          output = "2";
  2892     16FE  3016               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2893     16FF  00F7               	movwf	getInput@output
  2894     1700  2F20               	goto	l3483
  2895     1701                     l66:	
  2896                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 129:         else if(P
      +                          ORTDbits.RD3){
  2897                           
  2898     1701  1D88               	btfss	8,3	;volatile
  2899     1702  2F04               	goto	u5111
  2900     1703  2F05               	goto	u5110
  2901     1704                     u5111:
  2902     1704  2F17               	goto	l3481
  2903     1705                     u5110:
  2904     1705                     l3475:
  2905                           
  2906                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 130:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  2907     1705  3041               	movlw	65
  2908     1706  00F5               	movwf	??_getInput+1
  2909     1707  30EE               	movlw	238
  2910     1708  00F4               	movwf	??_getInput
  2911     1709                     u5537:
  2912     1709  0BF4               	decfsz	??_getInput,f
  2913     170A  2F09               	goto	u5537
  2914     170B  0BF5               	decfsz	??_getInput+1,f
  2915     170C  2F09               	goto	u5537
  2916     170D  0000               	nop
  2917     170E                     l3477:
  2918                           
  2919                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 131:             if(PO
      +                          RTDbits.RD3){
  2920     170E  1283               	bcf	3,5	;RP0=0, select bank0
  2921     170F  1303               	bcf	3,6	;RP1=0, select bank0
  2922     1710  1D88               	btfss	8,3	;volatile
  2923     1711  2F13               	goto	u5121
  2924     1712  2F14               	goto	u5120
  2925     1713                     u5121:
  2926     1713  2F20               	goto	l3483
  2927     1714                     u5120:
  2928     1714                     l3479:
  2929                           
  2930                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 132:                 *
      +                          output = "0";
  2931     1714  3012               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2932     1715  00F7               	movwf	getInput@output
  2933     1716  2F20               	goto	l3483
  2934     1717                     l3481:
  2935                           
  2936                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 136:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  2937     1717  3041               	movlw	65
  2938     1718  00F5               	movwf	??_getInput+1
  2939     1719  30EE               	movlw	238
  2940     171A  00F4               	movwf	??_getInput
  2941     171B                     u5547:
  2942     171B  0BF4               	decfsz	??_getInput,f
  2943     171C  2F1B               	goto	u5547
  2944     171D  0BF5               	decfsz	??_getInput+1,f
  2945     171E  2F1B               	goto	u5547
  2946     171F  0000               	nop
  2947     1720                     l3483:
  2948                           
  2949                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 138:         PORTDbits
      +                          .RD5 = 0;
  2950     1720  1283               	bcf	3,5	;RP0=0, select bank0
  2951     1721  1303               	bcf	3,6	;RP1=0, select bank0
  2952     1722  1288               	bcf	8,5	;volatile
  2953     1723                     l3485:
  2954                           
  2955                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 139:         PORTDbits
      +                          .RD6 = 1;
  2956     1723  1708               	bsf	8,6	;volatile
  2957     1724                     l3487:
  2958                           
  2959                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 140:         if(PORTDb
      +                          its.RD0){
  2960     1724  1C08               	btfss	8,0	;volatile
  2961     1725  2F27               	goto	u5131
  2962     1726  2F28               	goto	u5130
  2963     1727                     u5131:
  2964     1727  2F3A               	goto	l72
  2965     1728                     u5130:
  2966     1728                     l3489:
  2967                           
  2968                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 141:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  2969     1728  3041               	movlw	65
  2970     1729  00F5               	movwf	??_getInput+1
  2971     172A  30EE               	movlw	238
  2972     172B  00F4               	movwf	??_getInput
  2973     172C                     u5557:
  2974     172C  0BF4               	decfsz	??_getInput,f
  2975     172D  2F2C               	goto	u5557
  2976     172E  0BF5               	decfsz	??_getInput+1,f
  2977     172F  2F2C               	goto	u5557
  2978     1730  0000               	nop
  2979     1731                     l3491:
  2980                           
  2981                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 142:             if(PO
      +                          RTDbits.RD0){
  2982     1731  1283               	bcf	3,5	;RP0=0, select bank0
  2983     1732  1303               	bcf	3,6	;RP1=0, select bank0
  2984     1733  1C08               	btfss	8,0	;volatile
  2985     1734  2F36               	goto	u5141
  2986     1735  2F37               	goto	u5140
  2987     1736                     u5141:
  2988     1736  2F85               	goto	l3515
  2989     1737                     u5140:
  2990     1737                     l3493:
  2991                           
  2992                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 143:                 *
      +                          output = "9";
  2993     1737  3024               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2994     1738  00F7               	movwf	getInput@output
  2995     1739  2F85               	goto	l3515
  2996     173A                     l72:	
  2997                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 146:         else if(P
      +                          ORTDbits.RD1){
  2998                           
  2999     173A  1C88               	btfss	8,1	;volatile
  3000     173B  2F3D               	goto	u5151
  3001     173C  2F3E               	goto	u5150
  3002     173D                     u5151:
  3003     173D  2F50               	goto	l75
  3004     173E                     u5150:
  3005     173E                     l3495:
  3006                           
  3007                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 147:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3008     173E  3041               	movlw	65
  3009     173F  00F5               	movwf	??_getInput+1
  3010     1740  30EE               	movlw	238
  3011     1741  00F4               	movwf	??_getInput
  3012     1742                     u5567:
  3013     1742  0BF4               	decfsz	??_getInput,f
  3014     1743  2F42               	goto	u5567
  3015     1744  0BF5               	decfsz	??_getInput+1,f
  3016     1745  2F42               	goto	u5567
  3017     1746  0000               	nop
  3018     1747                     l3497:
  3019                           
  3020                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 148:             if(PO
      +                          RTDbits.RD1){
  3021     1747  1283               	bcf	3,5	;RP0=0, select bank0
  3022     1748  1303               	bcf	3,6	;RP1=0, select bank0
  3023     1749  1C88               	btfss	8,1	;volatile
  3024     174A  2F4C               	goto	u5161
  3025     174B  2F4D               	goto	u5160
  3026     174C                     u5161:
  3027     174C  2F85               	goto	l3515
  3028     174D                     u5160:
  3029     174D                     l3499:
  3030                           
  3031                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 149:                 *
      +                          output = "6";
  3032     174D  301E               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3033     174E  00F7               	movwf	getInput@output
  3034     174F  2F85               	goto	l3515
  3035     1750                     l75:	
  3036                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 152:         else if(P
      +                          ORTDbits.RD2){
  3037                           
  3038     1750  1D08               	btfss	8,2	;volatile
  3039     1751  2F53               	goto	u5171
  3040     1752  2F54               	goto	u5170
  3041     1753                     u5171:
  3042     1753  2F66               	goto	l78
  3043     1754                     u5170:
  3044     1754                     l3501:
  3045                           
  3046                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 153:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3047     1754  3041               	movlw	65
  3048     1755  00F5               	movwf	??_getInput+1
  3049     1756  30EE               	movlw	238
  3050     1757  00F4               	movwf	??_getInput
  3051     1758                     u5577:
  3052     1758  0BF4               	decfsz	??_getInput,f
  3053     1759  2F58               	goto	u5577
  3054     175A  0BF5               	decfsz	??_getInput+1,f
  3055     175B  2F58               	goto	u5577
  3056     175C  0000               	nop
  3057     175D                     l3503:
  3058                           
  3059                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 154:             if(PO
      +                          RTDbits.RD2){
  3060     175D  1283               	bcf	3,5	;RP0=0, select bank0
  3061     175E  1303               	bcf	3,6	;RP1=0, select bank0
  3062     175F  1D08               	btfss	8,2	;volatile
  3063     1760  2F62               	goto	u5181
  3064     1761  2F63               	goto	u5180
  3065     1762                     u5181:
  3066     1762  2F85               	goto	l3515
  3067     1763                     u5180:
  3068     1763                     l3505:
  3069                           
  3070                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 155:                 *
      +                          output = "3";
  3071     1763  3018               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  3072     1764  00F7               	movwf	getInput@output
  3073     1765  2F85               	goto	l3515
  3074     1766                     l78:	
  3075                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 158:         else if(P
      +                          ORTDbits.RD3){
  3076                           
  3077     1766  1D88               	btfss	8,3	;volatile
  3078     1767  2F69               	goto	u5191
  3079     1768  2F6A               	goto	u5190
  3080     1769                     u5191:
  3081     1769  2F7C               	goto	l3513
  3082     176A                     u5190:
  3083     176A                     l3507:
  3084                           
  3085                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 159:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3086     176A  3041               	movlw	65
  3087     176B  00F5               	movwf	??_getInput+1
  3088     176C  30EE               	movlw	238
  3089     176D  00F4               	movwf	??_getInput
  3090     176E                     u5587:
  3091     176E  0BF4               	decfsz	??_getInput,f
  3092     176F  2F6E               	goto	u5587
  3093     1770  0BF5               	decfsz	??_getInput+1,f
  3094     1771  2F6E               	goto	u5587
  3095     1772  0000               	nop
  3096     1773                     l3509:
  3097                           
  3098                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 160:             if(PO
      +                          RTDbits.RD3){
  3099     1773  1283               	bcf	3,5	;RP0=0, select bank0
  3100     1774  1303               	bcf	3,6	;RP1=0, select bank0
  3101     1775  1D88               	btfss	8,3	;volatile
  3102     1776  2F78               	goto	u5201
  3103     1777  2F79               	goto	u5200
  3104     1778                     u5201:
  3105     1778  2F85               	goto	l3515
  3106     1779                     u5200:
  3107     1779                     l3511:
  3108                           
  3109                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 161:                 *
      +                          output = "=";
  3110     1779  3026               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  3111     177A  00F7               	movwf	getInput@output
  3112     177B  2F85               	goto	l3515
  3113     177C                     l3513:
  3114                           
  3115                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 165:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3116     177C  3041               	movlw	65
  3117     177D  00F5               	movwf	??_getInput+1
  3118     177E  30EE               	movlw	238
  3119     177F  00F4               	movwf	??_getInput
  3120     1780                     u5597:
  3121     1780  0BF4               	decfsz	??_getInput,f
  3122     1781  2F80               	goto	u5597
  3123     1782  0BF5               	decfsz	??_getInput+1,f
  3124     1783  2F80               	goto	u5597
  3125     1784  0000               	nop
  3126     1785                     l3515:
  3127                           
  3128                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 167:         PORTDbits
      +                          .RD6 = 0;
  3129     1785  1283               	bcf	3,5	;RP0=0, select bank0
  3130     1786  1303               	bcf	3,6	;RP1=0, select bank0
  3131     1787  1308               	bcf	8,6	;volatile
  3132     1788                     l3517:
  3133                           
  3134                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 168:         PORTDbits
      +                          .RD7 = 1;
  3135     1788  1788               	bsf	8,7	;volatile
  3136     1789                     l3519:
  3137                           
  3138                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 169:         if(PORTDb
      +                          its.RD0){
  3139     1789  1C08               	btfss	8,0	;volatile
  3140     178A  2F8C               	goto	u5211
  3141     178B  2F8D               	goto	u5210
  3142     178C                     u5211:
  3143     178C  2F9F               	goto	l84
  3144     178D                     u5210:
  3145     178D                     l3521:
  3146                           
  3147                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 170:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3148     178D  3041               	movlw	65
  3149     178E  00F5               	movwf	??_getInput+1
  3150     178F  30EE               	movlw	238
  3151     1790  00F4               	movwf	??_getInput
  3152     1791                     u5607:
  3153     1791  0BF4               	decfsz	??_getInput,f
  3154     1792  2F91               	goto	u5607
  3155     1793  0BF5               	decfsz	??_getInput+1,f
  3156     1794  2F91               	goto	u5607
  3157     1795  0000               	nop
  3158     1796                     l3523:
  3159                           
  3160                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 171:             if(PO
      +                          RTDbits.RD0){
  3161     1796  1283               	bcf	3,5	;RP0=0, select bank0
  3162     1797  1303               	bcf	3,6	;RP1=0, select bank0
  3163     1798  1C08               	btfss	8,0	;volatile
  3164     1799  2F9B               	goto	u5221
  3165     179A  2F9C               	goto	u5220
  3166     179B                     u5221:
  3167     179B  2FEA               	goto	l3547
  3168     179C                     u5220:
  3169     179C                     l3525:
  3170                           
  3171                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 172:                 *
      +                          output = "/";
  3172     179C  3010               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  3173     179D  00F7               	movwf	getInput@output
  3174     179E  2FEA               	goto	l3547
  3175     179F                     l84:	
  3176                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 175:         else if(P
      +                          ORTDbits.RD1){
  3177                           
  3178     179F  1C88               	btfss	8,1	;volatile
  3179     17A0  2FA2               	goto	u5231
  3180     17A1  2FA3               	goto	u5230
  3181     17A2                     u5231:
  3182     17A2  2FB5               	goto	l87
  3183     17A3                     u5230:
  3184     17A3                     l3527:
  3185                           
  3186                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 176:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3187     17A3  3041               	movlw	65
  3188     17A4  00F5               	movwf	??_getInput+1
  3189     17A5  30EE               	movlw	238
  3190     17A6  00F4               	movwf	??_getInput
  3191     17A7                     u5617:
  3192     17A7  0BF4               	decfsz	??_getInput,f
  3193     17A8  2FA7               	goto	u5617
  3194     17A9  0BF5               	decfsz	??_getInput+1,f
  3195     17AA  2FA7               	goto	u5617
  3196     17AB  0000               	nop
  3197     17AC                     l3529:
  3198                           
  3199                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 177:             if(PO
      +                          RTDbits.RD1){
  3200     17AC  1283               	bcf	3,5	;RP0=0, select bank0
  3201     17AD  1303               	bcf	3,6	;RP1=0, select bank0
  3202     17AE  1C88               	btfss	8,1	;volatile
  3203     17AF  2FB1               	goto	u5241
  3204     17B0  2FB2               	goto	u5240
  3205     17B1                     u5241:
  3206     17B1  2FEA               	goto	l3547
  3207     17B2                     u5240:
  3208     17B2                     l3531:
  3209                           
  3210                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 178:                 *
      +                          output = "x";
  3211     17B2  302A               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  3212     17B3  00F7               	movwf	getInput@output
  3213     17B4  2FEA               	goto	l3547
  3214     17B5                     l87:	
  3215                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 181:         else if(P
      +                          ORTDbits.RD2){
  3216                           
  3217     17B5  1D08               	btfss	8,2	;volatile
  3218     17B6  2FB8               	goto	u5251
  3219     17B7  2FB9               	goto	u5250
  3220     17B8                     u5251:
  3221     17B8  2FCB               	goto	l90
  3222     17B9                     u5250:
  3223     17B9                     l3533:
  3224                           
  3225                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 182:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3226     17B9  3041               	movlw	65
  3227     17BA  00F5               	movwf	??_getInput+1
  3228     17BB  30EE               	movlw	238
  3229     17BC  00F4               	movwf	??_getInput
  3230     17BD                     u5627:
  3231     17BD  0BF4               	decfsz	??_getInput,f
  3232     17BE  2FBD               	goto	u5627
  3233     17BF  0BF5               	decfsz	??_getInput+1,f
  3234     17C0  2FBD               	goto	u5627
  3235     17C1  0000               	nop
  3236     17C2                     l3535:
  3237                           
  3238                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 183:             if(PO
      +                          RTDbits.RD2){
  3239     17C2  1283               	bcf	3,5	;RP0=0, select bank0
  3240     17C3  1303               	bcf	3,6	;RP1=0, select bank0
  3241     17C4  1D08               	btfss	8,2	;volatile
  3242     17C5  2FC7               	goto	u5261
  3243     17C6  2FC8               	goto	u5260
  3244     17C7                     u5261:
  3245     17C7  2FEA               	goto	l3547
  3246     17C8                     u5260:
  3247     17C8                     l3537:
  3248                           
  3249                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 184:                 *
      +                          output = "-";
  3250     17C8  300E               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  3251     17C9  00F7               	movwf	getInput@output
  3252     17CA  2FEA               	goto	l3547
  3253     17CB                     l90:	
  3254                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 187:         else if(P
      +                          ORTDbits.RD3){
  3255                           
  3256     17CB  1D88               	btfss	8,3	;volatile
  3257     17CC  2FCE               	goto	u5271
  3258     17CD  2FCF               	goto	u5270
  3259     17CE                     u5271:
  3260     17CE  2FE1               	goto	l3545
  3261     17CF                     u5270:
  3262     17CF                     l3539:
  3263                           
  3264                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 188:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3265     17CF  3041               	movlw	65
  3266     17D0  00F5               	movwf	??_getInput+1
  3267     17D1  30EE               	movlw	238
  3268     17D2  00F4               	movwf	??_getInput
  3269     17D3                     u5637:
  3270     17D3  0BF4               	decfsz	??_getInput,f
  3271     17D4  2FD3               	goto	u5637
  3272     17D5  0BF5               	decfsz	??_getInput+1,f
  3273     17D6  2FD3               	goto	u5637
  3274     17D7  0000               	nop
  3275     17D8                     l3541:
  3276                           
  3277                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 189:             if(PO
      +                          RTDbits.RD3){
  3278     17D8  1283               	bcf	3,5	;RP0=0, select bank0
  3279     17D9  1303               	bcf	3,6	;RP1=0, select bank0
  3280     17DA  1D88               	btfss	8,3	;volatile
  3281     17DB  2FDD               	goto	u5281
  3282     17DC  2FDE               	goto	u5280
  3283     17DD                     u5281:
  3284     17DD  2FEA               	goto	l3547
  3285     17DE                     u5280:
  3286     17DE                     l3543:
  3287                           
  3288                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 190:                 *
      +                          output = "+";
  3289     17DE  300C               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  3290     17DF  00F7               	movwf	getInput@output
  3291     17E0  2FEA               	goto	l3547
  3292     17E1                     l3545:
  3293                           
  3294                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 194:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3295     17E1  3041               	movlw	65
  3296     17E2  00F5               	movwf	??_getInput+1
  3297     17E3  30EE               	movlw	238
  3298     17E4  00F4               	movwf	??_getInput
  3299     17E5                     u5647:
  3300     17E5  0BF4               	decfsz	??_getInput,f
  3301     17E6  2FE5               	goto	u5647
  3302     17E7  0BF5               	decfsz	??_getInput+1,f
  3303     17E8  2FE5               	goto	u5647
  3304     17E9  0000               	nop
  3305     17EA                     l3547:
  3306                           
  3307                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 196:         PORTDbits
      +                          .RD7 = 0;
  3308     17EA  1283               	bcf	3,5	;RP0=0, select bank0
  3309     17EB  1303               	bcf	3,6	;RP1=0, select bank0
  3310     17EC  1388               	bcf	8,7	;volatile
  3311     17ED                     l3549:
  3312                           
  3313                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 197:         if(strlen
      +                          (*output)){
  3314     17ED  0877               	movf	getInput@output,w
  3315     17EE  00F0               	movwf	strlen@s
  3316     17EF  3000               	movlw	0
  3317     17F0  1D03               	btfss	3,2
  3318     17F1  3080               	movlw	128
  3319     17F2  00F1               	movwf	strlen@s+1
  3320     17F3  160A  158A  23EA  160A  118A  	fcall	_strlen
  3321     17F8  0870               	movf	?_strlen,w
  3322     17F9  0471               	iorwf	?_strlen+1,w
  3323     17FA  1903               	btfsc	3,2
  3324     17FB  2FFD               	goto	u5291
  3325     17FC  2FFE               	goto	u5290
  3326     17FD                     u5291:
  3327     17FD  2E57               	goto	l3421
  3328     17FE                     u5290:
  3329     17FE                     l3551:
  3330                           
  3331                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 198:             retur
      +                          n *output;
  3332     17FE  0877               	movf	getInput@output,w
  3333     17FF                     l97:
  3334     17FF  0008               	return
  3335     1800                     __end_of_getInput:
  3336                           
  3337                           	psect	text9
  3338     1340                     __ptext9:	
  3339 ;; *************** function _calculate *****************
  3340 ;; Defined at:
  3341 ;;		line 202 in file "C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  values          1   68[BANK1 ] PTR 
  3344 ;;		 -> main@values(8), 
  3345 ;;  operator        1   69[BANK1 ] unsigned char 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  x               2   70[BANK1 ] unsigned short 
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  2   68[BANK1 ] PTR unsigned char 
  3350 ;; Registers used:
  3351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3357 ;;      Params:         0       0       2       0       0
  3358 ;;      Locals:         0       0       2       0       0
  3359 ;;      Temps:          0       0       0       0       0
  3360 ;;      Totals:         0       0       4       0       0
  3361 ;;Total ram usage:        4 bytes
  3362 ;; Hardware stack levels used: 1
  3363 ;; Hardware stack levels required when called: 8
  3364 ;; This function calls:
  3365 ;;		___fladd
  3366 ;;		___fldiv
  3367 ;;		___flmul
  3368 ;;		___flsub
  3369 ;;		_snprintf
  3370 ;;		_strlen
  3371 ;; This function is called by:
  3372 ;;		_main
  3373 ;; This function uses a non-reentrant model
  3374 ;;
  3375                           
  3376     1340                     _calculate:	
  3377                           ;psect for function _calculate
  3378                           
  3379     1340                     l3555:	
  3380                           ;incstack = 0
  3381 ;; hardware stack exceeded
  3382                           ; Regs used in _calculate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3383                           
  3384                           
  3385                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 203:     static char r
      +                          esult[16];;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 204:     swi
      +                          tch(operator){
  3386     1340  2C26               	goto	l3571
  3387     1341                     l3557:
  3388                           
  3389                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 206:         values[0]
      +                           += values[1];
  3390     1341  0864               	movf	calculate@values^(0+128),w
  3391     1342  3E04               	addlw	4
  3392     1343  0084               	movwf	4
  3393     1344  1783               	bsf	3,7	;select IRP bank2
  3394     1345  0800               	movf	0,w
  3395     1346  1283               	bcf	3,5	;RP0=0, select bank0
  3396     1347  1303               	bcf	3,6	;RP1=0, select bank0
  3397     1348  00B5               	movwf	___fladd@b
  3398     1349  0A84               	incf	4,f
  3399     134A  0800               	movf	0,w
  3400     134B  00B6               	movwf	___fladd@b+1
  3401     134C  0A84               	incf	4,f
  3402     134D  0800               	movf	0,w
  3403     134E  00B7               	movwf	___fladd@b+2
  3404     134F  0A84               	incf	4,f
  3405     1350  0800               	movf	0,w
  3406     1351  00B8               	movwf	___fladd@b+3
  3407     1352  1683               	bsf	3,5	;RP0=1, select bank1
  3408     1353  1303               	bcf	3,6	;RP1=0, select bank1
  3409     1354  0864               	movf	calculate@values^(0+128),w
  3410     1355  0084               	movwf	4
  3411     1356  0800               	movf	0,w
  3412     1357  1283               	bcf	3,5	;RP0=0, select bank0
  3413     1358  1303               	bcf	3,6	;RP1=0, select bank0
  3414     1359  00B9               	movwf	___fladd@a
  3415     135A  0A84               	incf	4,f
  3416     135B  0800               	movf	0,w
  3417     135C  00BA               	movwf	___fladd@a+1
  3418     135D  0A84               	incf	4,f
  3419     135E  0800               	movf	0,w
  3420     135F  00BB               	movwf	___fladd@a+2
  3421     1360  0A84               	incf	4,f
  3422     1361  0800               	movf	0,w
  3423     1362  00BC               	movwf	___fladd@a+3
  3424     1363  120A  158A  226E  160A  118A  	fcall	___fladd
  3425     1368  1683               	bsf	3,5	;RP0=1, select bank1
  3426     1369  1303               	bcf	3,6	;RP1=0, select bank1
  3427     136A  0864               	movf	calculate@values^(0+128),w
  3428     136B  0084               	movwf	4
  3429     136C  1283               	bcf	3,5	;RP0=0, select bank0
  3430     136D  1303               	bcf	3,6	;RP1=0, select bank0
  3431     136E  0835               	movf	?___fladd,w
  3432     136F  1783               	bsf	3,7	;select IRP bank2
  3433     1370  0080               	movwf	0
  3434     1371  0A84               	incf	4,f
  3435     1372  0836               	movf	?___fladd+1,w
  3436     1373  0080               	movwf	0
  3437     1374  0A84               	incf	4,f
  3438     1375  0837               	movf	?___fladd+2,w
  3439     1376  0080               	movwf	0
  3440     1377  0A84               	incf	4,f
  3441     1378  0838               	movf	?___fladd+3,w
  3442     1379  0080               	movwf	0
  3443                           
  3444                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 207:         break;
  3445     137A  2C36               	goto	l3573
  3446     137B                     l3559:
  3447                           
  3448                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 210:         values[0]
      +                           -= values[1];
  3449     137B  0864               	movf	calculate@values^(0+128),w
  3450     137C  3E04               	addlw	4
  3451     137D  0084               	movwf	4
  3452     137E  1783               	bsf	3,7	;select IRP bank2
  3453     137F  0800               	movf	0,w
  3454     1380  1283               	bcf	3,5	;RP0=0, select bank0
  3455     1381  1303               	bcf	3,6	;RP1=0, select bank0
  3456     1382  00C9               	movwf	___flsub@a
  3457     1383  0A84               	incf	4,f
  3458     1384  0800               	movf	0,w
  3459     1385  00CA               	movwf	___flsub@a+1
  3460     1386  0A84               	incf	4,f
  3461     1387  0800               	movf	0,w
  3462     1388  00CB               	movwf	___flsub@a+2
  3463     1389  0A84               	incf	4,f
  3464     138A  0800               	movf	0,w
  3465     138B  00CC               	movwf	___flsub@a+3
  3466     138C  1683               	bsf	3,5	;RP0=1, select bank1
  3467     138D  1303               	bcf	3,6	;RP1=0, select bank1
  3468     138E  0864               	movf	calculate@values^(0+128),w
  3469     138F  0084               	movwf	4
  3470     1390  0800               	movf	0,w
  3471     1391  1283               	bcf	3,5	;RP0=0, select bank0
  3472     1392  1303               	bcf	3,6	;RP1=0, select bank0
  3473     1393  00CD               	movwf	___flsub@b
  3474     1394  0A84               	incf	4,f
  3475     1395  0800               	movf	0,w
  3476     1396  00CE               	movwf	___flsub@b+1
  3477     1397  0A84               	incf	4,f
  3478     1398  0800               	movf	0,w
  3479     1399  00CF               	movwf	___flsub@b+2
  3480     139A  0A84               	incf	4,f
  3481     139B  0800               	movf	0,w
  3482     139C  00D0               	movwf	___flsub@b+3
  3483     139D  160A  158A  23C6  160A  118A  	fcall	___flsub
  3484     13A2  1683               	bsf	3,5	;RP0=1, select bank1
  3485     13A3  1303               	bcf	3,6	;RP1=0, select bank1
  3486     13A4  0864               	movf	calculate@values^(0+128),w
  3487     13A5  0084               	movwf	4
  3488     13A6  1283               	bcf	3,5	;RP0=0, select bank0
  3489     13A7  1303               	bcf	3,6	;RP1=0, select bank0
  3490     13A8  0849               	movf	?___flsub,w
  3491     13A9  1783               	bsf	3,7	;select IRP bank2
  3492     13AA  0080               	movwf	0
  3493     13AB  0A84               	incf	4,f
  3494     13AC  084A               	movf	?___flsub+1,w
  3495     13AD  0080               	movwf	0
  3496     13AE  0A84               	incf	4,f
  3497     13AF  084B               	movf	?___flsub+2,w
  3498     13B0  0080               	movwf	0
  3499     13B1  0A84               	incf	4,f
  3500     13B2  084C               	movf	?___flsub+3,w
  3501     13B3  0080               	movwf	0
  3502                           
  3503                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 211:         break;
  3504     13B4  2C36               	goto	l3573
  3505     13B5                     l3561:
  3506                           
  3507                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 214:         values[0]
      +                           *= values[1];
  3508     13B5  0864               	movf	calculate@values^(0+128),w
  3509     13B6  3E04               	addlw	4
  3510     13B7  0084               	movwf	4
  3511     13B8  1783               	bsf	3,7	;select IRP bank2
  3512     13B9  0800               	movf	0,w
  3513     13BA  1283               	bcf	3,5	;RP0=0, select bank0
  3514     13BB  1303               	bcf	3,6	;RP1=0, select bank0
  3515     13BC  00A0               	movwf	___flmul@b
  3516     13BD  0A84               	incf	4,f
  3517     13BE  0800               	movf	0,w
  3518     13BF  00A1               	movwf	___flmul@b+1
  3519     13C0  0A84               	incf	4,f
  3520     13C1  0800               	movf	0,w
  3521     13C2  00A2               	movwf	___flmul@b+2
  3522     13C3  0A84               	incf	4,f
  3523     13C4  0800               	movf	0,w
  3524     13C5  00A3               	movwf	___flmul@b+3
  3525     13C6  1683               	bsf	3,5	;RP0=1, select bank1
  3526     13C7  1303               	bcf	3,6	;RP1=0, select bank1
  3527     13C8  0864               	movf	calculate@values^(0+128),w
  3528     13C9  0084               	movwf	4
  3529     13CA  0800               	movf	0,w
  3530     13CB  1283               	bcf	3,5	;RP0=0, select bank0
  3531     13CC  1303               	bcf	3,6	;RP1=0, select bank0
  3532     13CD  00A4               	movwf	___flmul@a
  3533     13CE  0A84               	incf	4,f
  3534     13CF  0800               	movf	0,w
  3535     13D0  00A5               	movwf	___flmul@a+1
  3536     13D1  0A84               	incf	4,f
  3537     13D2  0800               	movf	0,w
  3538     13D3  00A6               	movwf	___flmul@a+2
  3539     13D4  0A84               	incf	4,f
  3540     13D5  0800               	movf	0,w
  3541     13D6  00A7               	movwf	___flmul@a+3
  3542     13D7  120A  158A  24BE  160A  118A  	fcall	___flmul
  3543     13DC  1683               	bsf	3,5	;RP0=1, select bank1
  3544     13DD  1303               	bcf	3,6	;RP1=0, select bank1
  3545     13DE  0864               	movf	calculate@values^(0+128),w
  3546     13DF  0084               	movwf	4
  3547     13E0  1283               	bcf	3,5	;RP0=0, select bank0
  3548     13E1  1303               	bcf	3,6	;RP1=0, select bank0
  3549     13E2  0820               	movf	?___flmul,w
  3550     13E3  1783               	bsf	3,7	;select IRP bank2
  3551     13E4  0080               	movwf	0
  3552     13E5  0A84               	incf	4,f
  3553     13E6  0821               	movf	?___flmul+1,w
  3554     13E7  0080               	movwf	0
  3555     13E8  0A84               	incf	4,f
  3556     13E9  0822               	movf	?___flmul+2,w
  3557     13EA  0080               	movwf	0
  3558     13EB  0A84               	incf	4,f
  3559     13EC  0823               	movf	?___flmul+3,w
  3560     13ED  0080               	movwf	0
  3561                           
  3562                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 215:         break;
  3563     13EE  2C36               	goto	l3573
  3564     13EF                     l3563:
  3565                           
  3566                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 218:         values[0]
      +                           /= values[1];
  3567     13EF  0864               	movf	calculate@values^(0+128),w
  3568     13F0  3E04               	addlw	4
  3569     13F1  0084               	movwf	4
  3570     13F2  1783               	bsf	3,7	;select IRP bank2
  3571     13F3  0800               	movf	0,w
  3572     13F4  00F0               	movwf	___fldiv@a
  3573     13F5  0A84               	incf	4,f
  3574     13F6  0800               	movf	0,w
  3575     13F7  00F1               	movwf	___fldiv@a+1
  3576     13F8  0A84               	incf	4,f
  3577     13F9  0800               	movf	0,w
  3578     13FA  00F2               	movwf	___fldiv@a+2
  3579     13FB  0A84               	incf	4,f
  3580     13FC  0800               	movf	0,w
  3581     13FD  00F3               	movwf	___fldiv@a+3
  3582     13FE  0864               	movf	calculate@values^(0+128),w
  3583     13FF  0084               	movwf	4
  3584     1400  0800               	movf	0,w
  3585     1401  00F4               	movwf	___fldiv@b
  3586     1402  0A84               	incf	4,f
  3587     1403  0800               	movf	0,w
  3588     1404  00F5               	movwf	___fldiv@b+1
  3589     1405  0A84               	incf	4,f
  3590     1406  0800               	movf	0,w
  3591     1407  00F6               	movwf	___fldiv@b+2
  3592     1408  0A84               	incf	4,f
  3593     1409  0800               	movf	0,w
  3594     140A  00F7               	movwf	___fldiv@b+3
  3595     140B  120A  158A  209E  160A  118A  	fcall	___fldiv
  3596     1410  1683               	bsf	3,5	;RP0=1, select bank1
  3597     1411  1303               	bcf	3,6	;RP1=0, select bank1
  3598     1412  0864               	movf	calculate@values^(0+128),w
  3599     1413  0084               	movwf	4
  3600     1414  0870               	movf	?___fldiv,w
  3601     1415  1783               	bsf	3,7	;select IRP bank2
  3602     1416  0080               	movwf	0
  3603     1417  0A84               	incf	4,f
  3604     1418  0871               	movf	?___fldiv+1,w
  3605     1419  0080               	movwf	0
  3606     141A  0A84               	incf	4,f
  3607     141B  0872               	movf	?___fldiv+2,w
  3608     141C  0080               	movwf	0
  3609     141D  0A84               	incf	4,f
  3610     141E  0873               	movf	?___fldiv+3,w
  3611     141F  0080               	movwf	0
  3612                           
  3613                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 219:         break;
  3614     1420  2C36               	goto	l3573
  3615     1421                     l3565:
  3616                           
  3617                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 222:         return ""
      +                          ;
  3618     1421  300D               	movlw	(low (((STR_17+1)-__stringbase)| (0+32768)))& (0+255)
  3619     1422  00E4               	movwf	?_calculate^(0+128)
  3620     1423  3080               	movlw	128
  3621     1424  00E5               	movwf	(?_calculate+1)^(0+128)
  3622     1425  2C9B               	goto	l111
  3623     1426                     l3571:
  3624     1426  1683               	bsf	3,5	;RP0=1, select bank1
  3625     1427  1303               	bcf	3,6	;RP1=0, select bank1
  3626     1428  0865               	movf	calculate@operator^(0+128),w
  3627                           
  3628                           ; Switch size 1, requested type "simple"
  3629                           ; Number of cases is 4, Range of values is 43 to 120
  3630                           ; switch strategies available:
  3631                           ; Name         Instructions Cycles
  3632                           ; simple_byte           13     7 (average)
  3633                           ; direct_byte          245    11 (fixed)
  3634                           ; jumptable            263     9 (fixed)
  3635                           ;	Chosen strategy is simple_byte
  3636     1429  3A2B               	xorlw	43	; case 43
  3637     142A  1903               	skipnz
  3638     142B  2B41               	goto	l3557
  3639     142C  3A06               	xorlw	6	; case 45
  3640     142D  1903               	skipnz
  3641     142E  2B7B               	goto	l3559
  3642     142F  3A02               	xorlw	2	; case 47
  3643     1430  1903               	skipnz
  3644     1431  2BEF               	goto	l3563
  3645     1432  3A57               	xorlw	87	; case 120
  3646     1433  1903               	skipnz
  3647     1434  2BB5               	goto	l3561
  3648     1435  2C21               	goto	l3565
  3649     1436                     l3573:
  3650                           
  3651                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 224:     values[1] = 0
      +                          ;
  3652     1436  1683               	bsf	3,5	;RP0=1, select bank1
  3653     1437  1303               	bcf	3,6	;RP1=0, select bank1
  3654     1438  0864               	movf	calculate@values^(0+128),w
  3655     1439  3E04               	addlw	4
  3656     143A  0084               	movwf	4
  3657     143B  3000               	movlw	0
  3658     143C  0080               	movwf	0
  3659     143D  0A84               	incf	4,f
  3660     143E  3000               	movlw	0
  3661     143F  0080               	movwf	0
  3662     1440  0A84               	incf	4,f
  3663     1441  3000               	movlw	0
  3664     1442  0080               	movwf	0
  3665     1443  0A84               	incf	4,f
  3666     1444  3000               	movlw	0
  3667     1445  0080               	movwf	0
  3668     1446                     l3575:
  3669                           
  3670                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 225:     snprintf(resu
      +                          lt, 16, "%f", values[0]);
  3671     1446  30A4               	movlw	(low (calculate@result| (0+256)))& (0+255)
  3672     1447  00CC               	movwf	snprintf@s^(0+128)
  3673     1448  3010               	movlw	16
  3674     1449  00CD               	movwf	snprintf@n^(0+128)
  3675     144A  3000               	movlw	0
  3676     144B  00CE               	movwf	(snprintf@n^(0+128)+1)
  3677     144C  3009               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  3678     144D  00CF               	movwf	snprintf@fmt^(0+128)
  3679     144E  0864               	movf	calculate@values^(0+128),w
  3680     144F  0084               	movwf	4
  3681     1450  0800               	movf	0,w
  3682     1451  00D0               	movwf	(?_snprintf^(0+128)+4)
  3683     1452  0A84               	incf	4,f
  3684     1453  0800               	movf	0,w
  3685     1454  00D1               	movwf	((?_snprintf+1)^(0+128)+4)
  3686     1455  0A84               	incf	4,f
  3687     1456  0800               	movf	0,w
  3688     1457  00D2               	movwf	((?_snprintf+2)^(0+128)+4)
  3689     1458  0A84               	incf	4,f
  3690     1459  0800               	movf	0,w
  3691     145A  00D3               	movwf	((?_snprintf+3)^(0+128)+4)
  3692     145B  120A  158A  2004  160A  118A  	fcall	_snprintf
  3693     1460                     l3577:
  3694                           
  3695                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 226:     for(uint16_t 
      +                          x = strlen(result) - 1; x >= 0; x--){
  3696     1460  30A4               	movlw	(low (calculate@result| (0+256)))& (0+255)
  3697     1461  00F0               	movwf	strlen@s
  3698     1462  3001               	movlw	1
  3699     1463  00F1               	movwf	strlen@s+1
  3700     1464  160A  158A  23EA  160A  118A  	fcall	_strlen
  3701     1469  0870               	movf	?_strlen,w
  3702     146A  3EFF               	addlw	255
  3703     146B  1683               	bsf	3,5	;RP0=1, select bank1
  3704     146C  1303               	bcf	3,6	;RP1=0, select bank1
  3705     146D  00E6               	movwf	calculate@x^(0+128)
  3706     146E  0871               	movf	?_strlen+1,w
  3707     146F  1803               	skipnc
  3708     1470  3E01               	addlw	1
  3709     1471  3EFF               	addlw	255
  3710     1472  00E7               	movwf	(calculate@x+1)^(0+128)
  3711     1473                     l3581:
  3712                           
  3713                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 227:         if(result
      +                          [x] == '0'){
  3714     1473  0866               	movf	calculate@x^(0+128),w
  3715     1474  3EA4               	addlw	(low (calculate@result| (0+256)))& (0+255)
  3716     1475  0084               	movwf	4
  3717     1476  3030               	movlw	48
  3718     1477  1783               	bsf	3,7	;select IRP bank3
  3719     1478  0600               	xorwf	0,w
  3720     1479  1D03               	btfss	3,2
  3721     147A  2C7C               	goto	u5301
  3722     147B  2C7D               	goto	u5300
  3723     147C                     u5301:
  3724     147C  2C82               	goto	l3585
  3725     147D                     u5300:
  3726     147D                     l3583:
  3727                           
  3728                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 228:             resul
      +                          t[x] = '\0';
  3729     147D  0866               	movf	calculate@x^(0+128),w
  3730     147E  3EA4               	addlw	(low (calculate@result| (0+256)))& (0+255)
  3731     147F  0084               	movwf	4
  3732     1480  0180               	clrf	0
  3733                           
  3734                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 229:         }
  3735     1481  2C90               	goto	l3589
  3736     1482                     l3585:
  3737                           
  3738                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 231:             if(re
      +                          sult[x] == '.'){
  3739     1482  0866               	movf	calculate@x^(0+128),w
  3740     1483  3EA4               	addlw	(low (calculate@result| (0+256)))& (0+255)
  3741     1484  0084               	movwf	4
  3742     1485  302E               	movlw	46
  3743     1486  0600               	xorwf	0,w
  3744     1487  1D03               	btfss	3,2
  3745     1488  2C8A               	goto	u5311
  3746     1489  2C8B               	goto	u5310
  3747     148A                     u5311:
  3748     148A  2C97               	goto	l3591
  3749     148B                     u5310:
  3750     148B                     l3587:
  3751                           
  3752                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 232:                 r
      +                          esult[x] = '\0';
  3753     148B  0866               	movf	calculate@x^(0+128),w
  3754     148C  3EA4               	addlw	(low (calculate@result| (0+256)))& (0+255)
  3755     148D  0084               	movwf	4
  3756     148E  0180               	clrf	0
  3757     148F  2C97               	goto	l3591
  3758     1490                     l3589:
  3759                           
  3760                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 236:     }
  3761     1490  3001               	movlw	1
  3762     1491  02E6               	subwf	calculate@x^(0+128),f
  3763     1492  3000               	movlw	0
  3764     1493  1C03               	skipc
  3765     1494  03E7               	decf	(calculate@x+1)^(0+128),f
  3766     1495  02E7               	subwf	(calculate@x+1)^(0+128),f
  3767     1496  2C73               	goto	l3581
  3768     1497                     l3591:
  3769                           
  3770                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 237:     return result
      +                          ;
  3771     1497  30A4               	movlw	(low (calculate@result| (0+256)))& (0+255)
  3772     1498  00E4               	movwf	?_calculate^(0+128)
  3773     1499  3001               	movlw	1
  3774     149A  00E5               	movwf	(?_calculate+1)^(0+128)
  3775     149B                     l111:
  3776     149B  0008               	return
  3777     149C                     __end_of_calculate:
  3778                           
  3779                           	psect	text10
  3780     0804                     __ptext10:	
  3781 ;; *************** function _snprintf *****************
  3782 ;; Defined at:
  3783 ;;		line 13 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\nf_snprintf.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;  s               1   44[BANK1 ] PTR unsigned char 
  3786 ;;		 -> calculate@result(16), 
  3787 ;;  n               2   45[BANK1 ] unsigned int 
  3788 ;;  fmt             1   47[BANK1 ] PTR const unsigned char 
  3789 ;;		 -> STR_19(3), 
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;  f              11   57[BANK1 ] struct _IO_FILE
  3792 ;;  cnt             2   55[BANK1 ] int 
  3793 ;;  ap              1   54[BANK1 ] PTR void [1]
  3794 ;;		 -> ?_snprintf(2), 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  2   44[BANK1 ] int 
  3797 ;; Registers used:
  3798 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3804 ;;      Params:         0       0       8       0       0
  3805 ;;      Locals:         0       0      16       0       0
  3806 ;;      Temps:          0       3       0       0       0
  3807 ;;      Totals:         0       3      24       0       0
  3808 ;;Total ram usage:       27 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; Hardware stack levels required when called: 7
  3811 ;; This function calls:
  3812 ;;		_vfprintf
  3813 ;; This function is called by:
  3814 ;;		_calculate
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818     0804                     _snprintf:	
  3819                           ;psect for function _snprintf
  3820                           
  3821     0804                     l3325:	
  3822                           ;incstack = 0
  3823 ;; hardware stack exceeded
  3824                           ; Regs used in _snprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3825                           
  3826     0804  3080               	movlw	128
  3827     0805  1683               	bsf	3,5	;RP0=1, select bank1
  3828     0806  1303               	bcf	3,6	;RP1=0, select bank1
  3829     0807  024E               	subwf	(snprintf@n+1)^(0+128),w
  3830     0808  3000               	movlw	0
  3831     0809  1903               	skipnz
  3832     080A  024D               	subwf	snprintf@n^(0+128),w
  3833     080B  1C03               	skipc
  3834     080C  280E               	goto	u4781
  3835     080D  280F               	goto	u4780
  3836     080E                     u4781:
  3837     080E  2816               	goto	l3331
  3838     080F                     u4780:
  3839     080F                     l3327:
  3840     080F  304B               	movlw	75
  3841     0810  1683               	bsf	3,5	;RP0=1, select bank3
  3842     0811  1703               	bsf	3,6	;RP1=1, select bank3
  3843     0812  00A2               	movwf	_errno^(0+384)
  3844     0813  3000               	movlw	0
  3845     0814  00A3               	movwf	(_errno^(0+384)+1)
  3846     0815  289D               	goto	l703
  3847     0816                     l3331:
  3848     0816  30D0               	movlw	(low ((?_snprintf| 0+4)))& (0+255)
  3849     0817  00D6               	movwf	snprintf@ap^(0+128)
  3850     0818                     l3333:
  3851     0818  084C               	movf	snprintf@s^(0+128),w
  3852     0819  00D9               	movwf	snprintf@f^(0+128)
  3853     081A  3001               	movlw	1
  3854     081B  00DA               	movwf	(snprintf@f+1)^(0+128)
  3855     081C                     l3335:
  3856     081C  3000               	movlw	0
  3857     081D  024E               	subwf	(snprintf@n+1)^(0+128),w
  3858     081E  3002               	movlw	2
  3859     081F  1903               	skipnz
  3860     0820  024D               	subwf	snprintf@n^(0+128),w
  3861     0821  1C03               	skipc
  3862     0822  2824               	goto	u4791
  3863     0823  2825               	goto	u4790
  3864     0824                     u4791:
  3865     0824  2830               	goto	l3341
  3866     0825                     u4790:
  3867     0825                     l3337:
  3868     0825  084D               	movf	snprintf@n^(0+128),w
  3869     0826  3EFF               	addlw	255
  3870     0827  00E2               	movwf	(snprintf@f^(0+128)+9)
  3871     0828  084E               	movf	(snprintf@n+1)^(0+128),w
  3872     0829  1803               	skipnc
  3873     082A  3E01               	addlw	1
  3874     082B  3EFF               	addlw	255
  3875     082C  00E3               	movwf	((snprintf@f+1)^(0+128)+9)
  3876     082D                     l3339:
  3877     082D  01DB               	clrf	(snprintf@f^(0+128)+2)
  3878     082E  01DC               	clrf	((snprintf@f+1)^(0+128)+2)
  3879     082F  2838               	goto	l3343
  3880     0830                     l3341:
  3881     0830  3001               	movlw	1
  3882     0831  00E2               	movwf	(snprintf@f^(0+128)+9)
  3883     0832  3000               	movlw	0
  3884     0833  00E3               	movwf	(snprintf@f^(0+128)+10)
  3885     0834  3001               	movlw	1
  3886     0835  00DB               	movwf	(snprintf@f^(0+128)+2)
  3887     0836  3000               	movlw	0
  3888     0837  00DC               	movwf	(snprintf@f^(0+128)+3)
  3889     0838                     l3343:
  3890     0838  30D9               	movlw	low snprintf@f
  3891     0839  1283               	bcf	3,5	;RP0=0, select bank0
  3892     083A  1303               	bcf	3,6	;RP1=0, select bank0
  3893     083B  00E8               	movwf	vfprintf@fp
  3894     083C  3000               	movlw	high snprintf@f
  3895     083D  00E9               	movwf	vfprintf@fp+1
  3896     083E  1683               	bsf	3,5	;RP0=1, select bank1
  3897     083F  1303               	bcf	3,6	;RP1=0, select bank1
  3898     0840  084F               	movf	snprintf@fmt^(0+128),w
  3899     0841  1283               	bcf	3,5	;RP0=0, select bank0
  3900     0842  1303               	bcf	3,6	;RP1=0, select bank0
  3901     0843  00EA               	movwf	vfprintf@fmt
  3902     0844  30D6               	movlw	(low (snprintf@ap| 0))& (0+255)
  3903     0845  00EB               	movwf	vfprintf@ap
  3904     0846  160A  118A  2003  120A  158A  	fcall	_vfprintf
  3905     084B  1283               	bcf	3,5	;RP0=0, select bank0
  3906     084C  1303               	bcf	3,6	;RP1=0, select bank0
  3907     084D  0869               	movf	?_vfprintf+1,w
  3908     084E  1683               	bsf	3,5	;RP0=1, select bank1
  3909     084F  1303               	bcf	3,6	;RP1=0, select bank1
  3910     0850  00D8               	movwf	(snprintf@cnt+1)^(0+128)
  3911     0851  1283               	bcf	3,5	;RP0=0, select bank0
  3912     0852  1303               	bcf	3,6	;RP1=0, select bank0
  3913     0853  0868               	movf	?_vfprintf,w
  3914     0854  1683               	bsf	3,5	;RP0=1, select bank1
  3915     0855  1303               	bcf	3,6	;RP1=0, select bank1
  3916     0856  00D7               	movwf	snprintf@cnt^(0+128)
  3917     0857                     l3345:
  3918     0857  084D               	movf	snprintf@n^(0+128),w
  3919     0858  044E               	iorwf	(snprintf@n+1)^(0+128),w
  3920     0859  1903               	btfsc	3,2
  3921     085A  285C               	goto	u4801
  3922     085B  285D               	goto	u4800
  3923     085C                     u4801:
  3924     085C  289D               	goto	l703
  3925     085D                     u4800:
  3926     085D                     l3347:
  3927     085D  1BD8               	btfsc	(snprintf@cnt+1)^(0+128),7
  3928     085E  2860               	goto	u4811
  3929     085F  2861               	goto	u4810
  3930     0860                     u4811:
  3931     0860  289D               	goto	l703
  3932     0861                     u4810:
  3933     0861                     l3349:
  3934     0861  084D               	movf	snprintf@n^(0+128),w
  3935     0862  3EFF               	addlw	255
  3936     0863  1283               	bcf	3,5	;RP0=0, select bank0
  3937     0864  1303               	bcf	3,6	;RP1=0, select bank0
  3938     0865  00ED               	movwf	??_snprintf
  3939     0866  1683               	bsf	3,5	;RP0=1, select bank1
  3940     0867  1303               	bcf	3,6	;RP1=0, select bank1
  3941     0868  084E               	movf	(snprintf@n+1)^(0+128),w
  3942     0869  1803               	skipnc
  3943     086A  3E01               	addlw	1
  3944     086B  3EFF               	addlw	255
  3945     086C  1283               	bcf	3,5	;RP0=0, select bank0
  3946     086D  1303               	bcf	3,6	;RP1=0, select bank0
  3947     086E  00EE               	movwf	??_snprintf+1
  3948     086F  1683               	bsf	3,5	;RP0=1, select bank1
  3949     0870  1303               	bcf	3,6	;RP1=0, select bank1
  3950     0871  0858               	movf	(snprintf@cnt+1)^(0+128),w
  3951     0872  3A80               	xorlw	128
  3952     0873  1283               	bcf	3,5	;RP0=0, select bank0
  3953     0874  1303               	bcf	3,6	;RP1=0, select bank0
  3954     0875  00EF               	movwf	??_snprintf+2
  3955     0876  086E               	movf	??_snprintf+1,w
  3956     0877  3A80               	xorlw	128
  3957     0878  026F               	subwf	??_snprintf+2,w
  3958     0879  1D03               	skipz
  3959     087A  287F               	goto	u4825
  3960     087B  086D               	movf	??_snprintf,w
  3961     087C  1683               	bsf	3,5	;RP0=1, select bank1
  3962     087D  1303               	bcf	3,6	;RP1=0, select bank1
  3963     087E  0257               	subwf	snprintf@cnt^(0+128),w
  3964     087F                     u4825:
  3965     087F  1C03               	skipc
  3966     0880  2882               	goto	u4821
  3967     0881  2883               	goto	u4820
  3968     0882                     u4821:
  3969     0882  288E               	goto	l3353
  3970     0883                     u4820:
  3971     0883                     l3351:
  3972     0883  1683               	bsf	3,5	;RP0=1, select bank1
  3973     0884  1303               	bcf	3,6	;RP1=0, select bank1
  3974     0885  084D               	movf	snprintf@n^(0+128),w
  3975     0886  3EFF               	addlw	255
  3976     0887  00D4               	movwf	_snprintf$715^(0+128)
  3977     0888  084E               	movf	(snprintf@n+1)^(0+128),w
  3978     0889  1803               	skipnc
  3979     088A  3E01               	addlw	1
  3980     088B  3EFF               	addlw	255
  3981     088C  00D5               	movwf	(_snprintf$715+1)^(0+128)
  3982     088D  2894               	goto	l3355
  3983     088E                     l3353:
  3984     088E  1683               	bsf	3,5	;RP0=1, select bank1
  3985     088F  1303               	bcf	3,6	;RP1=0, select bank1
  3986     0890  0858               	movf	(snprintf@cnt+1)^(0+128),w
  3987     0891  00D5               	movwf	(_snprintf$715+1)^(0+128)
  3988     0892  0857               	movf	snprintf@cnt^(0+128),w
  3989     0893  00D4               	movwf	_snprintf$715^(0+128)
  3990     0894                     l3355:
  3991     0894  0854               	movf	_snprintf$715^(0+128),w
  3992     0895  074C               	addwf	snprintf@s^(0+128),w
  3993     0896  1283               	bcf	3,5	;RP0=0, select bank0
  3994     0897  1303               	bcf	3,6	;RP1=0, select bank0
  3995     0898  00ED               	movwf	??_snprintf
  3996     0899  086D               	movf	??_snprintf,w
  3997     089A  0084               	movwf	4
  3998     089B  1783               	bsf	3,7	;select IRP bank2
  3999     089C  0180               	clrf	0
  4000     089D                     l703:
  4001     089D  0008               	return
  4002     089E                     __end_of_snprintf:
  4003                           
  4004                           	psect	text11
  4005     1003                     __ptext11:	
  4006 ;; *************** function _vfprintf *****************
  4007 ;; Defined at:
  4008 ;;		line 1817 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  4011 ;;		 -> snprintf@f(11), 
  4012 ;;  fmt             1   74[BANK0 ] PTR const unsigned char 
  4013 ;;		 -> STR_19(3), 
  4014 ;;  ap              1   75[BANK0 ] PTR PTR void 
  4015 ;;		 -> snprintf@ap(1), 
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  cfmt            1   76[BANK0 ] PTR unsigned char 
  4018 ;;		 -> STR_19(3), 
  4019 ;; Return value:  Size  Location     Type
  4020 ;;                  2   72[BANK0 ] int 
  4021 ;; Registers used:
  4022 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4023 ;; Tracked objects:
  4024 ;;		On entry : 0/0
  4025 ;;		On exit  : 0/0
  4026 ;;		Unchanged: 0/0
  4027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4028 ;;      Params:         0       4       0       0       0
  4029 ;;      Locals:         0       1       0       0       0
  4030 ;;      Temps:          0       0       0       0       0
  4031 ;;      Totals:         0       5       0       0       0
  4032 ;;Total ram usage:        5 bytes
  4033 ;; Hardware stack levels used: 1
  4034 ;; Hardware stack levels required when called: 6
  4035 ;; This function calls:
  4036 ;;		_vfpfcnvrt
  4037 ;; This function is called by:
  4038 ;;		_snprintf
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042     1003                     _vfprintf:	
  4043                           ;psect for function _vfprintf
  4044                           
  4045     1003                     l3293:	
  4046                           ;incstack = 0
  4047 ;; hardware stack exceeded
  4048                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4049                           
  4050                           
  4051                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprintf(FILE
      +                           *fp, const char *fmt, va_list ap);c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1818: {;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1820:
      +                               char *cfmt;;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1822:  
      +                             cfmt = (char *)fmt;
  4052     1003  1283               	bcf	3,5	;RP0=0, select bank0
  4053     1004  1303               	bcf	3,6	;RP1=0, select bank0
  4054     1005  086A               	movf	vfprintf@fmt,w
  4055     1006  00EC               	movwf	vfprintf@cfmt
  4056     1007                     l3295:
  4057                           
  4058                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1824:     nout = 0;
  4059     1007  1683               	bsf	3,5	;RP0=1, select bank3
  4060     1008  1703               	bsf	3,6	;RP1=1, select bank3
  4061     1009  01A0               	clrf	_nout^(0+384)
  4062     100A  01A1               	clrf	(_nout+1)^(0+384)
  4063                           
  4064                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt)
      +                           {
  4065     100B  2827               	goto	l3299
  4066     100C                     l3297:
  4067                           
  4068                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1828:         nout +=
  4069     100C  0868               	movf	vfprintf@fp,w
  4070     100D  00DC               	movwf	vfpfcnvrt@fp
  4071     100E  0869               	movf	vfprintf@fp+1,w
  4072     100F  00DD               	movwf	vfpfcnvrt@fp+1
  4073     1010  306C               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4074     1011  00DE               	movwf	vfpfcnvrt@fmt
  4075     1012  086B               	movf	vfprintf@ap,w
  4076     1013  00DF               	movwf	vfpfcnvrt@ap
  4077     1014  160A  118A  2042  160A  118A  	fcall	_vfpfcnvrt
  4078     1019  1283               	bcf	3,5	;RP0=0, select bank0
  4079     101A  1303               	bcf	3,6	;RP1=0, select bank0
  4080     101B  085C               	movf	?_vfpfcnvrt,w
  4081     101C  1683               	bsf	3,5	;RP0=1, select bank3
  4082     101D  1703               	bsf	3,6	;RP1=1, select bank3
  4083     101E  07A0               	addwf	_nout^(0+384),f
  4084     101F  1803               	skipnc
  4085     1020  0AA1               	incf	(_nout+1)^(0+384),f
  4086     1021  1283               	bcf	3,5	;RP0=0, select bank0
  4087     1022  1303               	bcf	3,6	;RP1=0, select bank0
  4088     1023  085D               	movf	?_vfpfcnvrt+1,w
  4089     1024  1683               	bsf	3,5	;RP0=1, select bank3
  4090     1025  1703               	bsf	3,6	;RP1=1, select bank3
  4091     1026  07A1               	addwf	(_nout+1)^(0+384),f
  4092     1027                     l3299:
  4093                           
  4094                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt)
      +                           {
  4095     1027  1283               	bcf	3,5	;RP0=0, select bank0
  4096     1028  1303               	bcf	3,6	;RP1=0, select bank0
  4097     1029  086C               	movf	vfprintf@cfmt,w
  4098     102A  0084               	movwf	4
  4099     102B  160A  158A  200A  160A  118A  	fcall	stringdir
  4100     1030  3A00               	xorlw	0
  4101     1031  1D03               	skipz
  4102     1032  2834               	goto	u4761
  4103     1033  2835               	goto	u4760
  4104     1034                     u4761:
  4105     1034  280C               	goto	l3297
  4106     1035                     u4760:
  4107     1035                     l3301:
  4108                           
  4109                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1833:     return nout;
  4110     1035  1683               	bsf	3,5	;RP0=1, select bank3
  4111     1036  1703               	bsf	3,6	;RP1=1, select bank3
  4112     1037  0821               	movf	(_nout+1)^(0+384),w
  4113     1038  1283               	bcf	3,5	;RP0=0, select bank0
  4114     1039  1303               	bcf	3,6	;RP1=0, select bank0
  4115     103A  00E9               	movwf	?_vfprintf+1
  4116     103B  1683               	bsf	3,5	;RP0=1, select bank3
  4117     103C  1703               	bsf	3,6	;RP1=1, select bank3
  4118     103D  0820               	movf	_nout^(0+384),w
  4119     103E  1283               	bcf	3,5	;RP0=0, select bank0
  4120     103F  1303               	bcf	3,6	;RP1=0, select bank0
  4121     1040  00E8               	movwf	?_vfprintf
  4122     1041                     l823:
  4123     1041  0008               	return
  4124     1042                     __end_of_vfprintf:
  4125                           
  4126                           	psect	text12
  4127     1042                     __ptext12:	
  4128 ;; *************** function _vfpfcnvrt *****************
  4129 ;; Defined at:
  4130 ;;		line 1177 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;  fp              2   60[BANK0 ] PTR struct _IO_FILE
  4133 ;;		 -> snprintf@f(11), 
  4134 ;;  fmt             1   62[BANK0 ] PTR PTR unsigned char 
  4135 ;;		 -> vfprintf@cfmt(1), 
  4136 ;;  ap              1   63[BANK0 ] PTR PTR void 
  4137 ;;		 -> snprintf@ap(1), 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  convarg         4   66[BANK0 ] struct .
  4140 ;;  cp              1   71[BANK0 ] PTR unsigned char 
  4141 ;;		 -> STR_19(3), 
  4142 ;;  c               1   70[BANK0 ] unsigned char 
  4143 ;;  done            1    0        _Bool 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  2   60[BANK0 ] int 
  4146 ;; Registers used:
  4147 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4153 ;;      Params:         0       4       0       0       0
  4154 ;;      Locals:         0       6       0       0       0
  4155 ;;      Temps:          0       2       0       0       0
  4156 ;;      Totals:         0      12       0       0       0
  4157 ;;Total ram usage:       12 bytes
  4158 ;; Hardware stack levels used: 1
  4159 ;; Hardware stack levels required when called: 5
  4160 ;; This function calls:
  4161 ;;		_efgtoa
  4162 ;;		_fputc
  4163 ;; This function is called by:
  4164 ;;		_vfprintf
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168     1042                     _vfpfcnvrt:	
  4169                           ;psect for function _vfpfcnvrt
  4170                           
  4171     1042                     l3233:	
  4172                           ;incstack = 0
  4173 ;; hardware stack exceeded
  4174                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4175                           
  4176                           
  4177                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(FILE *f
      +                          p, char *fmt[], va_list ap);c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt
      +                          .c: 1178: {;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1179:     ch
      +                          ar c, *cp;;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1180:     _Bo
      +                          ol done;;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1188:  } convar
      +                          g;;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1201:     if ((*fmt)[
      +                          0] == '%') {
  4178     1042  1283               	bcf	3,5	;RP0=0, select bank0
  4179     1043  1303               	bcf	3,6	;RP1=0, select bank0
  4180     1044  085E               	movf	vfpfcnvrt@fmt,w
  4181     1045  0084               	movwf	4
  4182     1046  1383               	bcf	3,7	;select IRP bank0
  4183     1047  0800               	movf	0,w
  4184     1048  0084               	movwf	4
  4185     1049  160A  158A  200A  160A  118A  	fcall	stringdir
  4186     104E  3A25               	xorlw	37
  4187     104F  1D03               	skipz
  4188     1050  2852               	goto	u4741
  4189     1051  2853               	goto	u4740
  4190     1052                     u4741:
  4191     1052  28F8               	goto	l3279
  4192     1053                     u4740:
  4193     1053                     l3235:
  4194                           
  4195                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*fmt;
  4196     1053  085E               	movf	vfpfcnvrt@fmt,w
  4197     1054  0084               	movwf	4
  4198     1055  3001               	movlw	1
  4199     1056  0780               	addwf	0,f
  4200     1057                     l3237:
  4201                           
  4202                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         flags = w
      +                          idth = 0;
  4203     1057  1683               	bsf	3,5	;RP0=1, select bank1
  4204     1058  1303               	bcf	3,6	;RP1=0, select bank1
  4205     1059  01EB               	clrf	_width^(0+128)
  4206     105A  01EC               	clrf	(_width+1)^(0+128)
  4207     105B  3000               	movlw	0
  4208     105C  00EF               	movwf	_flags^(0+128)
  4209     105D                     l3239:
  4210                           
  4211                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         prec = -1
      +                          ;
  4212     105D  30FF               	movlw	255
  4213     105E  00ED               	movwf	_prec^(0+128)
  4214     105F  30FF               	movlw	255
  4215     1060  00EE               	movwf	(_prec^(0+128)+1)
  4216     1061                     l3241:
  4217                           
  4218                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt;
  4219     1061  1283               	bcf	3,5	;RP0=0, select bank0
  4220     1062  1303               	bcf	3,6	;RP1=0, select bank0
  4221     1063  085E               	movf	vfpfcnvrt@fmt,w
  4222     1064  0084               	movwf	4
  4223     1065  0800               	movf	0,w
  4224     1066  00E7               	movwf	vfpfcnvrt@cp
  4225     1067                     l3243:
  4226                           
  4227                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  4228     1067  0867               	movf	vfpfcnvrt@cp,w
  4229     1068  0084               	movwf	4
  4230     1069  160A  158A  200A  160A  118A  	fcall	stringdir
  4231     106E  00E6               	movwf	vfpfcnvrt@c
  4232                           
  4233                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c) {
  4234     106F  2878               	goto	l3251
  4235     1070                     l3245:
  4236                           
  4237                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  4238     1070  3001               	movlw	1
  4239     1071  07E7               	addwf	vfpfcnvrt@cp,f
  4240                           
  4241                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  4242     1072  2883               	goto	l3253
  4243     1073                     l805:	
  4244                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1710:    case 'f':
  4245                           
  4246                           
  4247                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l';
  4248     1073  306C               	movlw	108
  4249     1074  00E6               	movwf	vfpfcnvrt@c
  4250                           
  4251                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  4252     1075  2883               	goto	l3253
  4253     1076                     l3247:
  4254                           
  4255                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  4256     1076  01E6               	clrf	vfpfcnvrt@c
  4257                           
  4258                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  4259     1077  2883               	goto	l3253
  4260     1078                     l3251:
  4261     1078  0866               	movf	vfpfcnvrt@c,w
  4262                           
  4263                           ; Switch size 1, requested type "simple"
  4264                           ; Number of cases is 3, Range of values is 76 to 108
  4265                           ; switch strategies available:
  4266                           ; Name         Instructions Cycles
  4267                           ; simple_byte           10     6 (average)
  4268                           ; direct_byte          110    11 (fixed)
  4269                           ; jumptable            263     9 (fixed)
  4270                           ;	Chosen strategy is simple_byte
  4271     1079  3A4C               	xorlw	76	; case 76
  4272     107A  1903               	skipnz
  4273     107B  2870               	goto	l3245
  4274     107C  3A2A               	xorlw	42	; case 102
  4275     107D  1903               	skipnz
  4276     107E  2873               	goto	l805
  4277     107F  3A0A               	xorlw	10	; case 108
  4278     1080  1903               	skipnz
  4279     1081  2870               	goto	l3245
  4280     1082  2876               	goto	l3247
  4281     1083                     l3253:
  4282     1083  0867               	movf	vfpfcnvrt@cp,w
  4283     1084  0084               	movwf	4
  4284     1085  160A  158A  200A  160A  118A  	fcall	stringdir
  4285     108A  3A66               	xorlw	102
  4286     108B  1D03               	skipz
  4287     108C  288E               	goto	u4751
  4288     108D  288F               	goto	u4750
  4289     108E                     u4751:
  4290     108E  28F1               	goto	l3273
  4291     108F                     u4750:
  4292     108F  28B8               	goto	l3261
  4293     1090                     l3255:
  4294                           
  4295                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convarg.f = 
      +                          (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4296     1090  085F               	movf	vfpfcnvrt@ap,w
  4297     1091  0084               	movwf	4
  4298     1092  0800               	movf	0,w
  4299     1093  00FF               	movwf	btemp+1
  4300     1094  3004               	movlw	4
  4301     1095  0780               	addwf	0,f
  4302     1096  087F               	movf	btemp+1,w
  4303     1097  0084               	movwf	4
  4304     1098  0800               	movf	0,w
  4305     1099  00E2               	movwf	vfpfcnvrt@convarg
  4306     109A  0A84               	incf	4,f
  4307     109B  0800               	movf	0,w
  4308     109C  00E3               	movwf	vfpfcnvrt@convarg+1
  4309     109D  0A84               	incf	4,f
  4310     109E  0800               	movf	0,w
  4311     109F  00E4               	movwf	vfpfcnvrt@convarg+2
  4312     10A0  0A84               	incf	4,f
  4313     10A1  0800               	movf	0,w
  4314     10A2  00E5               	movwf	vfpfcnvrt@convarg+3
  4315                           
  4316                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  4317     10A3  28C0               	goto	l3263
  4318     10A4                     l3257:
  4319                           
  4320                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convarg.f = 
      +                          (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4321     10A4  085F               	movf	vfpfcnvrt@ap,w
  4322     10A5  0084               	movwf	4
  4323     10A6  0800               	movf	0,w
  4324     10A7  00FF               	movwf	btemp+1
  4325     10A8  3004               	movlw	4
  4326     10A9  0780               	addwf	0,f
  4327     10AA  087F               	movf	btemp+1,w
  4328     10AB  0084               	movwf	4
  4329     10AC  0800               	movf	0,w
  4330     10AD  00E2               	movwf	vfpfcnvrt@convarg
  4331     10AE  0A84               	incf	4,f
  4332     10AF  0800               	movf	0,w
  4333     10B0  00E3               	movwf	vfpfcnvrt@convarg+1
  4334     10B1  0A84               	incf	4,f
  4335     10B2  0800               	movf	0,w
  4336     10B3  00E4               	movwf	vfpfcnvrt@convarg+2
  4337     10B4  0A84               	incf	4,f
  4338     10B5  0800               	movf	0,w
  4339     10B6  00E5               	movwf	vfpfcnvrt@convarg+3
  4340                           
  4341                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  4342     10B7  28C0               	goto	l3263
  4343     10B8                     l3261:
  4344     10B8  0866               	movf	vfpfcnvrt@c,w
  4345                           
  4346                           ; Switch size 1, requested type "simple"
  4347                           ; Number of cases is 2, Range of values is 76 to 108
  4348                           ; switch strategies available:
  4349                           ; Name         Instructions Cycles
  4350                           ; simple_byte            7     4 (average)
  4351                           ; direct_byte          110    11 (fixed)
  4352                           ; jumptable            263     9 (fixed)
  4353                           ;	Chosen strategy is simple_byte
  4354     10B9  3A4C               	xorlw	76	; case 76
  4355     10BA  1903               	skipnz
  4356     10BB  28A4               	goto	l3257
  4357     10BC  3A20               	xorlw	32	; case 108
  4358     10BD  1903               	skipnz
  4359     10BE  2890               	goto	l3255
  4360     10BF  28C0               	goto	l3263
  4361     10C0                     l3263:
  4362                           
  4363                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = cp+1;
  4364     10C0  085E               	movf	vfpfcnvrt@fmt,w
  4365     10C1  0084               	movwf	4
  4366     10C2  0867               	movf	vfpfcnvrt@cp,w
  4367     10C3  3E01               	addlw	1
  4368     10C4  0080               	movwf	0
  4369                           
  4370                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (*cp) {
  4371     10C5  28E6               	goto	l3271
  4372     10C6                     l3265:
  4373                           
  4374                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return (int)
      +                           efgtoa(fp, convarg.f, *cp);
  4375     10C6  085C               	movf	vfpfcnvrt@fp,w
  4376     10C7  00D1               	movwf	efgtoa@fp
  4377     10C8  085D               	movf	vfpfcnvrt@fp+1,w
  4378     10C9  00D2               	movwf	efgtoa@fp+1
  4379     10CA  0865               	movf	vfpfcnvrt@convarg+3,w
  4380     10CB  00D6               	movwf	efgtoa@f+3
  4381     10CC  0864               	movf	vfpfcnvrt@convarg+2,w
  4382     10CD  00D5               	movwf	efgtoa@f+2
  4383     10CE  0863               	movf	vfpfcnvrt@convarg+1,w
  4384     10CF  00D4               	movwf	efgtoa@f+1
  4385     10D0  0862               	movf	vfpfcnvrt@convarg,w
  4386     10D1  00D3               	movwf	efgtoa@f
  4387     10D2  0867               	movf	vfpfcnvrt@cp,w
  4388     10D3  0084               	movwf	4
  4389     10D4  160A  158A  200A  160A  118A  	fcall	stringdir
  4390     10D9  00D7               	movwf	efgtoa@c
  4391     10DA  160A  118A  222B  160A  118A  	fcall	_efgtoa
  4392     10DF  1283               	bcf	3,5	;RP0=0, select bank0
  4393     10E0  1303               	bcf	3,6	;RP1=0, select bank0
  4394     10E1  0852               	movf	?_efgtoa+1,w
  4395     10E2  00DD               	movwf	?_vfpfcnvrt+1
  4396     10E3  0851               	movf	?_efgtoa,w
  4397     10E4  00DC               	movwf	?_vfpfcnvrt
  4398     10E5  291B               	goto	l816
  4399     10E6                     l3271:
  4400     10E6  0867               	movf	vfpfcnvrt@cp,w
  4401     10E7  0084               	movwf	4
  4402     10E8  160A  158A  200A  160A  118A  	fcall	stringdir
  4403                           
  4404                           ; Switch size 1, requested type "simple"
  4405                           ; Number of cases is 1, Range of values is 102 to 102
  4406                           ; switch strategies available:
  4407                           ; Name         Instructions Cycles
  4408                           ; simple_byte            4     3 (average)
  4409                           ; direct_byte           14    11 (fixed)
  4410                           ; jumptable            263     9 (fixed)
  4411                           ;	Chosen strategy is simple_byte
  4412     10ED  3A66               	xorlw	102	; case 102
  4413     10EE  1903               	skipnz
  4414     10EF  28C6               	goto	l3265
  4415     10F0  28F1               	goto	l3273
  4416     10F1                     l3273:
  4417                           
  4418                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*fmt;
  4419     10F1  085E               	movf	vfpfcnvrt@fmt,w
  4420     10F2  0084               	movwf	4
  4421     10F3  3001               	movlw	1
  4422     10F4  0780               	addwf	0,f
  4423     10F5                     l3275:
  4424                           
  4425                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1807:         return (i
      +                          nt) 0;
  4426     10F5  01DC               	clrf	?_vfpfcnvrt
  4427     10F6  01DD               	clrf	?_vfpfcnvrt+1
  4428     10F7  291B               	goto	l816
  4429     10F8                     l3279:
  4430                           
  4431                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((int)(*
      +                          fmt)[0], fp);
  4432     10F8  085E               	movf	vfpfcnvrt@fmt,w
  4433     10F9  0084               	movwf	4
  4434     10FA  0800               	movf	0,w
  4435     10FB  0084               	movwf	4
  4436     10FC  160A  158A  200A  160A  118A  	fcall	stringdir
  4437     1101  00E0               	movwf	??_vfpfcnvrt
  4438     1102  01E1               	clrf	??_vfpfcnvrt+1
  4439     1103  0860               	movf	??_vfpfcnvrt,w
  4440     1104  00F0               	movwf	fputc@c
  4441     1105  0861               	movf	??_vfpfcnvrt+1,w
  4442     1106  00F1               	movwf	fputc@c+1
  4443     1107  085C               	movf	vfpfcnvrt@fp,w
  4444     1108  00F2               	movwf	fputc@fp
  4445     1109  085D               	movf	vfpfcnvrt@fp+1,w
  4446     110A  00F3               	movwf	fputc@fp+1
  4447     110B  160A  158A  26B2  160A  118A  	fcall	_fputc
  4448     1110                     l3281:
  4449                           
  4450                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  4451     1110  1283               	bcf	3,5	;RP0=0, select bank0
  4452     1111  1303               	bcf	3,6	;RP1=0, select bank0
  4453     1112  085E               	movf	vfpfcnvrt@fmt,w
  4454     1113  0084               	movwf	4
  4455     1114  3001               	movlw	1
  4456     1115  1383               	bcf	3,7	;select IRP bank0
  4457     1116  0780               	addwf	0,f
  4458     1117                     l3283:
  4459                           
  4460                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1813:     return (int) 
      +                          1;
  4461     1117  3001               	movlw	1
  4462     1118  00DC               	movwf	?_vfpfcnvrt
  4463     1119  3000               	movlw	0
  4464     111A  00DD               	movwf	?_vfpfcnvrt+1
  4465     111B                     l816:
  4466     111B  0008               	return
  4467     111C                     __end_of_vfpfcnvrt:
  4468                           
  4469                           	psect	text13
  4470     122B                     __ptext13:	
  4471 ;; *************** function _efgtoa *****************
  4472 ;; Defined at:
  4473 ;;		line 587 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  fp              2   49[BANK0 ] PTR struct _IO_FILE
  4476 ;;		 -> snprintf@f(11), 
  4477 ;;  f               4   51[BANK0 ] PTR struct _IO_FILE
  4478 ;;  c               1   55[BANK0 ] unsigned char 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;  u               4   40[BANK1 ] struct flui
  4481 ;;  g               4   36[BANK1 ] struct flui
  4482 ;;  l               4   29[BANK1 ] struct flui
  4483 ;;  h               4   25[BANK1 ] struct flui
  4484 ;;  ou              4   19[BANK1 ] struct flui
  4485 ;;  n               2   34[BANK1 ] int 
  4486 ;;  i               2   23[BANK1 ] int 
  4487 ;;  w               2   17[BANK1 ] int 
  4488 ;;  e               2   15[BANK1 ] int 
  4489 ;;  m               2   13[BANK1 ] int 
  4490 ;;  d               2   11[BANK1 ] int 
  4491 ;;  t               2    4[BANK1 ] int 
  4492 ;;  p               2    2[BANK1 ] int 
  4493 ;;  ne              2    0[BANK1 ] int 
  4494 ;;  sign            1   33[BANK1 ] unsigned char 
  4495 ;;  nmode           1   10[BANK1 ] unsigned char 
  4496 ;;  mode            1    9[BANK1 ] unsigned char 
  4497 ;;  pp              1    8[BANK1 ] unsigned char 
  4498 ;;  esign           1    0        unsigned char 
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  2   49[BANK0 ] int 
  4501 ;; Registers used:
  4502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4508 ;;      Params:         0       7       0       0       0
  4509 ;;      Locals:         0       0      44       0       0
  4510 ;;      Temps:          0       4       0       0       0
  4511 ;;      Totals:         0      11      44       0       0
  4512 ;;Total ram usage:       55 bytes
  4513 ;; Hardware stack levels used: 1
  4514 ;; Hardware stack levels required when called: 4
  4515 ;; This function calls:
  4516 ;;		___fladd
  4517 ;;		___fldiv
  4518 ;;		___fleq
  4519 ;;		___flge
  4520 ;;		___flmul
  4521 ;;		___flneg
  4522 ;;		___flsub
  4523 ;;		___fltol
  4524 ;;		___fpclassifyf
  4525 ;;		_floorf
  4526 ;;		_labs
  4527 ;;		_memcpy
  4528 ;;		_pad
  4529 ;;		_strcpy
  4530 ;; This function is called by:
  4531 ;;		_vfpfcnvrt
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535     122B                     _efgtoa:	
  4536                           ;psect for function _efgtoa
  4537                           
  4538     122B                     l3023:	
  4539                           ;incstack = 0
  4540 ;; hardware stack exceeded
  4541                           ; Regs used in _efgtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4542                           
  4543                           
  4544                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static int efgtoa(
      +                          FILE *fp, long double f, char c);c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\d
      +                          oprnt.c: 588: {;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 589:    
      +                           char mode, nmode, pp, sign, esign;;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\
      +                          sources\c99\common\doprnt.c: 591:     long double h, l;;c:\PROGRA~1\MICROC~1\xc8\v3.00\p
      +                          ic\sources\c99\common\doprnt.c: 592:  union flui g, u, ou;
  4545     122B  1683               	bsf	3,5	;RP0=1, select bank1
  4546     122C  1303               	bcf	3,6	;RP1=0, select bank1
  4547     122D  01C1               	clrf	efgtoa@sign^(0+128)
  4548     122E                     l3025:
  4549                           
  4550                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  4551     122E  1283               	bcf	3,5	;RP0=0, select bank0
  4552     122F  1303               	bcf	3,6	;RP1=0, select bank0
  4553     1230  0856               	movf	efgtoa@f+3,w
  4554     1231  1683               	bsf	3,5	;RP0=1, select bank1
  4555     1232  1303               	bcf	3,6	;RP1=0, select bank1
  4556     1233  00C7               	movwf	(efgtoa@g+3)^(0+128)
  4557     1234  1283               	bcf	3,5	;RP0=0, select bank0
  4558     1235  1303               	bcf	3,6	;RP1=0, select bank0
  4559     1236  0855               	movf	efgtoa@f+2,w
  4560     1237  1683               	bsf	3,5	;RP0=1, select bank1
  4561     1238  1303               	bcf	3,6	;RP1=0, select bank1
  4562     1239  00C6               	movwf	(efgtoa@g+2)^(0+128)
  4563     123A  1283               	bcf	3,5	;RP0=0, select bank0
  4564     123B  1303               	bcf	3,6	;RP1=0, select bank0
  4565     123C  0854               	movf	efgtoa@f+1,w
  4566     123D  1683               	bsf	3,5	;RP0=1, select bank1
  4567     123E  1303               	bcf	3,6	;RP1=0, select bank1
  4568     123F  00C5               	movwf	(efgtoa@g+1)^(0+128)
  4569     1240  1283               	bcf	3,5	;RP0=0, select bank0
  4570     1241  1303               	bcf	3,6	;RP1=0, select bank0
  4571     1242  0853               	movf	efgtoa@f,w
  4572     1243  1683               	bsf	3,5	;RP0=1, select bank1
  4573     1244  1303               	bcf	3,6	;RP1=0, select bank1
  4574     1245  00C4               	movwf	efgtoa@g^(0+128)
  4575     1246                     l3027:
  4576                           
  4577                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f < 0.0)
      +                           {
  4578     1246  0847               	movf	(efgtoa@g+3)^(0+128),w
  4579     1247  1283               	bcf	3,5	;RP0=0, select bank0
  4580     1248  1303               	bcf	3,6	;RP1=0, select bank0
  4581     1249  00B8               	movwf	___flge@ff1+3
  4582     124A  1683               	bsf	3,5	;RP0=1, select bank1
  4583     124B  1303               	bcf	3,6	;RP1=0, select bank1
  4584     124C  0846               	movf	(efgtoa@g+2)^(0+128),w
  4585     124D  1283               	bcf	3,5	;RP0=0, select bank0
  4586     124E  1303               	bcf	3,6	;RP1=0, select bank0
  4587     124F  00B7               	movwf	___flge@ff1+2
  4588     1250  1683               	bsf	3,5	;RP0=1, select bank1
  4589     1251  1303               	bcf	3,6	;RP1=0, select bank1
  4590     1252  0845               	movf	(efgtoa@g+1)^(0+128),w
  4591     1253  1283               	bcf	3,5	;RP0=0, select bank0
  4592     1254  1303               	bcf	3,6	;RP1=0, select bank0
  4593     1255  00B6               	movwf	___flge@ff1+1
  4594     1256  1683               	bsf	3,5	;RP0=1, select bank1
  4595     1257  1303               	bcf	3,6	;RP1=0, select bank1
  4596     1258  0844               	movf	efgtoa@g^(0+128),w
  4597     1259  1283               	bcf	3,5	;RP0=0, select bank0
  4598     125A  1303               	bcf	3,6	;RP1=0, select bank0
  4599     125B  00B5               	movwf	___flge@ff1
  4600     125C  3000               	movlw	0
  4601     125D  00BC               	movwf	___flge@ff2+3
  4602     125E  3000               	movlw	0
  4603     125F  00BB               	movwf	___flge@ff2+2
  4604     1260  3000               	movlw	0
  4605     1261  00BA               	movwf	___flge@ff2+1
  4606     1262  3000               	movlw	0
  4607     1263  00B9               	movwf	___flge@ff2
  4608     1264  120A  118A  2005  160A  118A  	fcall	___flge
  4609     1269  1803               	btfsc	3,0
  4610     126A  2A6C               	goto	u4391
  4611     126B  2A6D               	goto	u4390
  4612     126C                     u4391:
  4613     126C  2A88               	goto	l3033
  4614     126D                     u4390:
  4615     126D                     l3029:
  4616                           
  4617                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign = 1;
  4618     126D  3001               	movlw	1
  4619     126E  1683               	bsf	3,5	;RP0=1, select bank1
  4620     126F  1303               	bcf	3,6	;RP1=0, select bank1
  4621     1270  00C1               	movwf	efgtoa@sign^(0+128)
  4622     1271                     l3031:
  4623                           
  4624                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f = -g.f
      +                          ;
  4625     1271  0847               	movf	(efgtoa@g+3)^(0+128),w
  4626     1272  00F3               	movwf	___flneg@f1+3
  4627     1273  0846               	movf	(efgtoa@g+2)^(0+128),w
  4628     1274  00F2               	movwf	___flneg@f1+2
  4629     1275  0845               	movf	(efgtoa@g+1)^(0+128),w
  4630     1276  00F1               	movwf	___flneg@f1+1
  4631     1277  0844               	movf	efgtoa@g^(0+128),w
  4632     1278  00F0               	movwf	___flneg@f1
  4633     1279  160A  158A  230C  160A  118A  	fcall	___flneg
  4634     127E  0873               	movf	?___flneg+3,w
  4635     127F  1683               	bsf	3,5	;RP0=1, select bank1
  4636     1280  1303               	bcf	3,6	;RP1=0, select bank1
  4637     1281  00C7               	movwf	(efgtoa@g+3)^(0+128)
  4638     1282  0872               	movf	?___flneg+2,w
  4639     1283  00C6               	movwf	(efgtoa@g+2)^(0+128)
  4640     1284  0871               	movf	?___flneg+1,w
  4641     1285  00C5               	movwf	(efgtoa@g+1)^(0+128)
  4642     1286  0870               	movf	?___flneg,w
  4643     1287  00C4               	movwf	efgtoa@g^(0+128)
  4644     1288                     l3033:
  4645                           
  4646                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  4647     1288  1683               	bsf	3,5	;RP0=1, select bank1
  4648     1289  1303               	bcf	3,6	;RP1=0, select bank1
  4649     128A  01C2               	clrf	efgtoa@n^(0+128)
  4650     128B  01C3               	clrf	(efgtoa@n+1)^(0+128)
  4651     128C                     l3035:
  4652                           
  4653                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = width;
  4654     128C  086C               	movf	(_width+1)^(0+128),w
  4655     128D  00B2               	movwf	(efgtoa@w+1)^(0+128)
  4656     128E  086B               	movf	_width^(0+128),w
  4657     128F  00B1               	movwf	efgtoa@w^(0+128)
  4658     1290                     l3037:
  4659                           
  4660                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  4661     1290  0841               	movf	efgtoa@sign^(0+128),w
  4662     1291  1903               	btfsc	3,2
  4663     1292  2A94               	goto	u4401
  4664     1293  2A95               	goto	u4400
  4665     1294                     u4401:
  4666     1294  2AA5               	goto	l3045
  4667     1295                     u4400:
  4668     1295                     l3039:
  4669                           
  4670                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;c:\PROGRA~1
      +                          \MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-' : '+';
  4671     1295  0841               	movf	efgtoa@sign^(0+128),w
  4672     1296  1D03               	btfss	3,2
  4673     1297  2A99               	goto	u4411
  4674     1298  2A9A               	goto	u4410
  4675     1299                     u4411:
  4676     1299  2A9F               	goto	l3043
  4677     129A                     u4410:
  4678     129A                     l3041:
  4679     129A  302B               	movlw	43
  4680     129B  00A6               	movwf	_efgtoa$802^(0+128)
  4681     129C  3000               	movlw	0
  4682     129D  00A7               	movwf	(_efgtoa$802^(0+128)+1)
  4683     129E  2AA3               	goto	l753
  4684     129F                     l3043:
  4685     129F  302D               	movlw	45
  4686     12A0  00A6               	movwf	_efgtoa$802^(0+128)
  4687     12A1  3000               	movlw	0
  4688     12A2  00A7               	movwf	(_efgtoa$802^(0+128)+1)
  4689     12A3                     l753:
  4690     12A3  0826               	movf	_efgtoa$802^(0+128),w
  4691     12A4  00C1               	movwf	efgtoa@sign^(0+128)
  4692     12A5                     l3045:
  4693                           
  4694                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __fpclas
      +                          sifyf(g.f) == 1 )) {
  4695     12A5  0847               	movf	(efgtoa@g+3)^(0+128),w
  4696     12A6  00F3               	movwf	___fpclassifyf@x+3
  4697     12A7  0846               	movf	(efgtoa@g+2)^(0+128),w
  4698     12A8  00F2               	movwf	___fpclassifyf@x+2
  4699     12A9  0845               	movf	(efgtoa@g+1)^(0+128),w
  4700     12AA  00F1               	movwf	___fpclassifyf@x+1
  4701     12AB  0844               	movf	efgtoa@g^(0+128),w
  4702     12AC  00F0               	movwf	___fpclassifyf@x
  4703     12AD  160A  158A  2625  160A  118A  	fcall	___fpclassifyf
  4704     12B2  0370               	decf	?___fpclassifyf,w
  4705     12B3  0471               	iorwf	?___fpclassifyf+1,w
  4706     12B4  1D03               	btfss	3,2
  4707     12B5  2AB7               	goto	u4421
  4708     12B6  2AB8               	goto	u4420
  4709     12B7                     u4421:
  4710     12B7  2B05               	goto	l3057
  4711     12B8                     u4420:
  4712     12B8                     l3047:
  4713                           
  4714                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) {
  4715     12B8  1683               	bsf	3,5	;RP0=1, select bank1
  4716     12B9  1303               	bcf	3,6	;RP1=0, select bank1
  4717     12BA  0841               	movf	efgtoa@sign^(0+128),w
  4718     12BB  1903               	btfsc	3,2
  4719     12BC  2ABE               	goto	u4431
  4720     12BD  2ABF               	goto	u4430
  4721     12BE                     u4431:
  4722     12BE  2ACF               	goto	l3051
  4723     12BF                     u4430:
  4724     12BF                     l3049:
  4725                           
  4726                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] = sign;
  4727     12BF  0841               	movf	efgtoa@sign^(0+128),w
  4728     12C0  1283               	bcf	3,5	;RP0=0, select bank2
  4729     12C1  1703               	bsf	3,6	;RP1=1, select bank2
  4730     12C2  0090               	movwf	_dbuf^(0+256)
  4731                           
  4732                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  4733     12C3  30FF               	movlw	255
  4734     12C4  1683               	bsf	3,5	;RP0=1, select bank1
  4735     12C5  1303               	bcf	3,6	;RP1=0, select bank1
  4736     12C6  07B1               	addwf	efgtoa@w^(0+128),f
  4737     12C7  1803               	skipnc
  4738     12C8  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  4739     12C9  30FF               	movlw	255
  4740     12CA  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  4741                           
  4742                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  4743     12CB  3001               	movlw	1
  4744     12CC  00C2               	movwf	efgtoa@n^(0+128)
  4745     12CD  3000               	movlw	0
  4746     12CE  00C3               	movwf	(efgtoa@n^(0+128)+1)
  4747     12CF                     l3051:
  4748                           
  4749                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;c:\PROGRA~1\MI
      +                          CROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&dbuf[n], "inf
      +                          ");
  4750     12CF  0842               	movf	efgtoa@n^(0+128),w
  4751     12D0  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4752     12D1  00F0               	movwf	strcpy@dest
  4753     12D2  3001               	movlw	(low ((STR_20-__stringbase)| (0+32768)))& (0+255)
  4754     12D3  00F1               	movwf	strcpy@src
  4755     12D4  3080               	movlw	128
  4756     12D5  00F2               	movwf	strcpy@src+1
  4757     12D6  160A  158A  23A5  160A  118A  	fcall	_strcpy
  4758     12DB                     l3053:
  4759                           
  4760                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };c:\PROGR
      +                          A~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((sizeof("inf"
      +                          )/sizeof("inf"[0]))-1);
  4761     12DB  30FD               	movlw	253
  4762     12DC  1683               	bsf	3,5	;RP0=1, select bank1
  4763     12DD  1303               	bcf	3,6	;RP1=0, select bank1
  4764     12DE  07B1               	addwf	efgtoa@w^(0+128),f
  4765     12DF  1803               	skipnc
  4766     12E0  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  4767     12E1  30FF               	movlw	255
  4768     12E2  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  4769                           
  4770                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         return (in
      +                          t) pad(fp, &dbuf[0], w);
  4771     12E3  1283               	bcf	3,5	;RP0=0, select bank0
  4772     12E4  1303               	bcf	3,6	;RP1=0, select bank0
  4773     12E5  0851               	movf	efgtoa@fp,w
  4774     12E6  00A8               	movwf	pad@fp
  4775     12E7  0852               	movf	efgtoa@fp+1,w
  4776     12E8  00A9               	movwf	pad@fp+1
  4777     12E9  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
  4778     12EA  00AA               	movwf	pad@buf
  4779     12EB  1683               	bsf	3,5	;RP0=1, select bank1
  4780     12EC  1303               	bcf	3,6	;RP1=0, select bank1
  4781     12ED  0832               	movf	(efgtoa@w+1)^(0+128),w
  4782     12EE  1283               	bcf	3,5	;RP0=0, select bank0
  4783     12EF  1303               	bcf	3,6	;RP1=0, select bank0
  4784     12F0  00AC               	movwf	pad@p+1
  4785     12F1  1683               	bsf	3,5	;RP0=1, select bank1
  4786     12F2  1303               	bcf	3,6	;RP1=0, select bank1
  4787     12F3  0831               	movf	efgtoa@w^(0+128),w
  4788     12F4  1283               	bcf	3,5	;RP0=0, select bank0
  4789     12F5  1303               	bcf	3,6	;RP1=0, select bank0
  4790     12F6  00AB               	movwf	pad@p
  4791     12F7  160A  158A  24E7  160A  118A  	fcall	_pad
  4792     12FC  1283               	bcf	3,5	;RP0=0, select bank0
  4793     12FD  1303               	bcf	3,6	;RP1=0, select bank0
  4794     12FE  0829               	movf	?_pad+1,w
  4795     12FF  00D2               	movwf	?_efgtoa+1
  4796     1300  0828               	movf	?_pad,w
  4797     1301  00D1               	movwf	?_efgtoa
  4798     1302  120A  118A  2FE3   	goto	l756
  4799     1305                     l3057:
  4800                           
  4801                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __fpclas
      +                          sifyf(g.f) == 0 )) {
  4802     1305  1683               	bsf	3,5	;RP0=1, select bank1
  4803     1306  1303               	bcf	3,6	;RP1=0, select bank1
  4804     1307  0847               	movf	(efgtoa@g+3)^(0+128),w
  4805     1308  00F3               	movwf	___fpclassifyf@x+3
  4806     1309  0846               	movf	(efgtoa@g+2)^(0+128),w
  4807     130A  00F2               	movwf	___fpclassifyf@x+2
  4808     130B  0845               	movf	(efgtoa@g+1)^(0+128),w
  4809     130C  00F1               	movwf	___fpclassifyf@x+1
  4810     130D  0844               	movf	efgtoa@g^(0+128),w
  4811     130E  00F0               	movwf	___fpclassifyf@x
  4812     130F  160A  158A  2625  160A  118A  	fcall	___fpclassifyf
  4813     1314  0870               	movf	?___fpclassifyf,w
  4814     1315  0471               	iorwf	?___fpclassifyf+1,w
  4815     1316  1D03               	btfss	3,2
  4816     1317  2B19               	goto	u4441
  4817     1318  2B1C               	goto	u4440
  4818     1319                     u4441:
  4819     1319  120A  118A  28A9   	goto	l3069
  4820     131C                     u4440:
  4821     131C                     l3059:
  4822                           
  4823                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) {
  4824     131C  1683               	bsf	3,5	;RP0=1, select bank1
  4825     131D  1303               	bcf	3,6	;RP1=0, select bank1
  4826     131E  0841               	movf	efgtoa@sign^(0+128),w
  4827     131F  1903               	btfsc	3,2
  4828     1320  2B22               	goto	u4451
  4829     1321  2B23               	goto	u4450
  4830     1322                     u4451:
  4831     1322  2B33               	goto	l3063
  4832     1323                     u4450:
  4833     1323                     l3061:
  4834                           
  4835                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] = sign;
  4836     1323  0841               	movf	efgtoa@sign^(0+128),w
  4837     1324  1283               	bcf	3,5	;RP0=0, select bank2
  4838     1325  1703               	bsf	3,6	;RP1=1, select bank2
  4839     1326  0090               	movwf	_dbuf^(0+256)
  4840                           
  4841                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  4842     1327  30FF               	movlw	255
  4843     1328  1683               	bsf	3,5	;RP0=1, select bank1
  4844     1329  1303               	bcf	3,6	;RP1=0, select bank1
  4845     132A  07B1               	addwf	efgtoa@w^(0+128),f
  4846     132B  1803               	skipnc
  4847     132C  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  4848     132D  30FF               	movlw	255
  4849     132E  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  4850                           
  4851                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  4852     132F  3001               	movlw	1
  4853     1330  00C2               	movwf	efgtoa@n^(0+128)
  4854     1331  3000               	movlw	0
  4855     1332  00C3               	movwf	(efgtoa@n^(0+128)+1)
  4856     1333                     l3063:
  4857                           
  4858                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;c:\PROGRA~1\MI
      +                          CROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&dbuf[n], "nan
      +                          ");
  4859     1333  0842               	movf	efgtoa@n^(0+128),w
  4860     1334  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4861     1335  00F0               	movwf	strcpy@dest
  4862     1336  3005               	movlw	(low ((STR_23-__stringbase)| (0+32768)))& (0+255)
  4863     1337  00F1               	movwf	strcpy@src
  4864     1338  3080               	movlw	128
  4865     1339  00F2               	movwf	strcpy@src+1
  4866     133A  160A  158A  23A5  160A  118A  	fcall	_strcpy
  4867     133F  2ADB               	goto	l3053
  4868                           
  4869                           	psect	text14
  4870     1BA5                     __ptext14:	
  4871 ;; *************** function _strcpy *****************
  4872 ;; Defined at:
  4873 ;;		line 3 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;  dest            1    0[COMMON] PTR unsigned char 
  4876 ;;		 -> dbuf(80), main@output(16), 
  4877 ;;  src             2    1[COMMON] PTR const unsigned char 
  4878 ;;		 -> STR_23(4), STR_20(4), calculate@result(16), STR_18(1), 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  d               1    5[COMMON] PTR unsigned char 
  4881 ;;		 -> dbuf(80), main@output(16), 
  4882 ;; Return value:  Size  Location     Type
  4883 ;;                  1    0[COMMON] PTR unsigned char 
  4884 ;; Registers used:
  4885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4886 ;; Tracked objects:
  4887 ;;		On entry : 0/0
  4888 ;;		On exit  : 0/0
  4889 ;;		Unchanged: 0/0
  4890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4891 ;;      Params:         3       0       0       0       0
  4892 ;;      Locals:         1       0       0       0       0
  4893 ;;      Temps:          2       0       0       0       0
  4894 ;;      Totals:         6       0       0       0       0
  4895 ;;Total ram usage:        6 bytes
  4896 ;; Hardware stack levels used: 2
  4897 ;; This function calls:
  4898 ;;		Nothing
  4899 ;; This function is called by:
  4900 ;;		_main
  4901 ;;		_efgtoa
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905     1BA5                     _strcpy:	
  4906                           ;psect for function _strcpy
  4907                           
  4908     1BA5                     l2565:	
  4909                           ;incstack = 0
  4910                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4911                           
  4912     1BA5  0870               	movf	strcpy@dest,w
  4913     1BA6  00F5               	movwf	strcpy@d
  4914     1BA7                     l2567:
  4915     1BA7  0872               	movf	strcpy@src+1,w
  4916     1BA8  00F4               	movwf	??_strcpy+1
  4917     1BA9  0871               	movf	strcpy@src,w
  4918     1BAA  00F3               	movwf	??_strcpy
  4919     1BAB  0AF1               	incf	strcpy@src,f
  4920     1BAC  1903               	skipnz
  4921     1BAD  0AF2               	incf	strcpy@src+1,f
  4922     1BAE  0874               	movf	??_strcpy+1,w
  4923     1BAF  1283               	bcf	3,5	;RP0=0, select bank0
  4924     1BB0  1303               	bcf	3,6	;RP1=0, select bank0
  4925     1BB1  00FF               	movwf	btemp+1
  4926     1BB2  0873               	movf	??_strcpy,w
  4927     1BB3  0084               	movwf	4
  4928     1BB4  160A  158A  2000  160A  158A  	fcall	stringtab
  4929     1BB9  00FF               	movwf	btemp+1
  4930     1BBA  0875               	movf	strcpy@d,w
  4931     1BBB  0AF5               	incf	strcpy@d,f
  4932     1BBC  0084               	movwf	4
  4933     1BBD  087F               	movf	btemp+1,w
  4934     1BBE  1783               	bsf	3,7	;select IRP bank2
  4935     1BBF  0080               	movwf	0
  4936     1BC0  0800               	movf	0,w
  4937     1BC1  1D03               	btfss	3,2
  4938     1BC2  2BC4               	goto	u3261
  4939     1BC3  2BC5               	goto	u3260
  4940     1BC4                     u3261:
  4941     1BC4  2BA7               	goto	l2567
  4942     1BC5                     u3260:
  4943     1BC5                     l891:
  4944     1BC5  0008               	return
  4945     1BC6                     __end_of_strcpy:
  4946                           
  4947                           	psect	text15
  4948     1CE7                     __ptext15:	
  4949 ;; *************** function _pad *****************
  4950 ;; Defined at:
  4951 ;;		line 193 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;  fp              2    8[BANK0 ] PTR struct _IO_FILE
  4954 ;;		 -> snprintf@f(11), 
  4955 ;;  buf             1   10[BANK0 ] PTR unsigned char 
  4956 ;;		 -> dbuf(80), 
  4957 ;;  p               2   11[BANK0 ] int 
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;  i               2   13[BANK0 ] int 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  2    8[BANK0 ] int 
  4962 ;; Registers used:
  4963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4969 ;;      Params:         0       5       0       0       0
  4970 ;;      Locals:         0       2       0       0       0
  4971 ;;      Temps:          1       0       0       0       0
  4972 ;;      Totals:         1       7       0       0       0
  4973 ;;Total ram usage:        8 bytes
  4974 ;; Hardware stack levels used: 1
  4975 ;; Hardware stack levels required when called: 3
  4976 ;; This function calls:
  4977 ;;		_fputc
  4978 ;;		_fputs
  4979 ;;		_strlen
  4980 ;; This function is called by:
  4981 ;;		_efgtoa
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985     1CE7                     _pad:	
  4986                           ;psect for function _pad
  4987                           
  4988     1CE7                     l2937:	
  4989                           ;incstack = 0
  4990 ;; hardware stack exceeded
  4991                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4992                           
  4993                           
  4994                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static int pad(FIL
      +                          E *fp, char *buf, int p);c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           194: {;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 195:     int i;;
      +                          c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) {
  4995     1CE7  1283               	bcf	3,5	;RP0=0, select bank0
  4996     1CE8  1303               	bcf	3,6	;RP1=0, select bank0
  4997     1CE9  1FAC               	btfss	pad@p+1,7
  4998     1CEA  2CEC               	goto	u4151
  4999     1CEB  2CED               	goto	u4150
  5000     1CEC                     u4151:
  5001     1CEC  2CEF               	goto	l741
  5002     1CED                     u4150:
  5003     1CED                     l2939:
  5004                           
  5005                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  5006     1CED  01AB               	clrf	pad@p
  5007     1CEE  01AC               	clrf	pad@p+1
  5008     1CEF                     l741:	
  5009                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 207:  }
  5010                           
  5011                           
  5012                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  5013     1CEF  01AD               	clrf	pad@i
  5014     1CF0  01AE               	clrf	pad@i+1
  5015                           
  5016                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i < p) 
      +                          {
  5017     1CF1  2D09               	goto	l2945
  5018     1CF2                     l2941:
  5019                           
  5020                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fputc(' ',
      +                           fp);
  5021     1CF2  3020               	movlw	32
  5022     1CF3  00F0               	movwf	fputc@c
  5023     1CF4  3000               	movlw	0
  5024     1CF5  00F1               	movwf	fputc@c+1
  5025     1CF6  1283               	bcf	3,5	;RP0=0, select bank0
  5026     1CF7  1303               	bcf	3,6	;RP1=0, select bank0
  5027     1CF8  0828               	movf	pad@fp,w
  5028     1CF9  00F2               	movwf	fputc@fp
  5029     1CFA  0829               	movf	pad@fp+1,w
  5030     1CFB  00F3               	movwf	fputc@fp+1
  5031     1CFC  160A  158A  26B2  160A  158A  	fcall	_fputc
  5032     1D01                     l2943:
  5033                           
  5034                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  5035     1D01  3001               	movlw	1
  5036     1D02  1283               	bcf	3,5	;RP0=0, select bank0
  5037     1D03  1303               	bcf	3,6	;RP1=0, select bank0
  5038     1D04  07AD               	addwf	pad@i,f
  5039     1D05  1803               	skipnc
  5040     1D06  0AAE               	incf	pad@i+1,f
  5041     1D07  3000               	movlw	0
  5042     1D08  07AE               	addwf	pad@i+1,f
  5043     1D09                     l2945:
  5044                           
  5045                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i < p) 
      +                          {
  5046     1D09  082E               	movf	pad@i+1,w
  5047     1D0A  3A80               	xorlw	128
  5048     1D0B  00FD               	movwf	??_pad
  5049     1D0C  082C               	movf	pad@p+1,w
  5050     1D0D  3A80               	xorlw	128
  5051     1D0E  027D               	subwf	??_pad,w
  5052     1D0F  1D03               	skipz
  5053     1D10  2D13               	goto	u4165
  5054     1D11  082B               	movf	pad@p,w
  5055     1D12  022D               	subwf	pad@i,w
  5056     1D13                     u4165:
  5057     1D13  1C03               	skipc
  5058     1D14  2D16               	goto	u4161
  5059     1D15  2D17               	goto	u4160
  5060     1D16                     u4161:
  5061     1D16  2CF2               	goto	l2941
  5062     1D17                     u4160:
  5063     1D17                     l2947:
  5064                           
  5065                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fputs((con
      +                          st char *)buf, fp);
  5066     1D17  1283               	bcf	3,5	;RP0=0, select bank0
  5067     1D18  1303               	bcf	3,6	;RP1=0, select bank0
  5068     1D19  082A               	movf	pad@buf,w
  5069     1D1A  00A0               	movwf	fputs@s
  5070     1D1B  0828               	movf	pad@fp,w
  5071     1D1C  00A1               	movwf	fputs@fp
  5072     1D1D  0829               	movf	pad@fp+1,w
  5073     1D1E  00A2               	movwf	fputs@fp+1
  5074     1D1F  160A  158A  2435  160A  158A  	fcall	_fputs
  5075     1D24                     l2949:
  5076                           
  5077                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 224:     return (int)(s
      +                          trlen(buf) + (size_t)p);
  5078     1D24  1283               	bcf	3,5	;RP0=0, select bank0
  5079     1D25  1303               	bcf	3,6	;RP1=0, select bank0
  5080     1D26  082A               	movf	pad@buf,w
  5081     1D27  00F0               	movwf	strlen@s
  5082     1D28  3001               	movlw	1
  5083     1D29  00F1               	movwf	strlen@s+1
  5084     1D2A  160A  158A  23EA  160A  158A  	fcall	_strlen
  5085     1D2F  1283               	bcf	3,5	;RP0=0, select bank0
  5086     1D30  1303               	bcf	3,6	;RP1=0, select bank0
  5087     1D31  082B               	movf	pad@p,w
  5088     1D32  0770               	addwf	?_strlen,w
  5089     1D33  00A8               	movwf	?_pad
  5090     1D34  082C               	movf	pad@p+1,w
  5091     1D35  1803               	skipnc
  5092     1D36  0A2C               	incf	pad@p+1,w
  5093     1D37  0771               	addwf	?_strlen+1,w
  5094     1D38  00A9               	movwf	?_pad+1
  5095     1D39                     l745:
  5096     1D39  0008               	return
  5097     1D3A                     __end_of_pad:
  5098                           
  5099                           	psect	text16
  5100     1BEA                     __ptext16:	
  5101 ;; *************** function _strlen *****************
  5102 ;; Defined at:
  5103 ;;		line 5 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\strlen.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  s               2    0[COMMON] PTR const unsigned char 
  5106 ;;		 -> dbuf(80), main@output(16), calculate@result(16), STR_17(2), 
  5107 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
  5108 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
  5109 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  5110 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(1), 
  5111 ;; Auto vars:     Size  Location     Type
  5112 ;;  a               2    2[COMMON] PTR const unsigned char 
  5113 ;;		 -> dbuf(80), main@output(16), calculate@result(16), STR_17(2), 
  5114 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
  5115 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
  5116 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  5117 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(1), 
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  2    0[COMMON] unsigned int 
  5120 ;; Registers used:
  5121 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5127 ;;      Params:         2       0       0       0       0
  5128 ;;      Locals:         2       0       0       0       0
  5129 ;;      Temps:          0       0       0       0       0
  5130 ;;      Totals:         4       0       0       0       0
  5131 ;;Total ram usage:        4 bytes
  5132 ;; Hardware stack levels used: 2
  5133 ;; This function calls:
  5134 ;;		Nothing
  5135 ;; This function is called by:
  5136 ;;		_LCDdisplay
  5137 ;;		_getInput
  5138 ;;		_calculate
  5139 ;;		_pad
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143     1BEA                     _strlen:	
  5144                           ;psect for function _strlen
  5145                           
  5146     1BEA                     l2335:	
  5147                           ;incstack = 0
  5148                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5149                           
  5150     1BEA  0870               	movf	strlen@s,w
  5151     1BEB  00F2               	movwf	strlen@a
  5152     1BEC  0871               	movf	strlen@s+1,w
  5153     1BED  00F3               	movwf	strlen@a+1
  5154     1BEE  2BF5               	goto	l2339
  5155     1BEF                     l2337:
  5156     1BEF  3001               	movlw	1
  5157     1BF0  07F0               	addwf	strlen@s,f
  5158     1BF1  1803               	skipnc
  5159     1BF2  0AF1               	incf	strlen@s+1,f
  5160     1BF3  3000               	movlw	0
  5161     1BF4  07F1               	addwf	strlen@s+1,f
  5162     1BF5                     l2339:
  5163     1BF5  0871               	movf	strlen@s+1,w
  5164     1BF6  1283               	bcf	3,5	;RP0=0, select bank0
  5165     1BF7  1303               	bcf	3,6	;RP1=0, select bank0
  5166     1BF8  00FF               	movwf	btemp+1
  5167     1BF9  0870               	movf	strlen@s,w
  5168     1BFA  0084               	movwf	4
  5169     1BFB  160A  158A  2000  160A  158A  	fcall	stringtab
  5170     1C00  3A00               	xorlw	0
  5171     1C01  1D03               	skipz
  5172     1C02  2C04               	goto	u2751
  5173     1C03  2C05               	goto	u2750
  5174     1C04                     u2751:
  5175     1C04  2BEF               	goto	l2337
  5176     1C05                     u2750:
  5177     1C05                     l2341:
  5178     1C05  0872               	movf	strlen@a,w
  5179     1C06  0270               	subwf	strlen@s,w
  5180     1C07  00F0               	movwf	?_strlen
  5181     1C08  0873               	movf	strlen@a+1,w
  5182     1C09  1C03               	skipc
  5183     1C0A  0A73               	incf	strlen@a+1,w
  5184     1C0B  0271               	subwf	strlen@s+1,w
  5185     1C0C  00F1               	movwf	?_strlen+1
  5186     1C0D                     l897:
  5187     1C0D  0008               	return
  5188     1C0E                     __end_of_strlen:
  5189                           
  5190                           	psect	text17
  5191     1C35                     __ptext17:	
  5192 ;; *************** function _fputs *****************
  5193 ;; Defined at:
  5194 ;;		line 8 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  5197 ;;		 -> dbuf(80), 
  5198 ;;  fp              2    1[BANK0 ] PTR struct _IO_FILE
  5199 ;;		 -> snprintf@f(11), 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  i               2    6[BANK0 ] int 
  5202 ;;  c               1    5[BANK0 ] unsigned char 
  5203 ;; Return value:  Size  Location     Type
  5204 ;;                  2    0[BANK0 ] int 
  5205 ;; Registers used:
  5206 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5207 ;; Tracked objects:
  5208 ;;		On entry : 0/0
  5209 ;;		On exit  : 0/0
  5210 ;;		Unchanged: 0/0
  5211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5212 ;;      Params:         0       3       0       0       0
  5213 ;;      Locals:         0       3       0       0       0
  5214 ;;      Temps:          0       2       0       0       0
  5215 ;;      Totals:         0       8       0       0       0
  5216 ;;Total ram usage:        8 bytes
  5217 ;; Hardware stack levels used: 1
  5218 ;; Hardware stack levels required when called: 2
  5219 ;; This function calls:
  5220 ;;		_fputc
  5221 ;; This function is called by:
  5222 ;;		_pad
  5223 ;; This function uses a non-reentrant model
  5224 ;;
  5225                           
  5226     1C35                     _fputs:	
  5227                           ;psect for function _fputs
  5228                           
  5229     1C35                     l2557:	
  5230                           ;incstack = 0
  5231 ;; hardware stack exceeded
  5232                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5233                           
  5234     1C35  1283               	bcf	3,5	;RP0=0, select bank0
  5235     1C36  1303               	bcf	3,6	;RP1=0, select bank0
  5236     1C37  01A6               	clrf	fputs@i
  5237     1C38  01A7               	clrf	fputs@i+1
  5238     1C39  2C52               	goto	l2563
  5239     1C3A                     l2559:
  5240     1C3A  0825               	movf	fputs@c,w
  5241     1C3B  00A3               	movwf	??_fputs
  5242     1C3C  01A4               	clrf	??_fputs+1
  5243     1C3D  0823               	movf	??_fputs,w
  5244     1C3E  00F0               	movwf	fputc@c
  5245     1C3F  0824               	movf	??_fputs+1,w
  5246     1C40  00F1               	movwf	fputc@c+1
  5247     1C41  0821               	movf	fputs@fp,w
  5248     1C42  00F2               	movwf	fputc@fp
  5249     1C43  0822               	movf	fputs@fp+1,w
  5250     1C44  00F3               	movwf	fputc@fp+1
  5251     1C45  160A  158A  26B2  160A  158A  	fcall	_fputc
  5252     1C4A                     l2561:
  5253     1C4A  3001               	movlw	1
  5254     1C4B  1283               	bcf	3,5	;RP0=0, select bank0
  5255     1C4C  1303               	bcf	3,6	;RP1=0, select bank0
  5256     1C4D  07A6               	addwf	fputs@i,f
  5257     1C4E  1803               	skipnc
  5258     1C4F  0AA7               	incf	fputs@i+1,f
  5259     1C50  3000               	movlw	0
  5260     1C51  07A7               	addwf	fputs@i+1,f
  5261     1C52                     l2563:
  5262     1C52  0826               	movf	fputs@i,w
  5263     1C53  0720               	addwf	fputs@s,w
  5264     1C54  00A3               	movwf	??_fputs
  5265     1C55  0823               	movf	??_fputs,w
  5266     1C56  0084               	movwf	4
  5267     1C57  1783               	bsf	3,7	;select IRP bank2
  5268     1C58  0800               	movf	0,w
  5269     1C59  00A5               	movwf	fputs@c
  5270     1C5A  0825               	movf	fputs@c,w
  5271     1C5B  1D03               	btfss	3,2
  5272     1C5C  2C5E               	goto	u3251
  5273     1C5D  2C5F               	goto	u3250
  5274     1C5E                     u3251:
  5275     1C5E  2C3A               	goto	l2559
  5276     1C5F                     u3250:
  5277     1C5F                     l882:
  5278     1C5F  0008               	return
  5279     1C60                     __end_of_fputs:
  5280                           
  5281                           	psect	text18
  5282     1EB2                     __ptext18:	
  5283 ;; *************** function _fputc *****************
  5284 ;; Defined at:
  5285 ;;		line 8 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;  c               2    0[COMMON] int 
  5288 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  5289 ;;		 -> snprintf@f(11), 
  5290 ;; Auto vars:     Size  Location     Type
  5291 ;;		None
  5292 ;; Return value:  Size  Location     Type
  5293 ;;                  2    0[COMMON] int 
  5294 ;; Registers used:
  5295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5296 ;; Tracked objects:
  5297 ;;		On entry : 0/0
  5298 ;;		On exit  : 0/0
  5299 ;;		Unchanged: 0/0
  5300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5301 ;;      Params:         4       0       0       0       0
  5302 ;;      Locals:         0       0       0       0       0
  5303 ;;      Temps:          9       0       0       0       0
  5304 ;;      Totals:        13       0       0       0       0
  5305 ;;Total ram usage:       13 bytes
  5306 ;; Hardware stack levels used: 1
  5307 ;; Hardware stack levels required when called: 1
  5308 ;; This function calls:
  5309 ;;		_putch
  5310 ;; This function is called by:
  5311 ;;		_pad
  5312 ;;		_vfpfcnvrt
  5313 ;;		_fputs
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317     1EB2                     _fputc:	
  5318                           ;psect for function _fputc
  5319                           
  5320     1EB2                     l2321:	
  5321                           ;incstack = 0
  5322                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5323                           
  5324     1EB2  0872               	movf	fputc@fp,w
  5325     1EB3  0473               	iorwf	fputc@fp+1,w
  5326     1EB4  1903               	btfsc	3,2
  5327     1EB5  2EB7               	goto	u2701
  5328     1EB6  2EB8               	goto	u2700
  5329     1EB7                     u2701:
  5330     1EB7  2EBE               	goto	l2325
  5331     1EB8                     u2700:
  5332     1EB8                     l2323:
  5333     1EB8  0872               	movf	fputc@fp,w
  5334     1EB9  0473               	iorwf	fputc@fp+1,w
  5335     1EBA  1D03               	btfss	3,2
  5336     1EBB  2EBD               	goto	u2711
  5337     1EBC  2EBE               	goto	u2710
  5338     1EBD                     u2711:
  5339     1EBD  2EC5               	goto	l2327
  5340     1EBE                     u2710:
  5341     1EBE                     l2325:
  5342     1EBE  0870               	movf	fputc@c,w
  5343     1EBF  120A  118A  2004  160A  158A  	fcall	_putch
  5344     1EC4  2F4B               	goto	l874
  5345     1EC5                     l2327:
  5346     1EC5  0872               	movf	fputc@fp,w
  5347     1EC6  3E09               	addlw	9
  5348     1EC7  00F4               	movwf	??_fputc
  5349     1EC8  0873               	movf	fputc@fp+1,w
  5350     1EC9  1803               	skipnc
  5351     1ECA  3E01               	addlw	1
  5352     1ECB  3E00               	addlw	0
  5353     1ECC  00F5               	movwf	??_fputc+1
  5354     1ECD  0874               	movf	??_fputc,w
  5355     1ECE  0084               	movwf	4
  5356     1ECF  1783               	bsf	3,7
  5357     1ED0  1C75               	btfss	??_fputc+1,0
  5358     1ED1  1383               	bcf	3,7
  5359     1ED2  0800               	movf	0,w
  5360     1ED3  00F6               	movwf	??_fputc+2
  5361     1ED4  0A84               	incf	4,f
  5362     1ED5  0800               	movf	0,w
  5363     1ED6  00F7               	movwf	??_fputc+3
  5364     1ED7  0876               	movf	??_fputc+2,w
  5365     1ED8  0477               	iorwf	??_fputc+3,w
  5366     1ED9  1903               	btfsc	3,2
  5367     1EDA  2EDC               	goto	u2721
  5368     1EDB  2EDD               	goto	u2720
  5369     1EDC                     u2721:
  5370     1EDC  2F0F               	goto	l2331
  5371     1EDD                     u2720:
  5372     1EDD                     l2329:
  5373     1EDD  0872               	movf	fputc@fp,w
  5374     1EDE  3E09               	addlw	9
  5375     1EDF  00F4               	movwf	??_fputc
  5376     1EE0  0873               	movf	fputc@fp+1,w
  5377     1EE1  1803               	skipnc
  5378     1EE2  3E01               	addlw	1
  5379     1EE3  3E00               	addlw	0
  5380     1EE4  00F5               	movwf	??_fputc+1
  5381     1EE5  0874               	movf	??_fputc,w
  5382     1EE6  0084               	movwf	4
  5383     1EE7  1783               	bsf	3,7
  5384     1EE8  1C75               	btfss	??_fputc+1,0
  5385     1EE9  1383               	bcf	3,7
  5386     1EEA  0800               	movf	0,w
  5387     1EEB  00F6               	movwf	??_fputc+2
  5388     1EEC  0A84               	incf	4,f
  5389     1EED  0800               	movf	0,w
  5390     1EEE  00F7               	movwf	??_fputc+3
  5391     1EEF  0872               	movf	fputc@fp,w
  5392     1EF0  3E02               	addlw	2
  5393     1EF1  00F8               	movwf	??_fputc+4
  5394     1EF2  0873               	movf	fputc@fp+1,w
  5395     1EF3  1803               	skipnc
  5396     1EF4  3E01               	addlw	1
  5397     1EF5  3E00               	addlw	0
  5398     1EF6  00F9               	movwf	??_fputc+5
  5399     1EF7  0878               	movf	??_fputc+4,w
  5400     1EF8  0084               	movwf	4
  5401     1EF9  1783               	bsf	3,7
  5402     1EFA  1C79               	btfss	??_fputc+5,0
  5403     1EFB  1383               	bcf	3,7
  5404     1EFC  0800               	movf	0,w
  5405     1EFD  00FA               	movwf	??_fputc+6
  5406     1EFE  0A84               	incf	4,f
  5407     1EFF  0800               	movf	0,w
  5408     1F00  00FB               	movwf	??_fputc+7
  5409     1F01  087B               	movf	??_fputc+7,w
  5410     1F02  3A80               	xorlw	128
  5411     1F03  00FC               	movwf	??_fputc+8
  5412     1F04  0877               	movf	??_fputc+3,w
  5413     1F05  3A80               	xorlw	128
  5414     1F06  027C               	subwf	??_fputc+8,w
  5415     1F07  1D03               	skipz
  5416     1F08  2F0B               	goto	u2735
  5417     1F09  0876               	movf	??_fputc+2,w
  5418     1F0A  027A               	subwf	??_fputc+6,w
  5419     1F0B                     u2735:
  5420     1F0B  1803               	skipnc
  5421     1F0C  2F0E               	goto	u2731
  5422     1F0D  2F0F               	goto	u2730
  5423     1F0E                     u2731:
  5424     1F0E  2F4B               	goto	l874
  5425     1F0F                     u2730:
  5426     1F0F                     l2331:
  5427     1F0F  0872               	movf	fputc@fp,w
  5428     1F10  0084               	movwf	4
  5429     1F11  1783               	bsf	3,7
  5430     1F12  1C73               	btfss	fputc@fp+1,0
  5431     1F13  1383               	bcf	3,7
  5432     1F14  0800               	movf	0,w
  5433     1F15  00F4               	movwf	??_fputc
  5434     1F16  0A84               	incf	4,f
  5435     1F17  0800               	movf	0,w
  5436     1F18  00F5               	movwf	??_fputc+1
  5437     1F19  0872               	movf	fputc@fp,w
  5438     1F1A  3E02               	addlw	2
  5439     1F1B  00F6               	movwf	??_fputc+2
  5440     1F1C  0873               	movf	fputc@fp+1,w
  5441     1F1D  1803               	skipnc
  5442     1F1E  3E01               	addlw	1
  5443     1F1F  3E00               	addlw	0
  5444     1F20  00F7               	movwf	??_fputc+3
  5445     1F21  0876               	movf	??_fputc+2,w
  5446     1F22  0084               	movwf	4
  5447     1F23  1783               	bsf	3,7
  5448     1F24  1C77               	btfss	??_fputc+3,0
  5449     1F25  1383               	bcf	3,7
  5450     1F26  0800               	movf	0,w
  5451     1F27  0774               	addwf	??_fputc,w
  5452     1F28  00F9               	movwf	??_fputc+5
  5453     1F29  0875               	movf	??_fputc+1,w
  5454     1F2A  00F8               	movwf	??_fputc+4
  5455     1F2B  1803               	skipnc
  5456     1F2C  0AF8               	incf	??_fputc+4,f
  5457     1F2D  1F80               	btfss	0,7
  5458     1F2E  2F30               	goto	u2740
  5459     1F2F  03F8               	decf	??_fputc+4,f
  5460     1F30                     u2740:
  5461     1F30  0878               	movf	??_fputc+4,w
  5462     1F31  00FA               	movwf	??_fputc+6
  5463     1F32  0879               	movf	??_fputc+5,w
  5464     1F33  0084               	movwf	4
  5465     1F34  1783               	bsf	3,7
  5466     1F35  1C7A               	btfss	??_fputc+6,0
  5467     1F36  1383               	bcf	3,7
  5468     1F37  0870               	movf	fputc@c,w
  5469     1F38  0080               	movwf	0
  5470     1F39  0872               	movf	fputc@fp,w
  5471     1F3A  3E02               	addlw	2
  5472     1F3B  00F4               	movwf	??_fputc
  5473     1F3C  0873               	movf	fputc@fp+1,w
  5474     1F3D  1803               	skipnc
  5475     1F3E  3E01               	addlw	1
  5476     1F3F  3E00               	addlw	0
  5477     1F40  00F5               	movwf	??_fputc+1
  5478     1F41  0874               	movf	??_fputc,w
  5479     1F42  0084               	movwf	4
  5480     1F43  1783               	bsf	3,7
  5481     1F44  1C75               	btfss	??_fputc+1,0
  5482     1F45  1383               	bcf	3,7
  5483     1F46  3001               	movlw	1
  5484     1F47  0780               	addwf	0,f
  5485     1F48  0A84               	incf	4,f
  5486     1F49  1803               	skipnc
  5487     1F4A  0A80               	incf	0,f
  5488     1F4B                     l874:
  5489     1F4B  0008               	return
  5490     1F4C                     __end_of_fputc:
  5491                           
  5492                           	psect	text19
  5493     0004                     __ptext19:	
  5494 ;; *************** function _putch *****************
  5495 ;; Defined at:
  5496 ;;		line 7 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\putch.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  c               1    wreg     unsigned char 
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;  c               1    0[COMMON] unsigned char 
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  1    wreg      void 
  5503 ;; Registers used:
  5504 ;;		wreg
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5510 ;;      Params:         0       0       0       0       0
  5511 ;;      Locals:         0       0       0       0       0
  5512 ;;      Temps:          0       0       0       0       0
  5513 ;;      Totals:         0       0       0       0       0
  5514 ;;Total ram usage:        0 bytes
  5515 ;; Hardware stack levels used: 1
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		_fputc
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523     0004                     _putch:	
  5524                           ;psect for function _putch
  5525                           
  5526     0004                     l885:	
  5527                           ;incstack = 0
  5528                           ; Regs used in _putch: [wreg]
  5529                           
  5530     0004  0008               	return
  5531     0005                     __end_of_putch:
  5532                           
  5533                           	psect	text20
  5534     1B84                     __ptext20:	
  5535 ;; *************** function _memcpy *****************
  5536 ;; Defined at:
  5537 ;;		line 4 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  5538 ;; Parameters:    Size  Location     Type
  5539 ;;  d1              1    0[COMMON] PTR void 
  5540 ;;		 -> dbuf(80), 
  5541 ;;  s1              1    1[COMMON] PTR const void 
  5542 ;;		 -> dbuf(80), 
  5543 ;;  n               2    2[COMMON] unsigned int 
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;  s               1    6[COMMON] PTR const unsigned char 
  5546 ;;		 -> dbuf(80), 
  5547 ;;  d               1    5[COMMON] PTR unsigned char 
  5548 ;;		 -> dbuf(80), 
  5549 ;;  tmp             1    4[COMMON] unsigned char 
  5550 ;; Return value:  Size  Location     Type
  5551 ;;                  1    0[COMMON] PTR void 
  5552 ;; Registers used:
  5553 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5554 ;; Tracked objects:
  5555 ;;		On entry : 0/0
  5556 ;;		On exit  : 0/0
  5557 ;;		Unchanged: 0/0
  5558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5559 ;;      Params:         4       0       0       0       0
  5560 ;;      Locals:         3       0       0       0       0
  5561 ;;      Temps:          0       0       0       0       0
  5562 ;;      Totals:         7       0       0       0       0
  5563 ;;Total ram usage:        7 bytes
  5564 ;; Hardware stack levels used: 1
  5565 ;; This function calls:
  5566 ;;		Nothing
  5567 ;; This function is called by:
  5568 ;;		_efgtoa
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572     1B84                     _memcpy:	
  5573                           ;psect for function _memcpy
  5574                           
  5575     1B84                     l3015:	
  5576                           ;incstack = 0
  5577                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0]
  5578                           
  5579     1B84  0871               	movf	memcpy@s1,w
  5580     1B85  00F6               	movwf	memcpy@s
  5581     1B86  0870               	movf	memcpy@d1,w
  5582     1B87  00F5               	movwf	memcpy@d
  5583     1B88  2B96               	goto	l859
  5584     1B89                     l3017:
  5585     1B89  0876               	movf	memcpy@s,w
  5586     1B8A  0084               	movwf	4
  5587     1B8B  1783               	bsf	3,7	;select IRP bank2
  5588     1B8C  0800               	movf	0,w
  5589     1B8D  00F4               	movwf	memcpy@tmp
  5590     1B8E                     l3019:
  5591     1B8E  3001               	movlw	1
  5592     1B8F  07F6               	addwf	memcpy@s,f
  5593     1B90                     l3021:
  5594     1B90  0875               	movf	memcpy@d,w
  5595     1B91  0084               	movwf	4
  5596     1B92  0874               	movf	memcpy@tmp,w
  5597     1B93  0080               	movwf	0
  5598     1B94  3001               	movlw	1
  5599     1B95  07F5               	addwf	memcpy@d,f
  5600     1B96                     l859:
  5601     1B96  3001               	movlw	1
  5602     1B97  02F2               	subwf	memcpy@n,f
  5603     1B98  3000               	movlw	0
  5604     1B99  1C03               	skipc
  5605     1B9A  03F3               	decf	memcpy@n+1,f
  5606     1B9B  02F3               	subwf	memcpy@n+1,f
  5607     1B9C  0A72               	incf	memcpy@n,w
  5608     1B9D  1D03               	skipz
  5609     1B9E  2BA3               	goto	u4381
  5610     1B9F  0A73               	incf	memcpy@n+1,w
  5611     1BA0  1D03               	btfss	3,2
  5612     1BA1  2BA3               	goto	u4381
  5613     1BA2  2BA4               	goto	u4380
  5614     1BA3                     u4381:
  5615     1BA3  2B89               	goto	l3017
  5616     1BA4                     u4380:
  5617     1BA4                     l862:
  5618     1BA4  0008               	return
  5619     1BA5                     __end_of_memcpy:
  5620                           
  5621                           	psect	text21
  5622     1B24                     __ptext21:	
  5623 ;; *************** function _labs *****************
  5624 ;; Defined at:
  5625 ;;		line 1 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\labs.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;  a               4    0[COMMON] long 
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;		None
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  4    0[COMMON] long 
  5632 ;; Registers used:
  5633 ;;		wreg, status,2, status,0
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5639 ;;      Params:         4       0       0       0       0
  5640 ;;      Locals:         0       0       0       0       0
  5641 ;;      Temps:          0       0       0       0       0
  5642 ;;      Totals:         4       0       0       0       0
  5643 ;;Total ram usage:        4 bytes
  5644 ;; Hardware stack levels used: 1
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_efgtoa
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652     1B24                     _labs:	
  5653                           ;psect for function _labs
  5654                           
  5655     1B24                     l2977:	
  5656                           ;incstack = 0
  5657                           ; Regs used in _labs: [wreg+status,2+status,0]
  5658                           
  5659     1B24  1BF3               	btfsc	labs@a+3,7
  5660     1B25  2B27               	goto	u4251
  5661     1B26  2B28               	goto	u4250
  5662     1B27                     u4251:
  5663     1B27  2B29               	goto	l2981
  5664     1B28                     u4250:
  5665     1B28                     l2979:
  5666     1B28  2B38               	goto	l856
  5667     1B29                     l2981:
  5668     1B29  0970               	comf	labs@a,w
  5669     1B2A  00F0               	movwf	?_labs
  5670     1B2B  0971               	comf	labs@a+1,w
  5671     1B2C  00F1               	movwf	?_labs+1
  5672     1B2D  0972               	comf	labs@a+2,w
  5673     1B2E  00F2               	movwf	?_labs+2
  5674     1B2F  0973               	comf	labs@a+3,w
  5675     1B30  00F3               	movwf	?_labs+3
  5676     1B31  0AF0               	incf	?_labs,f
  5677     1B32  1903               	skipnz
  5678     1B33  0AF1               	incf	?_labs+1,f
  5679     1B34  1903               	skipnz
  5680     1B35  0AF2               	incf	?_labs+2,f
  5681     1B36  1903               	skipnz
  5682     1B37  0AF3               	incf	?_labs+3,f
  5683     1B38                     l856:
  5684     1B38  0008               	return
  5685     1B39                     __end_of_labs:
  5686                           
  5687                           	psect	text22
  5688     111C                     __ptext22:	
  5689 ;; *************** function _floorf *****************
  5690 ;; Defined at:
  5691 ;;		line 3 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\floorf.c"
  5692 ;; Parameters:    Size  Location     Type
  5693 ;;  x               4   13[BANK0 ] float 
  5694 ;; Auto vars:     Size  Location     Type
  5695 ;;  u               4   29[BANK0 ] struct .
  5696 ;;  m               4   23[BANK0 ] unsigned long 
  5697 ;;  e               2   27[BANK0 ] int 
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  4   13[BANK0 ] float 
  5700 ;; Registers used:
  5701 ;;		wreg, status,2, status,0, btemp+1
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5707 ;;      Params:         0       4       0       0       0
  5708 ;;      Locals:         0      10       0       0       0
  5709 ;;      Temps:          0       6       0       0       0
  5710 ;;      Totals:         0      20       0       0       0
  5711 ;;Total ram usage:       20 bytes
  5712 ;; Hardware stack levels used: 1
  5713 ;; This function calls:
  5714 ;;		Nothing
  5715 ;; This function is called by:
  5716 ;;		_efgtoa
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720     111C                     _floorf:	
  5721                           ;psect for function _floorf
  5722                           
  5723     111C                     l2985:	
  5724                           ;incstack = 0
  5725                           ; Regs used in _floorf: [wreg+status,2+status,0+btemp+1]
  5726                           
  5727     111C  1683               	bsf	3,5	;RP0=1, select bank3
  5728     111D  1703               	bsf	3,6	;RP1=1, select bank3
  5729     111E  081B               	movf	(floorf@F521+3)^(0+384),w
  5730     111F  1283               	bcf	3,5	;RP0=0, select bank0
  5731     1120  1303               	bcf	3,6	;RP1=0, select bank0
  5732     1121  00C0               	movwf	floorf@u+3
  5733     1122  1683               	bsf	3,5	;RP0=1, select bank3
  5734     1123  1703               	bsf	3,6	;RP1=1, select bank3
  5735     1124  081A               	movf	(floorf@F521+2)^(0+384),w
  5736     1125  1283               	bcf	3,5	;RP0=0, select bank0
  5737     1126  1303               	bcf	3,6	;RP1=0, select bank0
  5738     1127  00BF               	movwf	floorf@u+2
  5739     1128  1683               	bsf	3,5	;RP0=1, select bank3
  5740     1129  1703               	bsf	3,6	;RP1=1, select bank3
  5741     112A  0819               	movf	(floorf@F521+1)^(0+384),w
  5742     112B  1283               	bcf	3,5	;RP0=0, select bank0
  5743     112C  1303               	bcf	3,6	;RP1=0, select bank0
  5744     112D  00BE               	movwf	floorf@u+1
  5745     112E  1683               	bsf	3,5	;RP0=1, select bank3
  5746     112F  1703               	bsf	3,6	;RP1=1, select bank3
  5747     1130  0818               	movf	floorf@F521^(0+384),w
  5748     1131  1283               	bcf	3,5	;RP0=0, select bank0
  5749     1132  1303               	bcf	3,6	;RP1=0, select bank0
  5750     1133  00BD               	movwf	floorf@u
  5751     1134  0830               	movf	floorf@x+3,w
  5752     1135  00C0               	movwf	floorf@u+3
  5753     1136  082F               	movf	floorf@x+2,w
  5754     1137  00BF               	movwf	floorf@u+2
  5755     1138  082E               	movf	floorf@x+1,w
  5756     1139  00BE               	movwf	floorf@u+1
  5757     113A  082D               	movf	floorf@x,w
  5758     113B  00BD               	movwf	floorf@u
  5759     113C                     l2987:
  5760     113C  083D               	movf	floorf@u,w
  5761     113D  00B1               	movwf	??_floorf
  5762     113E  083E               	movf	floorf@u+1,w
  5763     113F  00B2               	movwf	??_floorf+1
  5764     1140  083F               	movf	floorf@u+2,w
  5765     1141  00B3               	movwf	??_floorf+2
  5766     1142  0840               	movf	floorf@u+3,w
  5767     1143  00B4               	movwf	??_floorf+3
  5768     1144  3017               	movlw	23
  5769     1145                     u4265:
  5770     1145  1003               	clrc
  5771     1146  0CB4               	rrf	??_floorf+3,f
  5772     1147  0CB3               	rrf	??_floorf+2,f
  5773     1148  0CB2               	rrf	??_floorf+1,f
  5774     1149  0CB1               	rrf	??_floorf,f
  5775     114A                     u4260:
  5776     114A  3EFF               	addlw	-1
  5777     114B  1D03               	skipz
  5778     114C  2945               	goto	u4265
  5779     114D  30FF               	movlw	255
  5780     114E  0531               	andwf	??_floorf,w
  5781     114F  00B5               	movwf	??_floorf+4
  5782     1150  3000               	movlw	0
  5783     1151  0532               	andwf	??_floorf+1,w
  5784     1152  00B6               	movwf	??_floorf+5
  5785     1153  0835               	movf	??_floorf+4,w
  5786     1154  3E81               	addlw	129
  5787     1155  00BB               	movwf	floorf@e
  5788     1156  0836               	movf	??_floorf+5,w
  5789     1157  1803               	skipnc
  5790     1158  3E01               	addlw	1
  5791     1159  3EFF               	addlw	255
  5792     115A  00BC               	movwf	floorf@e+1
  5793     115B                     l2989:
  5794     115B  083C               	movf	floorf@e+1,w
  5795     115C  3A80               	xorlw	128
  5796     115D  00FF               	movwf	btemp+1
  5797     115E  3080               	movlw	128
  5798     115F  027F               	subwf	btemp+1,w
  5799     1160  1D03               	skipz
  5800     1161  2964               	goto	u4275
  5801     1162  3017               	movlw	23
  5802     1163  023B               	subwf	floorf@e,w
  5803     1164                     u4275:
  5804     1164  1C03               	skipc
  5805     1165  2967               	goto	u4271
  5806     1166  2968               	goto	u4270
  5807     1167                     u4271:
  5808     1167  2969               	goto	l841
  5809     1168                     u4270:
  5810     1168                     l2991:
  5811     1168  2A2A               	goto	l842
  5812     1169                     l841:
  5813     1169  1283               	bcf	3,5	;RP0=0, select bank0
  5814     116A  1303               	bcf	3,6	;RP1=0, select bank0
  5815     116B  1BBC               	btfsc	floorf@e+1,7
  5816     116C  296E               	goto	u4281
  5817     116D  296F               	goto	u4280
  5818     116E                     u4281:
  5819     116E  29DF               	goto	l3005
  5820     116F                     u4280:
  5821     116F                     l2993:
  5822     116F  0A3B               	incf	floorf@e,w
  5823     1170  00FF               	movwf	btemp+1
  5824     1171  30FF               	movlw	255
  5825     1172  00B1               	movwf	??_floorf
  5826     1173  30FF               	movlw	255
  5827     1174  00B2               	movwf	??_floorf+1
  5828     1175  307F               	movlw	127
  5829     1176  00B3               	movwf	??_floorf+2
  5830     1177  3000               	movlw	0
  5831     1178  00B4               	movwf	??_floorf+3
  5832     1179  297F               	goto	u4290
  5833     117A                     u4295:
  5834     117A  0D34               	rlf	??_floorf+3,w
  5835     117B  0CB4               	rrf	??_floorf+3,f
  5836     117C  0CB3               	rrf	??_floorf+2,f
  5837     117D  0CB2               	rrf	??_floorf+1,f
  5838     117E  0CB1               	rrf	??_floorf,f
  5839     117F                     u4290:
  5840     117F  0BFF               	decfsz	btemp+1,f
  5841     1180  297A               	goto	u4295
  5842     1181  0834               	movf	??_floorf+3,w
  5843     1182  00BA               	movwf	floorf@m+3
  5844     1183  0833               	movf	??_floorf+2,w
  5845     1184  00B9               	movwf	floorf@m+2
  5846     1185  0832               	movf	??_floorf+1,w
  5847     1186  00B8               	movwf	floorf@m+1
  5848     1187  0831               	movf	??_floorf,w
  5849     1188  00B7               	movwf	floorf@m
  5850     1189                     l2995:
  5851     1189  0837               	movf	floorf@m,w
  5852     118A  053D               	andwf	floorf@u,w
  5853     118B  00B1               	movwf	??_floorf
  5854     118C  0838               	movf	floorf@m+1,w
  5855     118D  053E               	andwf	floorf@u+1,w
  5856     118E  00B2               	movwf	??_floorf+1
  5857     118F  0839               	movf	floorf@m+2,w
  5858     1190  053F               	andwf	floorf@u+2,w
  5859     1191  00B3               	movwf	??_floorf+2
  5860     1192  083A               	movf	floorf@m+3,w
  5861     1193  0540               	andwf	floorf@u+3,w
  5862     1194  00B4               	movwf	??_floorf+3
  5863     1195  0834               	movf	??_floorf+3,w
  5864     1196  0433               	iorwf	??_floorf+2,w
  5865     1197  0432               	iorwf	??_floorf+1,w
  5866     1198  0431               	iorwf	??_floorf,w
  5867     1199  1D03               	skipz
  5868     119A  299C               	goto	u4301
  5869     119B  299D               	goto	u4300
  5870     119C                     u4301:
  5871     119C  299E               	goto	l2999
  5872     119D                     u4300:
  5873     119D  2968               	goto	l2991
  5874     119E                     l2999:
  5875     119E  083D               	movf	floorf@u,w
  5876     119F  00B1               	movwf	??_floorf
  5877     11A0  083E               	movf	floorf@u+1,w
  5878     11A1  00B2               	movwf	??_floorf+1
  5879     11A2  083F               	movf	floorf@u+2,w
  5880     11A3  00B3               	movwf	??_floorf+2
  5881     11A4  0840               	movf	floorf@u+3,w
  5882     11A5  00B4               	movwf	??_floorf+3
  5883     11A6  301F               	movlw	31
  5884     11A7                     u4315:
  5885     11A7  1003               	clrc
  5886     11A8  0CB4               	rrf	??_floorf+3,f
  5887     11A9  0CB3               	rrf	??_floorf+2,f
  5888     11AA  0CB2               	rrf	??_floorf+1,f
  5889     11AB  0CB1               	rrf	??_floorf,f
  5890     11AC                     u4310:
  5891     11AC  3EFF               	addlw	-1
  5892     11AD  1D03               	skipz
  5893     11AE  29A7               	goto	u4315
  5894     11AF  0834               	movf	??_floorf+3,w
  5895     11B0  0433               	iorwf	??_floorf+2,w
  5896     11B1  0432               	iorwf	??_floorf+1,w
  5897     11B2  0431               	iorwf	??_floorf,w
  5898     11B3  1903               	skipnz
  5899     11B4  29B6               	goto	u4321
  5900     11B5  29B7               	goto	u4320
  5901     11B6                     u4321:
  5902     11B6  29CE               	goto	l3003
  5903     11B7                     u4320:
  5904     11B7                     l3001:
  5905     11B7  0837               	movf	floorf@m,w
  5906     11B8  07BD               	addwf	floorf@u,f
  5907     11B9  0838               	movf	floorf@m+1,w
  5908     11BA  1103               	clrz
  5909     11BB  1803               	skipnc
  5910     11BC  3E01               	addlw	1
  5911     11BD  1903               	skipnz
  5912     11BE  29C0               	goto	u4331
  5913     11BF  07BE               	addwf	floorf@u+1,f
  5914     11C0                     u4331:
  5915     11C0  0839               	movf	floorf@m+2,w
  5916     11C1  1103               	clrz
  5917     11C2  1803               	skipnc
  5918     11C3  3E01               	addlw	1
  5919     11C4  1903               	skipnz
  5920     11C5  29C7               	goto	u4332
  5921     11C6  07BF               	addwf	floorf@u+2,f
  5922     11C7                     u4332:
  5923     11C7  083A               	movf	floorf@m+3,w
  5924     11C8  1103               	clrz
  5925     11C9  1803               	skipnc
  5926     11CA  3E01               	addlw	1
  5927     11CB  1903               	skipnz
  5928     11CC  29CE               	goto	u4333
  5929     11CD  07C0               	addwf	floorf@u+3,f
  5930     11CE                     u4333:
  5931     11CE                     l3003:
  5932     11CE  0937               	comf	floorf@m,w
  5933     11CF  00B1               	movwf	??_floorf
  5934     11D0  0938               	comf	floorf@m+1,w
  5935     11D1  00B2               	movwf	??_floorf+1
  5936     11D2  0939               	comf	floorf@m+2,w
  5937     11D3  00B3               	movwf	??_floorf+2
  5938     11D4  093A               	comf	floorf@m+3,w
  5939     11D5  00B4               	movwf	??_floorf+3
  5940     11D6  0831               	movf	??_floorf,w
  5941     11D7  05BD               	andwf	floorf@u,f
  5942     11D8  0832               	movf	??_floorf+1,w
  5943     11D9  05BE               	andwf	floorf@u+1,f
  5944     11DA  0833               	movf	??_floorf+2,w
  5945     11DB  05BF               	andwf	floorf@u+2,f
  5946     11DC  0834               	movf	??_floorf+3,w
  5947     11DD  05C0               	andwf	floorf@u+3,f
  5948     11DE  2A22               	goto	l846
  5949     11DF                     l3005:
  5950     11DF  083D               	movf	floorf@u,w
  5951     11E0  00B1               	movwf	??_floorf
  5952     11E1  083E               	movf	floorf@u+1,w
  5953     11E2  00B2               	movwf	??_floorf+1
  5954     11E3  083F               	movf	floorf@u+2,w
  5955     11E4  00B3               	movwf	??_floorf+2
  5956     11E5  0840               	movf	floorf@u+3,w
  5957     11E6  00B4               	movwf	??_floorf+3
  5958     11E7  301F               	movlw	31
  5959     11E8                     u4345:
  5960     11E8  1003               	clrc
  5961     11E9  0CB4               	rrf	??_floorf+3,f
  5962     11EA  0CB3               	rrf	??_floorf+2,f
  5963     11EB  0CB2               	rrf	??_floorf+1,f
  5964     11EC  0CB1               	rrf	??_floorf,f
  5965     11ED                     u4340:
  5966     11ED  3EFF               	addlw	-1
  5967     11EE  1D03               	skipz
  5968     11EF  29E8               	goto	u4345
  5969     11F0  0834               	movf	??_floorf+3,w
  5970     11F1  0433               	iorwf	??_floorf+2,w
  5971     11F2  0432               	iorwf	??_floorf+1,w
  5972     11F3  0431               	iorwf	??_floorf,w
  5973     11F4  1D03               	skipz
  5974     11F5  29F7               	goto	u4351
  5975     11F6  29F8               	goto	u4350
  5976     11F7                     u4351:
  5977     11F7  2A01               	goto	l3009
  5978     11F8                     u4350:
  5979     11F8                     l3007:
  5980     11F8  3000               	movlw	0
  5981     11F9  00C0               	movwf	floorf@u+3
  5982     11FA  3000               	movlw	0
  5983     11FB  00BF               	movwf	floorf@u+2
  5984     11FC  3000               	movlw	0
  5985     11FD  00BE               	movwf	floorf@u+1
  5986     11FE  3000               	movlw	0
  5987     11FF  00BD               	movwf	floorf@u
  5988     1200  2A22               	goto	l846
  5989     1201                     l3009:
  5990     1201  083D               	movf	floorf@u,w
  5991     1202  00B1               	movwf	??_floorf
  5992     1203  083E               	movf	floorf@u+1,w
  5993     1204  00B2               	movwf	??_floorf+1
  5994     1205  083F               	movf	floorf@u+2,w
  5995     1206  00B3               	movwf	??_floorf+2
  5996     1207  0840               	movf	floorf@u+3,w
  5997     1208  00B4               	movwf	??_floorf+3
  5998     1209  3001               	movlw	1
  5999     120A                     u4365:
  6000     120A  1003               	clrc
  6001     120B  0DB1               	rlf	??_floorf,f
  6002     120C  0DB2               	rlf	??_floorf+1,f
  6003     120D  0DB3               	rlf	??_floorf+2,f
  6004     120E  0DB4               	rlf	??_floorf+3,f
  6005     120F                     u4360:
  6006     120F  3EFF               	addlw	-1
  6007     1210  1D03               	skipz
  6008     1211  2A0A               	goto	u4365
  6009     1212  0834               	movf	??_floorf+3,w
  6010     1213  0433               	iorwf	??_floorf+2,w
  6011     1214  0432               	iorwf	??_floorf+1,w
  6012     1215  0431               	iorwf	??_floorf,w
  6013     1216  1903               	skipnz
  6014     1217  2A19               	goto	u4371
  6015     1218  2A1A               	goto	u4370
  6016     1219                     u4371:
  6017     1219  2A22               	goto	l846
  6018     121A                     u4370:
  6019     121A                     l3011:
  6020     121A  30BF               	movlw	191
  6021     121B  00C0               	movwf	floorf@u+3
  6022     121C  3080               	movlw	128
  6023     121D  00BF               	movwf	floorf@u+2
  6024     121E  3000               	movlw	0
  6025     121F  00BE               	movwf	floorf@u+1
  6026     1220  3000               	movlw	0
  6027     1221  00BD               	movwf	floorf@u
  6028     1222                     l846:
  6029     1222  0840               	movf	floorf@u+3,w
  6030     1223  00B0               	movwf	?_floorf+3
  6031     1224  083F               	movf	floorf@u+2,w
  6032     1225  00AF               	movwf	?_floorf+2
  6033     1226  083E               	movf	floorf@u+1,w
  6034     1227  00AE               	movwf	?_floorf+1
  6035     1228  083D               	movf	floorf@u,w
  6036     1229  00AD               	movwf	?_floorf
  6037     122A                     l842:
  6038     122A  0008               	return
  6039     122B                     __end_of_floorf:
  6040                           
  6041                           	psect	text23
  6042     1E25                     __ptext23:	
  6043 ;; *************** function ___fpclassifyf *****************
  6044 ;; Defined at:
  6045 ;;		line 4 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  6046 ;; Parameters:    Size  Location     Type
  6047 ;;  x               4    0[COMMON] float 
  6048 ;; Auto vars:     Size  Location     Type
  6049 ;;  u               4    2[BANK0 ] struct .
  6050 ;;  e               2    0[BANK0 ] int 
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  2    0[COMMON] int 
  6053 ;; Registers used:
  6054 ;;		wreg, status,2, status,0
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6060 ;;      Params:         4       0       0       0       0
  6061 ;;      Locals:         0       6       0       0       0
  6062 ;;      Temps:          6       0       0       0       0
  6063 ;;      Totals:        10       6       0       0       0
  6064 ;;Total ram usage:       16 bytes
  6065 ;; Hardware stack levels used: 1
  6066 ;; This function calls:
  6067 ;;		Nothing
  6068 ;; This function is called by:
  6069 ;;		_efgtoa
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073     1E25                     ___fpclassifyf:	
  6074                           ;psect for function ___fpclassifyf
  6075                           
  6076     1E25                     l2953:	
  6077                           ;incstack = 0
  6078                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  6079                           
  6080     1E25  1683               	bsf	3,5	;RP0=1, select bank3
  6081     1E26  1703               	bsf	3,6	;RP1=1, select bank3
  6082     1E27  081F               	movf	(___fpclassifyf@F465+3)^(0+384),w
  6083     1E28  1283               	bcf	3,5	;RP0=0, select bank0
  6084     1E29  1303               	bcf	3,6	;RP1=0, select bank0
  6085     1E2A  00A5               	movwf	___fpclassifyf@u+3
  6086     1E2B  1683               	bsf	3,5	;RP0=1, select bank3
  6087     1E2C  1703               	bsf	3,6	;RP1=1, select bank3
  6088     1E2D  081E               	movf	(___fpclassifyf@F465+2)^(0+384),w
  6089     1E2E  1283               	bcf	3,5	;RP0=0, select bank0
  6090     1E2F  1303               	bcf	3,6	;RP1=0, select bank0
  6091     1E30  00A4               	movwf	___fpclassifyf@u+2
  6092     1E31  1683               	bsf	3,5	;RP0=1, select bank3
  6093     1E32  1703               	bsf	3,6	;RP1=1, select bank3
  6094     1E33  081D               	movf	(___fpclassifyf@F465+1)^(0+384),w
  6095     1E34  1283               	bcf	3,5	;RP0=0, select bank0
  6096     1E35  1303               	bcf	3,6	;RP1=0, select bank0
  6097     1E36  00A3               	movwf	___fpclassifyf@u+1
  6098     1E37  1683               	bsf	3,5	;RP0=1, select bank3
  6099     1E38  1703               	bsf	3,6	;RP1=1, select bank3
  6100     1E39  081C               	movf	___fpclassifyf@F465^(0+384),w
  6101     1E3A  1283               	bcf	3,5	;RP0=0, select bank0
  6102     1E3B  1303               	bcf	3,6	;RP1=0, select bank0
  6103     1E3C  00A2               	movwf	___fpclassifyf@u
  6104     1E3D  0873               	movf	___fpclassifyf@x+3,w
  6105     1E3E  00A5               	movwf	___fpclassifyf@u+3
  6106     1E3F  0872               	movf	___fpclassifyf@x+2,w
  6107     1E40  00A4               	movwf	___fpclassifyf@u+2
  6108     1E41  0871               	movf	___fpclassifyf@x+1,w
  6109     1E42  00A3               	movwf	___fpclassifyf@u+1
  6110     1E43  0870               	movf	___fpclassifyf@x,w
  6111     1E44  00A2               	movwf	___fpclassifyf@u
  6112     1E45                     l2955:
  6113     1E45  0822               	movf	___fpclassifyf@u,w
  6114     1E46  00F4               	movwf	??___fpclassifyf
  6115     1E47  0823               	movf	___fpclassifyf@u+1,w
  6116     1E48  00F5               	movwf	??___fpclassifyf+1
  6117     1E49  0824               	movf	___fpclassifyf@u+2,w
  6118     1E4A  00F6               	movwf	??___fpclassifyf+2
  6119     1E4B  0825               	movf	___fpclassifyf@u+3,w
  6120     1E4C  00F7               	movwf	??___fpclassifyf+3
  6121     1E4D  3017               	movlw	23
  6122     1E4E                     u4175:
  6123     1E4E  1003               	clrc
  6124     1E4F  0CF7               	rrf	??___fpclassifyf+3,f
  6125     1E50  0CF6               	rrf	??___fpclassifyf+2,f
  6126     1E51  0CF5               	rrf	??___fpclassifyf+1,f
  6127     1E52  0CF4               	rrf	??___fpclassifyf,f
  6128     1E53                     u4170:
  6129     1E53  3EFF               	addlw	-1
  6130     1E54  1D03               	skipz
  6131     1E55  2E4E               	goto	u4175
  6132     1E56  30FF               	movlw	255
  6133     1E57  0574               	andwf	??___fpclassifyf,w
  6134     1E58  00A0               	movwf	___fpclassifyf@e
  6135     1E59  3000               	movlw	0
  6136     1E5A  0575               	andwf	??___fpclassifyf+1,w
  6137     1E5B  00A1               	movwf	___fpclassifyf@e+1
  6138     1E5C                     l2957:
  6139     1E5C  0820               	movf	___fpclassifyf@e,w
  6140     1E5D  0421               	iorwf	___fpclassifyf@e+1,w
  6141     1E5E  1D03               	btfss	3,2
  6142     1E5F  2E61               	goto	u4181
  6143     1E60  2E62               	goto	u4180
  6144     1E61                     u4181:
  6145     1E61  2E85               	goto	l2967
  6146     1E62                     u4180:
  6147     1E62                     l2959:
  6148     1E62  0822               	movf	___fpclassifyf@u,w
  6149     1E63  00F4               	movwf	??___fpclassifyf
  6150     1E64  0823               	movf	___fpclassifyf@u+1,w
  6151     1E65  00F5               	movwf	??___fpclassifyf+1
  6152     1E66  0824               	movf	___fpclassifyf@u+2,w
  6153     1E67  00F6               	movwf	??___fpclassifyf+2
  6154     1E68  0825               	movf	___fpclassifyf@u+3,w
  6155     1E69  00F7               	movwf	??___fpclassifyf+3
  6156     1E6A  3001               	movlw	1
  6157     1E6B                     u4195:
  6158     1E6B  1003               	clrc
  6159     1E6C  0DF4               	rlf	??___fpclassifyf,f
  6160     1E6D  0DF5               	rlf	??___fpclassifyf+1,f
  6161     1E6E  0DF6               	rlf	??___fpclassifyf+2,f
  6162     1E6F  0DF7               	rlf	??___fpclassifyf+3,f
  6163     1E70                     u4190:
  6164     1E70  3EFF               	addlw	-1
  6165     1E71  1D03               	skipz
  6166     1E72  2E6B               	goto	u4195
  6167     1E73  0877               	movf	??___fpclassifyf+3,w
  6168     1E74  0476               	iorwf	??___fpclassifyf+2,w
  6169     1E75  0475               	iorwf	??___fpclassifyf+1,w
  6170     1E76  0474               	iorwf	??___fpclassifyf,w
  6171     1E77  1D03               	skipz
  6172     1E78  2E7A               	goto	u4201
  6173     1E79  2E7B               	goto	u4200
  6174     1E7A                     u4201:
  6175     1E7A  2E80               	goto	l2963
  6176     1E7B                     u4200:
  6177     1E7B                     l2961:
  6178     1E7B  3002               	movlw	2
  6179     1E7C  00F0               	movwf	?___fpclassifyf
  6180     1E7D  3000               	movlw	0
  6181     1E7E  00F1               	movwf	?___fpclassifyf+1
  6182     1E7F  2EB1               	goto	l833
  6183     1E80                     l2963:
  6184     1E80  3003               	movlw	3
  6185     1E81  00F0               	movwf	?___fpclassifyf
  6186     1E82  3000               	movlw	0
  6187     1E83  00F1               	movwf	?___fpclassifyf+1
  6188     1E84  2EB1               	goto	l833
  6189     1E85                     l2967:
  6190     1E85  0A20               	incf	___fpclassifyf@e,w
  6191     1E86  0421               	iorwf	___fpclassifyf@e+1,w
  6192     1E87  1D03               	btfss	3,2
  6193     1E88  2E8A               	goto	u4211
  6194     1E89  2E8B               	goto	u4210
  6195     1E8A                     u4211:
  6196     1E8A  2EAD               	goto	l2973
  6197     1E8B                     u4210:
  6198     1E8B                     l2969:
  6199     1E8B  0822               	movf	___fpclassifyf@u,w
  6200     1E8C  00F4               	movwf	??___fpclassifyf
  6201     1E8D  0823               	movf	___fpclassifyf@u+1,w
  6202     1E8E  00F5               	movwf	??___fpclassifyf+1
  6203     1E8F  0824               	movf	___fpclassifyf@u+2,w
  6204     1E90  00F6               	movwf	??___fpclassifyf+2
  6205     1E91  0825               	movf	___fpclassifyf@u+3,w
  6206     1E92  00F7               	movwf	??___fpclassifyf+3
  6207     1E93  3009               	movlw	9
  6208     1E94                     u4225:
  6209     1E94  1003               	clrc
  6210     1E95  0DF4               	rlf	??___fpclassifyf,f
  6211     1E96  0DF5               	rlf	??___fpclassifyf+1,f
  6212     1E97  0DF6               	rlf	??___fpclassifyf+2,f
  6213     1E98  0DF7               	rlf	??___fpclassifyf+3,f
  6214     1E99                     u4220:
  6215     1E99  3EFF               	addlw	-1
  6216     1E9A  1D03               	skipz
  6217     1E9B  2E94               	goto	u4225
  6218     1E9C  0877               	movf	??___fpclassifyf+3,w
  6219     1E9D  0476               	iorwf	??___fpclassifyf+2,w
  6220     1E9E  0475               	iorwf	??___fpclassifyf+1,w
  6221     1E9F  0474               	iorwf	??___fpclassifyf,w
  6222     1EA0  1903               	skipnz
  6223     1EA1  2EA3               	goto	u4231
  6224     1EA2  2EA5               	goto	u4230
  6225     1EA3                     u4231:
  6226     1EA3  3001               	movlw	1
  6227     1EA4  2EA6               	goto	u4240
  6228     1EA5                     u4230:
  6229     1EA5  3000               	movlw	0
  6230     1EA6                     u4240:
  6231     1EA6  00F8               	movwf	??___fpclassifyf+4
  6232     1EA7  01F9               	clrf	??___fpclassifyf+5
  6233     1EA8  0878               	movf	??___fpclassifyf+4,w
  6234     1EA9  00F0               	movwf	?___fpclassifyf
  6235     1EAA  0879               	movf	??___fpclassifyf+5,w
  6236     1EAB  00F1               	movwf	?___fpclassifyf+1
  6237     1EAC  2EB1               	goto	l833
  6238     1EAD                     l2973:
  6239     1EAD  3004               	movlw	4
  6240     1EAE  00F0               	movwf	?___fpclassifyf
  6241     1EAF  3000               	movlw	0
  6242     1EB0  00F1               	movwf	?___fpclassifyf+1
  6243     1EB1                     l833:
  6244     1EB1  0008               	return
  6245     1EB2                     __end_of___fpclassifyf:
  6246                           
  6247                           	psect	text24
  6248     1D3A                     __ptext24:	
  6249 ;; *************** function ___fltol *****************
  6250 ;; Defined at:
  6251 ;;		line 43 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\fltol.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;  f1              4    0[COMMON] int 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  exp1            1    9[COMMON] unsigned char 
  6256 ;;  sign1           1    8[COMMON] unsigned char 
  6257 ;; Return value:  Size  Location     Type
  6258 ;;                  4    0[COMMON] long 
  6259 ;; Registers used:
  6260 ;;		wreg, status,2, status,0
  6261 ;; Tracked objects:
  6262 ;;		On entry : 0/0
  6263 ;;		On exit  : 0/0
  6264 ;;		Unchanged: 0/0
  6265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6266 ;;      Params:         4       0       0       0       0
  6267 ;;      Locals:         2       0       0       0       0
  6268 ;;      Temps:          4       0       0       0       0
  6269 ;;      Totals:        10       0       0       0       0
  6270 ;;Total ram usage:       10 bytes
  6271 ;; Hardware stack levels used: 1
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_efgtoa
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279     1D3A                     ___fltol:	
  6280                           ;psect for function ___fltol
  6281                           
  6282     1D3A                     l2609:	
  6283                           ;incstack = 0
  6284                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6285                           
  6286     1D3A  1003               	clrc
  6287     1D3B  0D72               	rlf	___fltol@f1+2,w
  6288     1D3C  0D73               	rlf	___fltol@f1+3,w
  6289     1D3D  00F9               	movwf	___fltol@exp1
  6290     1D3E  0879               	movf	___fltol@exp1,w
  6291     1D3F  1D03               	btfss	3,2
  6292     1D40  2D42               	goto	u3381
  6293     1D41  2D43               	goto	u3380
  6294     1D42                     u3381:
  6295     1D42  2D4C               	goto	l2615
  6296     1D43                     u3380:
  6297     1D43                     l2611:
  6298     1D43  3000               	movlw	0
  6299     1D44  00F3               	movwf	?___fltol+3
  6300     1D45  3000               	movlw	0
  6301     1D46  00F2               	movwf	?___fltol+2
  6302     1D47  3000               	movlw	0
  6303     1D48  00F1               	movwf	?___fltol+1
  6304     1D49  3000               	movlw	0
  6305     1D4A  00F0               	movwf	?___fltol
  6306     1D4B  2DAD               	goto	l425
  6307     1D4C                     l2615:
  6308     1D4C  0870               	movf	___fltol@f1,w
  6309     1D4D  00F4               	movwf	??___fltol
  6310     1D4E  0871               	movf	___fltol@f1+1,w
  6311     1D4F  00F5               	movwf	??___fltol+1
  6312     1D50  0872               	movf	___fltol@f1+2,w
  6313     1D51  00F6               	movwf	??___fltol+2
  6314     1D52  0873               	movf	___fltol@f1+3,w
  6315     1D53  00F7               	movwf	??___fltol+3
  6316     1D54  301F               	movlw	31
  6317     1D55                     u3395:
  6318     1D55  1003               	clrc
  6319     1D56  0CF7               	rrf	??___fltol+3,f
  6320     1D57  0CF6               	rrf	??___fltol+2,f
  6321     1D58  0CF5               	rrf	??___fltol+1,f
  6322     1D59  0CF4               	rrf	??___fltol,f
  6323     1D5A                     u3390:
  6324     1D5A  3EFF               	addlw	-1
  6325     1D5B  1D03               	skipz
  6326     1D5C  2D55               	goto	u3395
  6327     1D5D  0874               	movf	??___fltol,w
  6328     1D5E  00F8               	movwf	___fltol@sign1
  6329     1D5F                     l2617:
  6330     1D5F  17F2               	bsf	___fltol@f1+2,7
  6331     1D60                     l2619:
  6332     1D60  30FF               	movlw	255
  6333     1D61  05F0               	andwf	___fltol@f1,f
  6334     1D62  30FF               	movlw	255
  6335     1D63  05F1               	andwf	___fltol@f1+1,f
  6336     1D64  30FF               	movlw	255
  6337     1D65  05F2               	andwf	___fltol@f1+2,f
  6338     1D66  3000               	movlw	0
  6339     1D67  05F3               	andwf	___fltol@f1+3,f
  6340     1D68                     l2621:
  6341     1D68  3096               	movlw	150
  6342     1D69  02F9               	subwf	___fltol@exp1,f
  6343     1D6A                     l2623:
  6344     1D6A  1FF9               	btfss	___fltol@exp1,7
  6345     1D6B  2D6D               	goto	u3401
  6346     1D6C  2D6E               	goto	u3400
  6347     1D6D                     u3401:
  6348     1D6D  2D86               	goto	l2633
  6349     1D6E                     u3400:
  6350     1D6E                     l2625:
  6351     1D6E  0879               	movf	___fltol@exp1,w
  6352     1D6F  3A80               	xorlw	128
  6353     1D70  3E97               	addlw	151
  6354     1D71  1803               	skipnc
  6355     1D72  2D74               	goto	u3411
  6356     1D73  2D75               	goto	u3410
  6357     1D74                     u3411:
  6358     1D74  2D76               	goto	l2631
  6359     1D75                     u3410:
  6360     1D75  2D43               	goto	l2611
  6361     1D76                     l2631:
  6362     1D76  3001               	movlw	1
  6363     1D77                     u3425:
  6364     1D77  1003               	clrc
  6365     1D78  0CF3               	rrf	___fltol@f1+3,f
  6366     1D79  0CF2               	rrf	___fltol@f1+2,f
  6367     1D7A  0CF1               	rrf	___fltol@f1+1,f
  6368     1D7B  0CF0               	rrf	___fltol@f1,f
  6369     1D7C  3EFF               	addlw	-1
  6370     1D7D  1D03               	skipz
  6371     1D7E  2D77               	goto	u3425
  6372     1D7F  3001               	movlw	1
  6373     1D80  07F9               	addwf	___fltol@exp1,f
  6374     1D81  1D03               	btfss	3,2
  6375     1D82  2D84               	goto	u3431
  6376     1D83  2D85               	goto	u3430
  6377     1D84                     u3431:
  6378     1D84  2D76               	goto	l2631
  6379     1D85                     u3430:
  6380     1D85  2D9D               	goto	l2641
  6381     1D86                     l2633:
  6382     1D86  3020               	movlw	32
  6383     1D87  0279               	subwf	___fltol@exp1,w
  6384     1D88  1C03               	skipc
  6385     1D89  2D8B               	goto	u3441
  6386     1D8A  2D8C               	goto	u3440
  6387     1D8B                     u3441:
  6388     1D8B  2D98               	goto	l432
  6389     1D8C                     u3440:
  6390     1D8C  2D43               	goto	l2611
  6391     1D8D                     l2639:
  6392     1D8D  3001               	movlw	1
  6393     1D8E  00F4               	movwf	??___fltol
  6394     1D8F                     u3455:
  6395     1D8F  1003               	clrc
  6396     1D90  0DF0               	rlf	___fltol@f1,f
  6397     1D91  0DF1               	rlf	___fltol@f1+1,f
  6398     1D92  0DF2               	rlf	___fltol@f1+2,f
  6399     1D93  0DF3               	rlf	___fltol@f1+3,f
  6400     1D94  0BF4               	decfsz	??___fltol,f
  6401     1D95  2D8F               	goto	u3455
  6402     1D96  3001               	movlw	1
  6403     1D97  02F9               	subwf	___fltol@exp1,f
  6404     1D98                     l432:
  6405     1D98  0879               	movf	___fltol@exp1,w
  6406     1D99  1D03               	btfss	3,2
  6407     1D9A  2D9C               	goto	u3461
  6408     1D9B  2D9D               	goto	u3460
  6409     1D9C                     u3461:
  6410     1D9C  2D8D               	goto	l2639
  6411     1D9D                     u3460:
  6412     1D9D                     l2641:
  6413     1D9D  0878               	movf	___fltol@sign1,w
  6414     1D9E  1903               	btfsc	3,2
  6415     1D9F  2DA1               	goto	u3471
  6416     1DA0  2DA2               	goto	u3470
  6417     1DA1                     u3471:
  6418     1DA1  2DAD               	goto	l435
  6419     1DA2                     u3470:
  6420     1DA2                     l2643:
  6421     1DA2  09F0               	comf	___fltol@f1,f
  6422     1DA3  09F1               	comf	___fltol@f1+1,f
  6423     1DA4  09F2               	comf	___fltol@f1+2,f
  6424     1DA5  09F3               	comf	___fltol@f1+3,f
  6425     1DA6  0AF0               	incf	___fltol@f1,f
  6426     1DA7  1903               	skipnz
  6427     1DA8  0AF1               	incf	___fltol@f1+1,f
  6428     1DA9  1903               	skipnz
  6429     1DAA  0AF2               	incf	___fltol@f1+2,f
  6430     1DAB  1903               	skipnz
  6431     1DAC  0AF3               	incf	___fltol@f1+3,f
  6432     1DAD                     l435:
  6433     1DAD                     l425:
  6434     1DAD  0008               	return
  6435     1DAE                     __end_of___fltol:
  6436                           
  6437                           	psect	text25
  6438     1BC6                     __ptext25:	
  6439 ;; *************** function ___flsub *****************
  6440 ;; Defined at:
  6441 ;;		line 242 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  6442 ;; Parameters:    Size  Location     Type
  6443 ;;  a               4   41[BANK0 ] long 
  6444 ;;  b               4   45[BANK0 ] long 
  6445 ;; Auto vars:     Size  Location     Type
  6446 ;;		None
  6447 ;; Return value:  Size  Location     Type
  6448 ;;                  4   41[BANK0 ] long 
  6449 ;; Registers used:
  6450 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6451 ;; Tracked objects:
  6452 ;;		On entry : 0/0
  6453 ;;		On exit  : 0/0
  6454 ;;		Unchanged: 0/0
  6455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6456 ;;      Params:         0       8       0       0       0
  6457 ;;      Locals:         0       0       0       0       0
  6458 ;;      Temps:          0       0       0       0       0
  6459 ;;      Totals:         0       8       0       0       0
  6460 ;;Total ram usage:        8 bytes
  6461 ;; Hardware stack levels used: 1
  6462 ;; Hardware stack levels required when called: 1
  6463 ;; This function calls:
  6464 ;;		___fladd
  6465 ;; This function is called by:
  6466 ;;		_calculate
  6467 ;;		_efgtoa
  6468 ;; This function uses a non-reentrant model
  6469 ;;
  6470                           
  6471     1BC6                     ___flsub:	
  6472                           ;psect for function ___flsub
  6473                           
  6474     1BC6                     l2645:	
  6475                           ;incstack = 0
  6476                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6477                           
  6478     1BC6  3080               	movlw	128
  6479     1BC7  1283               	bcf	3,5	;RP0=0, select bank0
  6480     1BC8  1303               	bcf	3,6	;RP1=0, select bank0
  6481     1BC9  06CC               	xorwf	___flsub@a+3,f
  6482     1BCA                     l2647:
  6483     1BCA  0850               	movf	___flsub@b+3,w
  6484     1BCB  00B8               	movwf	___fladd@b+3
  6485     1BCC  084F               	movf	___flsub@b+2,w
  6486     1BCD  00B7               	movwf	___fladd@b+2
  6487     1BCE  084E               	movf	___flsub@b+1,w
  6488     1BCF  00B6               	movwf	___fladd@b+1
  6489     1BD0  084D               	movf	___flsub@b,w
  6490     1BD1  00B5               	movwf	___fladd@b
  6491     1BD2  084C               	movf	___flsub@a+3,w
  6492     1BD3  00BC               	movwf	___fladd@a+3
  6493     1BD4  084B               	movf	___flsub@a+2,w
  6494     1BD5  00BB               	movwf	___fladd@a+2
  6495     1BD6  084A               	movf	___flsub@a+1,w
  6496     1BD7  00BA               	movwf	___fladd@a+1
  6497     1BD8  0849               	movf	___flsub@a,w
  6498     1BD9  00B9               	movwf	___fladd@a
  6499     1BDA  120A  158A  226E  160A  158A  	fcall	___fladd
  6500     1BDF  1283               	bcf	3,5	;RP0=0, select bank0
  6501     1BE0  1303               	bcf	3,6	;RP1=0, select bank0
  6502     1BE1  0838               	movf	?___fladd+3,w
  6503     1BE2  00CC               	movwf	?___flsub+3
  6504     1BE3  0837               	movf	?___fladd+2,w
  6505     1BE4  00CB               	movwf	?___flsub+2
  6506     1BE5  0836               	movf	?___fladd+1,w
  6507     1BE6  00CA               	movwf	?___flsub+1
  6508     1BE7  0835               	movf	?___fladd,w
  6509     1BE8  00C9               	movwf	?___flsub
  6510     1BE9                     l578:
  6511     1BE9  0008               	return
  6512     1BEA                     __end_of___flsub:
  6513                           
  6514                           	psect	text26
  6515     0A6E                     __ptext26:	
  6516 ;; *************** function ___fladd *****************
  6517 ;; Defined at:
  6518 ;;		line 10 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;  b               4   21[BANK0 ] long 
  6521 ;;  a               4   25[BANK0 ] long 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  grs             1   40[BANK0 ] unsigned char 
  6524 ;;  bexp            1   39[BANK0 ] unsigned char 
  6525 ;;  aexp            1   38[BANK0 ] unsigned char 
  6526 ;;  signs           1   37[BANK0 ] unsigned char 
  6527 ;; Return value:  Size  Location     Type
  6528 ;;                  4   21[BANK0 ] unsigned char 
  6529 ;; Registers used:
  6530 ;;		wreg, status,2, status,0, btemp+1
  6531 ;; Tracked objects:
  6532 ;;		On entry : 0/0
  6533 ;;		On exit  : 0/0
  6534 ;;		Unchanged: 0/0
  6535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6536 ;;      Params:         0       8       0       0       0
  6537 ;;      Locals:         0       4       0       0       0
  6538 ;;      Temps:          0       8       0       0       0
  6539 ;;      Totals:         0      20       0       0       0
  6540 ;;Total ram usage:       20 bytes
  6541 ;; Hardware stack levels used: 1
  6542 ;; This function calls:
  6543 ;;		Nothing
  6544 ;; This function is called by:
  6545 ;;		_setDigit
  6546 ;;		_calculate
  6547 ;;		___flsub
  6548 ;;		_efgtoa
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552     0A6E                     ___fladd:	
  6553                           ;psect for function ___fladd
  6554                           
  6555     0A6E                     l2345:	
  6556                           ;incstack = 0
  6557                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6558                           
  6559     0A6E  1283               	bcf	3,5	;RP0=0, select bank0
  6560     0A6F  1303               	bcf	3,6	;RP1=0, select bank0
  6561     0A70  0838               	movf	___fladd@b+3,w
  6562     0A71  00C5               	movwf	___fladd@signs
  6563     0A72                     l2347:
  6564     0A72  3080               	movlw	128
  6565     0A73  05C5               	andwf	___fladd@signs,f
  6566     0A74                     l2349:
  6567     0A74  0838               	movf	___fladd@b+3,w
  6568     0A75  00BD               	movwf	??___fladd
  6569     0A76  073D               	addwf	??___fladd,w
  6570     0A77  00C7               	movwf	___fladd@bexp
  6571     0A78                     l2351:
  6572     0A78  1FB7               	btfss	___fladd@b+2,7
  6573     0A79  2A7B               	goto	u2761
  6574     0A7A  2A7C               	goto	u2760
  6575     0A7B                     u2761:
  6576     0A7B  2A7D               	goto	l2355
  6577     0A7C                     u2760:
  6578     0A7C                     l2353:
  6579     0A7C  1447               	bsf	___fladd@bexp,0
  6580     0A7D                     l2355:
  6581     0A7D  0847               	movf	___fladd@bexp,w
  6582     0A7E  1903               	btfsc	3,2
  6583     0A7F  2A81               	goto	u2771
  6584     0A80  2A82               	goto	u2770
  6585     0A81                     u2771:
  6586     0A81  2A92               	goto	l2365
  6587     0A82                     u2770:
  6588     0A82                     l2357:
  6589     0A82  0A47               	incf	___fladd@bexp,w
  6590     0A83  1D03               	btfss	3,2
  6591     0A84  2A86               	goto	u2781
  6592     0A85  2A87               	goto	u2780
  6593     0A86                     u2781:
  6594     0A86  2A8F               	goto	l2361
  6595     0A87                     u2780:
  6596     0A87                     l2359:
  6597     0A87  3000               	movlw	0
  6598     0A88  00B8               	movwf	___fladd@b+3
  6599     0A89  3000               	movlw	0
  6600     0A8A  00B7               	movwf	___fladd@b+2
  6601     0A8B  3000               	movlw	0
  6602     0A8C  00B6               	movwf	___fladd@b+1
  6603     0A8D  3000               	movlw	0
  6604     0A8E  00B5               	movwf	___fladd@b
  6605     0A8F                     l2361:
  6606     0A8F  17B7               	bsf	___fladd@b+2,7
  6607     0A90                     l2363:
  6608     0A90  01B8               	clrf	___fladd@b+3
  6609     0A91  2A9A               	goto	l527
  6610     0A92                     l2365:
  6611     0A92  3000               	movlw	0
  6612     0A93  00B8               	movwf	___fladd@b+3
  6613     0A94  3000               	movlw	0
  6614     0A95  00B7               	movwf	___fladd@b+2
  6615     0A96  3000               	movlw	0
  6616     0A97  00B6               	movwf	___fladd@b+1
  6617     0A98  3000               	movlw	0
  6618     0A99  00B5               	movwf	___fladd@b
  6619     0A9A                     l527:
  6620     0A9A  083C               	movf	___fladd@a+3,w
  6621     0A9B  00C6               	movwf	___fladd@aexp
  6622     0A9C                     l2367:
  6623     0A9C  3080               	movlw	128
  6624     0A9D  05C6               	andwf	___fladd@aexp,f
  6625     0A9E                     l2369:
  6626     0A9E  0846               	movf	___fladd@aexp,w
  6627     0A9F  0645               	xorwf	___fladd@signs,w
  6628     0AA0  1903               	skipnz
  6629     0AA1  2AA3               	goto	u2791
  6630     0AA2  2AA4               	goto	u2790
  6631     0AA3                     u2791:
  6632     0AA3  2AA5               	goto	l2373
  6633     0AA4                     u2790:
  6634     0AA4                     l2371:
  6635     0AA4  1745               	bsf	___fladd@signs,6
  6636     0AA5                     l2373:
  6637     0AA5  083C               	movf	___fladd@a+3,w
  6638     0AA6  00BD               	movwf	??___fladd
  6639     0AA7  073D               	addwf	??___fladd,w
  6640     0AA8  00C6               	movwf	___fladd@aexp
  6641     0AA9                     l2375:
  6642     0AA9  1FBB               	btfss	___fladd@a+2,7
  6643     0AAA  2AAC               	goto	u2801
  6644     0AAB  2AAD               	goto	u2800
  6645     0AAC                     u2801:
  6646     0AAC  2AAE               	goto	l2379
  6647     0AAD                     u2800:
  6648     0AAD                     l2377:
  6649     0AAD  1446               	bsf	___fladd@aexp,0
  6650     0AAE                     l2379:
  6651     0AAE  0846               	movf	___fladd@aexp,w
  6652     0AAF  1903               	btfsc	3,2
  6653     0AB0  2AB2               	goto	u2811
  6654     0AB1  2AB3               	goto	u2810
  6655     0AB2                     u2811:
  6656     0AB2  2AC3               	goto	l2389
  6657     0AB3                     u2810:
  6658     0AB3                     l2381:
  6659     0AB3  0A46               	incf	___fladd@aexp,w
  6660     0AB4  1D03               	btfss	3,2
  6661     0AB5  2AB7               	goto	u2821
  6662     0AB6  2AB8               	goto	u2820
  6663     0AB7                     u2821:
  6664     0AB7  2AC0               	goto	l2385
  6665     0AB8                     u2820:
  6666     0AB8                     l2383:
  6667     0AB8  3000               	movlw	0
  6668     0AB9  00BC               	movwf	___fladd@a+3
  6669     0ABA  3000               	movlw	0
  6670     0ABB  00BB               	movwf	___fladd@a+2
  6671     0ABC  3000               	movlw	0
  6672     0ABD  00BA               	movwf	___fladd@a+1
  6673     0ABE  3000               	movlw	0
  6674     0ABF  00B9               	movwf	___fladd@a
  6675     0AC0                     l2385:
  6676     0AC0  17BB               	bsf	___fladd@a+2,7
  6677     0AC1                     l2387:
  6678     0AC1  01BC               	clrf	___fladd@a+3
  6679     0AC2  2ACB               	goto	l532
  6680     0AC3                     l2389:
  6681     0AC3  3000               	movlw	0
  6682     0AC4  00BC               	movwf	___fladd@a+3
  6683     0AC5  3000               	movlw	0
  6684     0AC6  00BB               	movwf	___fladd@a+2
  6685     0AC7  3000               	movlw	0
  6686     0AC8  00BA               	movwf	___fladd@a+1
  6687     0AC9  3000               	movlw	0
  6688     0ACA  00B9               	movwf	___fladd@a
  6689     0ACB                     l532:
  6690     0ACB  0847               	movf	___fladd@bexp,w
  6691     0ACC  0246               	subwf	___fladd@aexp,w
  6692     0ACD  1803               	skipnc
  6693     0ACE  2AD0               	goto	u2831
  6694     0ACF  2AD1               	goto	u2830
  6695     0AD0                     u2831:
  6696     0AD0  2AF5               	goto	l2425
  6697     0AD1                     u2830:
  6698     0AD1                     l2391:
  6699     0AD1  1F45               	btfss	___fladd@signs,6
  6700     0AD2  2AD4               	goto	u2841
  6701     0AD3  2AD5               	goto	u2840
  6702     0AD4                     u2841:
  6703     0AD4  2AD7               	goto	l2395
  6704     0AD5                     u2840:
  6705     0AD5                     l2393:
  6706     0AD5  3080               	movlw	128
  6707     0AD6  06C5               	xorwf	___fladd@signs,f
  6708     0AD7                     l2395:
  6709     0AD7  0847               	movf	___fladd@bexp,w
  6710     0AD8  00C8               	movwf	___fladd@grs
  6711     0AD9                     l2397:
  6712     0AD9  0846               	movf	___fladd@aexp,w
  6713     0ADA  00C7               	movwf	___fladd@bexp
  6714     0ADB                     l2399:
  6715     0ADB  0848               	movf	___fladd@grs,w
  6716     0ADC  00C6               	movwf	___fladd@aexp
  6717     0ADD                     l2401:
  6718     0ADD  0835               	movf	___fladd@b,w
  6719     0ADE  00C8               	movwf	___fladd@grs
  6720     0ADF                     l2403:
  6721     0ADF  0839               	movf	___fladd@a,w
  6722     0AE0  00B5               	movwf	___fladd@b
  6723     0AE1                     l2405:
  6724     0AE1  0848               	movf	___fladd@grs,w
  6725     0AE2  00B9               	movwf	___fladd@a
  6726     0AE3                     l2407:
  6727     0AE3  0836               	movf	___fladd@b+1,w
  6728     0AE4  00C8               	movwf	___fladd@grs
  6729     0AE5                     l2409:
  6730     0AE5  083A               	movf	___fladd@a+1,w
  6731     0AE6  00B6               	movwf	___fladd@b+1
  6732     0AE7                     l2411:
  6733     0AE7  0848               	movf	___fladd@grs,w
  6734     0AE8  00BA               	movwf	___fladd@a+1
  6735     0AE9                     l2413:
  6736     0AE9  0837               	movf	___fladd@b+2,w
  6737     0AEA  00C8               	movwf	___fladd@grs
  6738     0AEB                     l2415:
  6739     0AEB  083B               	movf	___fladd@a+2,w
  6740     0AEC  00B7               	movwf	___fladd@b+2
  6741     0AED                     l2417:
  6742     0AED  0848               	movf	___fladd@grs,w
  6743     0AEE  00BB               	movwf	___fladd@a+2
  6744     0AEF                     l2419:
  6745     0AEF  0838               	movf	___fladd@b+3,w
  6746     0AF0  00C8               	movwf	___fladd@grs
  6747     0AF1                     l2421:
  6748     0AF1  083C               	movf	___fladd@a+3,w
  6749     0AF2  00B8               	movwf	___fladd@b+3
  6750     0AF3                     l2423:
  6751     0AF3  0848               	movf	___fladd@grs,w
  6752     0AF4  00BC               	movwf	___fladd@a+3
  6753     0AF5                     l2425:
  6754     0AF5  01C8               	clrf	___fladd@grs
  6755     0AF6                     l2427:
  6756     0AF6  0846               	movf	___fladd@aexp,w
  6757     0AF7  00BD               	movwf	??___fladd
  6758     0AF8  01BE               	clrf	??___fladd+1
  6759     0AF9  083E               	movf	??___fladd+1,w
  6760     0AFA  00C0               	movwf	??___fladd+3
  6761     0AFB  0847               	movf	___fladd@bexp,w
  6762     0AFC  023D               	subwf	??___fladd,w
  6763     0AFD  00BF               	movwf	??___fladd+2
  6764     0AFE  1C03               	skipc
  6765     0AFF  03C0               	decf	??___fladd+3,f
  6766     0B00  0840               	movf	??___fladd+3,w
  6767     0B01  3A80               	xorlw	128
  6768     0B02  00FF               	movwf	btemp+1
  6769     0B03  3080               	movlw	128
  6770     0B04  027F               	subwf	btemp+1,w
  6771     0B05  1D03               	skipz
  6772     0B06  2B09               	goto	u2855
  6773     0B07  301A               	movlw	26
  6774     0B08  023F               	subwf	??___fladd+2,w
  6775     0B09                     u2855:
  6776     0B09  1C03               	skipc
  6777     0B0A  2B0C               	goto	u2851
  6778     0B0B  2B0D               	goto	u2850
  6779     0B0C                     u2851:
  6780     0B0C  2B42               	goto	l2443
  6781     0B0D                     u2850:
  6782     0B0D                     l2429:
  6783     0B0D  1283               	bcf	3,5	;RP0=0, select bank0
  6784     0B0E  1303               	bcf	3,6	;RP1=0, select bank0
  6785     0B0F  0838               	movf	___fladd@b+3,w
  6786     0B10  0437               	iorwf	___fladd@b+2,w
  6787     0B11  0436               	iorwf	___fladd@b+1,w
  6788     0B12  0435               	iorwf	___fladd@b,w
  6789     0B13  1D03               	skipz
  6790     0B14  2B16               	goto	u2861
  6791     0B15  2B18               	goto	u2860
  6792     0B16                     u2861:
  6793     0B16  3001               	movlw	1
  6794     0B17  2B19               	goto	u2870
  6795     0B18                     u2860:
  6796     0B18  3000               	movlw	0
  6797     0B19                     u2870:
  6798     0B19  00C8               	movwf	___fladd@grs
  6799     0B1A  3000               	movlw	0
  6800     0B1B  00B8               	movwf	___fladd@b+3
  6801     0B1C  3000               	movlw	0
  6802     0B1D  00B7               	movwf	___fladd@b+2
  6803     0B1E  3000               	movlw	0
  6804     0B1F  00B6               	movwf	___fladd@b+1
  6805     0B20  3000               	movlw	0
  6806     0B21  00B5               	movwf	___fladd@b
  6807     0B22  0846               	movf	___fladd@aexp,w
  6808     0B23  00C7               	movwf	___fladd@bexp
  6809     0B24  2B4A               	goto	l536
  6810     0B25                     l538:
  6811     0B25  1C48               	btfss	___fladd@grs,0
  6812     0B26  2B28               	goto	u2881
  6813     0B27  2B29               	goto	u2880
  6814     0B28                     u2881:
  6815     0B28  2B30               	goto	l2433
  6816     0B29                     u2880:
  6817     0B29                     l2431:
  6818     0B29  0848               	movf	___fladd@grs,w
  6819     0B2A  00BD               	movwf	??___fladd
  6820     0B2B  1003               	clrc
  6821     0B2C  0C3D               	rrf	??___fladd,w
  6822     0B2D  3801               	iorlw	1
  6823     0B2E  00C8               	movwf	___fladd@grs
  6824     0B2F  2B32               	goto	l2435
  6825     0B30                     l2433:
  6826     0B30  1003               	clrc
  6827     0B31  0CC8               	rrf	___fladd@grs,f
  6828     0B32                     l2435:
  6829     0B32  1C35               	btfss	___fladd@b,0
  6830     0B33  2B35               	goto	u2891
  6831     0B34  2B36               	goto	u2890
  6832     0B35                     u2891:
  6833     0B35  2B37               	goto	l2439
  6834     0B36                     u2890:
  6835     0B36                     l2437:
  6836     0B36  17C8               	bsf	___fladd@grs,7
  6837     0B37                     l2439:
  6838     0B37  3001               	movlw	1
  6839     0B38  00BD               	movwf	??___fladd
  6840     0B39                     u2905:
  6841     0B39  0D38               	rlf	___fladd@b+3,w
  6842     0B3A  0CB8               	rrf	___fladd@b+3,f
  6843     0B3B  0CB7               	rrf	___fladd@b+2,f
  6844     0B3C  0CB6               	rrf	___fladd@b+1,f
  6845     0B3D  0CB5               	rrf	___fladd@b,f
  6846     0B3E  0BBD               	decfsz	??___fladd& (0+127),f
  6847     0B3F  2B39               	goto	u2905
  6848     0B40                     l2441:
  6849     0B40  3001               	movlw	1
  6850     0B41  07C7               	addwf	___fladd@bexp,f
  6851     0B42                     l2443:
  6852     0B42  1283               	bcf	3,5	;RP0=0, select bank0
  6853     0B43  1303               	bcf	3,6	;RP1=0, select bank0
  6854     0B44  0846               	movf	___fladd@aexp,w
  6855     0B45  0247               	subwf	___fladd@bexp,w
  6856     0B46  1C03               	skipc
  6857     0B47  2B49               	goto	u2911
  6858     0B48  2B4A               	goto	u2910
  6859     0B49                     u2911:
  6860     0B49  2B25               	goto	l538
  6861     0B4A                     u2910:
  6862     0B4A                     l536:
  6863     0B4A  1B45               	btfsc	___fladd@signs,6
  6864     0B4B  2B4D               	goto	u2921
  6865     0B4C  2B4E               	goto	u2920
  6866     0B4D                     u2921:
  6867     0B4D  2B95               	goto	l2469
  6868     0B4E                     u2920:
  6869     0B4E                     l2445:
  6870     0B4E  0847               	movf	___fladd@bexp,w
  6871     0B4F  1D03               	btfss	3,2
  6872     0B50  2B52               	goto	u2931
  6873     0B51  2B53               	goto	u2930
  6874     0B52                     u2931:
  6875     0B52  2B5C               	goto	l2451
  6876     0B53                     u2930:
  6877     0B53                     l2447:
  6878     0B53  3000               	movlw	0
  6879     0B54  00B8               	movwf	?___fladd+3
  6880     0B55  3000               	movlw	0
  6881     0B56  00B7               	movwf	?___fladd+2
  6882     0B57  3000               	movlw	0
  6883     0B58  00B6               	movwf	?___fladd+1
  6884     0B59  3000               	movlw	0
  6885     0B5A  00B5               	movwf	?___fladd
  6886     0B5B  2CBD               	goto	l545
  6887     0B5C                     l2451:
  6888     0B5C  0839               	movf	___fladd@a,w
  6889     0B5D  07B5               	addwf	___fladd@b,f
  6890     0B5E  083A               	movf	___fladd@a+1,w
  6891     0B5F  1103               	clrz
  6892     0B60  1803               	skipnc
  6893     0B61  3E01               	addlw	1
  6894     0B62  1903               	skipnz
  6895     0B63  2B65               	goto	u2941
  6896     0B64  07B6               	addwf	___fladd@b+1,f
  6897     0B65                     u2941:
  6898     0B65  083B               	movf	___fladd@a+2,w
  6899     0B66  1103               	clrz
  6900     0B67  1803               	skipnc
  6901     0B68  3E01               	addlw	1
  6902     0B69  1903               	skipnz
  6903     0B6A  2B6C               	goto	u2942
  6904     0B6B  07B7               	addwf	___fladd@b+2,f
  6905     0B6C                     u2942:
  6906     0B6C  083C               	movf	___fladd@a+3,w
  6907     0B6D  1103               	clrz
  6908     0B6E  1803               	skipnc
  6909     0B6F  3E01               	addlw	1
  6910     0B70  1903               	skipnz
  6911     0B71  2B73               	goto	u2943
  6912     0B72  07B8               	addwf	___fladd@b+3,f
  6913     0B73                     u2943:
  6914     0B73                     l2453:
  6915     0B73  1C38               	btfss	___fladd@b+3,0
  6916     0B74  2B76               	goto	u2951
  6917     0B75  2B77               	goto	u2950
  6918     0B76                     u2951:
  6919     0B76  2C49               	goto	l2505
  6920     0B77                     u2950:
  6921     0B77                     l2455:
  6922     0B77  1C48               	btfss	___fladd@grs,0
  6923     0B78  2B7A               	goto	u2961
  6924     0B79  2B7B               	goto	u2960
  6925     0B7A                     u2961:
  6926     0B7A  2B82               	goto	l2459
  6927     0B7B                     u2960:
  6928     0B7B                     l2457:
  6929     0B7B  0848               	movf	___fladd@grs,w
  6930     0B7C  00BD               	movwf	??___fladd
  6931     0B7D  1003               	clrc
  6932     0B7E  0C3D               	rrf	??___fladd,w
  6933     0B7F  3801               	iorlw	1
  6934     0B80  00C8               	movwf	___fladd@grs
  6935     0B81  2B84               	goto	l2461
  6936     0B82                     l2459:
  6937     0B82  1003               	clrc
  6938     0B83  0CC8               	rrf	___fladd@grs,f
  6939     0B84                     l2461:
  6940     0B84  1C35               	btfss	___fladd@b,0
  6941     0B85  2B87               	goto	u2971
  6942     0B86  2B88               	goto	u2970
  6943     0B87                     u2971:
  6944     0B87  2B89               	goto	l2465
  6945     0B88                     u2970:
  6946     0B88                     l2463:
  6947     0B88  17C8               	bsf	___fladd@grs,7
  6948     0B89                     l2465:
  6949     0B89  3001               	movlw	1
  6950     0B8A  00BD               	movwf	??___fladd
  6951     0B8B                     u2985:
  6952     0B8B  0D38               	rlf	___fladd@b+3,w
  6953     0B8C  0CB8               	rrf	___fladd@b+3,f
  6954     0B8D  0CB7               	rrf	___fladd@b+2,f
  6955     0B8E  0CB6               	rrf	___fladd@b+1,f
  6956     0B8F  0CB5               	rrf	___fladd@b,f
  6957     0B90  0BBD               	decfsz	??___fladd& (0+127),f
  6958     0B91  2B8B               	goto	u2985
  6959     0B92                     l2467:
  6960     0B92  3001               	movlw	1
  6961     0B93  07C7               	addwf	___fladd@bexp,f
  6962     0B94  2C49               	goto	l2505
  6963     0B95                     l2469:
  6964     0B95  0838               	movf	___fladd@b+3,w
  6965     0B96  3A80               	xorlw	128
  6966     0B97  00FF               	movwf	btemp+1
  6967     0B98  083C               	movf	___fladd@a+3,w
  6968     0B99  3A80               	xorlw	128
  6969     0B9A  027F               	subwf	btemp+1,w
  6970     0B9B  1D03               	skipz
  6971     0B9C  2BA7               	goto	u2993
  6972     0B9D  083B               	movf	___fladd@a+2,w
  6973     0B9E  0237               	subwf	___fladd@b+2,w
  6974     0B9F  1D03               	skipz
  6975     0BA0  2BA7               	goto	u2993
  6976     0BA1  083A               	movf	___fladd@a+1,w
  6977     0BA2  0236               	subwf	___fladd@b+1,w
  6978     0BA3  1D03               	skipz
  6979     0BA4  2BA7               	goto	u2993
  6980     0BA5  0839               	movf	___fladd@a,w
  6981     0BA6  0235               	subwf	___fladd@b,w
  6982     0BA7                     u2993:
  6983     0BA7  1803               	skipnc
  6984     0BA8  2BAA               	goto	u2991
  6985     0BA9  2BAB               	goto	u2990
  6986     0BAA                     u2991:
  6987     0BAA  2C02               	goto	l2481
  6988     0BAB                     u2990:
  6989     0BAB                     l2471:
  6990     0BAB  30FF               	movlw	255
  6991     0BAC  00BD               	movwf	??___fladd
  6992     0BAD  30FF               	movlw	255
  6993     0BAE  00BE               	movwf	??___fladd+1
  6994     0BAF  30FF               	movlw	255
  6995     0BB0  00BF               	movwf	??___fladd+2
  6996     0BB1  30FF               	movlw	255
  6997     0BB2  00C0               	movwf	??___fladd+3
  6998     0BB3  0839               	movf	___fladd@a,w
  6999     0BB4  00C1               	movwf	??___fladd+4
  7000     0BB5  083A               	movf	___fladd@a+1,w
  7001     0BB6  00C2               	movwf	??___fladd+5
  7002     0BB7  083B               	movf	___fladd@a+2,w
  7003     0BB8  00C3               	movwf	??___fladd+6
  7004     0BB9  083C               	movf	___fladd@a+3,w
  7005     0BBA  00C4               	movwf	??___fladd+7
  7006     0BBB  0835               	movf	___fladd@b,w
  7007     0BBC  02C1               	subwf	??___fladd+4,f
  7008     0BBD  0836               	movf	___fladd@b+1,w
  7009     0BBE  1C03               	skipc
  7010     0BBF  0F36               	incfsz	___fladd@b+1,w
  7011     0BC0  2BC2               	goto	u3001
  7012     0BC1  2BC3               	goto	u3002
  7013     0BC2                     u3001:
  7014     0BC2  02C2               	subwf	??___fladd+5,f
  7015     0BC3                     u3002:
  7016     0BC3  0837               	movf	___fladd@b+2,w
  7017     0BC4  1C03               	skipc
  7018     0BC5  0F37               	incfsz	___fladd@b+2,w
  7019     0BC6  2BC8               	goto	u3003
  7020     0BC7  2BC9               	goto	u3004
  7021     0BC8                     u3003:
  7022     0BC8  02C3               	subwf	??___fladd+6,f
  7023     0BC9                     u3004:
  7024     0BC9  0838               	movf	___fladd@b+3,w
  7025     0BCA  1C03               	skipc
  7026     0BCB  0F38               	incfsz	___fladd@b+3,w
  7027     0BCC  2BCE               	goto	u3005
  7028     0BCD  2BCF               	goto	u3006
  7029     0BCE                     u3005:
  7030     0BCE  02C4               	subwf	??___fladd+7,f
  7031     0BCF                     u3006:
  7032     0BCF  0841               	movf	??___fladd+4,w
  7033     0BD0  07BD               	addwf	??___fladd,f
  7034     0BD1  0842               	movf	??___fladd+5,w
  7035     0BD2  1803               	skipnc
  7036     0BD3  0F42               	incfsz	??___fladd+5,w
  7037     0BD4  2BD6               	goto	u3010
  7038     0BD5  2BD7               	goto	u3011
  7039     0BD6                     u3010:
  7040     0BD6  07BE               	addwf	??___fladd+1,f
  7041     0BD7                     u3011:
  7042     0BD7  0843               	movf	??___fladd+6,w
  7043     0BD8  1803               	skipnc
  7044     0BD9  0F43               	incfsz	??___fladd+6,w
  7045     0BDA  2BDC               	goto	u3012
  7046     0BDB  2BDD               	goto	u3013
  7047     0BDC                     u3012:
  7048     0BDC  07BF               	addwf	??___fladd+2,f
  7049     0BDD                     u3013:
  7050     0BDD  0844               	movf	??___fladd+7,w
  7051     0BDE  1803               	skipnc
  7052     0BDF  0A44               	incf	??___fladd+7,w
  7053     0BE0  07C0               	addwf	??___fladd+3,f
  7054     0BE1  0840               	movf	??___fladd+3,w
  7055     0BE2  00B8               	movwf	___fladd@b+3
  7056     0BE3  083F               	movf	??___fladd+2,w
  7057     0BE4  00B7               	movwf	___fladd@b+2
  7058     0BE5  083E               	movf	??___fladd+1,w
  7059     0BE6  00B6               	movwf	___fladd@b+1
  7060     0BE7  083D               	movf	??___fladd,w
  7061     0BE8  00B5               	movwf	___fladd@b
  7062     0BE9                     l2473:
  7063     0BE9  3080               	movlw	128
  7064     0BEA  06C5               	xorwf	___fladd@signs,f
  7065     0BEB                     l2475:
  7066     0BEB  0348               	decf	___fladd@grs,w
  7067     0BEC  3AFF               	xorlw	255
  7068     0BED  00C8               	movwf	___fladd@grs
  7069     0BEE                     l2477:
  7070     0BEE  0848               	movf	___fladd@grs,w
  7071     0BEF  1D03               	btfss	3,2
  7072     0BF0  2BF2               	goto	u3021
  7073     0BF1  2BF3               	goto	u3020
  7074     0BF2                     u3021:
  7075     0BF2  2C10               	goto	l553
  7076     0BF3                     u3020:
  7077     0BF3                     l2479:
  7078     0BF3  3001               	movlw	1
  7079     0BF4  07B5               	addwf	___fladd@b,f
  7080     0BF5  3000               	movlw	0
  7081     0BF6  1803               	skipnc
  7082     0BF7  3001               	movlw	1
  7083     0BF8  07B6               	addwf	___fladd@b+1,f
  7084     0BF9  3000               	movlw	0
  7085     0BFA  1803               	skipnc
  7086     0BFB  3001               	movlw	1
  7087     0BFC  07B7               	addwf	___fladd@b+2,f
  7088     0BFD  3000               	movlw	0
  7089     0BFE  1803               	skipnc
  7090     0BFF  3001               	movlw	1
  7091     0C00  07B8               	addwf	___fladd@b+3,f
  7092     0C01  2C10               	goto	l553
  7093     0C02                     l2481:
  7094     0C02  0839               	movf	___fladd@a,w
  7095     0C03  02B5               	subwf	___fladd@b,f
  7096     0C04  083A               	movf	___fladd@a+1,w
  7097     0C05  1C03               	skipc
  7098     0C06  0F3A               	incfsz	___fladd@a+1,w
  7099     0C07  02B6               	subwf	___fladd@b+1,f
  7100     0C08  083B               	movf	___fladd@a+2,w
  7101     0C09  1C03               	skipc
  7102     0C0A  0F3B               	incfsz	___fladd@a+2,w
  7103     0C0B  02B7               	subwf	___fladd@b+2,f
  7104     0C0C  083C               	movf	___fladd@a+3,w
  7105     0C0D  1C03               	skipc
  7106     0C0E  0F3C               	incfsz	___fladd@a+3,w
  7107     0C0F  02B8               	subwf	___fladd@b+3,f
  7108     0C10                     l553:
  7109     0C10  0838               	movf	___fladd@b+3,w
  7110     0C11  0437               	iorwf	___fladd@b+2,w
  7111     0C12  0436               	iorwf	___fladd@b+1,w
  7112     0C13  0435               	iorwf	___fladd@b,w
  7113     0C14  1D03               	skipz
  7114     0C15  2C17               	goto	u3031
  7115     0C16  2C18               	goto	u3030
  7116     0C17                     u3031:
  7117     0C17  2C45               	goto	l2503
  7118     0C18                     u3030:
  7119     0C18                     l2483:
  7120     0C18  0848               	movf	___fladd@grs,w
  7121     0C19  1D03               	btfss	3,2
  7122     0C1A  2C1C               	goto	u3041
  7123     0C1B  2C1D               	goto	u3040
  7124     0C1C                     u3041:
  7125     0C1C  2C45               	goto	l2503
  7126     0C1D                     u3040:
  7127     0C1D                     l2485:
  7128     0C1D  3000               	movlw	0
  7129     0C1E  00B8               	movwf	?___fladd+3
  7130     0C1F  3000               	movlw	0
  7131     0C20  00B7               	movwf	?___fladd+2
  7132     0C21  3000               	movlw	0
  7133     0C22  00B6               	movwf	?___fladd+1
  7134     0C23  3000               	movlw	0
  7135     0C24  00B5               	movwf	?___fladd
  7136     0C25  2CBD               	goto	l545
  7137     0C26                     l2489:
  7138     0C26  3001               	movlw	1
  7139     0C27  00BD               	movwf	??___fladd
  7140     0C28                     u3055:
  7141     0C28  1003               	clrc
  7142     0C29  0DB5               	rlf	___fladd@b,f
  7143     0C2A  0DB6               	rlf	___fladd@b+1,f
  7144     0C2B  0DB7               	rlf	___fladd@b+2,f
  7145     0C2C  0DB8               	rlf	___fladd@b+3,f
  7146     0C2D  0BBD               	decfsz	??___fladd,f
  7147     0C2E  2C28               	goto	u3055
  7148     0C2F                     l2491:
  7149     0C2F  1FC8               	btfss	___fladd@grs,7
  7150     0C30  2C32               	goto	u3061
  7151     0C31  2C33               	goto	u3060
  7152     0C32                     u3061:
  7153     0C32  2C34               	goto	l557
  7154     0C33                     u3060:
  7155     0C33                     l2493:
  7156     0C33  1435               	bsf	___fladd@b,0
  7157     0C34                     l557:
  7158     0C34  1C48               	btfss	___fladd@grs,0
  7159     0C35  2C37               	goto	u3071
  7160     0C36  2C38               	goto	u3070
  7161     0C37                     u3071:
  7162     0C37  2C3C               	goto	l2497
  7163     0C38                     u3070:
  7164     0C38                     l2495:
  7165     0C38  1403               	setc
  7166     0C39  0D48               	rlf	___fladd@grs,w
  7167     0C3A  00C8               	movwf	___fladd@grs
  7168     0C3B  2C3E               	goto	l2499
  7169     0C3C                     l2497:
  7170     0C3C  1003               	clrc
  7171     0C3D  0DC8               	rlf	___fladd@grs,f
  7172     0C3E                     l2499:
  7173     0C3E  0847               	movf	___fladd@bexp,w
  7174     0C3F  1903               	btfsc	3,2
  7175     0C40  2C42               	goto	u3081
  7176     0C41  2C43               	goto	u3080
  7177     0C42                     u3081:
  7178     0C42  2C45               	goto	l2503
  7179     0C43                     u3080:
  7180     0C43                     l2501:
  7181     0C43  3001               	movlw	1
  7182     0C44  02C7               	subwf	___fladd@bexp,f
  7183     0C45                     l2503:
  7184     0C45  1FB7               	btfss	___fladd@b+2,7
  7185     0C46  2C48               	goto	u3091
  7186     0C47  2C49               	goto	u3090
  7187     0C48                     u3091:
  7188     0C48  2C26               	goto	l2489
  7189     0C49                     u3090:
  7190     0C49                     l2505:
  7191     0C49  01C6               	clrf	___fladd@aexp
  7192     0C4A                     l2507:
  7193     0C4A  1FC8               	btfss	___fladd@grs,7
  7194     0C4B  2C4D               	goto	u3101
  7195     0C4C  2C4E               	goto	u3100
  7196     0C4D                     u3101:
  7197     0C4D  2C5C               	goto	l2515
  7198     0C4E                     u3100:
  7199     0C4E                     l2509:
  7200     0C4E  0848               	movf	___fladd@grs,w
  7201     0C4F  397F               	andlw	127
  7202     0C50  1903               	btfsc	3,2
  7203     0C51  2C53               	goto	u3111
  7204     0C52  2C54               	goto	u3110
  7205     0C53                     u3111:
  7206     0C53  2C57               	goto	l563
  7207     0C54                     u3110:
  7208     0C54                     l2511:
  7209     0C54  3001               	movlw	1
  7210     0C55  00C6               	movwf	___fladd@aexp
  7211     0C56  2C5C               	goto	l2515
  7212     0C57                     l563:
  7213     0C57  1C35               	btfss	___fladd@b,0
  7214     0C58  2C5A               	goto	u3121
  7215     0C59  2C5B               	goto	u3120
  7216     0C5A                     u3121:
  7217     0C5A  2C5C               	goto	l2515
  7218     0C5B                     u3120:
  7219     0C5B  2C54               	goto	l2511
  7220     0C5C                     l2515:
  7221     0C5C  0846               	movf	___fladd@aexp,w
  7222     0C5D  1903               	btfsc	3,2
  7223     0C5E  2C60               	goto	u3131
  7224     0C5F  2C61               	goto	u3130
  7225     0C60                     u3131:
  7226     0C60  2C93               	goto	l566
  7227     0C61                     u3130:
  7228     0C61                     l2517:
  7229     0C61  3001               	movlw	1
  7230     0C62  07B5               	addwf	___fladd@b,f
  7231     0C63  3000               	movlw	0
  7232     0C64  1803               	skipnc
  7233     0C65  3001               	movlw	1
  7234     0C66  07B6               	addwf	___fladd@b+1,f
  7235     0C67  3000               	movlw	0
  7236     0C68  1803               	skipnc
  7237     0C69  3001               	movlw	1
  7238     0C6A  07B7               	addwf	___fladd@b+2,f
  7239     0C6B  3000               	movlw	0
  7240     0C6C  1803               	skipnc
  7241     0C6D  3001               	movlw	1
  7242     0C6E  07B8               	addwf	___fladd@b+3,f
  7243     0C6F                     l2519:
  7244     0C6F  1C38               	btfss	___fladd@b+3,0
  7245     0C70  2C72               	goto	u3141
  7246     0C71  2C73               	goto	u3140
  7247     0C72                     u3141:
  7248     0C72  2C93               	goto	l566
  7249     0C73                     u3140:
  7250     0C73                     l2521:
  7251     0C73  0835               	movf	___fladd@b,w
  7252     0C74  00BD               	movwf	??___fladd
  7253     0C75  0836               	movf	___fladd@b+1,w
  7254     0C76  00BE               	movwf	??___fladd+1
  7255     0C77  0837               	movf	___fladd@b+2,w
  7256     0C78  00BF               	movwf	??___fladd+2
  7257     0C79  0838               	movf	___fladd@b+3,w
  7258     0C7A  00C0               	movwf	??___fladd+3
  7259     0C7B  3001               	movlw	1
  7260     0C7C  00C1               	movwf	??___fladd+4
  7261     0C7D                     u3155:
  7262     0C7D  0D40               	rlf	??___fladd+3,w
  7263     0C7E  0CC0               	rrf	??___fladd+3,f
  7264     0C7F  0CBF               	rrf	??___fladd+2,f
  7265     0C80  0CBE               	rrf	??___fladd+1,f
  7266     0C81  0CBD               	rrf	??___fladd,f
  7267     0C82                     u3150:
  7268     0C82  0BC1               	decfsz	??___fladd+4,f
  7269     0C83  2C7D               	goto	u3155
  7270     0C84  0840               	movf	??___fladd+3,w
  7271     0C85  00B8               	movwf	___fladd@b+3
  7272     0C86  083F               	movf	??___fladd+2,w
  7273     0C87  00B7               	movwf	___fladd@b+2
  7274     0C88  083E               	movf	??___fladd+1,w
  7275     0C89  00B6               	movwf	___fladd@b+1
  7276     0C8A  083D               	movf	??___fladd,w
  7277     0C8B  00B5               	movwf	___fladd@b
  7278     0C8C  0A47               	incf	___fladd@bexp,w
  7279     0C8D  1903               	btfsc	3,2
  7280     0C8E  2C90               	goto	u3161
  7281     0C8F  2C91               	goto	u3160
  7282     0C90                     u3161:
  7283     0C90  2C93               	goto	l566
  7284     0C91                     u3160:
  7285     0C91                     l2523:
  7286     0C91  3001               	movlw	1
  7287     0C92  07C7               	addwf	___fladd@bexp,f
  7288     0C93                     l566:
  7289     0C93  0A47               	incf	___fladd@bexp,w
  7290     0C94  1903               	btfsc	3,2
  7291     0C95  2C97               	goto	u3171
  7292     0C96  2C98               	goto	u3170
  7293     0C97                     u3171:
  7294     0C97  2C9D               	goto	l2527
  7295     0C98                     u3170:
  7296     0C98                     l2525:
  7297     0C98  0847               	movf	___fladd@bexp,w
  7298     0C99  1D03               	btfss	3,2
  7299     0C9A  2C9C               	goto	u3181
  7300     0C9B  2C9D               	goto	u3180
  7301     0C9C                     u3181:
  7302     0C9C  2CAB               	goto	l2533
  7303     0C9D                     u3180:
  7304     0C9D                     l2527:
  7305     0C9D  3000               	movlw	0
  7306     0C9E  00B8               	movwf	___fladd@b+3
  7307     0C9F  3000               	movlw	0
  7308     0CA0  00B7               	movwf	___fladd@b+2
  7309     0CA1  3000               	movlw	0
  7310     0CA2  00B6               	movwf	___fladd@b+1
  7311     0CA3  3000               	movlw	0
  7312     0CA4  00B5               	movwf	___fladd@b
  7313     0CA5                     l2529:
  7314     0CA5  0847               	movf	___fladd@bexp,w
  7315     0CA6  1D03               	btfss	3,2
  7316     0CA7  2CA9               	goto	u3191
  7317     0CA8  2CAA               	goto	u3190
  7318     0CA9                     u3191:
  7319     0CA9  2CAB               	goto	l2533
  7320     0CAA                     u3190:
  7321     0CAA                     l2531:
  7322     0CAA  01C5               	clrf	___fladd@signs
  7323     0CAB                     l2533:
  7324     0CAB  1C47               	btfss	___fladd@bexp,0
  7325     0CAC  2CAE               	goto	u3201
  7326     0CAD  2CAF               	goto	u3200
  7327     0CAE                     u3201:
  7328     0CAE  2CB1               	goto	l2537
  7329     0CAF                     u3200:
  7330     0CAF                     l2535:
  7331     0CAF  17B7               	bsf	___fladd@b+2,7
  7332     0CB0  2CB3               	goto	l574
  7333     0CB1                     l2537:
  7334     0CB1  307F               	movlw	127
  7335     0CB2  05B7               	andwf	___fladd@b+2,f
  7336     0CB3                     l574:
  7337     0CB3  0847               	movf	___fladd@bexp,w
  7338     0CB4  00BD               	movwf	??___fladd
  7339     0CB5  1003               	clrc
  7340     0CB6  0C3D               	rrf	??___fladd,w
  7341     0CB7  00B8               	movwf	___fladd@b+3
  7342     0CB8                     l2539:
  7343     0CB8  1FC5               	btfss	___fladd@signs,7
  7344     0CB9  2CBB               	goto	u3211
  7345     0CBA  2CBC               	goto	u3210
  7346     0CBB                     u3211:
  7347     0CBB  2CBD               	goto	l575
  7348     0CBC                     u3210:
  7349     0CBC                     l2541:
  7350     0CBC  17B8               	bsf	___fladd@b+3,7
  7351     0CBD                     l575:
  7352     0CBD                     l545:
  7353     0CBD  0008               	return
  7354     0CBE                     __end_of___fladd:
  7355                           
  7356                           	psect	text27
  7357     1B0C                     __ptext27:	
  7358 ;; *************** function ___flneg *****************
  7359 ;; Defined at:
  7360 ;;		line 15 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\flneg.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;  f1              4    0[COMMON] unsigned char 
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;		None
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  4    0[COMMON] unsigned char 
  7367 ;; Registers used:
  7368 ;;		wreg
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7374 ;;      Params:         4       0       0       0       0
  7375 ;;      Locals:         0       0       0       0       0
  7376 ;;      Temps:          0       0       0       0       0
  7377 ;;      Totals:         4       0       0       0       0
  7378 ;;Total ram usage:        4 bytes
  7379 ;; Hardware stack levels used: 1
  7380 ;; This function calls:
  7381 ;;		Nothing
  7382 ;; This function is called by:
  7383 ;;		_efgtoa
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387     1B0C                     ___flneg:	
  7388                           ;psect for function ___flneg
  7389                           
  7390     1B0C                     l2601:	
  7391                           ;incstack = 0
  7392                           ; Regs used in ___flneg: [wreg]
  7393                           
  7394     1B0C  0873               	movf	___flneg@f1+3,w
  7395     1B0D  0472               	iorwf	___flneg@f1+2,w
  7396     1B0E  0471               	iorwf	___flneg@f1+1,w
  7397     1B0F  0470               	iorwf	___flneg@f1,w
  7398     1B10  1903               	skipnz
  7399     1B11  2B13               	goto	u3371
  7400     1B12  2B14               	goto	u3370
  7401     1B13                     u3371:
  7402     1B13  2B16               	goto	l2605
  7403     1B14                     u3370:
  7404     1B14                     l2603:
  7405     1B14  3080               	movlw	128
  7406     1B15  06F3               	xorwf	___flneg@f1+3,f
  7407     1B16                     l2605:
  7408     1B16                     l421:
  7409     1B16  0008               	return
  7410     1B17                     __end_of___flneg:
  7411                           
  7412                           	psect	text28
  7413     0CBE                     __ptext28:	
  7414 ;; *************** function ___flmul *****************
  7415 ;; Defined at:
  7416 ;;		line 8 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;  b               4    0[BANK0 ] unsigned char 
  7419 ;;  a               4    4[BANK0 ] unsigned char 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;  prod            4   15[BANK0 ] struct .
  7422 ;;  grs             4    9[BANK0 ] unsigned long 
  7423 ;;  temp            2   19[BANK0 ] struct .
  7424 ;;  bexp            1   14[BANK0 ] unsigned char 
  7425 ;;  aexp            1   13[BANK0 ] unsigned char 
  7426 ;;  sign            1    8[BANK0 ] unsigned char 
  7427 ;; Return value:  Size  Location     Type
  7428 ;;                  4    0[BANK0 ] unsigned char 
  7429 ;; Registers used:
  7430 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7431 ;; Tracked objects:
  7432 ;;		On entry : 0/0
  7433 ;;		On exit  : 0/0
  7434 ;;		Unchanged: 0/0
  7435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7436 ;;      Params:         0       8       0       0       0
  7437 ;;      Locals:         0      13       0       0       0
  7438 ;;      Temps:          5       0       0       0       0
  7439 ;;      Totals:         5      21       0       0       0
  7440 ;;Total ram usage:       26 bytes
  7441 ;; Hardware stack levels used: 1
  7442 ;; Hardware stack levels required when called: 1
  7443 ;; This function calls:
  7444 ;;		__Umul8_16
  7445 ;; This function is called by:
  7446 ;;		_setDigit
  7447 ;;		_calculate
  7448 ;;		_efgtoa
  7449 ;; This function uses a non-reentrant model
  7450 ;;
  7451                           
  7452     0CBE                     ___flmul:	
  7453                           ;psect for function ___flmul
  7454                           
  7455     0CBE                     l2795:	
  7456                           ;incstack = 0
  7457                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7458                           
  7459     0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  7460     0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  7461     0CC0  0823               	movf	___flmul@b+3,w
  7462     0CC1  00A8               	movwf	___flmul@sign
  7463     0CC2                     l2797:
  7464     0CC2  3080               	movlw	128
  7465     0CC3  05A8               	andwf	___flmul@sign,f
  7466     0CC4                     l2799:
  7467     0CC4  0823               	movf	___flmul@b+3,w
  7468     0CC5  00F9               	movwf	??___flmul
  7469     0CC6  0779               	addwf	??___flmul,w
  7470     0CC7  00AE               	movwf	___flmul@bexp
  7471     0CC8                     l2801:
  7472     0CC8  1FA2               	btfss	___flmul@b+2,7
  7473     0CC9  2CCB               	goto	u3781
  7474     0CCA  2CCC               	goto	u3780
  7475     0CCB                     u3781:
  7476     0CCB  2CCD               	goto	l2805
  7477     0CCC                     u3780:
  7478     0CCC                     l2803:
  7479     0CCC  142E               	bsf	___flmul@bexp,0
  7480     0CCD                     l2805:
  7481     0CCD  082E               	movf	___flmul@bexp,w
  7482     0CCE  1903               	btfsc	3,2
  7483     0CCF  2CD1               	goto	u3791
  7484     0CD0  2CD2               	goto	u3790
  7485     0CD1                     u3791:
  7486     0CD1  2CE1               	goto	l2813
  7487     0CD2                     u3790:
  7488     0CD2                     l2807:
  7489     0CD2  0A2E               	incf	___flmul@bexp,w
  7490     0CD3  1D03               	btfss	3,2
  7491     0CD4  2CD6               	goto	u3801
  7492     0CD5  2CD7               	goto	u3800
  7493     0CD6                     u3801:
  7494     0CD6  2CDF               	goto	l2811
  7495     0CD7                     u3800:
  7496     0CD7                     l2809:
  7497     0CD7  3000               	movlw	0
  7498     0CD8  00A3               	movwf	___flmul@b+3
  7499     0CD9  3000               	movlw	0
  7500     0CDA  00A2               	movwf	___flmul@b+2
  7501     0CDB  3000               	movlw	0
  7502     0CDC  00A1               	movwf	___flmul@b+1
  7503     0CDD  3000               	movlw	0
  7504     0CDE  00A0               	movwf	___flmul@b
  7505     0CDF                     l2811:
  7506     0CDF  17A2               	bsf	___flmul@b+2,7
  7507     0CE0  2CE9               	goto	l2815
  7508     0CE1                     l2813:
  7509     0CE1  3000               	movlw	0
  7510     0CE2  00A3               	movwf	___flmul@b+3
  7511     0CE3  3000               	movlw	0
  7512     0CE4  00A2               	movwf	___flmul@b+2
  7513     0CE5  3000               	movlw	0
  7514     0CE6  00A1               	movwf	___flmul@b+1
  7515     0CE7  3000               	movlw	0
  7516     0CE8  00A0               	movwf	___flmul@b
  7517     0CE9                     l2815:
  7518     0CE9  0827               	movf	___flmul@a+3,w
  7519     0CEA  3980               	andlw	128
  7520     0CEB  06A8               	xorwf	___flmul@sign,f
  7521     0CEC                     l2817:
  7522     0CEC  0827               	movf	___flmul@a+3,w
  7523     0CED  00F9               	movwf	??___flmul
  7524     0CEE  0779               	addwf	??___flmul,w
  7525     0CEF  00AD               	movwf	___flmul@aexp
  7526     0CF0                     l2819:
  7527     0CF0  1FA6               	btfss	___flmul@a+2,7
  7528     0CF1  2CF3               	goto	u3811
  7529     0CF2  2CF4               	goto	u3810
  7530     0CF3                     u3811:
  7531     0CF3  2CF5               	goto	l2823
  7532     0CF4                     u3810:
  7533     0CF4                     l2821:
  7534     0CF4  142D               	bsf	___flmul@aexp,0
  7535     0CF5                     l2823:
  7536     0CF5  082D               	movf	___flmul@aexp,w
  7537     0CF6  1903               	btfsc	3,2
  7538     0CF7  2CF9               	goto	u3821
  7539     0CF8  2CFA               	goto	u3820
  7540     0CF9                     u3821:
  7541     0CF9  2D09               	goto	l2831
  7542     0CFA                     u3820:
  7543     0CFA                     l2825:
  7544     0CFA  0A2D               	incf	___flmul@aexp,w
  7545     0CFB  1D03               	btfss	3,2
  7546     0CFC  2CFE               	goto	u3831
  7547     0CFD  2CFF               	goto	u3830
  7548     0CFE                     u3831:
  7549     0CFE  2D07               	goto	l2829
  7550     0CFF                     u3830:
  7551     0CFF                     l2827:
  7552     0CFF  3000               	movlw	0
  7553     0D00  00A7               	movwf	___flmul@a+3
  7554     0D01  3000               	movlw	0
  7555     0D02  00A6               	movwf	___flmul@a+2
  7556     0D03  3000               	movlw	0
  7557     0D04  00A5               	movwf	___flmul@a+1
  7558     0D05  3000               	movlw	0
  7559     0D06  00A4               	movwf	___flmul@a
  7560     0D07                     l2829:
  7561     0D07  17A6               	bsf	___flmul@a+2,7
  7562     0D08  2D11               	goto	l2833
  7563     0D09                     l2831:
  7564     0D09  3000               	movlw	0
  7565     0D0A  00A7               	movwf	___flmul@a+3
  7566     0D0B  3000               	movlw	0
  7567     0D0C  00A6               	movwf	___flmul@a+2
  7568     0D0D  3000               	movlw	0
  7569     0D0E  00A5               	movwf	___flmul@a+1
  7570     0D0F  3000               	movlw	0
  7571     0D10  00A4               	movwf	___flmul@a
  7572     0D11                     l2833:
  7573     0D11  082D               	movf	___flmul@aexp,w
  7574     0D12  1903               	btfsc	3,2
  7575     0D13  2D15               	goto	u3841
  7576     0D14  2D16               	goto	u3840
  7577     0D15                     u3841:
  7578     0D15  2D1B               	goto	l2837
  7579     0D16                     u3840:
  7580     0D16                     l2835:
  7581     0D16  082E               	movf	___flmul@bexp,w
  7582     0D17  1D03               	btfss	3,2
  7583     0D18  2D1A               	goto	u3851
  7584     0D19  2D1B               	goto	u3850
  7585     0D1A                     u3851:
  7586     0D1A  2D24               	goto	l2841
  7587     0D1B                     u3850:
  7588     0D1B                     l2837:
  7589     0D1B  3000               	movlw	0
  7590     0D1C  00A3               	movwf	?___flmul+3
  7591     0D1D  3000               	movlw	0
  7592     0D1E  00A2               	movwf	?___flmul+2
  7593     0D1F  3000               	movlw	0
  7594     0D20  00A1               	movwf	?___flmul+1
  7595     0D21  3000               	movlw	0
  7596     0D22  00A0               	movwf	?___flmul
  7597     0D23  2FFF               	goto	l628
  7598     0D24                     l2841:
  7599     0D24  0820               	movf	___flmul@b,w
  7600     0D25  00F0               	movwf	__Umul8_16@multiplicand
  7601     0D26  0826               	movf	___flmul@a+2,w
  7602     0D27  160A  158A  240E  120A  158A  	fcall	__Umul8_16
  7603     0D2C  0871               	movf	?__Umul8_16+1,w
  7604     0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  7605     0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  7606     0D2F  00B4               	movwf	___flmul@temp+1
  7607     0D30  0870               	movf	?__Umul8_16,w
  7608     0D31  00B3               	movwf	___flmul@temp
  7609     0D32                     l2843:
  7610     0D32  0833               	movf	___flmul@temp,w
  7611     0D33  00F9               	movwf	??___flmul
  7612     0D34  01FA               	clrf	??___flmul+1
  7613     0D35  01FB               	clrf	??___flmul+2
  7614     0D36  01FC               	clrf	??___flmul+3
  7615     0D37  087C               	movf	??___flmul+3,w
  7616     0D38  00AC               	movwf	___flmul@grs+3
  7617     0D39  087B               	movf	??___flmul+2,w
  7618     0D3A  00AB               	movwf	___flmul@grs+2
  7619     0D3B  087A               	movf	??___flmul+1,w
  7620     0D3C  00AA               	movwf	___flmul@grs+1
  7621     0D3D  0879               	movf	??___flmul,w
  7622     0D3E  00A9               	movwf	___flmul@grs
  7623     0D3F                     l2845:
  7624     0D3F  0834               	movf	___flmul@temp+1,w
  7625     0D40  00F9               	movwf	??___flmul
  7626     0D41  01FA               	clrf	??___flmul+1
  7627     0D42  01FB               	clrf	??___flmul+2
  7628     0D43  01FC               	clrf	??___flmul+3
  7629     0D44  087C               	movf	??___flmul+3,w
  7630     0D45  00B2               	movwf	___flmul@prod+3
  7631     0D46  087B               	movf	??___flmul+2,w
  7632     0D47  00B1               	movwf	___flmul@prod+2
  7633     0D48  087A               	movf	??___flmul+1,w
  7634     0D49  00B0               	movwf	___flmul@prod+1
  7635     0D4A  0879               	movf	??___flmul,w
  7636     0D4B  00AF               	movwf	___flmul@prod
  7637     0D4C  0821               	movf	___flmul@b+1,w
  7638     0D4D  00F0               	movwf	__Umul8_16@multiplicand
  7639     0D4E  0825               	movf	___flmul@a+1,w
  7640     0D4F  160A  158A  240E  120A  158A  	fcall	__Umul8_16
  7641     0D54  0871               	movf	?__Umul8_16+1,w
  7642     0D55  1283               	bcf	3,5	;RP0=0, select bank0
  7643     0D56  1303               	bcf	3,6	;RP1=0, select bank0
  7644     0D57  00B4               	movwf	___flmul@temp+1
  7645     0D58  0870               	movf	?__Umul8_16,w
  7646     0D59  00B3               	movwf	___flmul@temp
  7647     0D5A                     l2847:
  7648     0D5A  0833               	movf	___flmul@temp,w
  7649     0D5B  00F9               	movwf	??___flmul
  7650     0D5C  01FA               	clrf	??___flmul+1
  7651     0D5D  01FB               	clrf	??___flmul+2
  7652     0D5E  01FC               	clrf	??___flmul+3
  7653     0D5F  0879               	movf	??___flmul,w
  7654     0D60  07A9               	addwf	___flmul@grs,f
  7655     0D61  087A               	movf	??___flmul+1,w
  7656     0D62  1103               	clrz
  7657     0D63  1803               	skipnc
  7658     0D64  3E01               	addlw	1
  7659     0D65  1903               	skipnz
  7660     0D66  2D68               	goto	u3861
  7661     0D67  07AA               	addwf	___flmul@grs+1,f
  7662     0D68                     u3861:
  7663     0D68  087B               	movf	??___flmul+2,w
  7664     0D69  1103               	clrz
  7665     0D6A  1803               	skipnc
  7666     0D6B  3E01               	addlw	1
  7667     0D6C  1903               	skipnz
  7668     0D6D  2D6F               	goto	u3862
  7669     0D6E  07AB               	addwf	___flmul@grs+2,f
  7670     0D6F                     u3862:
  7671     0D6F  087C               	movf	??___flmul+3,w
  7672     0D70  1103               	clrz
  7673     0D71  1803               	skipnc
  7674     0D72  3E01               	addlw	1
  7675     0D73  1903               	skipnz
  7676     0D74  2D76               	goto	u3863
  7677     0D75  07AC               	addwf	___flmul@grs+3,f
  7678     0D76                     u3863:
  7679     0D76                     l2849:
  7680     0D76  0834               	movf	___flmul@temp+1,w
  7681     0D77  00F9               	movwf	??___flmul
  7682     0D78  01FA               	clrf	??___flmul+1
  7683     0D79  01FB               	clrf	??___flmul+2
  7684     0D7A  01FC               	clrf	??___flmul+3
  7685     0D7B  0879               	movf	??___flmul,w
  7686     0D7C  07AF               	addwf	___flmul@prod,f
  7687     0D7D  087A               	movf	??___flmul+1,w
  7688     0D7E  1103               	clrz
  7689     0D7F  1803               	skipnc
  7690     0D80  3E01               	addlw	1
  7691     0D81  1903               	skipnz
  7692     0D82  2D84               	goto	u3871
  7693     0D83  07B0               	addwf	___flmul@prod+1,f
  7694     0D84                     u3871:
  7695     0D84  087B               	movf	??___flmul+2,w
  7696     0D85  1103               	clrz
  7697     0D86  1803               	skipnc
  7698     0D87  3E01               	addlw	1
  7699     0D88  1903               	skipnz
  7700     0D89  2D8B               	goto	u3872
  7701     0D8A  07B1               	addwf	___flmul@prod+2,f
  7702     0D8B                     u3872:
  7703     0D8B  087C               	movf	??___flmul+3,w
  7704     0D8C  1103               	clrz
  7705     0D8D  1803               	skipnc
  7706     0D8E  3E01               	addlw	1
  7707     0D8F  1903               	skipnz
  7708     0D90  2D92               	goto	u3873
  7709     0D91  07B2               	addwf	___flmul@prod+3,f
  7710     0D92                     u3873:
  7711     0D92  0822               	movf	___flmul@b+2,w
  7712     0D93  00F0               	movwf	__Umul8_16@multiplicand
  7713     0D94  0824               	movf	___flmul@a,w
  7714     0D95  160A  158A  240E  120A  158A  	fcall	__Umul8_16
  7715     0D9A  0871               	movf	?__Umul8_16+1,w
  7716     0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  7717     0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  7718     0D9D  00B4               	movwf	___flmul@temp+1
  7719     0D9E  0870               	movf	?__Umul8_16,w
  7720     0D9F  00B3               	movwf	___flmul@temp
  7721     0DA0                     l2851:
  7722     0DA0  0833               	movf	___flmul@temp,w
  7723     0DA1  00F9               	movwf	??___flmul
  7724     0DA2  01FA               	clrf	??___flmul+1
  7725     0DA3  01FB               	clrf	??___flmul+2
  7726     0DA4  01FC               	clrf	??___flmul+3
  7727     0DA5  0879               	movf	??___flmul,w
  7728     0DA6  07A9               	addwf	___flmul@grs,f
  7729     0DA7  087A               	movf	??___flmul+1,w
  7730     0DA8  1103               	clrz
  7731     0DA9  1803               	skipnc
  7732     0DAA  3E01               	addlw	1
  7733     0DAB  1903               	skipnz
  7734     0DAC  2DAE               	goto	u3881
  7735     0DAD  07AA               	addwf	___flmul@grs+1,f
  7736     0DAE                     u3881:
  7737     0DAE  087B               	movf	??___flmul+2,w
  7738     0DAF  1103               	clrz
  7739     0DB0  1803               	skipnc
  7740     0DB1  3E01               	addlw	1
  7741     0DB2  1903               	skipnz
  7742     0DB3  2DB5               	goto	u3882
  7743     0DB4  07AB               	addwf	___flmul@grs+2,f
  7744     0DB5                     u3882:
  7745     0DB5  087C               	movf	??___flmul+3,w
  7746     0DB6  1103               	clrz
  7747     0DB7  1803               	skipnc
  7748     0DB8  3E01               	addlw	1
  7749     0DB9  1903               	skipnz
  7750     0DBA  2DBC               	goto	u3883
  7751     0DBB  07AC               	addwf	___flmul@grs+3,f
  7752     0DBC                     u3883:
  7753     0DBC                     l2853:
  7754     0DBC  0834               	movf	___flmul@temp+1,w
  7755     0DBD  00F9               	movwf	??___flmul
  7756     0DBE  01FA               	clrf	??___flmul+1
  7757     0DBF  01FB               	clrf	??___flmul+2
  7758     0DC0  01FC               	clrf	??___flmul+3
  7759     0DC1  0879               	movf	??___flmul,w
  7760     0DC2  07AF               	addwf	___flmul@prod,f
  7761     0DC3  087A               	movf	??___flmul+1,w
  7762     0DC4  1103               	clrz
  7763     0DC5  1803               	skipnc
  7764     0DC6  3E01               	addlw	1
  7765     0DC7  1903               	skipnz
  7766     0DC8  2DCA               	goto	u3891
  7767     0DC9  07B0               	addwf	___flmul@prod+1,f
  7768     0DCA                     u3891:
  7769     0DCA  087B               	movf	??___flmul+2,w
  7770     0DCB  1103               	clrz
  7771     0DCC  1803               	skipnc
  7772     0DCD  3E01               	addlw	1
  7773     0DCE  1903               	skipnz
  7774     0DCF  2DD1               	goto	u3892
  7775     0DD0  07B1               	addwf	___flmul@prod+2,f
  7776     0DD1                     u3892:
  7777     0DD1  087C               	movf	??___flmul+3,w
  7778     0DD2  1103               	clrz
  7779     0DD3  1803               	skipnc
  7780     0DD4  3E01               	addlw	1
  7781     0DD5  1903               	skipnz
  7782     0DD6  2DD8               	goto	u3893
  7783     0DD7  07B2               	addwf	___flmul@prod+3,f
  7784     0DD8                     u3893:
  7785     0DD8                     l2855:
  7786     0DD8  3008               	movlw	8
  7787     0DD9  00F9               	movwf	??___flmul
  7788     0DDA                     u3905:
  7789     0DDA  1003               	clrc
  7790     0DDB  0DA9               	rlf	___flmul@grs,f
  7791     0DDC  0DAA               	rlf	___flmul@grs+1,f
  7792     0DDD  0DAB               	rlf	___flmul@grs+2,f
  7793     0DDE  0DAC               	rlf	___flmul@grs+3,f
  7794     0DDF  0BF9               	decfsz	??___flmul,f
  7795     0DE0  2DDA               	goto	u3905
  7796     0DE1                     l2857:
  7797     0DE1  0821               	movf	___flmul@b+1,w
  7798     0DE2  00F0               	movwf	__Umul8_16@multiplicand
  7799     0DE3  0824               	movf	___flmul@a,w
  7800     0DE4  160A  158A  240E  120A  158A  	fcall	__Umul8_16
  7801     0DE9  0871               	movf	?__Umul8_16+1,w
  7802     0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  7803     0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  7804     0DEC  00B4               	movwf	___flmul@temp+1
  7805     0DED  0870               	movf	?__Umul8_16,w
  7806     0DEE  00B3               	movwf	___flmul@temp
  7807     0DEF                     l2859:
  7808     0DEF  0833               	movf	___flmul@temp,w
  7809     0DF0  00F9               	movwf	??___flmul
  7810     0DF1  0834               	movf	___flmul@temp+1,w
  7811     0DF2  00FA               	movwf	??___flmul+1
  7812     0DF3  01FB               	clrf	??___flmul+2
  7813     0DF4  01FC               	clrf	??___flmul+3
  7814     0DF5  0879               	movf	??___flmul,w
  7815     0DF6  07A9               	addwf	___flmul@grs,f
  7816     0DF7  087A               	movf	??___flmul+1,w
  7817     0DF8  1103               	clrz
  7818     0DF9  1803               	skipnc
  7819     0DFA  3E01               	addlw	1
  7820     0DFB  1903               	skipnz
  7821     0DFC  2DFE               	goto	u3911
  7822     0DFD  07AA               	addwf	___flmul@grs+1,f
  7823     0DFE                     u3911:
  7824     0DFE  087B               	movf	??___flmul+2,w
  7825     0DFF  1103               	clrz
  7826     0E00  1803               	skipnc
  7827     0E01  3E01               	addlw	1
  7828     0E02  1903               	skipnz
  7829     0E03  2E05               	goto	u3912
  7830     0E04  07AB               	addwf	___flmul@grs+2,f
  7831     0E05                     u3912:
  7832     0E05  087C               	movf	??___flmul+3,w
  7833     0E06  1103               	clrz
  7834     0E07  1803               	skipnc
  7835     0E08  3E01               	addlw	1
  7836     0E09  1903               	skipnz
  7837     0E0A  2E0C               	goto	u3913
  7838     0E0B  07AC               	addwf	___flmul@grs+3,f
  7839     0E0C                     u3913:
  7840     0E0C                     l2861:
  7841     0E0C  0820               	movf	___flmul@b,w
  7842     0E0D  00F0               	movwf	__Umul8_16@multiplicand
  7843     0E0E  0825               	movf	___flmul@a+1,w
  7844     0E0F  160A  158A  240E  120A  158A  	fcall	__Umul8_16
  7845     0E14  0871               	movf	?__Umul8_16+1,w
  7846     0E15  1283               	bcf	3,5	;RP0=0, select bank0
  7847     0E16  1303               	bcf	3,6	;RP1=0, select bank0
  7848     0E17  00B4               	movwf	___flmul@temp+1
  7849     0E18  0870               	movf	?__Umul8_16,w
  7850     0E19  00B3               	movwf	___flmul@temp
  7851     0E1A                     l2863:
  7852     0E1A  0833               	movf	___flmul@temp,w
  7853     0E1B  00F9               	movwf	??___flmul
  7854     0E1C  0834               	movf	___flmul@temp+1,w
  7855     0E1D  00FA               	movwf	??___flmul+1
  7856     0E1E  01FB               	clrf	??___flmul+2
  7857     0E1F  01FC               	clrf	??___flmul+3
  7858     0E20  0879               	movf	??___flmul,w
  7859     0E21  07A9               	addwf	___flmul@grs,f
  7860     0E22  087A               	movf	??___flmul+1,w
  7861     0E23  1103               	clrz
  7862     0E24  1803               	skipnc
  7863     0E25  3E01               	addlw	1
  7864     0E26  1903               	skipnz
  7865     0E27  2E29               	goto	u3921
  7866     0E28  07AA               	addwf	___flmul@grs+1,f
  7867     0E29                     u3921:
  7868     0E29  087B               	movf	??___flmul+2,w
  7869     0E2A  1103               	clrz
  7870     0E2B  1803               	skipnc
  7871     0E2C  3E01               	addlw	1
  7872     0E2D  1903               	skipnz
  7873     0E2E  2E30               	goto	u3922
  7874     0E2F  07AB               	addwf	___flmul@grs+2,f
  7875     0E30                     u3922:
  7876     0E30  087C               	movf	??___flmul+3,w
  7877     0E31  1103               	clrz
  7878     0E32  1803               	skipnc
  7879     0E33  3E01               	addlw	1
  7880     0E34  1903               	skipnz
  7881     0E35  2E37               	goto	u3923
  7882     0E36  07AC               	addwf	___flmul@grs+3,f
  7883     0E37                     u3923:
  7884     0E37                     l2865:
  7885     0E37  3008               	movlw	8
  7886     0E38  00F9               	movwf	??___flmul
  7887     0E39                     u3935:
  7888     0E39  1003               	clrc
  7889     0E3A  0DA9               	rlf	___flmul@grs,f
  7890     0E3B  0DAA               	rlf	___flmul@grs+1,f
  7891     0E3C  0DAB               	rlf	___flmul@grs+2,f
  7892     0E3D  0DAC               	rlf	___flmul@grs+3,f
  7893     0E3E  0BF9               	decfsz	??___flmul,f
  7894     0E3F  2E39               	goto	u3935
  7895     0E40  0820               	movf	___flmul@b,w
  7896     0E41  00F0               	movwf	__Umul8_16@multiplicand
  7897     0E42  0824               	movf	___flmul@a,w
  7898     0E43  160A  158A  240E  120A  158A  	fcall	__Umul8_16
  7899     0E48  0871               	movf	?__Umul8_16+1,w
  7900     0E49  1283               	bcf	3,5	;RP0=0, select bank0
  7901     0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  7902     0E4B  00B4               	movwf	___flmul@temp+1
  7903     0E4C  0870               	movf	?__Umul8_16,w
  7904     0E4D  00B3               	movwf	___flmul@temp
  7905     0E4E                     l2867:
  7906     0E4E  0833               	movf	___flmul@temp,w
  7907     0E4F  00F9               	movwf	??___flmul
  7908     0E50  0834               	movf	___flmul@temp+1,w
  7909     0E51  00FA               	movwf	??___flmul+1
  7910     0E52  01FB               	clrf	??___flmul+2
  7911     0E53  01FC               	clrf	??___flmul+3
  7912     0E54  0879               	movf	??___flmul,w
  7913     0E55  07A9               	addwf	___flmul@grs,f
  7914     0E56  087A               	movf	??___flmul+1,w
  7915     0E57  1103               	clrz
  7916     0E58  1803               	skipnc
  7917     0E59  3E01               	addlw	1
  7918     0E5A  1903               	skipnz
  7919     0E5B  2E5D               	goto	u3941
  7920     0E5C  07AA               	addwf	___flmul@grs+1,f
  7921     0E5D                     u3941:
  7922     0E5D  087B               	movf	??___flmul+2,w
  7923     0E5E  1103               	clrz
  7924     0E5F  1803               	skipnc
  7925     0E60  3E01               	addlw	1
  7926     0E61  1903               	skipnz
  7927     0E62  2E64               	goto	u3942
  7928     0E63  07AB               	addwf	___flmul@grs+2,f
  7929     0E64                     u3942:
  7930     0E64  087C               	movf	??___flmul+3,w
  7931     0E65  1103               	clrz
  7932     0E66  1803               	skipnc
  7933     0E67  3E01               	addlw	1
  7934     0E68  1903               	skipnz
  7935     0E69  2E6B               	goto	u3943
  7936     0E6A  07AC               	addwf	___flmul@grs+3,f
  7937     0E6B                     u3943:
  7938     0E6B                     l2869:
  7939     0E6B  0821               	movf	___flmul@b+1,w
  7940     0E6C  00F0               	movwf	__Umul8_16@multiplicand
  7941     0E6D  0826               	movf	___flmul@a+2,w
  7942     0E6E  160A  158A  240E  120A  158A  	fcall	__Umul8_16
  7943     0E73  0871               	movf	?__Umul8_16+1,w
  7944     0E74  1283               	bcf	3,5	;RP0=0, select bank0
  7945     0E75  1303               	bcf	3,6	;RP1=0, select bank0
  7946     0E76  00B4               	movwf	___flmul@temp+1
  7947     0E77  0870               	movf	?__Umul8_16,w
  7948     0E78  00B3               	movwf	___flmul@temp
  7949     0E79  0833               	movf	___flmul@temp,w
  7950     0E7A  00F9               	movwf	??___flmul
  7951     0E7B  0834               	movf	___flmul@temp+1,w
  7952     0E7C  00FA               	movwf	??___flmul+1
  7953     0E7D  01FB               	clrf	??___flmul+2
  7954     0E7E  01FC               	clrf	??___flmul+3
  7955     0E7F  0879               	movf	??___flmul,w
  7956     0E80  07AF               	addwf	___flmul@prod,f
  7957     0E81  087A               	movf	??___flmul+1,w
  7958     0E82  1103               	clrz
  7959     0E83  1803               	skipnc
  7960     0E84  3E01               	addlw	1
  7961     0E85  1903               	skipnz
  7962     0E86  2E88               	goto	u3951
  7963     0E87  07B0               	addwf	___flmul@prod+1,f
  7964     0E88                     u3951:
  7965     0E88  087B               	movf	??___flmul+2,w
  7966     0E89  1103               	clrz
  7967     0E8A  1803               	skipnc
  7968     0E8B  3E01               	addlw	1
  7969     0E8C  1903               	skipnz
  7970     0E8D  2E8F               	goto	u3952
  7971     0E8E  07B1               	addwf	___flmul@prod+2,f
  7972     0E8F                     u3952:
  7973     0E8F  087C               	movf	??___flmul+3,w
  7974     0E90  1103               	clrz
  7975     0E91  1803               	skipnc
  7976     0E92  3E01               	addlw	1
  7977     0E93  1903               	skipnz
  7978     0E94  2E96               	goto	u3953
  7979     0E95  07B2               	addwf	___flmul@prod+3,f
  7980     0E96                     u3953:
  7981     0E96                     l2871:
  7982     0E96  0822               	movf	___flmul@b+2,w
  7983     0E97  00F0               	movwf	__Umul8_16@multiplicand
  7984     0E98  0825               	movf	___flmul@a+1,w
  7985     0E99  160A  158A  240E  120A  158A  	fcall	__Umul8_16
  7986     0E9E  0871               	movf	?__Umul8_16+1,w
  7987     0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  7988     0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  7989     0EA1  00B4               	movwf	___flmul@temp+1
  7990     0EA2  0870               	movf	?__Umul8_16,w
  7991     0EA3  00B3               	movwf	___flmul@temp
  7992     0EA4                     l2873:
  7993     0EA4  0833               	movf	___flmul@temp,w
  7994     0EA5  00F9               	movwf	??___flmul
  7995     0EA6  0834               	movf	___flmul@temp+1,w
  7996     0EA7  00FA               	movwf	??___flmul+1
  7997     0EA8  01FB               	clrf	??___flmul+2
  7998     0EA9  01FC               	clrf	??___flmul+3
  7999     0EAA  0879               	movf	??___flmul,w
  8000     0EAB  07AF               	addwf	___flmul@prod,f
  8001     0EAC  087A               	movf	??___flmul+1,w
  8002     0EAD  1103               	clrz
  8003     0EAE  1803               	skipnc
  8004     0EAF  3E01               	addlw	1
  8005     0EB0  1903               	skipnz
  8006     0EB1  2EB3               	goto	u3961
  8007     0EB2  07B0               	addwf	___flmul@prod+1,f
  8008     0EB3                     u3961:
  8009     0EB3  087B               	movf	??___flmul+2,w
  8010     0EB4  1103               	clrz
  8011     0EB5  1803               	skipnc
  8012     0EB6  3E01               	addlw	1
  8013     0EB7  1903               	skipnz
  8014     0EB8  2EBA               	goto	u3962
  8015     0EB9  07B1               	addwf	___flmul@prod+2,f
  8016     0EBA                     u3962:
  8017     0EBA  087C               	movf	??___flmul+3,w
  8018     0EBB  1103               	clrz
  8019     0EBC  1803               	skipnc
  8020     0EBD  3E01               	addlw	1
  8021     0EBE  1903               	skipnz
  8022     0EBF  2EC1               	goto	u3963
  8023     0EC0  07B2               	addwf	___flmul@prod+3,f
  8024     0EC1                     u3963:
  8025     0EC1  0822               	movf	___flmul@b+2,w
  8026     0EC2  00F0               	movwf	__Umul8_16@multiplicand
  8027     0EC3  0826               	movf	___flmul@a+2,w
  8028     0EC4  160A  158A  240E  120A  158A  	fcall	__Umul8_16
  8029     0EC9  0871               	movf	?__Umul8_16+1,w
  8030     0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  8031     0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  8032     0ECC  00B4               	movwf	___flmul@temp+1
  8033     0ECD  0870               	movf	?__Umul8_16,w
  8034     0ECE  00B3               	movwf	___flmul@temp
  8035     0ECF                     l2875:
  8036     0ECF  0833               	movf	___flmul@temp,w
  8037     0ED0  00F9               	movwf	??___flmul
  8038     0ED1  0834               	movf	___flmul@temp+1,w
  8039     0ED2  00FA               	movwf	??___flmul+1
  8040     0ED3  01FB               	clrf	??___flmul+2
  8041     0ED4  01FC               	clrf	??___flmul+3
  8042     0ED5  3008               	movlw	8
  8043     0ED6                     u3975:
  8044     0ED6  1003               	clrc
  8045     0ED7  0DF9               	rlf	??___flmul,f
  8046     0ED8  0DFA               	rlf	??___flmul+1,f
  8047     0ED9  0DFB               	rlf	??___flmul+2,f
  8048     0EDA  0DFC               	rlf	??___flmul+3,f
  8049     0EDB                     u3970:
  8050     0EDB  3EFF               	addlw	-1
  8051     0EDC  1D03               	skipz
  8052     0EDD  2ED6               	goto	u3975
  8053     0EDE  0879               	movf	??___flmul,w
  8054     0EDF  07AF               	addwf	___flmul@prod,f
  8055     0EE0  087A               	movf	??___flmul+1,w
  8056     0EE1  1103               	clrz
  8057     0EE2  1803               	skipnc
  8058     0EE3  3E01               	addlw	1
  8059     0EE4  1903               	skipnz
  8060     0EE5  2EE7               	goto	u3981
  8061     0EE6  07B0               	addwf	___flmul@prod+1,f
  8062     0EE7                     u3981:
  8063     0EE7  087B               	movf	??___flmul+2,w
  8064     0EE8  1103               	clrz
  8065     0EE9  1803               	skipnc
  8066     0EEA  3E01               	addlw	1
  8067     0EEB  1903               	skipnz
  8068     0EEC  2EEE               	goto	u3982
  8069     0EED  07B1               	addwf	___flmul@prod+2,f
  8070     0EEE                     u3982:
  8071     0EEE  087C               	movf	??___flmul+3,w
  8072     0EEF  1103               	clrz
  8073     0EF0  1803               	skipnc
  8074     0EF1  3E01               	addlw	1
  8075     0EF2  1903               	skipnz
  8076     0EF3  2EF5               	goto	u3983
  8077     0EF4  07B2               	addwf	___flmul@prod+3,f
  8078     0EF5                     u3983:
  8079     0EF5                     l2877:
  8080     0EF5  0829               	movf	___flmul@grs,w
  8081     0EF6  00F9               	movwf	??___flmul
  8082     0EF7  082A               	movf	___flmul@grs+1,w
  8083     0EF8  00FA               	movwf	??___flmul+1
  8084     0EF9  082B               	movf	___flmul@grs+2,w
  8085     0EFA  00FB               	movwf	??___flmul+2
  8086     0EFB  082C               	movf	___flmul@grs+3,w
  8087     0EFC  00FC               	movwf	??___flmul+3
  8088     0EFD  3018               	movlw	24
  8089     0EFE                     u3995:
  8090     0EFE  1003               	clrc
  8091     0EFF  0CFC               	rrf	??___flmul+3,f
  8092     0F00  0CFB               	rrf	??___flmul+2,f
  8093     0F01  0CFA               	rrf	??___flmul+1,f
  8094     0F02  0CF9               	rrf	??___flmul,f
  8095     0F03                     u3990:
  8096     0F03  3EFF               	addlw	-1
  8097     0F04  1D03               	skipz
  8098     0F05  2EFE               	goto	u3995
  8099     0F06  0879               	movf	??___flmul,w
  8100     0F07  07AF               	addwf	___flmul@prod,f
  8101     0F08  087A               	movf	??___flmul+1,w
  8102     0F09  1103               	clrz
  8103     0F0A  1803               	skipnc
  8104     0F0B  3E01               	addlw	1
  8105     0F0C  1903               	skipnz
  8106     0F0D  2F0F               	goto	u4001
  8107     0F0E  07B0               	addwf	___flmul@prod+1,f
  8108     0F0F                     u4001:
  8109     0F0F  087B               	movf	??___flmul+2,w
  8110     0F10  1103               	clrz
  8111     0F11  1803               	skipnc
  8112     0F12  3E01               	addlw	1
  8113     0F13  1903               	skipnz
  8114     0F14  2F16               	goto	u4002
  8115     0F15  07B1               	addwf	___flmul@prod+2,f
  8116     0F16                     u4002:
  8117     0F16  087C               	movf	??___flmul+3,w
  8118     0F17  1103               	clrz
  8119     0F18  1803               	skipnc
  8120     0F19  3E01               	addlw	1
  8121     0F1A  1903               	skipnz
  8122     0F1B  2F1D               	goto	u4003
  8123     0F1C  07B2               	addwf	___flmul@prod+3,f
  8124     0F1D                     u4003:
  8125     0F1D                     l2879:
  8126     0F1D  3008               	movlw	8
  8127     0F1E  00F9               	movwf	??___flmul
  8128     0F1F                     u4015:
  8129     0F1F  1003               	clrc
  8130     0F20  0DA9               	rlf	___flmul@grs,f
  8131     0F21  0DAA               	rlf	___flmul@grs+1,f
  8132     0F22  0DAB               	rlf	___flmul@grs+2,f
  8133     0F23  0DAC               	rlf	___flmul@grs+3,f
  8134     0F24  0BF9               	decfsz	??___flmul,f
  8135     0F25  2F1F               	goto	u4015
  8136     0F26                     l2881:
  8137     0F26  082E               	movf	___flmul@bexp,w
  8138     0F27  072D               	addwf	___flmul@aexp,w
  8139     0F28  00F9               	movwf	??___flmul
  8140     0F29  01FA               	clrf	??___flmul+1
  8141     0F2A  0DFA               	rlf	??___flmul+1,f
  8142     0F2B  0879               	movf	??___flmul,w
  8143     0F2C  3E82               	addlw	130
  8144     0F2D  00B3               	movwf	___flmul@temp
  8145     0F2E  087A               	movf	??___flmul+1,w
  8146     0F2F  1803               	skipnc
  8147     0F30  3E01               	addlw	1
  8148     0F31  3EFF               	addlw	255
  8149     0F32  00B4               	movwf	___flmul@temp+1
  8150     0F33  2F51               	goto	l2893
  8151     0F34                     l2883:
  8152     0F34  3001               	movlw	1
  8153     0F35  00F9               	movwf	??___flmul
  8154     0F36                     u4025:
  8155     0F36  1003               	clrc
  8156     0F37  0DAF               	rlf	___flmul@prod,f
  8157     0F38  0DB0               	rlf	___flmul@prod+1,f
  8158     0F39  0DB1               	rlf	___flmul@prod+2,f
  8159     0F3A  0DB2               	rlf	___flmul@prod+3,f
  8160     0F3B  0BF9               	decfsz	??___flmul,f
  8161     0F3C  2F36               	goto	u4025
  8162     0F3D                     l2885:
  8163     0F3D  1FAC               	btfss	___flmul@grs+3,7
  8164     0F3E  2F40               	goto	u4031
  8165     0F3F  2F41               	goto	u4030
  8166     0F40                     u4031:
  8167     0F40  2F42               	goto	l2889
  8168     0F41                     u4030:
  8169     0F41                     l2887:
  8170     0F41  142F               	bsf	___flmul@prod,0
  8171     0F42                     l2889:
  8172     0F42  3001               	movlw	1
  8173     0F43  00F9               	movwf	??___flmul
  8174     0F44                     u4045:
  8175     0F44  1003               	clrc
  8176     0F45  0DA9               	rlf	___flmul@grs,f
  8177     0F46  0DAA               	rlf	___flmul@grs+1,f
  8178     0F47  0DAB               	rlf	___flmul@grs+2,f
  8179     0F48  0DAC               	rlf	___flmul@grs+3,f
  8180     0F49  0BF9               	decfsz	??___flmul,f
  8181     0F4A  2F44               	goto	u4045
  8182     0F4B                     l2891:
  8183     0F4B  30FF               	movlw	255
  8184     0F4C  07B3               	addwf	___flmul@temp,f
  8185     0F4D  1803               	skipnc
  8186     0F4E  0AB4               	incf	___flmul@temp+1,f
  8187     0F4F  30FF               	movlw	255
  8188     0F50  07B4               	addwf	___flmul@temp+1,f
  8189     0F51                     l2893:
  8190     0F51  1FB1               	btfss	___flmul@prod+2,7
  8191     0F52  2F54               	goto	u4051
  8192     0F53  2F55               	goto	u4050
  8193     0F54                     u4051:
  8194     0F54  2F34               	goto	l2883
  8195     0F55                     u4050:
  8196     0F55                     l2895:
  8197     0F55  01AD               	clrf	___flmul@aexp
  8198     0F56                     l2897:
  8199     0F56  1FAC               	btfss	___flmul@grs+3,7
  8200     0F57  2F59               	goto	u4061
  8201     0F58  2F5A               	goto	u4060
  8202     0F59                     u4061:
  8203     0F59  2F76               	goto	l2905
  8204     0F5A                     u4060:
  8205     0F5A                     l2899:
  8206     0F5A  30FF               	movlw	255
  8207     0F5B  0529               	andwf	___flmul@grs,w
  8208     0F5C  00F9               	movwf	??___flmul
  8209     0F5D  30FF               	movlw	255
  8210     0F5E  052A               	andwf	___flmul@grs+1,w
  8211     0F5F  00FA               	movwf	??___flmul+1
  8212     0F60  30FF               	movlw	255
  8213     0F61  052B               	andwf	___flmul@grs+2,w
  8214     0F62  00FB               	movwf	??___flmul+2
  8215     0F63  307F               	movlw	127
  8216     0F64  052C               	andwf	___flmul@grs+3,w
  8217     0F65  00FC               	movwf	??___flmul+3
  8218     0F66  087C               	movf	??___flmul+3,w
  8219     0F67  047B               	iorwf	??___flmul+2,w
  8220     0F68  047A               	iorwf	??___flmul+1,w
  8221     0F69  0479               	iorwf	??___flmul,w
  8222     0F6A  1903               	skipnz
  8223     0F6B  2F6D               	goto	u4071
  8224     0F6C  2F6E               	goto	u4070
  8225     0F6D                     u4071:
  8226     0F6D  2F71               	goto	l634
  8227     0F6E                     u4070:
  8228     0F6E                     l2901:
  8229     0F6E  3001               	movlw	1
  8230     0F6F  00AD               	movwf	___flmul@aexp
  8231     0F70  2F76               	goto	l2905
  8232     0F71                     l634:
  8233     0F71  1C2F               	btfss	___flmul@prod,0
  8234     0F72  2F74               	goto	u4081
  8235     0F73  2F75               	goto	u4080
  8236     0F74                     u4081:
  8237     0F74  2F76               	goto	l2905
  8238     0F75                     u4080:
  8239     0F75  2F6E               	goto	l2901
  8240     0F76                     l2905:
  8241     0F76  082D               	movf	___flmul@aexp,w
  8242     0F77  1903               	btfsc	3,2
  8243     0F78  2F7A               	goto	u4091
  8244     0F79  2F7B               	goto	u4090
  8245     0F7A                     u4091:
  8246     0F7A  2FAC               	goto	l2915
  8247     0F7B                     u4090:
  8248     0F7B                     l2907:
  8249     0F7B  3001               	movlw	1
  8250     0F7C  07AF               	addwf	___flmul@prod,f
  8251     0F7D  3000               	movlw	0
  8252     0F7E  1803               	skipnc
  8253     0F7F  3001               	movlw	1
  8254     0F80  07B0               	addwf	___flmul@prod+1,f
  8255     0F81  3000               	movlw	0
  8256     0F82  1803               	skipnc
  8257     0F83  3001               	movlw	1
  8258     0F84  07B1               	addwf	___flmul@prod+2,f
  8259     0F85  3000               	movlw	0
  8260     0F86  1803               	skipnc
  8261     0F87  3001               	movlw	1
  8262     0F88  07B2               	addwf	___flmul@prod+3,f
  8263     0F89                     l2909:
  8264     0F89  1C32               	btfss	___flmul@prod+3,0
  8265     0F8A  2F8C               	goto	u4101
  8266     0F8B  2F8D               	goto	u4100
  8267     0F8C                     u4101:
  8268     0F8C  2FAC               	goto	l2915
  8269     0F8D                     u4100:
  8270     0F8D                     l2911:
  8271     0F8D  082F               	movf	___flmul@prod,w
  8272     0F8E  00F9               	movwf	??___flmul
  8273     0F8F  0830               	movf	___flmul@prod+1,w
  8274     0F90  00FA               	movwf	??___flmul+1
  8275     0F91  0831               	movf	___flmul@prod+2,w
  8276     0F92  00FB               	movwf	??___flmul+2
  8277     0F93  0832               	movf	___flmul@prod+3,w
  8278     0F94  00FC               	movwf	??___flmul+3
  8279     0F95  3001               	movlw	1
  8280     0F96  00FD               	movwf	??___flmul+4
  8281     0F97                     u4115:
  8282     0F97  0D7C               	rlf	??___flmul+3,w
  8283     0F98  0CFC               	rrf	??___flmul+3,f
  8284     0F99  0CFB               	rrf	??___flmul+2,f
  8285     0F9A  0CFA               	rrf	??___flmul+1,f
  8286     0F9B  0CF9               	rrf	??___flmul,f
  8287     0F9C                     u4110:
  8288     0F9C  0BFD               	decfsz	??___flmul+4,f
  8289     0F9D  2F97               	goto	u4115
  8290     0F9E  087C               	movf	??___flmul+3,w
  8291     0F9F  00B2               	movwf	___flmul@prod+3
  8292     0FA0  087B               	movf	??___flmul+2,w
  8293     0FA1  00B1               	movwf	___flmul@prod+2
  8294     0FA2  087A               	movf	??___flmul+1,w
  8295     0FA3  00B0               	movwf	___flmul@prod+1
  8296     0FA4  0879               	movf	??___flmul,w
  8297     0FA5  00AF               	movwf	___flmul@prod
  8298     0FA6                     l2913:
  8299     0FA6  3001               	movlw	1
  8300     0FA7  07B3               	addwf	___flmul@temp,f
  8301     0FA8  1803               	skipnc
  8302     0FA9  0AB4               	incf	___flmul@temp+1,f
  8303     0FAA  3000               	movlw	0
  8304     0FAB  07B4               	addwf	___flmul@temp+1,f
  8305     0FAC                     l2915:
  8306     0FAC  0834               	movf	___flmul@temp+1,w
  8307     0FAD  3A80               	xorlw	128
  8308     0FAE  00FF               	movwf	btemp+1
  8309     0FAF  3080               	movlw	128
  8310     0FB0  027F               	subwf	btemp+1,w
  8311     0FB1  1D03               	skipz
  8312     0FB2  2FB5               	goto	u4125
  8313     0FB3  30FF               	movlw	255
  8314     0FB4  0233               	subwf	___flmul@temp,w
  8315     0FB5                     u4125:
  8316     0FB5  1C03               	skipc
  8317     0FB6  2FB8               	goto	u4121
  8318     0FB7  2FB9               	goto	u4120
  8319     0FB8                     u4121:
  8320     0FB8  2FC4               	goto	l2919
  8321     0FB9                     u4120:
  8322     0FB9                     l2917:
  8323     0FB9  307F               	movlw	127
  8324     0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  8325     0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  8326     0FBC  00B2               	movwf	___flmul@prod+3
  8327     0FBD  3080               	movlw	128
  8328     0FBE  00B1               	movwf	___flmul@prod+2
  8329     0FBF  3000               	movlw	0
  8330     0FC0  00B0               	movwf	___flmul@prod+1
  8331     0FC1  3000               	movlw	0
  8332     0FC2  00AF               	movwf	___flmul@prod
  8333     0FC3  2FF5               	goto	l640
  8334     0FC4                     l2919:
  8335     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  8336     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  8337     0FC6  0834               	movf	___flmul@temp+1,w
  8338     0FC7  3A80               	xorlw	128
  8339     0FC8  00FF               	movwf	btemp+1
  8340     0FC9  3080               	movlw	128
  8341     0FCA  027F               	subwf	btemp+1,w
  8342     0FCB  1D03               	skipz
  8343     0FCC  2FCF               	goto	u4135
  8344     0FCD  3001               	movlw	1
  8345     0FCE  0233               	subwf	___flmul@temp,w
  8346     0FCF                     u4135:
  8347     0FCF  1803               	skipnc
  8348     0FD0  2FD2               	goto	u4131
  8349     0FD1  2FD3               	goto	u4130
  8350     0FD2                     u4131:
  8351     0FD2  2FDF               	goto	l2925
  8352     0FD3                     u4130:
  8353     0FD3                     l2921:
  8354     0FD3  3000               	movlw	0
  8355     0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  8356     0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  8357     0FD6  00B2               	movwf	___flmul@prod+3
  8358     0FD7  3000               	movlw	0
  8359     0FD8  00B1               	movwf	___flmul@prod+2
  8360     0FD9  3000               	movlw	0
  8361     0FDA  00B0               	movwf	___flmul@prod+1
  8362     0FDB  3000               	movlw	0
  8363     0FDC  00AF               	movwf	___flmul@prod
  8364     0FDD                     l2923:
  8365     0FDD  01A8               	clrf	___flmul@sign
  8366     0FDE  2FF5               	goto	l640
  8367     0FDF                     l2925:
  8368     0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  8369     0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  8370     0FE1  0833               	movf	___flmul@temp,w
  8371     0FE2  00AE               	movwf	___flmul@bexp
  8372     0FE3  30FF               	movlw	255
  8373     0FE4  05AF               	andwf	___flmul@prod,f
  8374     0FE5  30FF               	movlw	255
  8375     0FE6  05B0               	andwf	___flmul@prod+1,f
  8376     0FE7  307F               	movlw	127
  8377     0FE8  05B1               	andwf	___flmul@prod+2,f
  8378     0FE9  3000               	movlw	0
  8379     0FEA  05B2               	andwf	___flmul@prod+3,f
  8380     0FEB                     l2927:
  8381     0FEB  1C2E               	btfss	___flmul@bexp,0
  8382     0FEC  2FEE               	goto	u4141
  8383     0FED  2FEF               	goto	u4140
  8384     0FEE                     u4141:
  8385     0FEE  2FF0               	goto	l2931
  8386     0FEF                     u4140:
  8387     0FEF                     l2929:
  8388     0FEF  17B1               	bsf	___flmul@prod+2,7
  8389     0FF0                     l2931:
  8390     0FF0  082E               	movf	___flmul@bexp,w
  8391     0FF1  00F9               	movwf	??___flmul
  8392     0FF2  1003               	clrc
  8393     0FF3  0C79               	rrf	??___flmul,w
  8394     0FF4  00B2               	movwf	___flmul@prod+3
  8395     0FF5                     l640:
  8396     0FF5  0828               	movf	___flmul@sign,w
  8397     0FF6  04B2               	iorwf	___flmul@prod+3,f
  8398     0FF7                     l2933:
  8399     0FF7  0832               	movf	___flmul@prod+3,w
  8400     0FF8  00A3               	movwf	?___flmul+3
  8401     0FF9  0831               	movf	___flmul@prod+2,w
  8402     0FFA  00A2               	movwf	?___flmul+2
  8403     0FFB  0830               	movf	___flmul@prod+1,w
  8404     0FFC  00A1               	movwf	?___flmul+1
  8405     0FFD  082F               	movf	___flmul@prod,w
  8406     0FFE  00A0               	movwf	?___flmul
  8407     0FFF                     l628:
  8408     0FFF  0008               	return
  8409     1000                     __end_of___flmul:
  8410                           
  8411                           	psect	text29
  8412     1C0E                     __ptext29:	
  8413 ;; *************** function __Umul8_16 *****************
  8414 ;; Defined at:
  8415 ;;		line 4 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
  8416 ;; Parameters:    Size  Location     Type
  8417 ;;  multiplier      1    wreg     unsigned char 
  8418 ;;  multiplicand    1    0[COMMON] unsigned char 
  8419 ;; Auto vars:     Size  Location     Type
  8420 ;;  multiplier      1    8[COMMON] unsigned char 
  8421 ;;  word_mpld       2    6[COMMON] unsigned short 
  8422 ;;  product         2    4[COMMON] unsigned short 
  8423 ;; Return value:  Size  Location     Type
  8424 ;;                  2    0[COMMON] unsigned int 
  8425 ;; Registers used:
  8426 ;;		wreg, status,2, status,0
  8427 ;; Tracked objects:
  8428 ;;		On entry : 0/0
  8429 ;;		On exit  : 0/0
  8430 ;;		Unchanged: 0/0
  8431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8432 ;;      Params:         2       0       0       0       0
  8433 ;;      Locals:         5       0       0       0       0
  8434 ;;      Temps:          2       0       0       0       0
  8435 ;;      Totals:         9       0       0       0       0
  8436 ;;Total ram usage:        9 bytes
  8437 ;; Hardware stack levels used: 1
  8438 ;; This function calls:
  8439 ;;		Nothing
  8440 ;; This function is called by:
  8441 ;;		___flmul
  8442 ;; This function uses a non-reentrant model
  8443 ;;
  8444                           
  8445     1C0E                     __Umul8_16:	
  8446                           ;psect for function __Umul8_16
  8447                           
  8448                           
  8449                           ;incstack = 0
  8450                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8451                           ;__Umul8_16@multiplier stored from wreg
  8452     1C0E  00F8               	movwf	__Umul8_16@multiplier
  8453     1C0F                     l2543:
  8454     1C0F  01F4               	clrf	__Umul8_16@product
  8455     1C10  01F5               	clrf	__Umul8_16@product+1
  8456     1C11                     l2545:
  8457     1C11  0870               	movf	__Umul8_16@multiplicand,w
  8458     1C12  00F2               	movwf	??__Umul8_16
  8459     1C13  01F3               	clrf	??__Umul8_16+1
  8460     1C14  0872               	movf	??__Umul8_16,w
  8461     1C15  00F6               	movwf	__Umul8_16@word_mpld
  8462     1C16  0873               	movf	??__Umul8_16+1,w
  8463     1C17  00F7               	movwf	__Umul8_16@word_mpld+1
  8464     1C18                     l2547:
  8465     1C18  1C78               	btfss	__Umul8_16@multiplier,0
  8466     1C19  2C1B               	goto	u3221
  8467     1C1A  2C1C               	goto	u3220
  8468     1C1B                     u3221:
  8469     1C1B  2C22               	goto	l647
  8470     1C1C                     u3220:
  8471     1C1C                     l2549:
  8472     1C1C  0876               	movf	__Umul8_16@word_mpld,w
  8473     1C1D  07F4               	addwf	__Umul8_16@product,f
  8474     1C1E  1803               	skipnc
  8475     1C1F  0AF5               	incf	__Umul8_16@product+1,f
  8476     1C20  0877               	movf	__Umul8_16@word_mpld+1,w
  8477     1C21  07F5               	addwf	__Umul8_16@product+1,f
  8478     1C22                     l647:
  8479     1C22  3001               	movlw	1
  8480     1C23                     u3235:
  8481     1C23  1003               	clrc
  8482     1C24  0DF6               	rlf	__Umul8_16@word_mpld,f
  8483     1C25  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8484     1C26  3EFF               	addlw	-1
  8485     1C27  1D03               	skipz
  8486     1C28  2C23               	goto	u3235
  8487     1C29  1003               	clrc
  8488     1C2A  0CF8               	rrf	__Umul8_16@multiplier,f
  8489     1C2B                     l2551:
  8490     1C2B  0878               	movf	__Umul8_16@multiplier,w
  8491     1C2C  1D03               	btfss	3,2
  8492     1C2D  2C2F               	goto	u3241
  8493     1C2E  2C30               	goto	u3240
  8494     1C2F                     u3241:
  8495     1C2F  2C18               	goto	l2547
  8496     1C30                     u3240:
  8497     1C30                     l2553:
  8498     1C30  0875               	movf	__Umul8_16@product+1,w
  8499     1C31  00F1               	movwf	?__Umul8_16+1
  8500     1C32  0874               	movf	__Umul8_16@product,w
  8501     1C33  00F0               	movwf	?__Umul8_16
  8502     1C34                     l649:
  8503     1C34  0008               	return
  8504     1C35                     __end_of__Umul8_16:
  8505                           
  8506                           	psect	text30
  8507     0005                     __ptext30:	
  8508 ;; *************** function ___flge *****************
  8509 ;; Defined at:
  8510 ;;		line 4 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\flge.c"
  8511 ;; Parameters:    Size  Location     Type
  8512 ;;  ff1             4   21[BANK0 ] unsigned int 
  8513 ;;  ff2             4   25[BANK0 ] unsigned int 
  8514 ;; Auto vars:     Size  Location     Type
  8515 ;;		None
  8516 ;; Return value:  Size  Location     Type
  8517 ;;		None               void
  8518 ;; Registers used:
  8519 ;;		wreg, status,2, status,0
  8520 ;; Tracked objects:
  8521 ;;		On entry : 0/0
  8522 ;;		On exit  : 0/0
  8523 ;;		Unchanged: 0/0
  8524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8525 ;;      Params:         0       8       0       0       0
  8526 ;;      Locals:         0       0       0       0       0
  8527 ;;      Temps:          0       4       0       0       0
  8528 ;;      Totals:         0      12       0       0       0
  8529 ;;Total ram usage:       12 bytes
  8530 ;; Hardware stack levels used: 1
  8531 ;; This function calls:
  8532 ;;		Nothing
  8533 ;; This function is called by:
  8534 ;;		_efgtoa
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538     0005                     ___flge:	
  8539                           ;psect for function ___flge
  8540                           
  8541     0005                     l2581:	
  8542                           ;incstack = 0
  8543                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8544                           
  8545     0005  3000               	movlw	0
  8546     0006  1283               	bcf	3,5	;RP0=0, select bank0
  8547     0007  1303               	bcf	3,6	;RP1=0, select bank0
  8548     0008  0535               	andwf	___flge@ff1,w
  8549     0009  00BD               	movwf	??___flge
  8550     000A  3000               	movlw	0
  8551     000B  0536               	andwf	___flge@ff1+1,w
  8552     000C  00BE               	movwf	??___flge+1
  8553     000D  3080               	movlw	128
  8554     000E  0537               	andwf	___flge@ff1+2,w
  8555     000F  00BF               	movwf	??___flge+2
  8556     0010  307F               	movlw	127
  8557     0011  0538               	andwf	___flge@ff1+3,w
  8558     0012  00C0               	movwf	??___flge+3
  8559     0013  0840               	movf	??___flge+3,w
  8560     0014  043F               	iorwf	??___flge+2,w
  8561     0015  043E               	iorwf	??___flge+1,w
  8562     0016  043D               	iorwf	??___flge,w
  8563     0017  1D03               	skipz
  8564     0018  281A               	goto	u3301
  8565     0019  281B               	goto	u3300
  8566     001A                     u3301:
  8567     001A  2823               	goto	l409
  8568     001B                     u3300:
  8569     001B                     l2583:
  8570     001B  3000               	movlw	0
  8571     001C  00B8               	movwf	___flge@ff1+3
  8572     001D  3000               	movlw	0
  8573     001E  00B7               	movwf	___flge@ff1+2
  8574     001F  3000               	movlw	0
  8575     0020  00B6               	movwf	___flge@ff1+1
  8576     0021  3000               	movlw	0
  8577     0022  00B5               	movwf	___flge@ff1
  8578     0023                     l409:
  8579     0023  3000               	movlw	0
  8580     0024  0539               	andwf	___flge@ff2,w
  8581     0025  00BD               	movwf	??___flge
  8582     0026  3000               	movlw	0
  8583     0027  053A               	andwf	___flge@ff2+1,w
  8584     0028  00BE               	movwf	??___flge+1
  8585     0029  3080               	movlw	128
  8586     002A  053B               	andwf	___flge@ff2+2,w
  8587     002B  00BF               	movwf	??___flge+2
  8588     002C  307F               	movlw	127
  8589     002D  053C               	andwf	___flge@ff2+3,w
  8590     002E  00C0               	movwf	??___flge+3
  8591     002F  0840               	movf	??___flge+3,w
  8592     0030  043F               	iorwf	??___flge+2,w
  8593     0031  043E               	iorwf	??___flge+1,w
  8594     0032  043D               	iorwf	??___flge,w
  8595     0033  1D03               	skipz
  8596     0034  2836               	goto	u3311
  8597     0035  2837               	goto	u3310
  8598     0036                     u3311:
  8599     0036  283F               	goto	l2587
  8600     0037                     u3310:
  8601     0037                     l2585:
  8602     0037  3000               	movlw	0
  8603     0038  00BC               	movwf	___flge@ff2+3
  8604     0039  3000               	movlw	0
  8605     003A  00BB               	movwf	___flge@ff2+2
  8606     003B  3000               	movlw	0
  8607     003C  00BA               	movwf	___flge@ff2+1
  8608     003D  3000               	movlw	0
  8609     003E  00B9               	movwf	___flge@ff2
  8610     003F                     l2587:
  8611     003F  1FB8               	btfss	___flge@ff1+3,7
  8612     0040  2842               	goto	u3321
  8613     0041  2843               	goto	u3320
  8614     0042                     u3321:
  8615     0042  2867               	goto	l2591
  8616     0043                     u3320:
  8617     0043                     l2589:
  8618     0043  3000               	movlw	0
  8619     0044  00BD               	movwf	??___flge
  8620     0045  3000               	movlw	0
  8621     0046  00BE               	movwf	??___flge+1
  8622     0047  3000               	movlw	0
  8623     0048  00BF               	movwf	??___flge+2
  8624     0049  3080               	movlw	128
  8625     004A  00C0               	movwf	??___flge+3
  8626     004B  0835               	movf	___flge@ff1,w
  8627     004C  02BD               	subwf	??___flge,f
  8628     004D  0836               	movf	___flge@ff1+1,w
  8629     004E  1C03               	skipc
  8630     004F  0F36               	incfsz	___flge@ff1+1,w
  8631     0050  2852               	goto	u3331
  8632     0051  2853               	goto	u3332
  8633     0052                     u3331:
  8634     0052  02BE               	subwf	??___flge+1,f
  8635     0053                     u3332:
  8636     0053  0837               	movf	___flge@ff1+2,w
  8637     0054  1C03               	skipc
  8638     0055  0F37               	incfsz	___flge@ff1+2,w
  8639     0056  2858               	goto	u3333
  8640     0057  2859               	goto	u3334
  8641     0058                     u3333:
  8642     0058  02BF               	subwf	??___flge+2,f
  8643     0059                     u3334:
  8644     0059  0838               	movf	___flge@ff1+3,w
  8645     005A  1C03               	skipc
  8646     005B  0F38               	incfsz	___flge@ff1+3,w
  8647     005C  285E               	goto	u3335
  8648     005D  285F               	goto	u3336
  8649     005E                     u3335:
  8650     005E  02C0               	subwf	??___flge+3,f
  8651     005F                     u3336:
  8652     005F  0840               	movf	??___flge+3,w
  8653     0060  00B8               	movwf	___flge@ff1+3
  8654     0061  083F               	movf	??___flge+2,w
  8655     0062  00B7               	movwf	___flge@ff1+2
  8656     0063  083E               	movf	??___flge+1,w
  8657     0064  00B6               	movwf	___flge@ff1+1
  8658     0065  083D               	movf	??___flge,w
  8659     0066  00B5               	movwf	___flge@ff1
  8660     0067                     l2591:
  8661     0067  1FBC               	btfss	___flge@ff2+3,7
  8662     0068  286A               	goto	u3341
  8663     0069  286B               	goto	u3340
  8664     006A                     u3341:
  8665     006A  288F               	goto	l412
  8666     006B                     u3340:
  8667     006B                     l2593:
  8668     006B  3000               	movlw	0
  8669     006C  00BD               	movwf	??___flge
  8670     006D  3000               	movlw	0
  8671     006E  00BE               	movwf	??___flge+1
  8672     006F  3000               	movlw	0
  8673     0070  00BF               	movwf	??___flge+2
  8674     0071  3080               	movlw	128
  8675     0072  00C0               	movwf	??___flge+3
  8676     0073  0839               	movf	___flge@ff2,w
  8677     0074  02BD               	subwf	??___flge,f
  8678     0075  083A               	movf	___flge@ff2+1,w
  8679     0076  1C03               	skipc
  8680     0077  0F3A               	incfsz	___flge@ff2+1,w
  8681     0078  287A               	goto	u3351
  8682     0079  287B               	goto	u3352
  8683     007A                     u3351:
  8684     007A  02BE               	subwf	??___flge+1,f
  8685     007B                     u3352:
  8686     007B  083B               	movf	___flge@ff2+2,w
  8687     007C  1C03               	skipc
  8688     007D  0F3B               	incfsz	___flge@ff2+2,w
  8689     007E  2880               	goto	u3353
  8690     007F  2881               	goto	u3354
  8691     0080                     u3353:
  8692     0080  02BF               	subwf	??___flge+2,f
  8693     0081                     u3354:
  8694     0081  083C               	movf	___flge@ff2+3,w
  8695     0082  1C03               	skipc
  8696     0083  0F3C               	incfsz	___flge@ff2+3,w
  8697     0084  2886               	goto	u3355
  8698     0085  2887               	goto	u3356
  8699     0086                     u3355:
  8700     0086  02C0               	subwf	??___flge+3,f
  8701     0087                     u3356:
  8702     0087  0840               	movf	??___flge+3,w
  8703     0088  00BC               	movwf	___flge@ff2+3
  8704     0089  083F               	movf	??___flge+2,w
  8705     008A  00BB               	movwf	___flge@ff2+2
  8706     008B  083E               	movf	??___flge+1,w
  8707     008C  00BA               	movwf	___flge@ff2+1
  8708     008D  083D               	movf	??___flge,w
  8709     008E  00B9               	movwf	___flge@ff2
  8710     008F                     l412:
  8711     008F  3080               	movlw	128
  8712     0090  06B8               	xorwf	___flge@ff1+3,f
  8713     0091  3080               	movlw	128
  8714     0092  06BC               	xorwf	___flge@ff2+3,f
  8715     0093  083C               	movf	___flge@ff2+3,w
  8716     0094  0238               	subwf	___flge@ff1+3,w
  8717     0095  1D03               	skipz
  8718     0096  28A1               	goto	u3365
  8719     0097  083B               	movf	___flge@ff2+2,w
  8720     0098  0237               	subwf	___flge@ff1+2,w
  8721     0099  1D03               	skipz
  8722     009A  28A1               	goto	u3365
  8723     009B  083A               	movf	___flge@ff2+1,w
  8724     009C  0236               	subwf	___flge@ff1+1,w
  8725     009D  1D03               	skipz
  8726     009E  28A1               	goto	u3365
  8727     009F  0839               	movf	___flge@ff2,w
  8728     00A0  0235               	subwf	___flge@ff1,w
  8729     00A1                     u3365:
  8730     00A1  1803               	skipnc
  8731     00A2  28A4               	goto	u3361
  8732     00A3  28A5               	goto	u3360
  8733     00A4                     u3361:
  8734     00A4  28A7               	goto	l2597
  8735     00A5                     u3360:
  8736     00A5                     l2595:
  8737     00A5  1003               	clrc
  8738     00A6  28A8               	goto	l417
  8739     00A7                     l2597:
  8740     00A7  1403               	setc
  8741     00A8                     l417:
  8742     00A8  0008               	return
  8743     00A9                     __end_of___flge:
  8744                           
  8745                           	psect	text31
  8746     1C99                     __ptext31:	
  8747 ;; *************** function ___fleq *****************
  8748 ;; Defined at:
  8749 ;;		line 4 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\fleq.c"
  8750 ;; Parameters:    Size  Location     Type
  8751 ;;  ff1             4    0[COMMON] unsigned int 
  8752 ;;  ff2             4    4[COMMON] unsigned int 
  8753 ;; Auto vars:     Size  Location     Type
  8754 ;;		None
  8755 ;; Return value:  Size  Location     Type
  8756 ;;		None               void
  8757 ;; Registers used:
  8758 ;;		wreg, status,2, status,0
  8759 ;; Tracked objects:
  8760 ;;		On entry : 0/0
  8761 ;;		On exit  : 0/0
  8762 ;;		Unchanged: 0/0
  8763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8764 ;;      Params:         8       0       0       0       0
  8765 ;;      Locals:         0       0       0       0       0
  8766 ;;      Temps:          4       0       0       0       0
  8767 ;;      Totals:        12       0       0       0       0
  8768 ;;Total ram usage:       12 bytes
  8769 ;; Hardware stack levels used: 1
  8770 ;; This function calls:
  8771 ;;		Nothing
  8772 ;; This function is called by:
  8773 ;;		_efgtoa
  8774 ;; This function uses a non-reentrant model
  8775 ;;
  8776                           
  8777     1C99                     ___fleq:	
  8778                           ;psect for function ___fleq
  8779                           
  8780     1C99                     l2569:	
  8781                           ;incstack = 0
  8782                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8783                           
  8784     1C99  3000               	movlw	0
  8785     1C9A  0570               	andwf	___fleq@ff1,w
  8786     1C9B  00F8               	movwf	??___fleq
  8787     1C9C  3000               	movlw	0
  8788     1C9D  0571               	andwf	___fleq@ff1+1,w
  8789     1C9E  00F9               	movwf	??___fleq+1
  8790     1C9F  3080               	movlw	128
  8791     1CA0  0572               	andwf	___fleq@ff1+2,w
  8792     1CA1  00FA               	movwf	??___fleq+2
  8793     1CA2  307F               	movlw	127
  8794     1CA3  0573               	andwf	___fleq@ff1+3,w
  8795     1CA4  00FB               	movwf	??___fleq+3
  8796     1CA5  087B               	movf	??___fleq+3,w
  8797     1CA6  047A               	iorwf	??___fleq+2,w
  8798     1CA7  0479               	iorwf	??___fleq+1,w
  8799     1CA8  0478               	iorwf	??___fleq,w
  8800     1CA9  1D03               	skipz
  8801     1CAA  2CAC               	goto	u3271
  8802     1CAB  2CAD               	goto	u3270
  8803     1CAC                     u3271:
  8804     1CAC  2CB5               	goto	l400
  8805     1CAD                     u3270:
  8806     1CAD                     l2571:
  8807     1CAD  3000               	movlw	0
  8808     1CAE  00F3               	movwf	___fleq@ff1+3
  8809     1CAF  3000               	movlw	0
  8810     1CB0  00F2               	movwf	___fleq@ff1+2
  8811     1CB1  3000               	movlw	0
  8812     1CB2  00F1               	movwf	___fleq@ff1+1
  8813     1CB3  3000               	movlw	0
  8814     1CB4  00F0               	movwf	___fleq@ff1
  8815     1CB5                     l400:
  8816     1CB5  3000               	movlw	0
  8817     1CB6  0574               	andwf	___fleq@ff2,w
  8818     1CB7  00F8               	movwf	??___fleq
  8819     1CB8  3000               	movlw	0
  8820     1CB9  0575               	andwf	___fleq@ff2+1,w
  8821     1CBA  00F9               	movwf	??___fleq+1
  8822     1CBB  3080               	movlw	128
  8823     1CBC  0576               	andwf	___fleq@ff2+2,w
  8824     1CBD  00FA               	movwf	??___fleq+2
  8825     1CBE  307F               	movlw	127
  8826     1CBF  0577               	andwf	___fleq@ff2+3,w
  8827     1CC0  00FB               	movwf	??___fleq+3
  8828     1CC1  087B               	movf	??___fleq+3,w
  8829     1CC2  047A               	iorwf	??___fleq+2,w
  8830     1CC3  0479               	iorwf	??___fleq+1,w
  8831     1CC4  0478               	iorwf	??___fleq,w
  8832     1CC5  1D03               	skipz
  8833     1CC6  2CC8               	goto	u3281
  8834     1CC7  2CC9               	goto	u3280
  8835     1CC8                     u3281:
  8836     1CC8  2CD1               	goto	l401
  8837     1CC9                     u3280:
  8838     1CC9                     l2573:
  8839     1CC9  3000               	movlw	0
  8840     1CCA  00F7               	movwf	___fleq@ff2+3
  8841     1CCB  3000               	movlw	0
  8842     1CCC  00F6               	movwf	___fleq@ff2+2
  8843     1CCD  3000               	movlw	0
  8844     1CCE  00F5               	movwf	___fleq@ff2+1
  8845     1CCF  3000               	movlw	0
  8846     1CD0  00F4               	movwf	___fleq@ff2
  8847     1CD1                     l401:
  8848     1CD1  0877               	movf	___fleq@ff2+3,w
  8849     1CD2  0673               	xorwf	___fleq@ff1+3,w
  8850     1CD3  1D03               	skipz
  8851     1CD4  2CDF               	goto	u3295
  8852     1CD5  0876               	movf	___fleq@ff2+2,w
  8853     1CD6  0672               	xorwf	___fleq@ff1+2,w
  8854     1CD7  1D03               	skipz
  8855     1CD8  2CDF               	goto	u3295
  8856     1CD9  0875               	movf	___fleq@ff2+1,w
  8857     1CDA  0671               	xorwf	___fleq@ff1+1,w
  8858     1CDB  1D03               	skipz
  8859     1CDC  2CDF               	goto	u3295
  8860     1CDD  0874               	movf	___fleq@ff2,w
  8861     1CDE  0670               	xorwf	___fleq@ff1,w
  8862     1CDF                     u3295:
  8863     1CDF  1903               	skipnz
  8864     1CE0  2CE2               	goto	u3291
  8865     1CE1  2CE3               	goto	u3290
  8866     1CE2                     u3291:
  8867     1CE2  2CE5               	goto	l2577
  8868     1CE3                     u3290:
  8869     1CE3                     l2575:
  8870     1CE3  1003               	clrc
  8871     1CE4  2CE6               	goto	l406
  8872     1CE5                     l2577:
  8873     1CE5  1403               	setc
  8874     1CE6                     l406:
  8875     1CE6  0008               	return
  8876     1CE7                     __end_of___fleq:
  8877                           
  8878                           	psect	text32
  8879     089E                     __ptext32:	
  8880 ;; *************** function ___fldiv *****************
  8881 ;; Defined at:
  8882 ;;		line 8 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  8883 ;; Parameters:    Size  Location     Type
  8884 ;;  a               4    0[COMMON] unsigned int 
  8885 ;;  b               4    4[COMMON] unsigned int 
  8886 ;; Auto vars:     Size  Location     Type
  8887 ;;  grs             4    7[BANK0 ] unsigned long 
  8888 ;;  rem             4    0[BANK0 ] unsigned long 
  8889 ;;  new_exp         2    5[BANK0 ] short 
  8890 ;;  aexp            1   12[BANK0 ] unsigned char 
  8891 ;;  bexp            1   11[BANK0 ] unsigned char 
  8892 ;;  sign            1    4[BANK0 ] unsigned char 
  8893 ;; Return value:  Size  Location     Type
  8894 ;;                  4    0[COMMON] unsigned char 
  8895 ;; Registers used:
  8896 ;;		wreg, status,2, status,0, btemp+1
  8897 ;; Tracked objects:
  8898 ;;		On entry : 0/0
  8899 ;;		On exit  : 0/0
  8900 ;;		Unchanged: 0/0
  8901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8902 ;;      Params:         8       0       0       0       0
  8903 ;;      Locals:         0      13       0       0       0
  8904 ;;      Temps:          5       0       0       0       0
  8905 ;;      Totals:        13      13       0       0       0
  8906 ;;Total ram usage:       26 bytes
  8907 ;; Hardware stack levels used: 1
  8908 ;; This function calls:
  8909 ;;		Nothing
  8910 ;; This function is called by:
  8911 ;;		_calculate
  8912 ;;		_efgtoa
  8913 ;; This function uses a non-reentrant model
  8914 ;;
  8915                           
  8916     089E                     ___fldiv:	
  8917                           ;psect for function ___fldiv
  8918                           
  8919     089E                     l2651:	
  8920                           ;incstack = 0
  8921                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8922                           
  8923     089E  0877               	movf	___fldiv@b+3,w
  8924     089F  1283               	bcf	3,5	;RP0=0, select bank0
  8925     08A0  1303               	bcf	3,6	;RP1=0, select bank0
  8926     08A1  00A4               	movwf	___fldiv@sign
  8927     08A2                     l2653:
  8928     08A2  3080               	movlw	128
  8929     08A3  05A4               	andwf	___fldiv@sign,f
  8930     08A4                     l2655:
  8931     08A4  0877               	movf	___fldiv@b+3,w
  8932     08A5  00F8               	movwf	??___fldiv
  8933     08A6  0778               	addwf	??___fldiv,w
  8934     08A7  00AB               	movwf	___fldiv@bexp
  8935     08A8                     l2657:
  8936     08A8  1FF6               	btfss	___fldiv@b+2,7
  8937     08A9  28AB               	goto	u3481
  8938     08AA  28AC               	goto	u3480
  8939     08AB                     u3481:
  8940     08AB  28AD               	goto	l2661
  8941     08AC                     u3480:
  8942     08AC                     l2659:
  8943     08AC  142B               	bsf	___fldiv@bexp,0
  8944     08AD                     l2661:
  8945     08AD  082B               	movf	___fldiv@bexp,w
  8946     08AE  1903               	btfsc	3,2
  8947     08AF  28B1               	goto	u3491
  8948     08B0  28B2               	goto	u3490
  8949     08B1                     u3491:
  8950     08B1  28C2               	goto	l2671
  8951     08B2                     u3490:
  8952     08B2                     l2663:
  8953     08B2  0A2B               	incf	___fldiv@bexp,w
  8954     08B3  1D03               	btfss	3,2
  8955     08B4  28B6               	goto	u3501
  8956     08B5  28B7               	goto	u3500
  8957     08B6                     u3501:
  8958     08B6  28BF               	goto	l2667
  8959     08B7                     u3500:
  8960     08B7                     l2665:
  8961     08B7  3000               	movlw	0
  8962     08B8  00F7               	movwf	___fldiv@b+3
  8963     08B9  3000               	movlw	0
  8964     08BA  00F6               	movwf	___fldiv@b+2
  8965     08BB  3000               	movlw	0
  8966     08BC  00F5               	movwf	___fldiv@b+1
  8967     08BD  3000               	movlw	0
  8968     08BE  00F4               	movwf	___fldiv@b
  8969     08BF                     l2667:
  8970     08BF  17F6               	bsf	___fldiv@b+2,7
  8971     08C0                     l2669:
  8972     08C0  01F7               	clrf	___fldiv@b+3
  8973     08C1  28CA               	goto	l2673
  8974     08C2                     l2671:
  8975     08C2  3000               	movlw	0
  8976     08C3  00F7               	movwf	___fldiv@b+3
  8977     08C4  3000               	movlw	0
  8978     08C5  00F6               	movwf	___fldiv@b+2
  8979     08C6  3000               	movlw	0
  8980     08C7  00F5               	movwf	___fldiv@b+1
  8981     08C8  3000               	movlw	0
  8982     08C9  00F4               	movwf	___fldiv@b
  8983     08CA                     l2673:
  8984     08CA  0873               	movf	___fldiv@a+3,w
  8985     08CB  3980               	andlw	128
  8986     08CC  06A4               	xorwf	___fldiv@sign,f
  8987     08CD                     l2675:
  8988     08CD  0873               	movf	___fldiv@a+3,w
  8989     08CE  00F8               	movwf	??___fldiv
  8990     08CF  0778               	addwf	??___fldiv,w
  8991     08D0  00AC               	movwf	___fldiv@aexp
  8992     08D1                     l2677:
  8993     08D1  1FF2               	btfss	___fldiv@a+2,7
  8994     08D2  28D4               	goto	u3511
  8995     08D3  28D5               	goto	u3510
  8996     08D4                     u3511:
  8997     08D4  28D6               	goto	l2681
  8998     08D5                     u3510:
  8999     08D5                     l2679:
  9000     08D5  142C               	bsf	___fldiv@aexp,0
  9001     08D6                     l2681:
  9002     08D6  082C               	movf	___fldiv@aexp,w
  9003     08D7  1903               	btfsc	3,2
  9004     08D8  28DA               	goto	u3521
  9005     08D9  28DB               	goto	u3520
  9006     08DA                     u3521:
  9007     08DA  28EB               	goto	l2691
  9008     08DB                     u3520:
  9009     08DB                     l2683:
  9010     08DB  0A2C               	incf	___fldiv@aexp,w
  9011     08DC  1D03               	btfss	3,2
  9012     08DD  28DF               	goto	u3531
  9013     08DE  28E0               	goto	u3530
  9014     08DF                     u3531:
  9015     08DF  28E8               	goto	l2687
  9016     08E0                     u3530:
  9017     08E0                     l2685:
  9018     08E0  3000               	movlw	0
  9019     08E1  00F3               	movwf	___fldiv@a+3
  9020     08E2  3000               	movlw	0
  9021     08E3  00F2               	movwf	___fldiv@a+2
  9022     08E4  3000               	movlw	0
  9023     08E5  00F1               	movwf	___fldiv@a+1
  9024     08E6  3000               	movlw	0
  9025     08E7  00F0               	movwf	___fldiv@a
  9026     08E8                     l2687:
  9027     08E8  17F2               	bsf	___fldiv@a+2,7
  9028     08E9                     l2689:
  9029     08E9  01F3               	clrf	___fldiv@a+3
  9030     08EA  28F3               	goto	l588
  9031     08EB                     l2691:
  9032     08EB  3000               	movlw	0
  9033     08EC  00F3               	movwf	___fldiv@a+3
  9034     08ED  3000               	movlw	0
  9035     08EE  00F2               	movwf	___fldiv@a+2
  9036     08EF  3000               	movlw	0
  9037     08F0  00F1               	movwf	___fldiv@a+1
  9038     08F1  3000               	movlw	0
  9039     08F2  00F0               	movwf	___fldiv@a
  9040     08F3                     l588:
  9041     08F3  0873               	movf	___fldiv@a+3,w
  9042     08F4  0472               	iorwf	___fldiv@a+2,w
  9043     08F5  0471               	iorwf	___fldiv@a+1,w
  9044     08F6  0470               	iorwf	___fldiv@a,w
  9045     08F7  1D03               	skipz
  9046     08F8  28FA               	goto	u3541
  9047     08F9  28FB               	goto	u3540
  9048     08FA                     u3541:
  9049     08FA  2912               	goto	l2701
  9050     08FB                     u3540:
  9051     08FB                     l2693:
  9052     08FB  3000               	movlw	0
  9053     08FC  00F7               	movwf	___fldiv@b+3
  9054     08FD  3000               	movlw	0
  9055     08FE  00F6               	movwf	___fldiv@b+2
  9056     08FF  3000               	movlw	0
  9057     0900  00F5               	movwf	___fldiv@b+1
  9058     0901  3000               	movlw	0
  9059     0902  00F4               	movwf	___fldiv@b
  9060     0903  3080               	movlw	128
  9061     0904  04F6               	iorwf	___fldiv@b+2,f
  9062     0905  307F               	movlw	127
  9063     0906  04F7               	iorwf	___fldiv@b+3,f
  9064     0907                     l2695:
  9065     0907  0824               	movf	___fldiv@sign,w
  9066     0908  04F7               	iorwf	___fldiv@b+3,f
  9067     0909                     l2697:
  9068     0909  0877               	movf	___fldiv@b+3,w
  9069     090A  00F3               	movwf	?___fldiv+3
  9070     090B  0876               	movf	___fldiv@b+2,w
  9071     090C  00F2               	movwf	?___fldiv+2
  9072     090D  0875               	movf	___fldiv@b+1,w
  9073     090E  00F1               	movwf	?___fldiv+1
  9074     090F  0874               	movf	___fldiv@b,w
  9075     0910  00F0               	movwf	?___fldiv
  9076     0911  2A6D               	goto	l590
  9077     0912                     l2701:
  9078     0912  082B               	movf	___fldiv@bexp,w
  9079     0913  1D03               	btfss	3,2
  9080     0914  2916               	goto	u3551
  9081     0915  2917               	goto	u3550
  9082     0916                     u3551:
  9083     0916  2920               	goto	l2707
  9084     0917                     u3550:
  9085     0917                     l2703:
  9086     0917  3000               	movlw	0
  9087     0918  00F3               	movwf	?___fldiv+3
  9088     0919  3000               	movlw	0
  9089     091A  00F2               	movwf	?___fldiv+2
  9090     091B  3000               	movlw	0
  9091     091C  00F1               	movwf	?___fldiv+1
  9092     091D  3000               	movlw	0
  9093     091E  00F0               	movwf	?___fldiv
  9094     091F  2A6D               	goto	l590
  9095     0920                     l2707:
  9096     0920  082B               	movf	___fldiv@bexp,w
  9097     0921  00F8               	movwf	??___fldiv
  9098     0922  01F9               	clrf	??___fldiv+1
  9099     0923  0879               	movf	??___fldiv+1,w
  9100     0924  00FB               	movwf	??___fldiv+3
  9101     0925  082C               	movf	___fldiv@aexp,w
  9102     0926  0278               	subwf	??___fldiv,w
  9103     0927  00FA               	movwf	??___fldiv+2
  9104     0928  1C03               	skipc
  9105     0929  03FB               	decf	??___fldiv+3,f
  9106     092A  087A               	movf	??___fldiv+2,w
  9107     092B  3E7F               	addlw	127
  9108     092C  00A5               	movwf	___fldiv@new_exp
  9109     092D  087B               	movf	??___fldiv+3,w
  9110     092E  1803               	skipnc
  9111     092F  3E01               	addlw	1
  9112     0930  3E00               	addlw	0
  9113     0931  00A6               	movwf	___fldiv@new_exp+1
  9114     0932                     l2709:
  9115     0932  0877               	movf	___fldiv@b+3,w
  9116     0933  00A3               	movwf	___fldiv@rem+3
  9117     0934  0876               	movf	___fldiv@b+2,w
  9118     0935  00A2               	movwf	___fldiv@rem+2
  9119     0936  0875               	movf	___fldiv@b+1,w
  9120     0937  00A1               	movwf	___fldiv@rem+1
  9121     0938  0874               	movf	___fldiv@b,w
  9122     0939  00A0               	movwf	___fldiv@rem
  9123     093A                     l2711:
  9124     093A  3000               	movlw	0
  9125     093B  00F7               	movwf	___fldiv@b+3
  9126     093C  3000               	movlw	0
  9127     093D  00F6               	movwf	___fldiv@b+2
  9128     093E  3000               	movlw	0
  9129     093F  00F5               	movwf	___fldiv@b+1
  9130     0940  3000               	movlw	0
  9131     0941  00F4               	movwf	___fldiv@b
  9132     0942                     l2713:
  9133     0942  3000               	movlw	0
  9134     0943  00AA               	movwf	___fldiv@grs+3
  9135     0944  3000               	movlw	0
  9136     0945  00A9               	movwf	___fldiv@grs+2
  9137     0946  3000               	movlw	0
  9138     0947  00A8               	movwf	___fldiv@grs+1
  9139     0948  3000               	movlw	0
  9140     0949  00A7               	movwf	___fldiv@grs
  9141     094A                     l2715:
  9142     094A  01AC               	clrf	___fldiv@aexp
  9143     094B  299A               	goto	l2735
  9144     094C                     l2717:
  9145     094C  082C               	movf	___fldiv@aexp,w
  9146     094D  1903               	btfsc	3,2
  9147     094E  2950               	goto	u3561
  9148     094F  2951               	goto	u3560
  9149     0950                     u3561:
  9150     0950  2971               	goto	l2727
  9151     0951                     u3560:
  9152     0951                     l2719:
  9153     0951  3001               	movlw	1
  9154     0952  00F8               	movwf	??___fldiv
  9155     0953                     u3575:
  9156     0953  1003               	clrc
  9157     0954  0DA0               	rlf	___fldiv@rem,f
  9158     0955  0DA1               	rlf	___fldiv@rem+1,f
  9159     0956  0DA2               	rlf	___fldiv@rem+2,f
  9160     0957  0DA3               	rlf	___fldiv@rem+3,f
  9161     0958  0BF8               	decfsz	??___fldiv,f
  9162     0959  2953               	goto	u3575
  9163     095A  3001               	movlw	1
  9164     095B  00F8               	movwf	??___fldiv
  9165     095C                     u3585:
  9166     095C  1003               	clrc
  9167     095D  0DF4               	rlf	___fldiv@b,f
  9168     095E  0DF5               	rlf	___fldiv@b+1,f
  9169     095F  0DF6               	rlf	___fldiv@b+2,f
  9170     0960  0DF7               	rlf	___fldiv@b+3,f
  9171     0961  0BF8               	decfsz	??___fldiv,f
  9172     0962  295C               	goto	u3585
  9173     0963                     l2721:
  9174     0963  1FAA               	btfss	___fldiv@grs+3,7
  9175     0964  2966               	goto	u3591
  9176     0965  2967               	goto	u3590
  9177     0966                     u3591:
  9178     0966  2968               	goto	l2725
  9179     0967                     u3590:
  9180     0967                     l2723:
  9181     0967  1474               	bsf	___fldiv@b,0
  9182     0968                     l2725:
  9183     0968  3001               	movlw	1
  9184     0969  00F8               	movwf	??___fldiv
  9185     096A                     u3605:
  9186     096A  1003               	clrc
  9187     096B  0DA7               	rlf	___fldiv@grs,f
  9188     096C  0DA8               	rlf	___fldiv@grs+1,f
  9189     096D  0DA9               	rlf	___fldiv@grs+2,f
  9190     096E  0DAA               	rlf	___fldiv@grs+3,f
  9191     096F  0BF8               	decfsz	??___fldiv,f
  9192     0970  296A               	goto	u3605
  9193     0971                     l2727:
  9194     0971  0873               	movf	___fldiv@a+3,w
  9195     0972  0223               	subwf	___fldiv@rem+3,w
  9196     0973  1D03               	skipz
  9197     0974  297F               	goto	u3615
  9198     0975  0872               	movf	___fldiv@a+2,w
  9199     0976  0222               	subwf	___fldiv@rem+2,w
  9200     0977  1D03               	skipz
  9201     0978  297F               	goto	u3615
  9202     0979  0871               	movf	___fldiv@a+1,w
  9203     097A  0221               	subwf	___fldiv@rem+1,w
  9204     097B  1D03               	skipz
  9205     097C  297F               	goto	u3615
  9206     097D  0870               	movf	___fldiv@a,w
  9207     097E  0220               	subwf	___fldiv@rem,w
  9208     097F                     u3615:
  9209     097F  1C03               	skipc
  9210     0980  2982               	goto	u3611
  9211     0981  2983               	goto	u3610
  9212     0982                     u3611:
  9213     0982  2998               	goto	l2733
  9214     0983                     u3610:
  9215     0983                     l2729:
  9216     0983  172A               	bsf	___fldiv@grs+3,6
  9217     0984                     l2731:
  9218     0984  0870               	movf	___fldiv@a,w
  9219     0985  02A0               	subwf	___fldiv@rem,f
  9220     0986  0871               	movf	___fldiv@a+1,w
  9221     0987  1C03               	skipc
  9222     0988  0F71               	incfsz	___fldiv@a+1,w
  9223     0989  298B               	goto	u3625
  9224     098A  298C               	goto	u3626
  9225     098B                     u3625:
  9226     098B  02A1               	subwf	___fldiv@rem+1,f
  9227     098C                     u3626:
  9228     098C  0872               	movf	___fldiv@a+2,w
  9229     098D  1C03               	skipc
  9230     098E  0F72               	incfsz	___fldiv@a+2,w
  9231     098F  2991               	goto	u3627
  9232     0990  2992               	goto	u3628
  9233     0991                     u3627:
  9234     0991  02A2               	subwf	___fldiv@rem+2,f
  9235     0992                     u3628:
  9236     0992  0873               	movf	___fldiv@a+3,w
  9237     0993  1C03               	skipc
  9238     0994  0F73               	incfsz	___fldiv@a+3,w
  9239     0995  2997               	goto	u3629
  9240     0996  2998               	goto	u3620
  9241     0997                     u3629:
  9242     0997  02A3               	subwf	___fldiv@rem+3,f
  9243     0998                     u3620:
  9244     0998                     l2733:
  9245     0998  3001               	movlw	1
  9246     0999  07AC               	addwf	___fldiv@aexp,f
  9247     099A                     l2735:
  9248     099A  301A               	movlw	26
  9249     099B  022C               	subwf	___fldiv@aexp,w
  9250     099C  1C03               	skipc
  9251     099D  299F               	goto	u3631
  9252     099E  29A0               	goto	u3630
  9253     099F                     u3631:
  9254     099F  294C               	goto	l2717
  9255     09A0                     u3630:
  9256     09A0                     l2737:
  9257     09A0  0823               	movf	___fldiv@rem+3,w
  9258     09A1  0422               	iorwf	___fldiv@rem+2,w
  9259     09A2  0421               	iorwf	___fldiv@rem+1,w
  9260     09A3  0420               	iorwf	___fldiv@rem,w
  9261     09A4  1903               	skipnz
  9262     09A5  29A7               	goto	u3641
  9263     09A6  29A8               	goto	u3640
  9264     09A7                     u3641:
  9265     09A7  29C7               	goto	l2751
  9266     09A8                     u3640:
  9267     09A8                     l2739:
  9268     09A8  1427               	bsf	___fldiv@grs,0
  9269     09A9  29C7               	goto	l2751
  9270     09AA                     l2741:
  9271     09AA  3001               	movlw	1
  9272     09AB  00F8               	movwf	??___fldiv
  9273     09AC                     u3655:
  9274     09AC  1003               	clrc
  9275     09AD  0DF4               	rlf	___fldiv@b,f
  9276     09AE  0DF5               	rlf	___fldiv@b+1,f
  9277     09AF  0DF6               	rlf	___fldiv@b+2,f
  9278     09B0  0DF7               	rlf	___fldiv@b+3,f
  9279     09B1  0BF8               	decfsz	??___fldiv,f
  9280     09B2  29AC               	goto	u3655
  9281     09B3                     l2743:
  9282     09B3  1FAA               	btfss	___fldiv@grs+3,7
  9283     09B4  29B6               	goto	u3661
  9284     09B5  29B7               	goto	u3660
  9285     09B6                     u3661:
  9286     09B6  29B8               	goto	l2747
  9287     09B7                     u3660:
  9288     09B7                     l2745:
  9289     09B7  1474               	bsf	___fldiv@b,0
  9290     09B8                     l2747:
  9291     09B8  3001               	movlw	1
  9292     09B9  00F8               	movwf	??___fldiv
  9293     09BA                     u3675:
  9294     09BA  1003               	clrc
  9295     09BB  0DA7               	rlf	___fldiv@grs,f
  9296     09BC  0DA8               	rlf	___fldiv@grs+1,f
  9297     09BD  0DA9               	rlf	___fldiv@grs+2,f
  9298     09BE  0DAA               	rlf	___fldiv@grs+3,f
  9299     09BF  0BF8               	decfsz	??___fldiv,f
  9300     09C0  29BA               	goto	u3675
  9301     09C1                     l2749:
  9302     09C1  30FF               	movlw	255
  9303     09C2  07A5               	addwf	___fldiv@new_exp,f
  9304     09C3  1803               	skipnc
  9305     09C4  0AA6               	incf	___fldiv@new_exp+1,f
  9306     09C5  30FF               	movlw	255
  9307     09C6  07A6               	addwf	___fldiv@new_exp+1,f
  9308     09C7                     l2751:
  9309     09C7  1FF6               	btfss	___fldiv@b+2,7
  9310     09C8  29CA               	goto	u3681
  9311     09C9  29CB               	goto	u3680
  9312     09CA                     u3681:
  9313     09CA  29AA               	goto	l2741
  9314     09CB                     u3680:
  9315     09CB                     l2753:
  9316     09CB  01AC               	clrf	___fldiv@aexp
  9317     09CC                     l2755:
  9318     09CC  1FAA               	btfss	___fldiv@grs+3,7
  9319     09CD  29CF               	goto	u3691
  9320     09CE  29D0               	goto	u3690
  9321     09CF                     u3691:
  9322     09CF  29EC               	goto	l2763
  9323     09D0                     u3690:
  9324     09D0                     l2757:
  9325     09D0  30FF               	movlw	255
  9326     09D1  0527               	andwf	___fldiv@grs,w
  9327     09D2  00F8               	movwf	??___fldiv
  9328     09D3  30FF               	movlw	255
  9329     09D4  0528               	andwf	___fldiv@grs+1,w
  9330     09D5  00F9               	movwf	??___fldiv+1
  9331     09D6  30FF               	movlw	255
  9332     09D7  0529               	andwf	___fldiv@grs+2,w
  9333     09D8  00FA               	movwf	??___fldiv+2
  9334     09D9  307F               	movlw	127
  9335     09DA  052A               	andwf	___fldiv@grs+3,w
  9336     09DB  00FB               	movwf	??___fldiv+3
  9337     09DC  087B               	movf	??___fldiv+3,w
  9338     09DD  047A               	iorwf	??___fldiv+2,w
  9339     09DE  0479               	iorwf	??___fldiv+1,w
  9340     09DF  0478               	iorwf	??___fldiv,w
  9341     09E0  1903               	skipnz
  9342     09E1  29E3               	goto	u3701
  9343     09E2  29E4               	goto	u3700
  9344     09E3                     u3701:
  9345     09E3  29E7               	goto	l604
  9346     09E4                     u3700:
  9347     09E4                     l2759:
  9348     09E4  3001               	movlw	1
  9349     09E5  00AC               	movwf	___fldiv@aexp
  9350     09E6  29EC               	goto	l2763
  9351     09E7                     l604:
  9352     09E7  1C74               	btfss	___fldiv@b,0
  9353     09E8  29EA               	goto	u3711
  9354     09E9  29EB               	goto	u3710
  9355     09EA                     u3711:
  9356     09EA  29EC               	goto	l2763
  9357     09EB                     u3710:
  9358     09EB  29E4               	goto	l2759
  9359     09EC                     l2763:
  9360     09EC  082C               	movf	___fldiv@aexp,w
  9361     09ED  1903               	btfsc	3,2
  9362     09EE  29F0               	goto	u3721
  9363     09EF  29F1               	goto	u3720
  9364     09F0                     u3721:
  9365     09F0  2A22               	goto	l2773
  9366     09F1                     u3720:
  9367     09F1                     l2765:
  9368     09F1  3001               	movlw	1
  9369     09F2  07F4               	addwf	___fldiv@b,f
  9370     09F3  3000               	movlw	0
  9371     09F4  1803               	skipnc
  9372     09F5  3001               	movlw	1
  9373     09F6  07F5               	addwf	___fldiv@b+1,f
  9374     09F7  3000               	movlw	0
  9375     09F8  1803               	skipnc
  9376     09F9  3001               	movlw	1
  9377     09FA  07F6               	addwf	___fldiv@b+2,f
  9378     09FB  3000               	movlw	0
  9379     09FC  1803               	skipnc
  9380     09FD  3001               	movlw	1
  9381     09FE  07F7               	addwf	___fldiv@b+3,f
  9382     09FF                     l2767:
  9383     09FF  1C77               	btfss	___fldiv@b+3,0
  9384     0A00  2A02               	goto	u3731
  9385     0A01  2A03               	goto	u3730
  9386     0A02                     u3731:
  9387     0A02  2A22               	goto	l2773
  9388     0A03                     u3730:
  9389     0A03                     l2769:
  9390     0A03  0874               	movf	___fldiv@b,w
  9391     0A04  00F8               	movwf	??___fldiv
  9392     0A05  0875               	movf	___fldiv@b+1,w
  9393     0A06  00F9               	movwf	??___fldiv+1
  9394     0A07  0876               	movf	___fldiv@b+2,w
  9395     0A08  00FA               	movwf	??___fldiv+2
  9396     0A09  0877               	movf	___fldiv@b+3,w
  9397     0A0A  00FB               	movwf	??___fldiv+3
  9398     0A0B  3001               	movlw	1
  9399     0A0C  00FC               	movwf	??___fldiv+4
  9400     0A0D                     u3745:
  9401     0A0D  0D7B               	rlf	??___fldiv+3,w
  9402     0A0E  0CFB               	rrf	??___fldiv+3,f
  9403     0A0F  0CFA               	rrf	??___fldiv+2,f
  9404     0A10  0CF9               	rrf	??___fldiv+1,f
  9405     0A11  0CF8               	rrf	??___fldiv,f
  9406     0A12                     u3740:
  9407     0A12  0BFC               	decfsz	??___fldiv+4,f
  9408     0A13  2A0D               	goto	u3745
  9409     0A14  087B               	movf	??___fldiv+3,w
  9410     0A15  00F7               	movwf	___fldiv@b+3
  9411     0A16  087A               	movf	??___fldiv+2,w
  9412     0A17  00F6               	movwf	___fldiv@b+2
  9413     0A18  0879               	movf	??___fldiv+1,w
  9414     0A19  00F5               	movwf	___fldiv@b+1
  9415     0A1A  0878               	movf	??___fldiv,w
  9416     0A1B  00F4               	movwf	___fldiv@b
  9417     0A1C                     l2771:
  9418     0A1C  3001               	movlw	1
  9419     0A1D  07A5               	addwf	___fldiv@new_exp,f
  9420     0A1E  1803               	skipnc
  9421     0A1F  0AA6               	incf	___fldiv@new_exp+1,f
  9422     0A20  3000               	movlw	0
  9423     0A21  07A6               	addwf	___fldiv@new_exp+1,f
  9424     0A22                     l2773:
  9425     0A22  0826               	movf	___fldiv@new_exp+1,w
  9426     0A23  3A80               	xorlw	128
  9427     0A24  00FF               	movwf	btemp+1
  9428     0A25  3080               	movlw	128
  9429     0A26  027F               	subwf	btemp+1,w
  9430     0A27  1D03               	skipz
  9431     0A28  2A2B               	goto	u3755
  9432     0A29  30FF               	movlw	255
  9433     0A2A  0225               	subwf	___fldiv@new_exp,w
  9434     0A2B                     u3755:
  9435     0A2B  1C03               	skipc
  9436     0A2C  2A2E               	goto	u3751
  9437     0A2D  2A2F               	goto	u3750
  9438     0A2E                     u3751:
  9439     0A2E  2A3D               	goto	l2777
  9440     0A2F                     u3750:
  9441     0A2F                     l2775:
  9442     0A2F  30FF               	movlw	255
  9443     0A30  1283               	bcf	3,5	;RP0=0, select bank0
  9444     0A31  1303               	bcf	3,6	;RP1=0, select bank0
  9445     0A32  00A5               	movwf	___fldiv@new_exp
  9446     0A33  3000               	movlw	0
  9447     0A34  00A6               	movwf	___fldiv@new_exp+1
  9448     0A35  3000               	movlw	0
  9449     0A36  00F7               	movwf	___fldiv@b+3
  9450     0A37  3000               	movlw	0
  9451     0A38  00F6               	movwf	___fldiv@b+2
  9452     0A39  3000               	movlw	0
  9453     0A3A  00F5               	movwf	___fldiv@b+1
  9454     0A3B  3000               	movlw	0
  9455     0A3C  00F4               	movwf	___fldiv@b
  9456     0A3D                     l2777:
  9457     0A3D  1283               	bcf	3,5	;RP0=0, select bank0
  9458     0A3E  1303               	bcf	3,6	;RP1=0, select bank0
  9459     0A3F  0826               	movf	___fldiv@new_exp+1,w
  9460     0A40  3A80               	xorlw	128
  9461     0A41  00FF               	movwf	btemp+1
  9462     0A42  3080               	movlw	128
  9463     0A43  027F               	subwf	btemp+1,w
  9464     0A44  1D03               	skipz
  9465     0A45  2A48               	goto	u3765
  9466     0A46  3001               	movlw	1
  9467     0A47  0225               	subwf	___fldiv@new_exp,w
  9468     0A48                     u3765:
  9469     0A48  1803               	skipnc
  9470     0A49  2A4B               	goto	u3761
  9471     0A4A  2A4C               	goto	u3760
  9472     0A4B                     u3761:
  9473     0A4B  2A59               	goto	l610
  9474     0A4C                     u3760:
  9475     0A4C                     l2779:
  9476     0A4C  1283               	bcf	3,5	;RP0=0, select bank0
  9477     0A4D  1303               	bcf	3,6	;RP1=0, select bank0
  9478     0A4E  01A5               	clrf	___fldiv@new_exp
  9479     0A4F  01A6               	clrf	___fldiv@new_exp+1
  9480     0A50                     l2781:
  9481     0A50  3000               	movlw	0
  9482     0A51  00F7               	movwf	___fldiv@b+3
  9483     0A52  3000               	movlw	0
  9484     0A53  00F6               	movwf	___fldiv@b+2
  9485     0A54  3000               	movlw	0
  9486     0A55  00F5               	movwf	___fldiv@b+1
  9487     0A56  3000               	movlw	0
  9488     0A57  00F4               	movwf	___fldiv@b
  9489     0A58                     l2783:
  9490     0A58  01A4               	clrf	___fldiv@sign
  9491     0A59                     l610:
  9492     0A59  1283               	bcf	3,5	;RP0=0, select bank0
  9493     0A5A  1303               	bcf	3,6	;RP1=0, select bank0
  9494     0A5B  0825               	movf	___fldiv@new_exp,w
  9495     0A5C  00AB               	movwf	___fldiv@bexp
  9496     0A5D                     l2785:
  9497     0A5D  1C2B               	btfss	___fldiv@bexp,0
  9498     0A5E  2A60               	goto	u3771
  9499     0A5F  2A61               	goto	u3770
  9500     0A60                     u3771:
  9501     0A60  2A63               	goto	l2789
  9502     0A61                     u3770:
  9503     0A61                     l2787:
  9504     0A61  17F6               	bsf	___fldiv@b+2,7
  9505     0A62  2A65               	goto	l612
  9506     0A63                     l2789:
  9507     0A63  307F               	movlw	127
  9508     0A64  05F6               	andwf	___fldiv@b+2,f
  9509     0A65                     l612:
  9510     0A65  082B               	movf	___fldiv@bexp,w
  9511     0A66  00F8               	movwf	??___fldiv
  9512     0A67  1003               	clrc
  9513     0A68  0C78               	rrf	??___fldiv,w
  9514     0A69  00F7               	movwf	___fldiv@b+3
  9515     0A6A  0824               	movf	___fldiv@sign,w
  9516     0A6B  04F7               	iorwf	___fldiv@b+3,f
  9517     0A6C  2909               	goto	l2697
  9518     0A6D                     l590:
  9519     0A6D  0008               	return
  9520     0A6E                     __end_of___fldiv:
  9521     0002                     ___latbits      equ	2
  9522     007E                     btemp           set	126	;btemp
  9523     007E                     wtemp0          set	126
  9524                           
  9525                           	psect	text13_split_1
  9526     00A9                     l3069:
  9527                           
  9528                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.0;
  9529     00A9  303F               	movlw	63
  9530     00AA  1683               	bsf	3,5	;RP0=1, select bank1
  9531     00AB  1303               	bcf	3,6	;RP1=0, select bank1
  9532     00AC  00CB               	movwf	(efgtoa@u+3)^(0+128)
  9533     00AD  3080               	movlw	128
  9534     00AE  00CA               	movwf	(efgtoa@u+2)^(0+128)
  9535     00AF  3000               	movlw	0
  9536     00B0  00C9               	movwf	(efgtoa@u+1)^(0+128)
  9537     00B1  3000               	movlw	0
  9538     00B2  00C8               	movwf	efgtoa@u^(0+128)
  9539     00B3                     l3071:
  9540                           
  9541                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  9542     00B3  01AF               	clrf	efgtoa@e^(0+128)
  9543     00B4  01B0               	clrf	(efgtoa@e+1)^(0+128)
  9544     00B5                     l3073:
  9545                           
  9546                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f == 0.0)
      +                          ) {
  9547     00B5  0847               	movf	(efgtoa@g+3)^(0+128),w
  9548     00B6  00F3               	movwf	___fleq@ff1+3
  9549     00B7  0846               	movf	(efgtoa@g+2)^(0+128),w
  9550     00B8  00F2               	movwf	___fleq@ff1+2
  9551     00B9  0845               	movf	(efgtoa@g+1)^(0+128),w
  9552     00BA  00F1               	movwf	___fleq@ff1+1
  9553     00BB  0844               	movf	efgtoa@g^(0+128),w
  9554     00BC  00F0               	movwf	___fleq@ff1
  9555     00BD  3000               	movlw	0
  9556     00BE  00F7               	movwf	___fleq@ff2+3
  9557     00BF  3000               	movlw	0
  9558     00C0  00F6               	movwf	___fleq@ff2+2
  9559     00C1  3000               	movlw	0
  9560     00C2  00F5               	movwf	___fleq@ff2+1
  9561     00C3  3000               	movlw	0
  9562     00C4  00F4               	movwf	___fleq@ff2
  9563     00C5  160A  158A  2499  120A  118A  	fcall	___fleq
  9564     00CA  1803               	btfsc	3,0
  9565     00CB  28CD               	goto	u4461
  9566     00CC  28CE               	goto	u4460
  9567     00CD                     u4461:
  9568     00CD  2ADF               	goto	l3099
  9569     00CE                     u4460:
  9570     00CE  28DF               	goto	l3079
  9571     00CF                     l3077:
  9572                           
  9573                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  9574     00CF  1683               	bsf	3,5	;RP0=1, select bank1
  9575     00D0  1303               	bcf	3,6	;RP1=0, select bank1
  9576     00D1  0836               	movf	(efgtoa@ou+3)^(0+128),w
  9577     00D2  00CB               	movwf	(efgtoa@u+3)^(0+128)
  9578     00D3  0835               	movf	(efgtoa@ou+2)^(0+128),w
  9579     00D4  00CA               	movwf	(efgtoa@u+2)^(0+128)
  9580     00D5  0834               	movf	(efgtoa@ou+1)^(0+128),w
  9581     00D6  00C9               	movwf	(efgtoa@u+1)^(0+128)
  9582     00D7  0833               	movf	efgtoa@ou^(0+128),w
  9583     00D8  00C8               	movwf	efgtoa@u^(0+128)
  9584                           
  9585                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  9586     00D9  3001               	movlw	1
  9587     00DA  07AF               	addwf	efgtoa@e^(0+128),f
  9588     00DB  1803               	skipnc
  9589     00DC  0AB0               	incf	(efgtoa@e+1)^(0+128),f
  9590     00DD  3000               	movlw	0
  9591     00DE  07B0               	addwf	(efgtoa@e+1)^(0+128),f
  9592     00DF                     l3079:
  9593                           
  9594                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((labs((g)
      +                          .u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  9595     00DF  3041               	movlw	65
  9596     00E0  1283               	bcf	3,5	;RP0=0, select bank0
  9597     00E1  1303               	bcf	3,6	;RP1=0, select bank0
  9598     00E2  00A3               	movwf	___flmul@b+3
  9599     00E3  3020               	movlw	32
  9600     00E4  00A2               	movwf	___flmul@b+2
  9601     00E5  3000               	movlw	0
  9602     00E6  00A1               	movwf	___flmul@b+1
  9603     00E7  3000               	movlw	0
  9604     00E8  00A0               	movwf	___flmul@b
  9605     00E9  1683               	bsf	3,5	;RP0=1, select bank1
  9606     00EA  1303               	bcf	3,6	;RP1=0, select bank1
  9607     00EB  084B               	movf	(efgtoa@u+3)^(0+128),w
  9608     00EC  1283               	bcf	3,5	;RP0=0, select bank0
  9609     00ED  1303               	bcf	3,6	;RP1=0, select bank0
  9610     00EE  00A7               	movwf	___flmul@a+3
  9611     00EF  1683               	bsf	3,5	;RP0=1, select bank1
  9612     00F0  1303               	bcf	3,6	;RP1=0, select bank1
  9613     00F1  084A               	movf	(efgtoa@u+2)^(0+128),w
  9614     00F2  1283               	bcf	3,5	;RP0=0, select bank0
  9615     00F3  1303               	bcf	3,6	;RP1=0, select bank0
  9616     00F4  00A6               	movwf	___flmul@a+2
  9617     00F5  1683               	bsf	3,5	;RP0=1, select bank1
  9618     00F6  1303               	bcf	3,6	;RP1=0, select bank1
  9619     00F7  0849               	movf	(efgtoa@u+1)^(0+128),w
  9620     00F8  1283               	bcf	3,5	;RP0=0, select bank0
  9621     00F9  1303               	bcf	3,6	;RP1=0, select bank0
  9622     00FA  00A5               	movwf	___flmul@a+1
  9623     00FB  1683               	bsf	3,5	;RP0=1, select bank1
  9624     00FC  1303               	bcf	3,6	;RP1=0, select bank1
  9625     00FD  0848               	movf	efgtoa@u^(0+128),w
  9626     00FE  1283               	bcf	3,5	;RP0=0, select bank0
  9627     00FF  1303               	bcf	3,6	;RP1=0, select bank0
  9628     0100  00A4               	movwf	___flmul@a
  9629     0101  120A  158A  24BE  120A  118A  	fcall	___flmul
  9630     0106  1283               	bcf	3,5	;RP0=0, select bank0
  9631     0107  1303               	bcf	3,6	;RP1=0, select bank0
  9632     0108  0823               	movf	?___flmul+3,w
  9633     0109  1683               	bsf	3,5	;RP0=1, select bank1
  9634     010A  1303               	bcf	3,6	;RP1=0, select bank1
  9635     010B  00B6               	movwf	(efgtoa@ou+3)^(0+128)
  9636     010C  1283               	bcf	3,5	;RP0=0, select bank0
  9637     010D  1303               	bcf	3,6	;RP1=0, select bank0
  9638     010E  0822               	movf	?___flmul+2,w
  9639     010F  1683               	bsf	3,5	;RP0=1, select bank1
  9640     0110  1303               	bcf	3,6	;RP1=0, select bank1
  9641     0111  00B5               	movwf	(efgtoa@ou+2)^(0+128)
  9642     0112  1283               	bcf	3,5	;RP0=0, select bank0
  9643     0113  1303               	bcf	3,6	;RP1=0, select bank0
  9644     0114  0821               	movf	?___flmul+1,w
  9645     0115  1683               	bsf	3,5	;RP0=1, select bank1
  9646     0116  1303               	bcf	3,6	;RP1=0, select bank1
  9647     0117  00B4               	movwf	(efgtoa@ou+1)^(0+128)
  9648     0118  1283               	bcf	3,5	;RP0=0, select bank0
  9649     0119  1303               	bcf	3,6	;RP1=0, select bank0
  9650     011A  0820               	movf	?___flmul,w
  9651     011B  1683               	bsf	3,5	;RP0=1, select bank1
  9652     011C  1303               	bcf	3,6	;RP1=0, select bank1
  9653     011D  00B3               	movwf	efgtoa@ou^(0+128)
  9654     011E                     l3081:
  9655     011E  0844               	movf	efgtoa@g^(0+128),w
  9656     011F  1283               	bcf	3,5	;RP0=0, select bank0
  9657     0120  1303               	bcf	3,6	;RP1=0, select bank0
  9658     0121  00D8               	movwf	??_efgtoa
  9659     0122  1683               	bsf	3,5	;RP0=1, select bank1
  9660     0123  1303               	bcf	3,6	;RP1=0, select bank1
  9661     0124  0845               	movf	(efgtoa@g+1)^(0+128),w
  9662     0125  1283               	bcf	3,5	;RP0=0, select bank0
  9663     0126  1303               	bcf	3,6	;RP1=0, select bank0
  9664     0127  00D9               	movwf	??_efgtoa+1
  9665     0128  1683               	bsf	3,5	;RP0=1, select bank1
  9666     0129  1303               	bcf	3,6	;RP1=0, select bank1
  9667     012A  0846               	movf	(efgtoa@g+2)^(0+128),w
  9668     012B  1283               	bcf	3,5	;RP0=0, select bank0
  9669     012C  1303               	bcf	3,6	;RP1=0, select bank0
  9670     012D  00DA               	movwf	??_efgtoa+2
  9671     012E  1683               	bsf	3,5	;RP0=1, select bank1
  9672     012F  1303               	bcf	3,6	;RP1=0, select bank1
  9673     0130  0847               	movf	(efgtoa@g+3)^(0+128),w
  9674     0131  1283               	bcf	3,5	;RP0=0, select bank0
  9675     0132  1303               	bcf	3,6	;RP1=0, select bank0
  9676     0133  00DB               	movwf	??_efgtoa+3
  9677     0134  1683               	bsf	3,5	;RP0=1, select bank1
  9678     0135  1303               	bcf	3,6	;RP1=0, select bank1
  9679     0136  0833               	movf	efgtoa@ou^(0+128),w
  9680     0137  1283               	bcf	3,5	;RP0=0, select bank0
  9681     0138  1303               	bcf	3,6	;RP1=0, select bank0
  9682     0139  02D8               	subwf	??_efgtoa,f
  9683     013A  1683               	bsf	3,5	;RP0=1, select bank1
  9684     013B  1303               	bcf	3,6	;RP1=0, select bank1
  9685     013C  0834               	movf	(efgtoa@ou+1)^(0+128),w
  9686     013D  1C03               	skipc
  9687     013E  0F34               	incfsz	(efgtoa@ou+1)^(0+128),w
  9688     013F  2941               	goto	u4471
  9689     0140  2944               	goto	u4472
  9690     0141                     u4471:
  9691     0141  1283               	bcf	3,5	;RP0=0, select bank0
  9692     0142  1303               	bcf	3,6	;RP1=0, select bank0
  9693     0143  02D9               	subwf	??_efgtoa+1,f
  9694     0144                     u4472:
  9695     0144  1683               	bsf	3,5	;RP0=1, select bank1
  9696     0145  1303               	bcf	3,6	;RP1=0, select bank1
  9697     0146  0835               	movf	(efgtoa@ou+2)^(0+128),w
  9698     0147  1C03               	skipc
  9699     0148  0F35               	incfsz	(efgtoa@ou+2)^(0+128),w
  9700     0149  294B               	goto	u4473
  9701     014A  294E               	goto	u4474
  9702     014B                     u4473:
  9703     014B  1283               	bcf	3,5	;RP0=0, select bank0
  9704     014C  1303               	bcf	3,6	;RP1=0, select bank0
  9705     014D  02DA               	subwf	??_efgtoa+2,f
  9706     014E                     u4474:
  9707     014E  1683               	bsf	3,5	;RP0=1, select bank1
  9708     014F  1303               	bcf	3,6	;RP1=0, select bank1
  9709     0150  0836               	movf	(efgtoa@ou+3)^(0+128),w
  9710     0151  1C03               	skipc
  9711     0152  0F36               	incfsz	(efgtoa@ou+3)^(0+128),w
  9712     0153  2955               	goto	u4475
  9713     0154  2958               	goto	u4476
  9714     0155                     u4475:
  9715     0155  1283               	bcf	3,5	;RP0=0, select bank0
  9716     0156  1303               	bcf	3,6	;RP1=0, select bank0
  9717     0157  02DB               	subwf	??_efgtoa+3,f
  9718     0158                     u4476:
  9719     0158  1683               	bsf	3,5	;RP0=1, select bank1
  9720     0159  1303               	bcf	3,6	;RP1=0, select bank1
  9721     015A  1283               	bcf	3,5	;RP0=0, select bank0
  9722     015B  1303               	bcf	3,6	;RP1=0, select bank0
  9723     015C  085B               	movf	??_efgtoa+3,w
  9724     015D  00F3               	movwf	labs@a+3
  9725     015E  085A               	movf	??_efgtoa+2,w
  9726     015F  00F2               	movwf	labs@a+2
  9727     0160  0859               	movf	??_efgtoa+1,w
  9728     0161  00F1               	movwf	labs@a+1
  9729     0162  0858               	movf	??_efgtoa,w
  9730     0163  00F0               	movwf	labs@a
  9731     0164  160A  158A  2324  120A  118A  	fcall	_labs
  9732     0169  1BF3               	btfsc	?_labs+3,7
  9733     016A  297B               	goto	u4481
  9734     016B  0873               	movf	?_labs+3,w
  9735     016C  1D03               	btfss	3,2
  9736     016D  297C               	goto	u4480
  9737     016E  0872               	movf	?_labs+2,w
  9738     016F  1D03               	btfss	3,2
  9739     0170  297C               	goto	u4480
  9740     0171  0871               	movf	?_labs+1,w
  9741     0172  1D03               	btfss	3,2
  9742     0173  297C               	goto	u4480
  9743     0174  3002               	movlw	2
  9744     0175  0270               	subwf	?_labs,w
  9745     0176  1D03               	skipz
  9746     0177  2978               	goto	u4483
  9747     0178                     u4483:
  9748     0178  1C03               	btfss	3,0
  9749     0179  297B               	goto	u4481
  9750     017A  297C               	goto	u4480
  9751     017B                     u4481:
  9752     017B  28CF               	goto	l3077
  9753     017C                     u4480:
  9754     017C                     l3083:
  9755     017C  1683               	bsf	3,5	;RP0=1, select bank1
  9756     017D  1303               	bcf	3,6	;RP1=0, select bank1
  9757     017E  0836               	movf	(efgtoa@ou+3)^(0+128),w
  9758     017F  1283               	bcf	3,5	;RP0=0, select bank0
  9759     0180  1303               	bcf	3,6	;RP1=0, select bank0
  9760     0181  00B8               	movwf	___flge@ff1+3
  9761     0182  1683               	bsf	3,5	;RP0=1, select bank1
  9762     0183  1303               	bcf	3,6	;RP1=0, select bank1
  9763     0184  0835               	movf	(efgtoa@ou+2)^(0+128),w
  9764     0185  1283               	bcf	3,5	;RP0=0, select bank0
  9765     0186  1303               	bcf	3,6	;RP1=0, select bank0
  9766     0187  00B7               	movwf	___flge@ff1+2
  9767     0188  1683               	bsf	3,5	;RP0=1, select bank1
  9768     0189  1303               	bcf	3,6	;RP1=0, select bank1
  9769     018A  0834               	movf	(efgtoa@ou+1)^(0+128),w
  9770     018B  1283               	bcf	3,5	;RP0=0, select bank0
  9771     018C  1303               	bcf	3,6	;RP1=0, select bank0
  9772     018D  00B6               	movwf	___flge@ff1+1
  9773     018E  1683               	bsf	3,5	;RP0=1, select bank1
  9774     018F  1303               	bcf	3,6	;RP1=0, select bank1
  9775     0190  0833               	movf	efgtoa@ou^(0+128),w
  9776     0191  1283               	bcf	3,5	;RP0=0, select bank0
  9777     0192  1303               	bcf	3,6	;RP1=0, select bank0
  9778     0193  00B5               	movwf	___flge@ff1
  9779     0194  1683               	bsf	3,5	;RP0=1, select bank1
  9780     0195  1303               	bcf	3,6	;RP1=0, select bank1
  9781     0196  0847               	movf	(efgtoa@g+3)^(0+128),w
  9782     0197  1283               	bcf	3,5	;RP0=0, select bank0
  9783     0198  1303               	bcf	3,6	;RP1=0, select bank0
  9784     0199  00BC               	movwf	___flge@ff2+3
  9785     019A  1683               	bsf	3,5	;RP0=1, select bank1
  9786     019B  1303               	bcf	3,6	;RP1=0, select bank1
  9787     019C  0846               	movf	(efgtoa@g+2)^(0+128),w
  9788     019D  1283               	bcf	3,5	;RP0=0, select bank0
  9789     019E  1303               	bcf	3,6	;RP1=0, select bank0
  9790     019F  00BB               	movwf	___flge@ff2+2
  9791     01A0  1683               	bsf	3,5	;RP0=1, select bank1
  9792     01A1  1303               	bcf	3,6	;RP1=0, select bank1
  9793     01A2  0845               	movf	(efgtoa@g+1)^(0+128),w
  9794     01A3  1283               	bcf	3,5	;RP0=0, select bank0
  9795     01A4  1303               	bcf	3,6	;RP1=0, select bank0
  9796     01A5  00BA               	movwf	___flge@ff2+1
  9797     01A6  1683               	bsf	3,5	;RP0=1, select bank1
  9798     01A7  1303               	bcf	3,6	;RP1=0, select bank1
  9799     01A8  0844               	movf	efgtoa@g^(0+128),w
  9800     01A9  1283               	bcf	3,5	;RP0=0, select bank0
  9801     01AA  1303               	bcf	3,6	;RP1=0, select bank0
  9802     01AB  00B9               	movwf	___flge@ff2
  9803     01AC  120A  118A  2005  120A  118A  	fcall	___flge
  9804     01B1  1C03               	btfss	3,0
  9805     01B2  29B4               	goto	u4491
  9806     01B3  29B5               	goto	u4490
  9807     01B4                     u4491:
  9808     01B4  28CF               	goto	l3077
  9809     01B5                     u4490:
  9810     01B5                     l3085:
  9811                           
  9812                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs((g).u-
      +                          (u).u) <= 1)) {
  9813     01B5  1683               	bsf	3,5	;RP0=1, select bank1
  9814     01B6  1303               	bcf	3,6	;RP1=0, select bank1
  9815     01B7  0844               	movf	efgtoa@g^(0+128),w
  9816     01B8  1283               	bcf	3,5	;RP0=0, select bank0
  9817     01B9  1303               	bcf	3,6	;RP1=0, select bank0
  9818     01BA  00D8               	movwf	??_efgtoa
  9819     01BB  1683               	bsf	3,5	;RP0=1, select bank1
  9820     01BC  1303               	bcf	3,6	;RP1=0, select bank1
  9821     01BD  0845               	movf	(efgtoa@g+1)^(0+128),w
  9822     01BE  1283               	bcf	3,5	;RP0=0, select bank0
  9823     01BF  1303               	bcf	3,6	;RP1=0, select bank0
  9824     01C0  00D9               	movwf	??_efgtoa+1
  9825     01C1  1683               	bsf	3,5	;RP0=1, select bank1
  9826     01C2  1303               	bcf	3,6	;RP1=0, select bank1
  9827     01C3  0846               	movf	(efgtoa@g+2)^(0+128),w
  9828     01C4  1283               	bcf	3,5	;RP0=0, select bank0
  9829     01C5  1303               	bcf	3,6	;RP1=0, select bank0
  9830     01C6  00DA               	movwf	??_efgtoa+2
  9831     01C7  1683               	bsf	3,5	;RP0=1, select bank1
  9832     01C8  1303               	bcf	3,6	;RP1=0, select bank1
  9833     01C9  0847               	movf	(efgtoa@g+3)^(0+128),w
  9834     01CA  1283               	bcf	3,5	;RP0=0, select bank0
  9835     01CB  1303               	bcf	3,6	;RP1=0, select bank0
  9836     01CC  00DB               	movwf	??_efgtoa+3
  9837     01CD  1683               	bsf	3,5	;RP0=1, select bank1
  9838     01CE  1303               	bcf	3,6	;RP1=0, select bank1
  9839     01CF  0848               	movf	efgtoa@u^(0+128),w
  9840     01D0  1283               	bcf	3,5	;RP0=0, select bank0
  9841     01D1  1303               	bcf	3,6	;RP1=0, select bank0
  9842     01D2  02D8               	subwf	??_efgtoa,f
  9843     01D3  1683               	bsf	3,5	;RP0=1, select bank1
  9844     01D4  1303               	bcf	3,6	;RP1=0, select bank1
  9845     01D5  0849               	movf	(efgtoa@u+1)^(0+128),w
  9846     01D6  1C03               	skipc
  9847     01D7  0F49               	incfsz	(efgtoa@u+1)^(0+128),w
  9848     01D8  29DA               	goto	u4501
  9849     01D9  29DD               	goto	u4502
  9850     01DA                     u4501:
  9851     01DA  1283               	bcf	3,5	;RP0=0, select bank0
  9852     01DB  1303               	bcf	3,6	;RP1=0, select bank0
  9853     01DC  02D9               	subwf	??_efgtoa+1,f
  9854     01DD                     u4502:
  9855     01DD  1683               	bsf	3,5	;RP0=1, select bank1
  9856     01DE  1303               	bcf	3,6	;RP1=0, select bank1
  9857     01DF  084A               	movf	(efgtoa@u+2)^(0+128),w
  9858     01E0  1C03               	skipc
  9859     01E1  0F4A               	incfsz	(efgtoa@u+2)^(0+128),w
  9860     01E2  29E4               	goto	u4503
  9861     01E3  29E7               	goto	u4504
  9862     01E4                     u4503:
  9863     01E4  1283               	bcf	3,5	;RP0=0, select bank0
  9864     01E5  1303               	bcf	3,6	;RP1=0, select bank0
  9865     01E6  02DA               	subwf	??_efgtoa+2,f
  9866     01E7                     u4504:
  9867     01E7  1683               	bsf	3,5	;RP0=1, select bank1
  9868     01E8  1303               	bcf	3,6	;RP1=0, select bank1
  9869     01E9  084B               	movf	(efgtoa@u+3)^(0+128),w
  9870     01EA  1C03               	skipc
  9871     01EB  0F4B               	incfsz	(efgtoa@u+3)^(0+128),w
  9872     01EC  29EE               	goto	u4505
  9873     01ED  29F1               	goto	u4506
  9874     01EE                     u4505:
  9875     01EE  1283               	bcf	3,5	;RP0=0, select bank0
  9876     01EF  1303               	bcf	3,6	;RP1=0, select bank0
  9877     01F0  02DB               	subwf	??_efgtoa+3,f
  9878     01F1                     u4506:
  9879     01F1  1683               	bsf	3,5	;RP0=1, select bank1
  9880     01F2  1303               	bcf	3,6	;RP1=0, select bank1
  9881     01F3  1283               	bcf	3,5	;RP0=0, select bank0
  9882     01F4  1303               	bcf	3,6	;RP1=0, select bank0
  9883     01F5  085B               	movf	??_efgtoa+3,w
  9884     01F6  00F3               	movwf	labs@a+3
  9885     01F7  085A               	movf	??_efgtoa+2,w
  9886     01F8  00F2               	movwf	labs@a+2
  9887     01F9  0859               	movf	??_efgtoa+1,w
  9888     01FA  00F1               	movwf	labs@a+1
  9889     01FB  0858               	movf	??_efgtoa,w
  9890     01FC  00F0               	movwf	labs@a
  9891     01FD  160A  158A  2324  120A  118A  	fcall	_labs
  9892     0202  1BF3               	btfsc	?_labs+3,7
  9893     0203  2A15               	goto	u4510
  9894     0204  0873               	movf	?_labs+3,w
  9895     0205  1D03               	btfss	3,2
  9896     0206  2A14               	goto	u4511
  9897     0207  0872               	movf	?_labs+2,w
  9898     0208  1D03               	btfss	3,2
  9899     0209  2A14               	goto	u4511
  9900     020A  0871               	movf	?_labs+1,w
  9901     020B  1D03               	btfss	3,2
  9902     020C  2A14               	goto	u4511
  9903     020D  3002               	movlw	2
  9904     020E  0270               	subwf	?_labs,w
  9905     020F  1D03               	skipz
  9906     0210  2A11               	goto	u4513
  9907     0211                     u4513:
  9908     0211  1803               	btfsc	3,0
  9909     0212  2A14               	goto	u4511
  9910     0213  2A15               	goto	u4510
  9911     0214                     u4511:
  9912     0214  2AA6               	goto	l3097
  9913     0215                     u4510:
  9914     0215                     l3087:
  9915                           
  9916                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  9917     0215  1683               	bsf	3,5	;RP0=1, select bank1
  9918     0216  1303               	bcf	3,6	;RP1=0, select bank1
  9919     0217  084B               	movf	(efgtoa@u+3)^(0+128),w
  9920     0218  00C7               	movwf	(efgtoa@g+3)^(0+128)
  9921     0219  084A               	movf	(efgtoa@u+2)^(0+128),w
  9922     021A  00C6               	movwf	(efgtoa@g+2)^(0+128)
  9923     021B  0849               	movf	(efgtoa@u+1)^(0+128),w
  9924     021C  00C5               	movwf	(efgtoa@g+1)^(0+128)
  9925     021D  0848               	movf	efgtoa@u^(0+128),w
  9926     021E  00C4               	movwf	efgtoa@g^(0+128)
  9927                           
  9928                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  9929     021F  2ADF               	goto	l3099
  9930     0220                     l3089:
  9931                           
  9932                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.f/10.0
      +                          ;
  9933     0220  3041               	movlw	65
  9934     0221  00F3               	movwf	___fldiv@a+3
  9935     0222  3020               	movlw	32
  9936     0223  00F2               	movwf	___fldiv@a+2
  9937     0224  3000               	movlw	0
  9938     0225  00F1               	movwf	___fldiv@a+1
  9939     0226  3000               	movlw	0
  9940     0227  00F0               	movwf	___fldiv@a
  9941     0228  1683               	bsf	3,5	;RP0=1, select bank1
  9942     0229  1303               	bcf	3,6	;RP1=0, select bank1
  9943     022A  084B               	movf	(efgtoa@u+3)^(0+128),w
  9944     022B  00F7               	movwf	___fldiv@b+3
  9945     022C  084A               	movf	(efgtoa@u+2)^(0+128),w
  9946     022D  00F6               	movwf	___fldiv@b+2
  9947     022E  0849               	movf	(efgtoa@u+1)^(0+128),w
  9948     022F  00F5               	movwf	___fldiv@b+1
  9949     0230  0848               	movf	efgtoa@u^(0+128),w
  9950     0231  00F4               	movwf	___fldiv@b
  9951     0232  120A  158A  209E  120A  118A  	fcall	___fldiv
  9952     0237  0873               	movf	?___fldiv+3,w
  9953     0238  1683               	bsf	3,5	;RP0=1, select bank1
  9954     0239  1303               	bcf	3,6	;RP1=0, select bank1
  9955     023A  00CB               	movwf	(efgtoa@u+3)^(0+128)
  9956     023B  0872               	movf	?___fldiv+2,w
  9957     023C  00CA               	movwf	(efgtoa@u+2)^(0+128)
  9958     023D  0871               	movf	?___fldiv+1,w
  9959     023E  00C9               	movwf	(efgtoa@u+1)^(0+128)
  9960     023F  0870               	movf	?___fldiv,w
  9961     0240  00C8               	movwf	efgtoa@u^(0+128)
  9962     0241                     l3091:
  9963                           
  9964                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
  9965     0241  30FF               	movlw	255
  9966     0242  07AF               	addwf	efgtoa@e^(0+128),f
  9967     0243  1803               	skipnc
  9968     0244  0AB0               	incf	(efgtoa@e+1)^(0+128),f
  9969     0245  30FF               	movlw	255
  9970     0246  07B0               	addwf	(efgtoa@e+1)^(0+128),f
  9971     0247                     l3093:
  9972                           
  9973                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((labs((g).
      +                          u-(u).u) <= 1)) {
  9974     0247  0844               	movf	efgtoa@g^(0+128),w
  9975     0248  1283               	bcf	3,5	;RP0=0, select bank0
  9976     0249  1303               	bcf	3,6	;RP1=0, select bank0
  9977     024A  00D8               	movwf	??_efgtoa
  9978     024B  1683               	bsf	3,5	;RP0=1, select bank1
  9979     024C  1303               	bcf	3,6	;RP1=0, select bank1
  9980     024D  0845               	movf	(efgtoa@g+1)^(0+128),w
  9981     024E  1283               	bcf	3,5	;RP0=0, select bank0
  9982     024F  1303               	bcf	3,6	;RP1=0, select bank0
  9983     0250  00D9               	movwf	??_efgtoa+1
  9984     0251  1683               	bsf	3,5	;RP0=1, select bank1
  9985     0252  1303               	bcf	3,6	;RP1=0, select bank1
  9986     0253  0846               	movf	(efgtoa@g+2)^(0+128),w
  9987     0254  1283               	bcf	3,5	;RP0=0, select bank0
  9988     0255  1303               	bcf	3,6	;RP1=0, select bank0
  9989     0256  00DA               	movwf	??_efgtoa+2
  9990     0257  1683               	bsf	3,5	;RP0=1, select bank1
  9991     0258  1303               	bcf	3,6	;RP1=0, select bank1
  9992     0259  0847               	movf	(efgtoa@g+3)^(0+128),w
  9993     025A  1283               	bcf	3,5	;RP0=0, select bank0
  9994     025B  1303               	bcf	3,6	;RP1=0, select bank0
  9995     025C  00DB               	movwf	??_efgtoa+3
  9996     025D  1683               	bsf	3,5	;RP0=1, select bank1
  9997     025E  1303               	bcf	3,6	;RP1=0, select bank1
  9998     025F  0848               	movf	efgtoa@u^(0+128),w
  9999     0260  1283               	bcf	3,5	;RP0=0, select bank0
 10000     0261  1303               	bcf	3,6	;RP1=0, select bank0
 10001     0262  02D8               	subwf	??_efgtoa,f
 10002     0263  1683               	bsf	3,5	;RP0=1, select bank1
 10003     0264  1303               	bcf	3,6	;RP1=0, select bank1
 10004     0265  0849               	movf	(efgtoa@u+1)^(0+128),w
 10005     0266  1C03               	skipc
 10006     0267  0F49               	incfsz	(efgtoa@u+1)^(0+128),w
 10007     0268  2A6A               	goto	u4521
 10008     0269  2A6D               	goto	u4522
 10009     026A                     u4521:
 10010     026A  1283               	bcf	3,5	;RP0=0, select bank0
 10011     026B  1303               	bcf	3,6	;RP1=0, select bank0
 10012     026C  02D9               	subwf	??_efgtoa+1,f
 10013     026D                     u4522:
 10014     026D  1683               	bsf	3,5	;RP0=1, select bank1
 10015     026E  1303               	bcf	3,6	;RP1=0, select bank1
 10016     026F  084A               	movf	(efgtoa@u+2)^(0+128),w
 10017     0270  1C03               	skipc
 10018     0271  0F4A               	incfsz	(efgtoa@u+2)^(0+128),w
 10019     0272  2A74               	goto	u4523
 10020     0273  2A77               	goto	u4524
 10021     0274                     u4523:
 10022     0274  1283               	bcf	3,5	;RP0=0, select bank0
 10023     0275  1303               	bcf	3,6	;RP1=0, select bank0
 10024     0276  02DA               	subwf	??_efgtoa+2,f
 10025     0277                     u4524:
 10026     0277  1683               	bsf	3,5	;RP0=1, select bank1
 10027     0278  1303               	bcf	3,6	;RP1=0, select bank1
 10028     0279  084B               	movf	(efgtoa@u+3)^(0+128),w
 10029     027A  1C03               	skipc
 10030     027B  0F4B               	incfsz	(efgtoa@u+3)^(0+128),w
 10031     027C  2A7E               	goto	u4525
 10032     027D  2A81               	goto	u4526
 10033     027E                     u4525:
 10034     027E  1283               	bcf	3,5	;RP0=0, select bank0
 10035     027F  1303               	bcf	3,6	;RP1=0, select bank0
 10036     0280  02DB               	subwf	??_efgtoa+3,f
 10037     0281                     u4526:
 10038     0281  1683               	bsf	3,5	;RP0=1, select bank1
 10039     0282  1303               	bcf	3,6	;RP1=0, select bank1
 10040     0283  1283               	bcf	3,5	;RP0=0, select bank0
 10041     0284  1303               	bcf	3,6	;RP1=0, select bank0
 10042     0285  085B               	movf	??_efgtoa+3,w
 10043     0286  00F3               	movwf	labs@a+3
 10044     0287  085A               	movf	??_efgtoa+2,w
 10045     0288  00F2               	movwf	labs@a+2
 10046     0289  0859               	movf	??_efgtoa+1,w
 10047     028A  00F1               	movwf	labs@a+1
 10048     028B  0858               	movf	??_efgtoa,w
 10049     028C  00F0               	movwf	labs@a
 10050     028D  160A  158A  2324  120A  118A  	fcall	_labs
 10051     0292  1BF3               	btfsc	?_labs+3,7
 10052     0293  2AA5               	goto	u4530
 10053     0294  0873               	movf	?_labs+3,w
 10054     0295  1D03               	btfss	3,2
 10055     0296  2AA4               	goto	u4531
 10056     0297  0872               	movf	?_labs+2,w
 10057     0298  1D03               	btfss	3,2
 10058     0299  2AA4               	goto	u4531
 10059     029A  0871               	movf	?_labs+1,w
 10060     029B  1D03               	btfss	3,2
 10061     029C  2AA4               	goto	u4531
 10062     029D  3002               	movlw	2
 10063     029E  0270               	subwf	?_labs,w
 10064     029F  1D03               	skipz
 10065     02A0  2AA1               	goto	u4533
 10066     02A1                     u4533:
 10067     02A1  1803               	btfsc	3,0
 10068     02A2  2AA4               	goto	u4531
 10069     02A3  2AA5               	goto	u4530
 10070     02A4                     u4531:
 10071     02A4  2AA6               	goto	l3097
 10072     02A5                     u4530:
 10073     02A5  2A15               	goto	l3087
 10074     02A6                     l3097:
 10075                           
 10076                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.f < u.
      +                          f) {
 10077     02A6  1683               	bsf	3,5	;RP0=1, select bank1
 10078     02A7  1303               	bcf	3,6	;RP1=0, select bank1
 10079     02A8  0847               	movf	(efgtoa@g+3)^(0+128),w
 10080     02A9  1283               	bcf	3,5	;RP0=0, select bank0
 10081     02AA  1303               	bcf	3,6	;RP1=0, select bank0
 10082     02AB  00B8               	movwf	___flge@ff1+3
 10083     02AC  1683               	bsf	3,5	;RP0=1, select bank1
 10084     02AD  1303               	bcf	3,6	;RP1=0, select bank1
 10085     02AE  0846               	movf	(efgtoa@g+2)^(0+128),w
 10086     02AF  1283               	bcf	3,5	;RP0=0, select bank0
 10087     02B0  1303               	bcf	3,6	;RP1=0, select bank0
 10088     02B1  00B7               	movwf	___flge@ff1+2
 10089     02B2  1683               	bsf	3,5	;RP0=1, select bank1
 10090     02B3  1303               	bcf	3,6	;RP1=0, select bank1
 10091     02B4  0845               	movf	(efgtoa@g+1)^(0+128),w
 10092     02B5  1283               	bcf	3,5	;RP0=0, select bank0
 10093     02B6  1303               	bcf	3,6	;RP1=0, select bank0
 10094     02B7  00B6               	movwf	___flge@ff1+1
 10095     02B8  1683               	bsf	3,5	;RP0=1, select bank1
 10096     02B9  1303               	bcf	3,6	;RP1=0, select bank1
 10097     02BA  0844               	movf	efgtoa@g^(0+128),w
 10098     02BB  1283               	bcf	3,5	;RP0=0, select bank0
 10099     02BC  1303               	bcf	3,6	;RP1=0, select bank0
 10100     02BD  00B5               	movwf	___flge@ff1
 10101     02BE  1683               	bsf	3,5	;RP0=1, select bank1
 10102     02BF  1303               	bcf	3,6	;RP1=0, select bank1
 10103     02C0  084B               	movf	(efgtoa@u+3)^(0+128),w
 10104     02C1  1283               	bcf	3,5	;RP0=0, select bank0
 10105     02C2  1303               	bcf	3,6	;RP1=0, select bank0
 10106     02C3  00BC               	movwf	___flge@ff2+3
 10107     02C4  1683               	bsf	3,5	;RP0=1, select bank1
 10108     02C5  1303               	bcf	3,6	;RP1=0, select bank1
 10109     02C6  084A               	movf	(efgtoa@u+2)^(0+128),w
 10110     02C7  1283               	bcf	3,5	;RP0=0, select bank0
 10111     02C8  1303               	bcf	3,6	;RP1=0, select bank0
 10112     02C9  00BB               	movwf	___flge@ff2+2
 10113     02CA  1683               	bsf	3,5	;RP0=1, select bank1
 10114     02CB  1303               	bcf	3,6	;RP1=0, select bank1
 10115     02CC  0849               	movf	(efgtoa@u+1)^(0+128),w
 10116     02CD  1283               	bcf	3,5	;RP0=0, select bank0
 10117     02CE  1303               	bcf	3,6	;RP1=0, select bank0
 10118     02CF  00BA               	movwf	___flge@ff2+1
 10119     02D0  1683               	bsf	3,5	;RP0=1, select bank1
 10120     02D1  1303               	bcf	3,6	;RP1=0, select bank1
 10121     02D2  0848               	movf	efgtoa@u^(0+128),w
 10122     02D3  1283               	bcf	3,5	;RP0=0, select bank0
 10123     02D4  1303               	bcf	3,6	;RP1=0, select bank0
 10124     02D5  00B9               	movwf	___flge@ff2
 10125     02D6  120A  118A  2005  120A  118A  	fcall	___flge
 10126     02DB  1C03               	btfss	3,0
 10127     02DC  2ADE               	goto	u4541
 10128     02DD  2ADF               	goto	u4540
 10129     02DE                     u4541:
 10130     02DE  2A20               	goto	l3089
 10131     02DF                     u4540:
 10132     02DF                     l3099:
 10133                           
 10134                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 10135     02DF  1283               	bcf	3,5	;RP0=0, select bank0
 10136     02E0  1303               	bcf	3,6	;RP1=0, select bank0
 10137     02E1  0857               	movf	efgtoa@c,w
 10138     02E2  1683               	bsf	3,5	;RP0=1, select bank1
 10139     02E3  1303               	bcf	3,6	;RP1=0, select bank1
 10140     02E4  00A9               	movwf	efgtoa@mode^(0+128)
 10141                           
 10142                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = mode;
 10143     02E5  0829               	movf	efgtoa@mode^(0+128),w
 10144     02E6  00AA               	movwf	efgtoa@nmode^(0+128)
 10145     02E7                     l3101:
 10146                           
 10147                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;c:\PROGRA~1\MIC
      +                          ROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
 10148     02E7  1BEE               	btfsc	(_prec+1)^(0+128),7
 10149     02E8  2AEA               	goto	u4551
 10150     02E9  2AEB               	goto	u4550
 10151     02EA                     u4551:
 10152     02EA  2AF0               	goto	l3105
 10153     02EB                     u4550:
 10154     02EB                     l3103:
 10155     02EB  086E               	movf	(_prec+1)^(0+128),w
 10156     02EC  00A3               	movwf	(efgtoa@p+1)^(0+128)
 10157     02ED  086D               	movf	_prec^(0+128),w
 10158     02EE  00A2               	movwf	efgtoa@p^(0+128)
 10159     02EF  2AF4               	goto	l772
 10160     02F0                     l3105:
 10161     02F0  3006               	movlw	6
 10162     02F1  00A2               	movwf	efgtoa@p^(0+128)
 10163     02F2  3000               	movlw	0
 10164     02F3  00A3               	movwf	(efgtoa@p^(0+128)+1)
 10165     02F4                     l772:
 10166                           
 10167                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };c:\PROGRA~1\
      +                          MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
 10168     02F4  0823               	movf	(efgtoa@p+1)^(0+128),w
 10169     02F5  00AE               	movwf	(efgtoa@m+1)^(0+128)
 10170     02F6  0822               	movf	efgtoa@p^(0+128),w
 10171     02F7  00AD               	movwf	efgtoa@m^(0+128)
 10172                           
 10173                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;c:\PROGRA~1\MIC
      +                          ROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
 10174     02F8  3001               	movlw	1
 10175     02F9  07AD               	addwf	efgtoa@m^(0+128),f
 10176     02FA  1803               	skipnc
 10177     02FB  0AAE               	incf	(efgtoa@m+1)^(0+128),f
 10178     02FC  3000               	movlw	0
 10179     02FD  07AE               	addwf	(efgtoa@m+1)^(0+128),f
 10180     02FE                     l3107:
 10181                           
 10182                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };c:\PROGRA~1\
      +                          MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f') {
 10183     02FE  3066               	movlw	102
 10184     02FF  062A               	xorwf	efgtoa@nmode^(0+128),w
 10185     0300  1D03               	btfss	3,2
 10186     0301  2B03               	goto	u4561
 10187     0302  2B04               	goto	u4560
 10188     0303                     u4561:
 10189     0303  2B1E               	goto	l3119
 10190     0304                     u4560:
 10191     0304                     l3109:
 10192                           
 10193                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (e < 0)
      +                           {
 10194     0304  1FB0               	btfss	(efgtoa@e+1)^(0+128),7
 10195     0305  2B07               	goto	u4571
 10196     0306  2B08               	goto	u4570
 10197     0307                     u4571:
 10198     0307  2B12               	goto	l3115
 10199     0308                     u4570:
 10200     0308                     l3111:
 10201                           
 10202                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             u.f = 
      +                          1.0;
 10203     0308  303F               	movlw	63
 10204     0309  00CB               	movwf	(efgtoa@u+3)^(0+128)
 10205     030A  3080               	movlw	128
 10206     030B  00CA               	movwf	(efgtoa@u+2)^(0+128)
 10207     030C  3000               	movlw	0
 10208     030D  00C9               	movwf	(efgtoa@u+1)^(0+128)
 10209     030E  3000               	movlw	0
 10210     030F  00C8               	movwf	efgtoa@u^(0+128)
 10211     0310                     l3113:
 10212                           
 10213                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             e = 0;
 10214     0310  01AF               	clrf	efgtoa@e^(0+128)
 10215     0311  01B0               	clrf	(efgtoa@e+1)^(0+128)
 10216     0312                     l3115:
 10217                           
 10218                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (!(mode
      +                           == 'g')) {
 10219     0312  3067               	movlw	103
 10220     0313  0629               	xorwf	efgtoa@mode^(0+128),w
 10221     0314  1903               	btfsc	3,2
 10222     0315  2B17               	goto	u4581
 10223     0316  2B18               	goto	u4580
 10224     0317                     u4581:
 10225     0317  2B1E               	goto	l3119
 10226     0318                     u4580:
 10227     0318                     l3117:
 10228                           
 10229                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             m += e
      +                          ;
 10230     0318  082F               	movf	efgtoa@e^(0+128),w
 10231     0319  07AD               	addwf	efgtoa@m^(0+128),f
 10232     031A  1803               	skipnc
 10233     031B  0AAE               	incf	(efgtoa@m+1)^(0+128),f
 10234     031C  0830               	movf	(efgtoa@e+1)^(0+128),w
 10235     031D  07AE               	addwf	(efgtoa@m+1)^(0+128),f
 10236     031E                     l3119:
 10237                           
 10238                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 10239     031E  01B7               	clrf	efgtoa@i^(0+128)
 10240     031F  01B8               	clrf	(efgtoa@i+1)^(0+128)
 10241     0320                     l3121:
 10242                           
 10243                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 10244     0320  0847               	movf	(efgtoa@g+3)^(0+128),w
 10245     0321  00BC               	movwf	(efgtoa@h+3)^(0+128)
 10246     0322  0846               	movf	(efgtoa@g+2)^(0+128),w
 10247     0323  00BB               	movwf	(efgtoa@h+2)^(0+128)
 10248     0324  0845               	movf	(efgtoa@g+1)^(0+128),w
 10249     0325  00BA               	movwf	(efgtoa@h+1)^(0+128)
 10250     0326  0844               	movf	efgtoa@g^(0+128),w
 10251     0327  00B9               	movwf	efgtoa@h^(0+128)
 10252     0328                     l3123:
 10253                           
 10254                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 10255     0328  084B               	movf	(efgtoa@u+3)^(0+128),w
 10256     0329  00B6               	movwf	(efgtoa@ou+3)^(0+128)
 10257     032A  084A               	movf	(efgtoa@u+2)^(0+128),w
 10258     032B  00B5               	movwf	(efgtoa@ou+2)^(0+128)
 10259     032C  0849               	movf	(efgtoa@u+1)^(0+128),w
 10260     032D  00B4               	movwf	(efgtoa@ou+1)^(0+128)
 10261     032E  0848               	movf	efgtoa@u^(0+128),w
 10262     032F  00B3               	movwf	efgtoa@ou^(0+128)
 10263                           
 10264                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i < m) 
      +                          {
 10265     0330  2C19               	goto	l3135
 10266     0331                     l3125:
 10267                           
 10268                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = floorf
      +                          (h/u.f);
 10269     0331  1683               	bsf	3,5	;RP0=1, select bank1
 10270     0332  1303               	bcf	3,6	;RP1=0, select bank1
 10271     0333  084B               	movf	(efgtoa@u+3)^(0+128),w
 10272     0334  00F3               	movwf	___fldiv@a+3
 10273     0335  084A               	movf	(efgtoa@u+2)^(0+128),w
 10274     0336  00F2               	movwf	___fldiv@a+2
 10275     0337  0849               	movf	(efgtoa@u+1)^(0+128),w
 10276     0338  00F1               	movwf	___fldiv@a+1
 10277     0339  0848               	movf	efgtoa@u^(0+128),w
 10278     033A  00F0               	movwf	___fldiv@a
 10279     033B  083C               	movf	(efgtoa@h+3)^(0+128),w
 10280     033C  00F7               	movwf	___fldiv@b+3
 10281     033D  083B               	movf	(efgtoa@h+2)^(0+128),w
 10282     033E  00F6               	movwf	___fldiv@b+2
 10283     033F  083A               	movf	(efgtoa@h+1)^(0+128),w
 10284     0340  00F5               	movwf	___fldiv@b+1
 10285     0341  0839               	movf	efgtoa@h^(0+128),w
 10286     0342  00F4               	movwf	___fldiv@b
 10287     0343  120A  158A  209E  120A  118A  	fcall	___fldiv
 10288     0348  0873               	movf	?___fldiv+3,w
 10289     0349  1283               	bcf	3,5	;RP0=0, select bank0
 10290     034A  1303               	bcf	3,6	;RP1=0, select bank0
 10291     034B  00B0               	movwf	floorf@x+3
 10292     034C  0872               	movf	?___fldiv+2,w
 10293     034D  00AF               	movwf	floorf@x+2
 10294     034E  0871               	movf	?___fldiv+1,w
 10295     034F  00AE               	movwf	floorf@x+1
 10296     0350  0870               	movf	?___fldiv,w
 10297     0351  00AD               	movwf	floorf@x
 10298     0352  160A  118A  211C  120A  118A  	fcall	_floorf
 10299     0357  1283               	bcf	3,5	;RP0=0, select bank0
 10300     0358  1303               	bcf	3,6	;RP1=0, select bank0
 10301     0359  0830               	movf	?_floorf+3,w
 10302     035A  1683               	bsf	3,5	;RP0=1, select bank1
 10303     035B  1303               	bcf	3,6	;RP1=0, select bank1
 10304     035C  00C0               	movwf	(efgtoa@l+3)^(0+128)
 10305     035D  1283               	bcf	3,5	;RP0=0, select bank0
 10306     035E  1303               	bcf	3,6	;RP1=0, select bank0
 10307     035F  082F               	movf	?_floorf+2,w
 10308     0360  1683               	bsf	3,5	;RP0=1, select bank1
 10309     0361  1303               	bcf	3,6	;RP1=0, select bank1
 10310     0362  00BF               	movwf	(efgtoa@l+2)^(0+128)
 10311     0363  1283               	bcf	3,5	;RP0=0, select bank0
 10312     0364  1303               	bcf	3,6	;RP1=0, select bank0
 10313     0365  082E               	movf	?_floorf+1,w
 10314     0366  1683               	bsf	3,5	;RP0=1, select bank1
 10315     0367  1303               	bcf	3,6	;RP1=0, select bank1
 10316     0368  00BE               	movwf	(efgtoa@l+1)^(0+128)
 10317     0369  1283               	bcf	3,5	;RP0=0, select bank0
 10318     036A  1303               	bcf	3,6	;RP1=0, select bank0
 10319     036B  082D               	movf	?_floorf,w
 10320     036C  1683               	bsf	3,5	;RP0=1, select bank1
 10321     036D  1303               	bcf	3,6	;RP1=0, select bank1
 10322     036E  00BD               	movwf	efgtoa@l^(0+128)
 10323     036F                     l3127:
 10324                           
 10325                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = (int)l
      +                          ;
 10326     036F  0840               	movf	(efgtoa@l+3)^(0+128),w
 10327     0370  00F3               	movwf	___fltol@f1+3
 10328     0371  083F               	movf	(efgtoa@l+2)^(0+128),w
 10329     0372  00F2               	movwf	___fltol@f1+2
 10330     0373  083E               	movf	(efgtoa@l+1)^(0+128),w
 10331     0374  00F1               	movwf	___fltol@f1+1
 10332     0375  083D               	movf	efgtoa@l^(0+128),w
 10333     0376  00F0               	movwf	___fltol@f1
 10334     0377  160A  158A  253A  120A  118A  	fcall	___fltol
 10335     037C  0871               	movf	?___fltol+1,w
 10336     037D  1683               	bsf	3,5	;RP0=1, select bank1
 10337     037E  1303               	bcf	3,6	;RP1=0, select bank1
 10338     037F  00AC               	movwf	(efgtoa@d+1)^(0+128)
 10339     0380  0870               	movf	?___fltol,w
 10340     0381  00AB               	movwf	efgtoa@d^(0+128)
 10341     0382                     l3129:
 10342                           
 10343                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -= l*u.f
      +                          ;
 10344     0382  084B               	movf	(efgtoa@u+3)^(0+128),w
 10345     0383  1283               	bcf	3,5	;RP0=0, select bank0
 10346     0384  1303               	bcf	3,6	;RP1=0, select bank0
 10347     0385  00A7               	movwf	___flmul@a+3
 10348     0386  1683               	bsf	3,5	;RP0=1, select bank1
 10349     0387  1303               	bcf	3,6	;RP1=0, select bank1
 10350     0388  084A               	movf	(efgtoa@u+2)^(0+128),w
 10351     0389  1283               	bcf	3,5	;RP0=0, select bank0
 10352     038A  1303               	bcf	3,6	;RP1=0, select bank0
 10353     038B  00A6               	movwf	___flmul@a+2
 10354     038C  1683               	bsf	3,5	;RP0=1, select bank1
 10355     038D  1303               	bcf	3,6	;RP1=0, select bank1
 10356     038E  0849               	movf	(efgtoa@u+1)^(0+128),w
 10357     038F  1283               	bcf	3,5	;RP0=0, select bank0
 10358     0390  1303               	bcf	3,6	;RP1=0, select bank0
 10359     0391  00A5               	movwf	___flmul@a+1
 10360     0392  1683               	bsf	3,5	;RP0=1, select bank1
 10361     0393  1303               	bcf	3,6	;RP1=0, select bank1
 10362     0394  0848               	movf	efgtoa@u^(0+128),w
 10363     0395  1283               	bcf	3,5	;RP0=0, select bank0
 10364     0396  1303               	bcf	3,6	;RP1=0, select bank0
 10365     0397  00A4               	movwf	___flmul@a
 10366     0398  1683               	bsf	3,5	;RP0=1, select bank1
 10367     0399  1303               	bcf	3,6	;RP1=0, select bank1
 10368     039A  0840               	movf	(efgtoa@l+3)^(0+128),w
 10369     039B  1283               	bcf	3,5	;RP0=0, select bank0
 10370     039C  1303               	bcf	3,6	;RP1=0, select bank0
 10371     039D  00A3               	movwf	___flmul@b+3
 10372     039E  1683               	bsf	3,5	;RP0=1, select bank1
 10373     039F  1303               	bcf	3,6	;RP1=0, select bank1
 10374     03A0  083F               	movf	(efgtoa@l+2)^(0+128),w
 10375     03A1  1283               	bcf	3,5	;RP0=0, select bank0
 10376     03A2  1303               	bcf	3,6	;RP1=0, select bank0
 10377     03A3  00A2               	movwf	___flmul@b+2
 10378     03A4  1683               	bsf	3,5	;RP0=1, select bank1
 10379     03A5  1303               	bcf	3,6	;RP1=0, select bank1
 10380     03A6  083E               	movf	(efgtoa@l+1)^(0+128),w
 10381     03A7  1283               	bcf	3,5	;RP0=0, select bank0
 10382     03A8  1303               	bcf	3,6	;RP1=0, select bank0
 10383     03A9  00A1               	movwf	___flmul@b+1
 10384     03AA  1683               	bsf	3,5	;RP0=1, select bank1
 10385     03AB  1303               	bcf	3,6	;RP1=0, select bank1
 10386     03AC  083D               	movf	efgtoa@l^(0+128),w
 10387     03AD  1283               	bcf	3,5	;RP0=0, select bank0
 10388     03AE  1303               	bcf	3,6	;RP1=0, select bank0
 10389     03AF  00A0               	movwf	___flmul@b
 10390     03B0  120A  158A  24BE  120A  118A  	fcall	___flmul
 10391     03B5  1283               	bcf	3,5	;RP0=0, select bank0
 10392     03B6  1303               	bcf	3,6	;RP1=0, select bank0
 10393     03B7  0823               	movf	?___flmul+3,w
 10394     03B8  00CC               	movwf	___flsub@a+3
 10395     03B9  0822               	movf	?___flmul+2,w
 10396     03BA  00CB               	movwf	___flsub@a+2
 10397     03BB  0821               	movf	?___flmul+1,w
 10398     03BC  00CA               	movwf	___flsub@a+1
 10399     03BD  0820               	movf	?___flmul,w
 10400     03BE  00C9               	movwf	___flsub@a
 10401     03BF  1683               	bsf	3,5	;RP0=1, select bank1
 10402     03C0  1303               	bcf	3,6	;RP1=0, select bank1
 10403     03C1  083C               	movf	(efgtoa@h+3)^(0+128),w
 10404     03C2  1283               	bcf	3,5	;RP0=0, select bank0
 10405     03C3  1303               	bcf	3,6	;RP1=0, select bank0
 10406     03C4  00D0               	movwf	___flsub@b+3
 10407     03C5  1683               	bsf	3,5	;RP0=1, select bank1
 10408     03C6  1303               	bcf	3,6	;RP1=0, select bank1
 10409     03C7  083B               	movf	(efgtoa@h+2)^(0+128),w
 10410     03C8  1283               	bcf	3,5	;RP0=0, select bank0
 10411     03C9  1303               	bcf	3,6	;RP1=0, select bank0
 10412     03CA  00CF               	movwf	___flsub@b+2
 10413     03CB  1683               	bsf	3,5	;RP0=1, select bank1
 10414     03CC  1303               	bcf	3,6	;RP1=0, select bank1
 10415     03CD  083A               	movf	(efgtoa@h+1)^(0+128),w
 10416     03CE  1283               	bcf	3,5	;RP0=0, select bank0
 10417     03CF  1303               	bcf	3,6	;RP1=0, select bank0
 10418     03D0  00CE               	movwf	___flsub@b+1
 10419     03D1  1683               	bsf	3,5	;RP0=1, select bank1
 10420     03D2  1303               	bcf	3,6	;RP1=0, select bank1
 10421     03D3  0839               	movf	efgtoa@h^(0+128),w
 10422     03D4  1283               	bcf	3,5	;RP0=0, select bank0
 10423     03D5  1303               	bcf	3,6	;RP1=0, select bank0
 10424     03D6  00CD               	movwf	___flsub@b
 10425     03D7  160A  158A  23C6  120A  118A  	fcall	___flsub
 10426     03DC  1283               	bcf	3,5	;RP0=0, select bank0
 10427     03DD  1303               	bcf	3,6	;RP1=0, select bank0
 10428     03DE  084C               	movf	?___flsub+3,w
 10429     03DF  1683               	bsf	3,5	;RP0=1, select bank1
 10430     03E0  1303               	bcf	3,6	;RP1=0, select bank1
 10431     03E1  00BC               	movwf	(efgtoa@h+3)^(0+128)
 10432     03E2  1283               	bcf	3,5	;RP0=0, select bank0
 10433     03E3  1303               	bcf	3,6	;RP1=0, select bank0
 10434     03E4  084B               	movf	?___flsub+2,w
 10435     03E5  1683               	bsf	3,5	;RP0=1, select bank1
 10436     03E6  1303               	bcf	3,6	;RP1=0, select bank1
 10437     03E7  00BB               	movwf	(efgtoa@h+2)^(0+128)
 10438     03E8  1283               	bcf	3,5	;RP0=0, select bank0
 10439     03E9  1303               	bcf	3,6	;RP1=0, select bank0
 10440     03EA  084A               	movf	?___flsub+1,w
 10441     03EB  1683               	bsf	3,5	;RP0=1, select bank1
 10442     03EC  1303               	bcf	3,6	;RP1=0, select bank1
 10443     03ED  00BA               	movwf	(efgtoa@h+1)^(0+128)
 10444     03EE  1283               	bcf	3,5	;RP0=0, select bank0
 10445     03EF  1303               	bcf	3,6	;RP1=0, select bank0
 10446     03F0  0849               	movf	?___flsub,w
 10447     03F1  1683               	bsf	3,5	;RP0=1, select bank1
 10448     03F2  1303               	bcf	3,6	;RP1=0, select bank1
 10449     03F3  00B9               	movwf	efgtoa@h^(0+128)
 10450     03F4                     l3131:
 10451                           
 10452                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f = u.f/
      +                          10.0;
 10453     03F4  3041               	movlw	65
 10454     03F5  00F3               	movwf	___fldiv@a+3
 10455     03F6  3020               	movlw	32
 10456     03F7  00F2               	movwf	___fldiv@a+2
 10457     03F8  3000               	movlw	0
 10458     03F9  00F1               	movwf	___fldiv@a+1
 10459     03FA  3000               	movlw	0
 10460     03FB  00F0               	movwf	___fldiv@a
 10461     03FC  084B               	movf	(efgtoa@u+3)^(0+128),w
 10462     03FD  00F7               	movwf	___fldiv@b+3
 10463     03FE  084A               	movf	(efgtoa@u+2)^(0+128),w
 10464     03FF  00F6               	movwf	___fldiv@b+2
 10465     0400  0849               	movf	(efgtoa@u+1)^(0+128),w
 10466     0401  00F5               	movwf	___fldiv@b+1
 10467     0402  0848               	movf	efgtoa@u^(0+128),w
 10468     0403  00F4               	movwf	___fldiv@b
 10469     0404  120A  158A  209E  120A  118A  	fcall	___fldiv
 10470     0409  0873               	movf	?___fldiv+3,w
 10471     040A  1683               	bsf	3,5	;RP0=1, select bank1
 10472     040B  1303               	bcf	3,6	;RP1=0, select bank1
 10473     040C  00CB               	movwf	(efgtoa@u+3)^(0+128)
 10474     040D  0872               	movf	?___fldiv+2,w
 10475     040E  00CA               	movwf	(efgtoa@u+2)^(0+128)
 10476     040F  0871               	movf	?___fldiv+1,w
 10477     0410  00C9               	movwf	(efgtoa@u+1)^(0+128)
 10478     0411  0870               	movf	?___fldiv,w
 10479     0412  00C8               	movwf	efgtoa@u^(0+128)
 10480     0413                     l3133:
 10481                           
 10482                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
 10483     0413  3001               	movlw	1
 10484     0414  07B7               	addwf	efgtoa@i^(0+128),f
 10485     0415  1803               	skipnc
 10486     0416  0AB8               	incf	(efgtoa@i+1)^(0+128),f
 10487     0417  3000               	movlw	0
 10488     0418  07B8               	addwf	(efgtoa@i+1)^(0+128),f
 10489     0419                     l3135:
 10490                           
 10491                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i < m) 
      +                          {
 10492     0419  0838               	movf	(efgtoa@i+1)^(0+128),w
 10493     041A  3A80               	xorlw	128
 10494     041B  1283               	bcf	3,5	;RP0=0, select bank0
 10495     041C  1303               	bcf	3,6	;RP1=0, select bank0
 10496     041D  00D8               	movwf	??_efgtoa
 10497     041E  1683               	bsf	3,5	;RP0=1, select bank1
 10498     041F  1303               	bcf	3,6	;RP1=0, select bank1
 10499     0420  082E               	movf	(efgtoa@m+1)^(0+128),w
 10500     0421  3A80               	xorlw	128
 10501     0422  1283               	bcf	3,5	;RP0=0, select bank0
 10502     0423  1303               	bcf	3,6	;RP1=0, select bank0
 10503     0424  0258               	subwf	??_efgtoa,w
 10504     0425  1D03               	skipz
 10505     0426  2C2B               	goto	u4595
 10506     0427  1683               	bsf	3,5	;RP0=1, select bank1
 10507     0428  1303               	bcf	3,6	;RP1=0, select bank1
 10508     0429  082D               	movf	efgtoa@m^(0+128),w
 10509     042A  0237               	subwf	efgtoa@i^(0+128),w
 10510     042B                     u4595:
 10511     042B  1C03               	skipc
 10512     042C  2C2E               	goto	u4591
 10513     042D  2C2F               	goto	u4590
 10514     042E                     u4591:
 10515     042E  2B31               	goto	l3125
 10516     042F                     u4590:
 10517     042F                     l3137:
 10518                           
 10519                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*5.0;
 10520     042F  3040               	movlw	64
 10521     0430  1283               	bcf	3,5	;RP0=0, select bank0
 10522     0431  1303               	bcf	3,6	;RP1=0, select bank0
 10523     0432  00A3               	movwf	___flmul@b+3
 10524     0433  30A0               	movlw	160
 10525     0434  00A2               	movwf	___flmul@b+2
 10526     0435  3000               	movlw	0
 10527     0436  00A1               	movwf	___flmul@b+1
 10528     0437  3000               	movlw	0
 10529     0438  00A0               	movwf	___flmul@b
 10530     0439  1683               	bsf	3,5	;RP0=1, select bank1
 10531     043A  1303               	bcf	3,6	;RP1=0, select bank1
 10532     043B  084B               	movf	(efgtoa@u+3)^(0+128),w
 10533     043C  1283               	bcf	3,5	;RP0=0, select bank0
 10534     043D  1303               	bcf	3,6	;RP1=0, select bank0
 10535     043E  00A7               	movwf	___flmul@a+3
 10536     043F  1683               	bsf	3,5	;RP0=1, select bank1
 10537     0440  1303               	bcf	3,6	;RP1=0, select bank1
 10538     0441  084A               	movf	(efgtoa@u+2)^(0+128),w
 10539     0442  1283               	bcf	3,5	;RP0=0, select bank0
 10540     0443  1303               	bcf	3,6	;RP1=0, select bank0
 10541     0444  00A6               	movwf	___flmul@a+2
 10542     0445  1683               	bsf	3,5	;RP0=1, select bank1
 10543     0446  1303               	bcf	3,6	;RP1=0, select bank1
 10544     0447  0849               	movf	(efgtoa@u+1)^(0+128),w
 10545     0448  1283               	bcf	3,5	;RP0=0, select bank0
 10546     0449  1303               	bcf	3,6	;RP1=0, select bank0
 10547     044A  00A5               	movwf	___flmul@a+1
 10548     044B  1683               	bsf	3,5	;RP0=1, select bank1
 10549     044C  1303               	bcf	3,6	;RP1=0, select bank1
 10550     044D  0848               	movf	efgtoa@u^(0+128),w
 10551     044E  1283               	bcf	3,5	;RP0=0, select bank0
 10552     044F  1303               	bcf	3,6	;RP1=0, select bank0
 10553     0450  00A4               	movwf	___flmul@a
 10554     0451  120A  158A  24BE  120A  118A  	fcall	___flmul
 10555     0456  1283               	bcf	3,5	;RP0=0, select bank0
 10556     0457  1303               	bcf	3,6	;RP1=0, select bank0
 10557     0458  0823               	movf	?___flmul+3,w
 10558     0459  1683               	bsf	3,5	;RP0=1, select bank1
 10559     045A  1303               	bcf	3,6	;RP1=0, select bank1
 10560     045B  00C0               	movwf	(efgtoa@l+3)^(0+128)
 10561     045C  1283               	bcf	3,5	;RP0=0, select bank0
 10562     045D  1303               	bcf	3,6	;RP1=0, select bank0
 10563     045E  0822               	movf	?___flmul+2,w
 10564     045F  1683               	bsf	3,5	;RP0=1, select bank1
 10565     0460  1303               	bcf	3,6	;RP1=0, select bank1
 10566     0461  00BF               	movwf	(efgtoa@l+2)^(0+128)
 10567     0462  1283               	bcf	3,5	;RP0=0, select bank0
 10568     0463  1303               	bcf	3,6	;RP1=0, select bank0
 10569     0464  0821               	movf	?___flmul+1,w
 10570     0465  1683               	bsf	3,5	;RP0=1, select bank1
 10571     0466  1303               	bcf	3,6	;RP1=0, select bank1
 10572     0467  00BE               	movwf	(efgtoa@l+1)^(0+128)
 10573     0468  1283               	bcf	3,5	;RP0=0, select bank0
 10574     0469  1303               	bcf	3,6	;RP1=0, select bank0
 10575     046A  0820               	movf	?___flmul,w
 10576     046B  1683               	bsf	3,5	;RP0=1, select bank1
 10577     046C  1303               	bcf	3,6	;RP1=0, select bank1
 10578     046D  00BD               	movwf	efgtoa@l^(0+128)
 10579     046E                     l3139:
 10580                           
 10581                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < l) {
 10582     046E  083C               	movf	(efgtoa@h+3)^(0+128),w
 10583     046F  1283               	bcf	3,5	;RP0=0, select bank0
 10584     0470  1303               	bcf	3,6	;RP1=0, select bank0
 10585     0471  00B8               	movwf	___flge@ff1+3
 10586     0472  1683               	bsf	3,5	;RP0=1, select bank1
 10587     0473  1303               	bcf	3,6	;RP1=0, select bank1
 10588     0474  083B               	movf	(efgtoa@h+2)^(0+128),w
 10589     0475  1283               	bcf	3,5	;RP0=0, select bank0
 10590     0476  1303               	bcf	3,6	;RP1=0, select bank0
 10591     0477  00B7               	movwf	___flge@ff1+2
 10592     0478  1683               	bsf	3,5	;RP0=1, select bank1
 10593     0479  1303               	bcf	3,6	;RP1=0, select bank1
 10594     047A  083A               	movf	(efgtoa@h+1)^(0+128),w
 10595     047B  1283               	bcf	3,5	;RP0=0, select bank0
 10596     047C  1303               	bcf	3,6	;RP1=0, select bank0
 10597     047D  00B6               	movwf	___flge@ff1+1
 10598     047E  1683               	bsf	3,5	;RP0=1, select bank1
 10599     047F  1303               	bcf	3,6	;RP1=0, select bank1
 10600     0480  0839               	movf	efgtoa@h^(0+128),w
 10601     0481  1283               	bcf	3,5	;RP0=0, select bank0
 10602     0482  1303               	bcf	3,6	;RP1=0, select bank0
 10603     0483  00B5               	movwf	___flge@ff1
 10604     0484  1683               	bsf	3,5	;RP0=1, select bank1
 10605     0485  1303               	bcf	3,6	;RP1=0, select bank1
 10606     0486  0840               	movf	(efgtoa@l+3)^(0+128),w
 10607     0487  1283               	bcf	3,5	;RP0=0, select bank0
 10608     0488  1303               	bcf	3,6	;RP1=0, select bank0
 10609     0489  00BC               	movwf	___flge@ff2+3
 10610     048A  1683               	bsf	3,5	;RP0=1, select bank1
 10611     048B  1303               	bcf	3,6	;RP1=0, select bank1
 10612     048C  083F               	movf	(efgtoa@l+2)^(0+128),w
 10613     048D  1283               	bcf	3,5	;RP0=0, select bank0
 10614     048E  1303               	bcf	3,6	;RP1=0, select bank0
 10615     048F  00BB               	movwf	___flge@ff2+2
 10616     0490  1683               	bsf	3,5	;RP0=1, select bank1
 10617     0491  1303               	bcf	3,6	;RP1=0, select bank1
 10618     0492  083E               	movf	(efgtoa@l+1)^(0+128),w
 10619     0493  1283               	bcf	3,5	;RP0=0, select bank0
 10620     0494  1303               	bcf	3,6	;RP1=0, select bank0
 10621     0495  00BA               	movwf	___flge@ff2+1
 10622     0496  1683               	bsf	3,5	;RP0=1, select bank1
 10623     0497  1303               	bcf	3,6	;RP1=0, select bank1
 10624     0498  083D               	movf	efgtoa@l^(0+128),w
 10625     0499  1283               	bcf	3,5	;RP0=0, select bank0
 10626     049A  1303               	bcf	3,6	;RP1=0, select bank0
 10627     049B  00B9               	movwf	___flge@ff2
 10628     049C  120A  118A  2005  120A  118A  	fcall	___flge
 10629     04A1  1803               	btfsc	3,0
 10630     04A2  2CA4               	goto	u4601
 10631     04A3  2CA5               	goto	u4600
 10632     04A4                     u4601:
 10633     04A4  2CB0               	goto	l3143
 10634     04A5                     u4600:
 10635     04A5                     l3141:
 10636                           
 10637                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 0.0;
 10638     04A5  3000               	movlw	0
 10639     04A6  1683               	bsf	3,5	;RP0=1, select bank1
 10640     04A7  1303               	bcf	3,6	;RP1=0, select bank1
 10641     04A8  00C0               	movwf	(efgtoa@l+3)^(0+128)
 10642     04A9  3000               	movlw	0
 10643     04AA  00BF               	movwf	(efgtoa@l+2)^(0+128)
 10644     04AB  3000               	movlw	0
 10645     04AC  00BE               	movwf	(efgtoa@l+1)^(0+128)
 10646     04AD  3000               	movlw	0
 10647     04AE  00BD               	movwf	efgtoa@l^(0+128)
 10648                           
 10649                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
 10650     04AF  2CD9               	goto	l3149
 10651     04B0                     l3143:
 10652                           
 10653                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if ((h == 
      +                          l) && !(d % 2)) {
 10654     04B0  1683               	bsf	3,5	;RP0=1, select bank1
 10655     04B1  1303               	bcf	3,6	;RP1=0, select bank1
 10656     04B2  083C               	movf	(efgtoa@h+3)^(0+128),w
 10657     04B3  00F3               	movwf	___fleq@ff1+3
 10658     04B4  083B               	movf	(efgtoa@h+2)^(0+128),w
 10659     04B5  00F2               	movwf	___fleq@ff1+2
 10660     04B6  083A               	movf	(efgtoa@h+1)^(0+128),w
 10661     04B7  00F1               	movwf	___fleq@ff1+1
 10662     04B8  0839               	movf	efgtoa@h^(0+128),w
 10663     04B9  00F0               	movwf	___fleq@ff1
 10664     04BA  0840               	movf	(efgtoa@l+3)^(0+128),w
 10665     04BB  00F7               	movwf	___fleq@ff2+3
 10666     04BC  083F               	movf	(efgtoa@l+2)^(0+128),w
 10667     04BD  00F6               	movwf	___fleq@ff2+2
 10668     04BE  083E               	movf	(efgtoa@l+1)^(0+128),w
 10669     04BF  00F5               	movwf	___fleq@ff2+1
 10670     04C0  083D               	movf	efgtoa@l^(0+128),w
 10671     04C1  00F4               	movwf	___fleq@ff2
 10672     04C2  160A  158A  2499  120A  118A  	fcall	___fleq
 10673     04C7  1C03               	btfss	3,0
 10674     04C8  2CCA               	goto	u4611
 10675     04C9  2CCB               	goto	u4610
 10676     04CA                     u4611:
 10677     04CA  2CD9               	goto	l3149
 10678     04CB                     u4610:
 10679     04CB                     l3145:
 10680     04CB  1683               	bsf	3,5	;RP0=1, select bank1
 10681     04CC  1303               	bcf	3,6	;RP1=0, select bank1
 10682     04CD  182B               	btfsc	efgtoa@d^(0+128),0
 10683     04CE  2CD0               	goto	u4621
 10684     04CF  2CD1               	goto	u4620
 10685     04D0                     u4621:
 10686     04D0  2CD9               	goto	l3149
 10687     04D1                     u4620:
 10688     04D1                     l3147:
 10689                           
 10690                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             l = 0.
      +                          0;
 10691     04D1  3000               	movlw	0
 10692     04D2  00C0               	movwf	(efgtoa@l+3)^(0+128)
 10693     04D3  3000               	movlw	0
 10694     04D4  00BF               	movwf	(efgtoa@l+2)^(0+128)
 10695     04D5  3000               	movlw	0
 10696     04D6  00BE               	movwf	(efgtoa@l+1)^(0+128)
 10697     04D7  3000               	movlw	0
 10698     04D8  00BD               	movwf	efgtoa@l^(0+128)
 10699     04D9                     l3149:
 10700                           
 10701                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f + l;
 10702     04D9  1683               	bsf	3,5	;RP0=1, select bank1
 10703     04DA  1303               	bcf	3,6	;RP1=0, select bank1
 10704     04DB  0840               	movf	(efgtoa@l+3)^(0+128),w
 10705     04DC  1283               	bcf	3,5	;RP0=0, select bank0
 10706     04DD  1303               	bcf	3,6	;RP1=0, select bank0
 10707     04DE  00B8               	movwf	___fladd@b+3
 10708     04DF  1683               	bsf	3,5	;RP0=1, select bank1
 10709     04E0  1303               	bcf	3,6	;RP1=0, select bank1
 10710     04E1  083F               	movf	(efgtoa@l+2)^(0+128),w
 10711     04E2  1283               	bcf	3,5	;RP0=0, select bank0
 10712     04E3  1303               	bcf	3,6	;RP1=0, select bank0
 10713     04E4  00B7               	movwf	___fladd@b+2
 10714     04E5  1683               	bsf	3,5	;RP0=1, select bank1
 10715     04E6  1303               	bcf	3,6	;RP1=0, select bank1
 10716     04E7  083E               	movf	(efgtoa@l+1)^(0+128),w
 10717     04E8  1283               	bcf	3,5	;RP0=0, select bank0
 10718     04E9  1303               	bcf	3,6	;RP1=0, select bank0
 10719     04EA  00B6               	movwf	___fladd@b+1
 10720     04EB  1683               	bsf	3,5	;RP0=1, select bank1
 10721     04EC  1303               	bcf	3,6	;RP1=0, select bank1
 10722     04ED  083D               	movf	efgtoa@l^(0+128),w
 10723     04EE  1283               	bcf	3,5	;RP0=0, select bank0
 10724     04EF  1303               	bcf	3,6	;RP1=0, select bank0
 10725     04F0  00B5               	movwf	___fladd@b
 10726     04F1  1683               	bsf	3,5	;RP0=1, select bank1
 10727     04F2  1303               	bcf	3,6	;RP1=0, select bank1
 10728     04F3  0847               	movf	(efgtoa@g+3)^(0+128),w
 10729     04F4  1283               	bcf	3,5	;RP0=0, select bank0
 10730     04F5  1303               	bcf	3,6	;RP1=0, select bank0
 10731     04F6  00BC               	movwf	___fladd@a+3
 10732     04F7  1683               	bsf	3,5	;RP0=1, select bank1
 10733     04F8  1303               	bcf	3,6	;RP1=0, select bank1
 10734     04F9  0846               	movf	(efgtoa@g+2)^(0+128),w
 10735     04FA  1283               	bcf	3,5	;RP0=0, select bank0
 10736     04FB  1303               	bcf	3,6	;RP1=0, select bank0
 10737     04FC  00BB               	movwf	___fladd@a+2
 10738     04FD  1683               	bsf	3,5	;RP0=1, select bank1
 10739     04FE  1303               	bcf	3,6	;RP1=0, select bank1
 10740     04FF  0845               	movf	(efgtoa@g+1)^(0+128),w
 10741     0500  1283               	bcf	3,5	;RP0=0, select bank0
 10742     0501  1303               	bcf	3,6	;RP1=0, select bank0
 10743     0502  00BA               	movwf	___fladd@a+1
 10744     0503  1683               	bsf	3,5	;RP0=1, select bank1
 10745     0504  1303               	bcf	3,6	;RP1=0, select bank1
 10746     0505  0844               	movf	efgtoa@g^(0+128),w
 10747     0506  1283               	bcf	3,5	;RP0=0, select bank0
 10748     0507  1303               	bcf	3,6	;RP1=0, select bank0
 10749     0508  00B9               	movwf	___fladd@a
 10750     0509  120A  158A  226E  120A  118A  	fcall	___fladd
 10751     050E  1283               	bcf	3,5	;RP0=0, select bank0
 10752     050F  1303               	bcf	3,6	;RP1=0, select bank0
 10753     0510  0838               	movf	?___fladd+3,w
 10754     0511  1683               	bsf	3,5	;RP0=1, select bank1
 10755     0512  1303               	bcf	3,6	;RP1=0, select bank1
 10756     0513  00BC               	movwf	(efgtoa@h+3)^(0+128)
 10757     0514  1283               	bcf	3,5	;RP0=0, select bank0
 10758     0515  1303               	bcf	3,6	;RP1=0, select bank0
 10759     0516  0837               	movf	?___fladd+2,w
 10760     0517  1683               	bsf	3,5	;RP0=1, select bank1
 10761     0518  1303               	bcf	3,6	;RP1=0, select bank1
 10762     0519  00BB               	movwf	(efgtoa@h+2)^(0+128)
 10763     051A  1283               	bcf	3,5	;RP0=0, select bank0
 10764     051B  1303               	bcf	3,6	;RP1=0, select bank0
 10765     051C  0836               	movf	?___fladd+1,w
 10766     051D  1683               	bsf	3,5	;RP0=1, select bank1
 10767     051E  1303               	bcf	3,6	;RP1=0, select bank1
 10768     051F  00BA               	movwf	(efgtoa@h+1)^(0+128)
 10769     0520  1283               	bcf	3,5	;RP0=0, select bank0
 10770     0521  1303               	bcf	3,6	;RP1=0, select bank0
 10771     0522  0835               	movf	?___fladd,w
 10772     0523  1683               	bsf	3,5	;RP0=1, select bank1
 10773     0524  1303               	bcf	3,6	;RP1=0, select bank1
 10774     0525  00B9               	movwf	efgtoa@h^(0+128)
 10775     0526                     l3151:
 10776                           
 10777                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (ou.f*10
      +                          .0)) {
 10778     0526  083C               	movf	(efgtoa@h+3)^(0+128),w
 10779     0527  1283               	bcf	3,5	;RP0=0, select bank0
 10780     0528  1303               	bcf	3,6	;RP1=0, select bank0
 10781     0529  00B8               	movwf	___flge@ff1+3
 10782     052A  1683               	bsf	3,5	;RP0=1, select bank1
 10783     052B  1303               	bcf	3,6	;RP1=0, select bank1
 10784     052C  083B               	movf	(efgtoa@h+2)^(0+128),w
 10785     052D  1283               	bcf	3,5	;RP0=0, select bank0
 10786     052E  1303               	bcf	3,6	;RP1=0, select bank0
 10787     052F  00B7               	movwf	___flge@ff1+2
 10788     0530  1683               	bsf	3,5	;RP0=1, select bank1
 10789     0531  1303               	bcf	3,6	;RP1=0, select bank1
 10790     0532  083A               	movf	(efgtoa@h+1)^(0+128),w
 10791     0533  1283               	bcf	3,5	;RP0=0, select bank0
 10792     0534  1303               	bcf	3,6	;RP1=0, select bank0
 10793     0535  00B6               	movwf	___flge@ff1+1
 10794     0536  1683               	bsf	3,5	;RP0=1, select bank1
 10795     0537  1303               	bcf	3,6	;RP1=0, select bank1
 10796     0538  0839               	movf	efgtoa@h^(0+128),w
 10797     0539  1283               	bcf	3,5	;RP0=0, select bank0
 10798     053A  1303               	bcf	3,6	;RP1=0, select bank0
 10799     053B  00B5               	movwf	___flge@ff1
 10800     053C  3041               	movlw	65
 10801     053D  00A3               	movwf	___flmul@b+3
 10802     053E  3020               	movlw	32
 10803     053F  00A2               	movwf	___flmul@b+2
 10804     0540  3000               	movlw	0
 10805     0541  00A1               	movwf	___flmul@b+1
 10806     0542  3000               	movlw	0
 10807     0543  00A0               	movwf	___flmul@b
 10808     0544  1683               	bsf	3,5	;RP0=1, select bank1
 10809     0545  1303               	bcf	3,6	;RP1=0, select bank1
 10810     0546  0836               	movf	(efgtoa@ou+3)^(0+128),w
 10811     0547  1283               	bcf	3,5	;RP0=0, select bank0
 10812     0548  1303               	bcf	3,6	;RP1=0, select bank0
 10813     0549  00A7               	movwf	___flmul@a+3
 10814     054A  1683               	bsf	3,5	;RP0=1, select bank1
 10815     054B  1303               	bcf	3,6	;RP1=0, select bank1
 10816     054C  0835               	movf	(efgtoa@ou+2)^(0+128),w
 10817     054D  1283               	bcf	3,5	;RP0=0, select bank0
 10818     054E  1303               	bcf	3,6	;RP1=0, select bank0
 10819     054F  00A6               	movwf	___flmul@a+2
 10820     0550  1683               	bsf	3,5	;RP0=1, select bank1
 10821     0551  1303               	bcf	3,6	;RP1=0, select bank1
 10822     0552  0834               	movf	(efgtoa@ou+1)^(0+128),w
 10823     0553  1283               	bcf	3,5	;RP0=0, select bank0
 10824     0554  1303               	bcf	3,6	;RP1=0, select bank0
 10825     0555  00A5               	movwf	___flmul@a+1
 10826     0556  1683               	bsf	3,5	;RP0=1, select bank1
 10827     0557  1303               	bcf	3,6	;RP1=0, select bank1
 10828     0558  0833               	movf	efgtoa@ou^(0+128),w
 10829     0559  1283               	bcf	3,5	;RP0=0, select bank0
 10830     055A  1303               	bcf	3,6	;RP1=0, select bank0
 10831     055B  00A4               	movwf	___flmul@a
 10832     055C  120A  158A  24BE  120A  118A  	fcall	___flmul
 10833     0561  1283               	bcf	3,5	;RP0=0, select bank0
 10834     0562  1303               	bcf	3,6	;RP1=0, select bank0
 10835     0563  0823               	movf	?___flmul+3,w
 10836     0564  00BC               	movwf	___flge@ff2+3
 10837     0565  0822               	movf	?___flmul+2,w
 10838     0566  00BB               	movwf	___flge@ff2+2
 10839     0567  0821               	movf	?___flmul+1,w
 10840     0568  00BA               	movwf	___flge@ff2+1
 10841     0569  0820               	movf	?___flmul,w
 10842     056A  00B9               	movwf	___flge@ff2
 10843     056B  120A  118A  2005  120A  118A  	fcall	___flge
 10844     0570  1C03               	btfss	3,0
 10845     0571  2D73               	goto	u4631
 10846     0572  2D74               	goto	u4630
 10847     0573                     u4631:
 10848     0573  2DC7               	goto	l782
 10849     0574                     u4630:
 10850     0574                     l3153:
 10851                           
 10852                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
 10853     0574  3001               	movlw	1
 10854     0575  1683               	bsf	3,5	;RP0=1, select bank1
 10855     0576  1303               	bcf	3,6	;RP1=0, select bank1
 10856     0577  07AF               	addwf	efgtoa@e^(0+128),f
 10857     0578  1803               	skipnc
 10858     0579  0AB0               	incf	(efgtoa@e+1)^(0+128),f
 10859     057A  3000               	movlw	0
 10860     057B  07B0               	addwf	(efgtoa@e+1)^(0+128),f
 10861     057C                     l3155:
 10862                           
 10863                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10.0;
 10864     057C  3041               	movlw	65
 10865     057D  1283               	bcf	3,5	;RP0=0, select bank0
 10866     057E  1303               	bcf	3,6	;RP1=0, select bank0
 10867     057F  00A3               	movwf	___flmul@b+3
 10868     0580  3020               	movlw	32
 10869     0581  00A2               	movwf	___flmul@b+2
 10870     0582  3000               	movlw	0
 10871     0583  00A1               	movwf	___flmul@b+1
 10872     0584  3000               	movlw	0
 10873     0585  00A0               	movwf	___flmul@b
 10874     0586  1683               	bsf	3,5	;RP0=1, select bank1
 10875     0587  1303               	bcf	3,6	;RP1=0, select bank1
 10876     0588  0836               	movf	(efgtoa@ou+3)^(0+128),w
 10877     0589  1283               	bcf	3,5	;RP0=0, select bank0
 10878     058A  1303               	bcf	3,6	;RP1=0, select bank0
 10879     058B  00A7               	movwf	___flmul@a+3
 10880     058C  1683               	bsf	3,5	;RP0=1, select bank1
 10881     058D  1303               	bcf	3,6	;RP1=0, select bank1
 10882     058E  0835               	movf	(efgtoa@ou+2)^(0+128),w
 10883     058F  1283               	bcf	3,5	;RP0=0, select bank0
 10884     0590  1303               	bcf	3,6	;RP1=0, select bank0
 10885     0591  00A6               	movwf	___flmul@a+2
 10886     0592  1683               	bsf	3,5	;RP0=1, select bank1
 10887     0593  1303               	bcf	3,6	;RP1=0, select bank1
 10888     0594  0834               	movf	(efgtoa@ou+1)^(0+128),w
 10889     0595  1283               	bcf	3,5	;RP0=0, select bank0
 10890     0596  1303               	bcf	3,6	;RP1=0, select bank0
 10891     0597  00A5               	movwf	___flmul@a+1
 10892     0598  1683               	bsf	3,5	;RP0=1, select bank1
 10893     0599  1303               	bcf	3,6	;RP1=0, select bank1
 10894     059A  0833               	movf	efgtoa@ou^(0+128),w
 10895     059B  1283               	bcf	3,5	;RP0=0, select bank0
 10896     059C  1303               	bcf	3,6	;RP1=0, select bank0
 10897     059D  00A4               	movwf	___flmul@a
 10898     059E  120A  158A  24BE  120A  118A  	fcall	___flmul
 10899     05A3  1283               	bcf	3,5	;RP0=0, select bank0
 10900     05A4  1303               	bcf	3,6	;RP1=0, select bank0
 10901     05A5  0823               	movf	?___flmul+3,w
 10902     05A6  1683               	bsf	3,5	;RP0=1, select bank1
 10903     05A7  1303               	bcf	3,6	;RP1=0, select bank1
 10904     05A8  00B6               	movwf	(efgtoa@ou+3)^(0+128)
 10905     05A9  1283               	bcf	3,5	;RP0=0, select bank0
 10906     05AA  1303               	bcf	3,6	;RP1=0, select bank0
 10907     05AB  0822               	movf	?___flmul+2,w
 10908     05AC  1683               	bsf	3,5	;RP0=1, select bank1
 10909     05AD  1303               	bcf	3,6	;RP1=0, select bank1
 10910     05AE  00B5               	movwf	(efgtoa@ou+2)^(0+128)
 10911     05AF  1283               	bcf	3,5	;RP0=0, select bank0
 10912     05B0  1303               	bcf	3,6	;RP1=0, select bank0
 10913     05B1  0821               	movf	?___flmul+1,w
 10914     05B2  1683               	bsf	3,5	;RP0=1, select bank1
 10915     05B3  1303               	bcf	3,6	;RP1=0, select bank1
 10916     05B4  00B4               	movwf	(efgtoa@ou+1)^(0+128)
 10917     05B5  1283               	bcf	3,5	;RP0=0, select bank0
 10918     05B6  1303               	bcf	3,6	;RP1=0, select bank0
 10919     05B7  0820               	movf	?___flmul,w
 10920     05B8  1683               	bsf	3,5	;RP0=1, select bank1
 10921     05B9  1303               	bcf	3,6	;RP1=0, select bank1
 10922     05BA  00B3               	movwf	efgtoa@ou^(0+128)
 10923     05BB                     l3157:
 10924                           
 10925                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode == 'f'
      +                          ) {
 10926     05BB  3066               	movlw	102
 10927     05BC  062A               	xorwf	efgtoa@nmode^(0+128),w
 10928     05BD  1D03               	btfss	3,2
 10929     05BE  2DC0               	goto	u4641
 10930     05BF  2DC1               	goto	u4640
 10931     05C0                     u4641:
 10932     05C0  2DC7               	goto	l782
 10933     05C1                     u4640:
 10934     05C1                     l3159:
 10935                           
 10936                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
 10937     05C1  3001               	movlw	1
 10938     05C2  07AD               	addwf	efgtoa@m^(0+128),f
 10939     05C3  1803               	skipnc
 10940     05C4  0AAE               	incf	(efgtoa@m+1)^(0+128),f
 10941     05C5  3000               	movlw	0
 10942     05C6  07AE               	addwf	(efgtoa@m+1)^(0+128),f
 10943     05C7                     l782:	
 10944                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 767:  }
 10945                           
 10946                           
 10947                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 10948     05C7  1683               	bsf	3,5	;RP0=1, select bank1
 10949     05C8  1303               	bcf	3,6	;RP1=0, select bank1
 10950     05C9  0836               	movf	(efgtoa@ou+3)^(0+128),w
 10951     05CA  00CB               	movwf	(efgtoa@u+3)^(0+128)
 10952     05CB  0835               	movf	(efgtoa@ou+2)^(0+128),w
 10953     05CC  00CA               	movwf	(efgtoa@u+2)^(0+128)
 10954     05CD  0834               	movf	(efgtoa@ou+1)^(0+128),w
 10955     05CE  00C9               	movwf	(efgtoa@u+1)^(0+128)
 10956     05CF  0833               	movf	efgtoa@ou^(0+128),w
 10957     05D0  00C8               	movwf	efgtoa@u^(0+128)
 10958                           
 10959                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 10960     05D1  0830               	movf	(efgtoa@e+1)^(0+128),w
 10961     05D2  00A1               	movwf	(efgtoa@ne+1)^(0+128)
 10962     05D3  082F               	movf	efgtoa@e^(0+128),w
 10963     05D4  00A0               	movwf	efgtoa@ne^(0+128)
 10964     05D5                     l3161:
 10965                           
 10966                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 10967     05D5  01A8               	clrf	efgtoa@pp^(0+128)
 10968     05D6                     l3163:
 10969                           
 10970                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 10971     05D6  01A4               	clrf	efgtoa@t^(0+128)
 10972     05D7  01A5               	clrf	(efgtoa@t+1)^(0+128)
 10973     05D8                     l3165:
 10974                           
 10975                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 10976     05D8  01B7               	clrf	efgtoa@i^(0+128)
 10977     05D9  01B8               	clrf	(efgtoa@i+1)^(0+128)
 10978                           
 10979                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((i < m)
      +                           && (n < (80 - 5))) {
 10980     05DA  2F3B               	goto	l3209
 10981     05DB                     l3167:
 10982                           
 10983                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = floorf
      +                          (h/u.f);
 10984     05DB  1683               	bsf	3,5	;RP0=1, select bank1
 10985     05DC  1303               	bcf	3,6	;RP1=0, select bank1
 10986     05DD  084B               	movf	(efgtoa@u+3)^(0+128),w
 10987     05DE  00F3               	movwf	___fldiv@a+3
 10988     05DF  084A               	movf	(efgtoa@u+2)^(0+128),w
 10989     05E0  00F2               	movwf	___fldiv@a+2
 10990     05E1  0849               	movf	(efgtoa@u+1)^(0+128),w
 10991     05E2  00F1               	movwf	___fldiv@a+1
 10992     05E3  0848               	movf	efgtoa@u^(0+128),w
 10993     05E4  00F0               	movwf	___fldiv@a
 10994     05E5  083C               	movf	(efgtoa@h+3)^(0+128),w
 10995     05E6  00F7               	movwf	___fldiv@b+3
 10996     05E7  083B               	movf	(efgtoa@h+2)^(0+128),w
 10997     05E8  00F6               	movwf	___fldiv@b+2
 10998     05E9  083A               	movf	(efgtoa@h+1)^(0+128),w
 10999     05EA  00F5               	movwf	___fldiv@b+1
 11000     05EB  0839               	movf	efgtoa@h^(0+128),w
 11001     05EC  00F4               	movwf	___fldiv@b
 11002     05ED  120A  158A  209E  120A  118A  	fcall	___fldiv
 11003     05F2  0873               	movf	?___fldiv+3,w
 11004     05F3  1283               	bcf	3,5	;RP0=0, select bank0
 11005     05F4  1303               	bcf	3,6	;RP1=0, select bank0
 11006     05F5  00B0               	movwf	floorf@x+3
 11007     05F6  0872               	movf	?___fldiv+2,w
 11008     05F7  00AF               	movwf	floorf@x+2
 11009     05F8  0871               	movf	?___fldiv+1,w
 11010     05F9  00AE               	movwf	floorf@x+1
 11011     05FA  0870               	movf	?___fldiv,w
 11012     05FB  00AD               	movwf	floorf@x
 11013     05FC  160A  118A  211C  120A  118A  	fcall	_floorf
 11014     0601  1283               	bcf	3,5	;RP0=0, select bank0
 11015     0602  1303               	bcf	3,6	;RP1=0, select bank0
 11016     0603  0830               	movf	?_floorf+3,w
 11017     0604  1683               	bsf	3,5	;RP0=1, select bank1
 11018     0605  1303               	bcf	3,6	;RP1=0, select bank1
 11019     0606  00C0               	movwf	(efgtoa@l+3)^(0+128)
 11020     0607  1283               	bcf	3,5	;RP0=0, select bank0
 11021     0608  1303               	bcf	3,6	;RP1=0, select bank0
 11022     0609  082F               	movf	?_floorf+2,w
 11023     060A  1683               	bsf	3,5	;RP0=1, select bank1
 11024     060B  1303               	bcf	3,6	;RP1=0, select bank1
 11025     060C  00BF               	movwf	(efgtoa@l+2)^(0+128)
 11026     060D  1283               	bcf	3,5	;RP0=0, select bank0
 11027     060E  1303               	bcf	3,6	;RP1=0, select bank0
 11028     060F  082E               	movf	?_floorf+1,w
 11029     0610  1683               	bsf	3,5	;RP0=1, select bank1
 11030     0611  1303               	bcf	3,6	;RP1=0, select bank1
 11031     0612  00BE               	movwf	(efgtoa@l+1)^(0+128)
 11032     0613  1283               	bcf	3,5	;RP0=0, select bank0
 11033     0614  1303               	bcf	3,6	;RP1=0, select bank0
 11034     0615  082D               	movf	?_floorf,w
 11035     0616  1683               	bsf	3,5	;RP0=1, select bank1
 11036     0617  1303               	bcf	3,6	;RP1=0, select bank1
 11037     0618  00BD               	movwf	efgtoa@l^(0+128)
 11038                           
 11039                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = (int)l
      +                           > 9 ? 9 : (int)l;
 11040     0619  0840               	movf	(efgtoa@l+3)^(0+128),w
 11041     061A  00F3               	movwf	___fltol@f1+3
 11042     061B  083F               	movf	(efgtoa@l+2)^(0+128),w
 11043     061C  00F2               	movwf	___fltol@f1+2
 11044     061D  083E               	movf	(efgtoa@l+1)^(0+128),w
 11045     061E  00F1               	movwf	___fltol@f1+1
 11046     061F  083D               	movf	efgtoa@l^(0+128),w
 11047     0620  00F0               	movwf	___fltol@f1
 11048     0621  160A  158A  253A  120A  118A  	fcall	___fltol
 11049     0626  0871               	movf	?___fltol+1,w
 11050     0627  3A80               	xorlw	128
 11051     0628  00FF               	movwf	btemp+1
 11052     0629  3080               	movlw	128
 11053     062A  027F               	subwf	btemp+1,w
 11054     062B  1D03               	skipz
 11055     062C  2E2F               	goto	u4655
 11056     062D  300A               	movlw	10
 11057     062E  0270               	subwf	?___fltol,w
 11058     062F                     u4655:
 11059     062F  1803               	skipnc
 11060     0630  2E32               	goto	u4651
 11061     0631  2E33               	goto	u4650
 11062     0632                     u4651:
 11063     0632  2E49               	goto	l3171
 11064     0633                     u4650:
 11065     0633                     l3169:
 11066     0633  1683               	bsf	3,5	;RP0=1, select bank1
 11067     0634  1303               	bcf	3,6	;RP1=0, select bank1
 11068     0635  0840               	movf	(efgtoa@l+3)^(0+128),w
 11069     0636  00F3               	movwf	___fltol@f1+3
 11070     0637  083F               	movf	(efgtoa@l+2)^(0+128),w
 11071     0638  00F2               	movwf	___fltol@f1+2
 11072     0639  083E               	movf	(efgtoa@l+1)^(0+128),w
 11073     063A  00F1               	movwf	___fltol@f1+1
 11074     063B  083D               	movf	efgtoa@l^(0+128),w
 11075     063C  00F0               	movwf	___fltol@f1
 11076     063D  160A  158A  253A  120A  118A  	fcall	___fltol
 11077     0642  0871               	movf	?___fltol+1,w
 11078     0643  1683               	bsf	3,5	;RP0=1, select bank1
 11079     0644  1303               	bcf	3,6	;RP1=0, select bank1
 11080     0645  00AC               	movwf	(efgtoa@d+1)^(0+128)
 11081     0646  0870               	movf	?___fltol,w
 11082     0647  00AB               	movwf	efgtoa@d^(0+128)
 11083     0648  2E4F               	goto	l3173
 11084     0649                     l3171:
 11085     0649  3009               	movlw	9
 11086     064A  1683               	bsf	3,5	;RP0=1, select bank1
 11087     064B  1303               	bcf	3,6	;RP1=0, select bank1
 11088     064C  00AB               	movwf	efgtoa@d^(0+128)
 11089     064D  3000               	movlw	0
 11090     064E  00AC               	movwf	(efgtoa@d^(0+128)+1)
 11091     064F                     l3173:
 11092                           
 11093                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;c:\PROGRA~1\MI
      +                          CROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp && (ne < 0)) 
      +                          {
 11094     064F  0828               	movf	efgtoa@pp^(0+128),w
 11095     0650  1D03               	btfss	3,2
 11096     0651  2E53               	goto	u4661
 11097     0652  2E54               	goto	u4660
 11098     0653                     u4661:
 11099     0653  2E85               	goto	l3193
 11100     0654                     u4660:
 11101     0654                     l3175:
 11102     0654  1FA1               	btfss	(efgtoa@ne+1)^(0+128),7
 11103     0655  2E57               	goto	u4671
 11104     0656  2E58               	goto	u4670
 11105     0657                     u4671:
 11106     0657  2E85               	goto	l3193
 11107     0658                     u4670:
 11108     0658                     l3177:
 11109                           
 11110                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:                 db
      +                          uf[n++] = '.';
 11111     0658  0842               	movf	efgtoa@n^(0+128),w
 11112     0659  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11113     065A  0084               	movwf	4
 11114     065B  302E               	movlw	46
 11115     065C  1783               	bsf	3,7	;select IRP bank2
 11116     065D  0080               	movwf	0
 11117     065E                     l3179:
 11118     065E  3001               	movlw	1
 11119     065F  07C2               	addwf	efgtoa@n^(0+128),f
 11120     0660  1803               	skipnc
 11121     0661  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 11122     0662  3000               	movlw	0
 11123     0663  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 11124     0664                     l3181:
 11125                           
 11126                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:                 --
      +                          w;
 11127     0664  30FF               	movlw	255
 11128     0665  07B1               	addwf	efgtoa@w^(0+128),f
 11129     0666  1803               	skipnc
 11130     0667  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 11131     0668  30FF               	movlw	255
 11132     0669  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 11133     066A                     l3183:
 11134                           
 11135                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:                 pp
      +                           = 1;
 11136     066A  3001               	movlw	1
 11137     066B  00A8               	movwf	efgtoa@pp^(0+128)
 11138     066C  2E85               	goto	l3193
 11139     066D                     l3185:
 11140                           
 11141                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:                 db
      +                          uf[n++] = '0';
 11142     066D  0842               	movf	efgtoa@n^(0+128),w
 11143     066E  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11144     066F  0084               	movwf	4
 11145     0670  3030               	movlw	48
 11146     0671  1783               	bsf	3,7	;select IRP bank2
 11147     0672  0080               	movwf	0
 11148     0673                     l3187:
 11149     0673  3001               	movlw	1
 11150     0674  07C2               	addwf	efgtoa@n^(0+128),f
 11151     0675  1803               	skipnc
 11152     0676  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 11153     0677  3000               	movlw	0
 11154     0678  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 11155     0679                     l3189:
 11156                           
 11157                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:                 --
      +                          w;
 11158     0679  30FF               	movlw	255
 11159     067A  07B1               	addwf	efgtoa@w^(0+128),f
 11160     067B  1803               	skipnc
 11161     067C  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 11162     067D  30FF               	movlw	255
 11163     067E  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 11164     067F                     l3191:
 11165                           
 11166                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:                 --
      +                          t;
 11167     067F  30FF               	movlw	255
 11168     0680  07A4               	addwf	efgtoa@t^(0+128),f
 11169     0681  1803               	skipnc
 11170     0682  0AA5               	incf	(efgtoa@t+1)^(0+128),f
 11171     0683  30FF               	movlw	255
 11172     0684  07A5               	addwf	(efgtoa@t+1)^(0+128),f
 11173     0685                     l3193:
 11174                           
 11175                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             while 
      +                          (t) {
 11176     0685  0824               	movf	efgtoa@t^(0+128),w
 11177     0686  0425               	iorwf	(efgtoa@t+1)^(0+128),w
 11178     0687  1D03               	btfss	3,2
 11179     0688  2E8A               	goto	u4681
 11180     0689  2E8B               	goto	u4680
 11181     068A                     u4681:
 11182     068A  2E6D               	goto	l3185
 11183     068B                     u4680:
 11184     068B                     l3195:
 11185                           
 11186                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             dbuf[n
      +                          ++] = (char)((int)'0' + d);
 11187     068B  0842               	movf	efgtoa@n^(0+128),w
 11188     068C  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11189     068D  0084               	movwf	4
 11190     068E  082B               	movf	efgtoa@d^(0+128),w
 11191     068F  3E30               	addlw	48
 11192     0690  1783               	bsf	3,7	;select IRP bank2
 11193     0691  0080               	movwf	0
 11194     0692                     l3197:
 11195     0692  3001               	movlw	1
 11196     0693  07C2               	addwf	efgtoa@n^(0+128),f
 11197     0694  1803               	skipnc
 11198     0695  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 11199     0696  3000               	movlw	0
 11200     0697  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 11201     0698                     l3199:
 11202                           
 11203                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             --w;
 11204     0698  30FF               	movlw	255
 11205     0699  07B1               	addwf	efgtoa@w^(0+128),f
 11206     069A  1803               	skipnc
 11207     069B  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 11208     069C  30FF               	movlw	255
 11209     069D  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 11210     069E                     l3201:
 11211                           
 11212                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };c:\PROGR
      +                          A~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*u.f;
 11213     069E  084B               	movf	(efgtoa@u+3)^(0+128),w
 11214     069F  1283               	bcf	3,5	;RP0=0, select bank0
 11215     06A0  1303               	bcf	3,6	;RP1=0, select bank0
 11216     06A1  00A7               	movwf	___flmul@a+3
 11217     06A2  1683               	bsf	3,5	;RP0=1, select bank1
 11218     06A3  1303               	bcf	3,6	;RP1=0, select bank1
 11219     06A4  084A               	movf	(efgtoa@u+2)^(0+128),w
 11220     06A5  1283               	bcf	3,5	;RP0=0, select bank0
 11221     06A6  1303               	bcf	3,6	;RP1=0, select bank0
 11222     06A7  00A6               	movwf	___flmul@a+2
 11223     06A8  1683               	bsf	3,5	;RP0=1, select bank1
 11224     06A9  1303               	bcf	3,6	;RP1=0, select bank1
 11225     06AA  0849               	movf	(efgtoa@u+1)^(0+128),w
 11226     06AB  1283               	bcf	3,5	;RP0=0, select bank0
 11227     06AC  1303               	bcf	3,6	;RP1=0, select bank0
 11228     06AD  00A5               	movwf	___flmul@a+1
 11229     06AE  1683               	bsf	3,5	;RP0=1, select bank1
 11230     06AF  1303               	bcf	3,6	;RP1=0, select bank1
 11231     06B0  0848               	movf	efgtoa@u^(0+128),w
 11232     06B1  1283               	bcf	3,5	;RP0=0, select bank0
 11233     06B2  1303               	bcf	3,6	;RP1=0, select bank0
 11234     06B3  00A4               	movwf	___flmul@a
 11235     06B4  1683               	bsf	3,5	;RP0=1, select bank1
 11236     06B5  1303               	bcf	3,6	;RP1=0, select bank1
 11237     06B6  0840               	movf	(efgtoa@l+3)^(0+128),w
 11238     06B7  1283               	bcf	3,5	;RP0=0, select bank0
 11239     06B8  1303               	bcf	3,6	;RP1=0, select bank0
 11240     06B9  00A3               	movwf	___flmul@b+3
 11241     06BA  1683               	bsf	3,5	;RP0=1, select bank1
 11242     06BB  1303               	bcf	3,6	;RP1=0, select bank1
 11243     06BC  083F               	movf	(efgtoa@l+2)^(0+128),w
 11244     06BD  1283               	bcf	3,5	;RP0=0, select bank0
 11245     06BE  1303               	bcf	3,6	;RP1=0, select bank0
 11246     06BF  00A2               	movwf	___flmul@b+2
 11247     06C0  1683               	bsf	3,5	;RP0=1, select bank1
 11248     06C1  1303               	bcf	3,6	;RP1=0, select bank1
 11249     06C2  083E               	movf	(efgtoa@l+1)^(0+128),w
 11250     06C3  1283               	bcf	3,5	;RP0=0, select bank0
 11251     06C4  1303               	bcf	3,6	;RP1=0, select bank0
 11252     06C5  00A1               	movwf	___flmul@b+1
 11253     06C6  1683               	bsf	3,5	;RP0=1, select bank1
 11254     06C7  1303               	bcf	3,6	;RP1=0, select bank1
 11255     06C8  083D               	movf	efgtoa@l^(0+128),w
 11256     06C9  1283               	bcf	3,5	;RP0=0, select bank0
 11257     06CA  1303               	bcf	3,6	;RP1=0, select bank0
 11258     06CB  00A0               	movwf	___flmul@b
 11259     06CC  120A  158A  24BE  120A  118A  	fcall	___flmul
 11260     06D1  1283               	bcf	3,5	;RP0=0, select bank0
 11261     06D2  1303               	bcf	3,6	;RP1=0, select bank0
 11262     06D3  0823               	movf	?___flmul+3,w
 11263     06D4  00CC               	movwf	___flsub@a+3
 11264     06D5  0822               	movf	?___flmul+2,w
 11265     06D6  00CB               	movwf	___flsub@a+2
 11266     06D7  0821               	movf	?___flmul+1,w
 11267     06D8  00CA               	movwf	___flsub@a+1
 11268     06D9  0820               	movf	?___flmul,w
 11269     06DA  00C9               	movwf	___flsub@a
 11270     06DB  1683               	bsf	3,5	;RP0=1, select bank1
 11271     06DC  1303               	bcf	3,6	;RP1=0, select bank1
 11272     06DD  083C               	movf	(efgtoa@h+3)^(0+128),w
 11273     06DE  1283               	bcf	3,5	;RP0=0, select bank0
 11274     06DF  1303               	bcf	3,6	;RP1=0, select bank0
 11275     06E0  00D0               	movwf	___flsub@b+3
 11276     06E1  1683               	bsf	3,5	;RP0=1, select bank1
 11277     06E2  1303               	bcf	3,6	;RP1=0, select bank1
 11278     06E3  083B               	movf	(efgtoa@h+2)^(0+128),w
 11279     06E4  1283               	bcf	3,5	;RP0=0, select bank0
 11280     06E5  1303               	bcf	3,6	;RP1=0, select bank0
 11281     06E6  00CF               	movwf	___flsub@b+2
 11282     06E7  1683               	bsf	3,5	;RP0=1, select bank1
 11283     06E8  1303               	bcf	3,6	;RP1=0, select bank1
 11284     06E9  083A               	movf	(efgtoa@h+1)^(0+128),w
 11285     06EA  1283               	bcf	3,5	;RP0=0, select bank0
 11286     06EB  1303               	bcf	3,6	;RP1=0, select bank0
 11287     06EC  00CE               	movwf	___flsub@b+1
 11288     06ED  1683               	bsf	3,5	;RP0=1, select bank1
 11289     06EE  1303               	bcf	3,6	;RP1=0, select bank1
 11290     06EF  0839               	movf	efgtoa@h^(0+128),w
 11291     06F0  1283               	bcf	3,5	;RP0=0, select bank0
 11292     06F1  1303               	bcf	3,6	;RP1=0, select bank0
 11293     06F2  00CD               	movwf	___flsub@b
 11294     06F3  160A  158A  23C6  120A  118A  	fcall	___flsub
 11295     06F8  1283               	bcf	3,5	;RP0=0, select bank0
 11296     06F9  1303               	bcf	3,6	;RP1=0, select bank0
 11297     06FA  084C               	movf	?___flsub+3,w
 11298     06FB  1683               	bsf	3,5	;RP0=1, select bank1
 11299     06FC  1303               	bcf	3,6	;RP1=0, select bank1
 11300     06FD  00BC               	movwf	(efgtoa@h+3)^(0+128)
 11301     06FE  1283               	bcf	3,5	;RP0=0, select bank0
 11302     06FF  1303               	bcf	3,6	;RP1=0, select bank0
 11303     0700  084B               	movf	?___flsub+2,w
 11304     0701  1683               	bsf	3,5	;RP0=1, select bank1
 11305     0702  1303               	bcf	3,6	;RP1=0, select bank1
 11306     0703  00BB               	movwf	(efgtoa@h+2)^(0+128)
 11307     0704  1283               	bcf	3,5	;RP0=0, select bank0
 11308     0705  1303               	bcf	3,6	;RP1=0, select bank0
 11309     0706  084A               	movf	?___flsub+1,w
 11310     0707  1683               	bsf	3,5	;RP0=1, select bank1
 11311     0708  1303               	bcf	3,6	;RP1=0, select bank1
 11312     0709  00BA               	movwf	(efgtoa@h+1)^(0+128)
 11313     070A  1283               	bcf	3,5	;RP0=0, select bank0
 11314     070B  1303               	bcf	3,6	;RP1=0, select bank0
 11315     070C  0849               	movf	?___flsub,w
 11316     070D  1683               	bsf	3,5	;RP0=1, select bank1
 11317     070E  1303               	bcf	3,6	;RP1=0, select bank1
 11318     070F  00B9               	movwf	efgtoa@h^(0+128)
 11319     0710                     l3203:
 11320                           
 11321                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f = u.f/
      +                          10.0;
 11322     0710  3041               	movlw	65
 11323     0711  00F3               	movwf	___fldiv@a+3
 11324     0712  3020               	movlw	32
 11325     0713  00F2               	movwf	___fldiv@a+2
 11326     0714  3000               	movlw	0
 11327     0715  00F1               	movwf	___fldiv@a+1
 11328     0716  3000               	movlw	0
 11329     0717  00F0               	movwf	___fldiv@a
 11330     0718  084B               	movf	(efgtoa@u+3)^(0+128),w
 11331     0719  00F7               	movwf	___fldiv@b+3
 11332     071A  084A               	movf	(efgtoa@u+2)^(0+128),w
 11333     071B  00F6               	movwf	___fldiv@b+2
 11334     071C  0849               	movf	(efgtoa@u+1)^(0+128),w
 11335     071D  00F5               	movwf	___fldiv@b+1
 11336     071E  0848               	movf	efgtoa@u^(0+128),w
 11337     071F  00F4               	movwf	___fldiv@b
 11338     0720  120A  158A  209E  120A  118A  	fcall	___fldiv
 11339     0725  0873               	movf	?___fldiv+3,w
 11340     0726  1683               	bsf	3,5	;RP0=1, select bank1
 11341     0727  1303               	bcf	3,6	;RP1=0, select bank1
 11342     0728  00CB               	movwf	(efgtoa@u+3)^(0+128)
 11343     0729  0872               	movf	?___fldiv+2,w
 11344     072A  00CA               	movwf	(efgtoa@u+2)^(0+128)
 11345     072B  0871               	movf	?___fldiv+1,w
 11346     072C  00C9               	movwf	(efgtoa@u+1)^(0+128)
 11347     072D  0870               	movf	?___fldiv,w
 11348     072E  00C8               	movwf	efgtoa@u^(0+128)
 11349     072F                     l3205:
 11350                           
 11351                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne;
 11352     072F  30FF               	movlw	255
 11353     0730  07A0               	addwf	efgtoa@ne^(0+128),f
 11354     0731  1803               	skipnc
 11355     0732  0AA1               	incf	(efgtoa@ne+1)^(0+128),f
 11356     0733  30FF               	movlw	255
 11357     0734  07A1               	addwf	(efgtoa@ne+1)^(0+128),f
 11358     0735                     l3207:
 11359                           
 11360                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
 11361     0735  3001               	movlw	1
 11362     0736  07B7               	addwf	efgtoa@i^(0+128),f
 11363     0737  1803               	skipnc
 11364     0738  0AB8               	incf	(efgtoa@i+1)^(0+128),f
 11365     0739  3000               	movlw	0
 11366     073A  07B8               	addwf	(efgtoa@i+1)^(0+128),f
 11367     073B                     l3209:
 11368                           
 11369                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((i < m)
      +                           && (n < (80 - 5))) {
 11370     073B  0838               	movf	(efgtoa@i+1)^(0+128),w
 11371     073C  3A80               	xorlw	128
 11372     073D  1283               	bcf	3,5	;RP0=0, select bank0
 11373     073E  1303               	bcf	3,6	;RP1=0, select bank0
 11374     073F  00D8               	movwf	??_efgtoa
 11375     0740  1683               	bsf	3,5	;RP0=1, select bank1
 11376     0741  1303               	bcf	3,6	;RP1=0, select bank1
 11377     0742  082E               	movf	(efgtoa@m+1)^(0+128),w
 11378     0743  3A80               	xorlw	128
 11379     0744  1283               	bcf	3,5	;RP0=0, select bank0
 11380     0745  1303               	bcf	3,6	;RP1=0, select bank0
 11381     0746  0258               	subwf	??_efgtoa,w
 11382     0747  1D03               	skipz
 11383     0748  2F4D               	goto	u4695
 11384     0749  1683               	bsf	3,5	;RP0=1, select bank1
 11385     074A  1303               	bcf	3,6	;RP1=0, select bank1
 11386     074B  082D               	movf	efgtoa@m^(0+128),w
 11387     074C  0237               	subwf	efgtoa@i^(0+128),w
 11388     074D                     u4695:
 11389     074D  1803               	skipnc
 11390     074E  2F50               	goto	u4691
 11391     074F  2F51               	goto	u4690
 11392     0750                     u4691:
 11393     0750  2F60               	goto	l3213
 11394     0751                     u4690:
 11395     0751                     l3211:
 11396     0751  1683               	bsf	3,5	;RP0=1, select bank1
 11397     0752  1303               	bcf	3,6	;RP1=0, select bank1
 11398     0753  0843               	movf	(efgtoa@n+1)^(0+128),w
 11399     0754  3A80               	xorlw	128
 11400     0755  00FF               	movwf	btemp+1
 11401     0756  3080               	movlw	128
 11402     0757  027F               	subwf	btemp+1,w
 11403     0758  1D03               	skipz
 11404     0759  2F5C               	goto	u4705
 11405     075A  304B               	movlw	75
 11406     075B  0242               	subwf	efgtoa@n^(0+128),w
 11407     075C                     u4705:
 11408     075C  1C03               	skipc
 11409     075D  2F5F               	goto	u4701
 11410     075E  2F60               	goto	u4700
 11411     075F                     u4701:
 11412     075F  2DDB               	goto	l3167
 11413     0760                     u4700:
 11414     0760                     l3213:
 11415                           
 11416                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(dbuf) 
      +                          - 1;
 11417     0760  304F               	movlw	79
 11418     0761  1683               	bsf	3,5	;RP0=1, select bank1
 11419     0762  1303               	bcf	3,6	;RP1=0, select bank1
 11420     0763  00B7               	movwf	efgtoa@i^(0+128)
 11421     0764  3000               	movlw	0
 11422     0765  00B8               	movwf	(efgtoa@i^(0+128)+1)
 11423     0766                     l3215:
 11424                           
 11425                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] = '\0'
      +                          ;
 11426     0766  0837               	movf	efgtoa@i^(0+128),w
 11427     0767  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11428     0768  0084               	movwf	4
 11429     0769  1783               	bsf	3,7	;select IRP bank2
 11430     076A  0180               	clrf	0
 11431     076B                     l3217:
 11432                           
 11433                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbuf[i-n]
      +                          , &dbuf[0], (size_t)n);
 11434     076B  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
 11435     076C  1283               	bcf	3,5	;RP0=0, select bank0
 11436     076D  1303               	bcf	3,6	;RP1=0, select bank0
 11437     076E  00D8               	movwf	??_efgtoa
 11438     076F  1683               	bsf	3,5	;RP0=1, select bank1
 11439     0770  1303               	bcf	3,6	;RP1=0, select bank1
 11440     0771  0842               	movf	efgtoa@n^(0+128),w
 11441     0772  1283               	bcf	3,5	;RP0=0, select bank0
 11442     0773  1303               	bcf	3,6	;RP1=0, select bank0
 11443     0774  02D8               	subwf	??_efgtoa,f
 11444     0775  1683               	bsf	3,5	;RP0=1, select bank1
 11445     0776  1303               	bcf	3,6	;RP1=0, select bank1
 11446     0777  0837               	movf	efgtoa@i^(0+128),w
 11447     0778  1283               	bcf	3,5	;RP0=0, select bank0
 11448     0779  1303               	bcf	3,6	;RP1=0, select bank0
 11449     077A  0758               	addwf	??_efgtoa,w
 11450     077B  00F0               	movwf	memcpy@d1
 11451     077C  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
 11452     077D  00F1               	movwf	memcpy@s1
 11453     077E  1683               	bsf	3,5	;RP0=1, select bank1
 11454     077F  1303               	bcf	3,6	;RP1=0, select bank1
 11455     0780  0843               	movf	(efgtoa@n+1)^(0+128),w
 11456     0781  00F3               	movwf	memcpy@n+1
 11457     0782  0842               	movf	efgtoa@n^(0+128),w
 11458     0783  00F2               	movwf	memcpy@n
 11459     0784  160A  158A  2384  120A  118A  	fcall	_memcpy
 11460     0789                     l3219:
 11461                           
 11462                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 11463     0789  1683               	bsf	3,5	;RP0=1, select bank1
 11464     078A  1303               	bcf	3,6	;RP1=0, select bank1
 11465     078B  0842               	movf	efgtoa@n^(0+128),w
 11466     078C  0237               	subwf	efgtoa@i^(0+128),w
 11467     078D  00C2               	movwf	efgtoa@n^(0+128)
 11468     078E  0843               	movf	(efgtoa@n+1)^(0+128),w
 11469     078F  1C03               	skipc
 11470     0790  0A43               	incf	(efgtoa@n+1)^(0+128),w
 11471     0791  0238               	subwf	(efgtoa@i+1)^(0+128),w
 11472     0792  00C3               	movwf	(efgtoa@n+1)^(0+128)
 11473     0793                     l3221:
 11474                           
 11475                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign == 0 ? 0
      +                           : 1;
 11476     0793  0841               	movf	efgtoa@sign^(0+128),w
 11477     0794  1D03               	btfss	3,2
 11478     0795  2F97               	goto	u4711
 11479     0796  2F99               	goto	u4710
 11480     0797                     u4711:
 11481     0797  3001               	movlw	1
 11482     0798  2F9A               	goto	u4720
 11483     0799                     u4710:
 11484     0799  3000               	movlw	0
 11485     079A                     u4720:
 11486     079A  1283               	bcf	3,5	;RP0=0, select bank0
 11487     079B  1303               	bcf	3,6	;RP1=0, select bank0
 11488     079C  00D8               	movwf	??_efgtoa
 11489     079D  01D9               	clrf	??_efgtoa+1
 11490     079E  0858               	movf	??_efgtoa,w
 11491     079F  1683               	bsf	3,5	;RP0=1, select bank1
 11492     07A0  1303               	bcf	3,6	;RP1=0, select bank1
 11493     07A1  00B7               	movwf	efgtoa@i^(0+128)
 11494     07A2  1283               	bcf	3,5	;RP0=0, select bank0
 11495     07A3  1303               	bcf	3,6	;RP1=0, select bank0
 11496     07A4  0859               	movf	??_efgtoa+1,w
 11497     07A5  1683               	bsf	3,5	;RP0=1, select bank1
 11498     07A6  1303               	bcf	3,6	;RP1=0, select bank1
 11499     07A7  00B8               	movwf	(efgtoa@i+1)^(0+128)
 11500     07A8                     l3223:
 11501                           
 11502                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 11503     07A8  0841               	movf	efgtoa@sign^(0+128),w
 11504     07A9  1903               	btfsc	3,2
 11505     07AA  2FAC               	goto	u4731
 11506     07AB  2FAD               	goto	u4730
 11507     07AC                     u4731:
 11508     07AC  2FB9               	goto	l3227
 11509     07AD                     u4730:
 11510     07AD                     l3225:
 11511                           
 11512                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] = sign
      +                          ;
 11513     07AD  30FF               	movlw	255
 11514     07AE  07C2               	addwf	efgtoa@n^(0+128),f
 11515     07AF  1803               	skipnc
 11516     07B0  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 11517     07B1  30FF               	movlw	255
 11518     07B2  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 11519     07B3  0842               	movf	efgtoa@n^(0+128),w
 11520     07B4  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11521     07B5  0084               	movwf	4
 11522     07B6  0841               	movf	efgtoa@sign^(0+128),w
 11523     07B7  1783               	bsf	3,7	;select IRP bank2
 11524     07B8  0080               	movwf	0
 11525     07B9                     l3227:
 11526                           
 11527                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 11528     07B9  0837               	movf	efgtoa@i^(0+128),w
 11529     07BA  02B1               	subwf	efgtoa@w^(0+128),f
 11530     07BB  0838               	movf	(efgtoa@i+1)^(0+128),w
 11531     07BC  1C03               	skipc
 11532     07BD  03B2               	decf	(efgtoa@w+1)^(0+128),f
 11533     07BE  02B2               	subwf	(efgtoa@w+1)^(0+128),f
 11534     07BF                     l3229:
 11535                           
 11536                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (int) p
      +                          ad(fp, &dbuf[n], w);
 11537     07BF  1283               	bcf	3,5	;RP0=0, select bank0
 11538     07C0  1303               	bcf	3,6	;RP1=0, select bank0
 11539     07C1  0851               	movf	efgtoa@fp,w
 11540     07C2  00A8               	movwf	pad@fp
 11541     07C3  0852               	movf	efgtoa@fp+1,w
 11542     07C4  00A9               	movwf	pad@fp+1
 11543     07C5  1683               	bsf	3,5	;RP0=1, select bank1
 11544     07C6  1303               	bcf	3,6	;RP1=0, select bank1
 11545     07C7  0842               	movf	efgtoa@n^(0+128),w
 11546     07C8  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11547     07C9  1283               	bcf	3,5	;RP0=0, select bank0
 11548     07CA  1303               	bcf	3,6	;RP1=0, select bank0
 11549     07CB  00AA               	movwf	pad@buf
 11550     07CC  1683               	bsf	3,5	;RP0=1, select bank1
 11551     07CD  1303               	bcf	3,6	;RP1=0, select bank1
 11552     07CE  0832               	movf	(efgtoa@w+1)^(0+128),w
 11553     07CF  1283               	bcf	3,5	;RP0=0, select bank0
 11554     07D0  1303               	bcf	3,6	;RP1=0, select bank0
 11555     07D1  00AC               	movwf	pad@p+1
 11556     07D2  1683               	bsf	3,5	;RP0=1, select bank1
 11557     07D3  1303               	bcf	3,6	;RP1=0, select bank1
 11558     07D4  0831               	movf	efgtoa@w^(0+128),w
 11559     07D5  1283               	bcf	3,5	;RP0=0, select bank0
 11560     07D6  1303               	bcf	3,6	;RP1=0, select bank0
 11561     07D7  00AB               	movwf	pad@p
 11562     07D8  160A  158A  24E7  120A  118A  	fcall	_pad
 11563     07DD  1283               	bcf	3,5	;RP0=0, select bank0
 11564     07DE  1303               	bcf	3,6	;RP1=0, select bank0
 11565     07DF  0829               	movf	?_pad+1,w
 11566     07E0  00D2               	movwf	?_efgtoa+1
 11567     07E1  0828               	movf	?_pad,w
 11568     07E2  00D1               	movwf	?_efgtoa
 11569     07E3                     l756:
 11570     07E3  0008               	return
 11571     07E4                     __end_of_efgtoa:

Data Sizes:
    Strings     43
    Constant    0
    Data        0
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     75      80
    BANK3            96     32      68
    BANK2            96      0      80

Pointer List with Targets:

    calculate@values	PTR  size(1) Largest target is 8
		 -> main@values(BANK3[8]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK1[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> calculate@result(BANK3[16]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> calculate@result(BANK3[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK1[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    getInput@output	PTR unsigned char [1] size(1) Largest target is 2
		 -> STR_1(CODE[1]), STR_10(CODE[2]), STR_11(CODE[2]), STR_12(CODE[2]), 
		 -> STR_13(CODE[2]), STR_14(CODE[2]), STR_15(CODE[2]), STR_16(CODE[2]), 
		 -> STR_17(CODE[2]), STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), 
		 -> STR_5(CODE[2]), STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), 
		 -> STR_9(CODE[2]), 

    LCDdisplay@sentence	PTR unsigned char  size(2) Largest target is 16
		 -> main@output(BANK3[16]), STR_1(CODE[1]), STR_10(CODE[2]), STR_11(CODE[2]), 
		 -> STR_12(CODE[2]), STR_13(CODE[2]), STR_14(CODE[2]), STR_15(CODE[2]), 
		 -> STR_16(CODE[2]), STR_17(CODE[2]), STR_2(CODE[2]), STR_3(CODE[2]), 
		 -> STR_4(CODE[2]), STR_5(CODE[2]), STR_6(CODE[2]), STR_7(CODE[2]), 
		 -> STR_8(CODE[2]), STR_9(CODE[2]), 

    main$1087	PTR const unsigned char  size(2) Largest target is 16
		 -> calculate@result(BANK3[16]), STR_18(CODE[1]), 

    main@newInput	PTR unsigned char [1] size(1) Largest target is 2
		 -> STR_1(CODE[1]), STR_10(CODE[2]), STR_11(CODE[2]), STR_12(CODE[2]), 
		 -> STR_13(CODE[2]), STR_14(CODE[2]), STR_15(CODE[2]), STR_16(CODE[2]), 
		 -> STR_17(CODE[2]), STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), 
		 -> STR_5(CODE[2]), STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), 
		 -> STR_9(CODE[2]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memset@dest	PTR void  size(1) Largest target is 8
		 -> main@values(BANK3[8]), 

    memset@p	PTR unsigned char  size(1) Largest target is 8
		 -> main@values(BANK3[8]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK1[11]), 

    S678$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> calculate@result(BANK3[16]), 

    S678$source	PTR const unsigned char  size(1) Largest target is 0

    setDigit@newValue	PTR unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[1]), STR_10(CODE[2]), STR_11(CODE[2]), STR_12(CODE[2]), 
		 -> STR_13(CODE[2]), STR_14(CODE[2]), STR_15(CODE[2]), STR_16(CODE[2]), 
		 -> STR_17(CODE[2]), STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), 
		 -> STR_5(CODE[2]), STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), 
		 -> STR_9(CODE[2]), 

    setDigit@oldValue	PTR  size(1) Largest target is 8
		 -> main@values(BANK3[8]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    snprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_19(CODE[3]), 

    snprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> calculate@result(BANK3[16]), 

    sp__calculate	PTR unsigned char  size(2) Largest target is 16
		 -> calculate@result(BANK3[16]), STR_18(CODE[1]), 

    sp__getInput	PTR unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[1]), STR_10(CODE[2]), STR_11(CODE[2]), STR_12(CODE[2]), 
		 -> STR_13(CODE[2]), STR_14(CODE[2]), STR_15(CODE[2]), STR_16(CODE[2]), 
		 -> STR_17(CODE[2]), STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), 
		 -> STR_5(CODE[2]), STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), 
		 -> STR_9(CODE[2]), 

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__memset	PTR void  size(1) Largest target is 8
		 -> main@values(BANK3[8]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), main@output(BANK3[16]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), main@output(BANK3[16]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), main@output(BANK3[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 16
		 -> calculate@result(BANK3[16]), STR_18(CODE[1]), STR_20(CODE[4]), STR_23(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> calculate@result(BANK3[16]), dbuf(BANK2[80]), main@output(BANK3[16]), STR_1(CODE[1]), 
		 -> STR_10(CODE[2]), STR_11(CODE[2]), STR_12(CODE[2]), STR_13(CODE[2]), 
		 -> STR_14(CODE[2]), STR_15(CODE[2]), STR_16(CODE[2]), STR_17(CODE[2]), 
		 -> STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), STR_5(CODE[2]), 
		 -> STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), STR_9(CODE[2]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> calculate@result(BANK3[16]), dbuf(BANK2[80]), main@output(BANK3[16]), STR_1(CODE[1]), 
		 -> STR_10(CODE[2]), STR_11(CODE[2]), STR_12(CODE[2]), STR_13(CODE[2]), 
		 -> STR_14(CODE[2]), STR_15(CODE[2]), STR_16(CODE[2]), STR_17(CODE[2]), 
		 -> STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), STR_5(CODE[2]), 
		 -> STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), STR_9(CODE[2]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_19(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_19(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_19(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK1[11]), 


Critical Paths under _main in COMMON

    _setDigit->___flmul
    _setDigit->___xxtofl
    _LCDdisplay->_strlen
    _selectRow->_sendCommand
    _sendCommand->_toggleEnable
    _getInput->_strlen
    _calculate->___flmul
    _efgtoa->___flmul
    _efgtoa->_pad
    _pad->_fputc
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___fladd->___flmul
    ___fladd->___xxtofl
    ___flmul->__Umul8_16
    ___flge->___flmul

Critical Paths under _main in BANK0

    _setDigit->___fladd
    _calculate->_snprintf
    _snprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flge->___flmul

Critical Paths under _main in BANK1

    _main->_calculate
    _calculate->_snprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0   25188
                                             72 BANK1      3     3      0
                                              0 BANK3     32    32      0
                         _LCDdisplay
                          _calculate
                           _getInput
                             _memset
                          _selectRow
                        _sendCommand
                           _setDigit
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _setDigit                                             5     3      2    4254
                                             41 BANK0      5     3      2
                         _LCDdisplay
                            ___fladd
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     337
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) _LCDdisplay                                           6     4      2     211
                                              4 COMMON     6     4      2
                             _strlen
                       _toggleEnable
 ---------------------------------------------------------------------------------
 (1) _selectRow                                            2     0      2      54
                                              3 COMMON     2     0      2
                        _sendCommand
 ---------------------------------------------------------------------------------
 (1) _sendCommand                                          1     1      0      29
                                              2 COMMON     1     1      0
                       _toggleEnable
 ---------------------------------------------------------------------------------
 (3) _toggleEnable                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _memset                                               6     1      5      99
                                              0 COMMON     6     1      5
 ---------------------------------------------------------------------------------
 (1) _getInput                                             4     4      0     155
                                              4 COMMON     4     4      0
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _calculate                                            4     2      2   19757
                                             68 BANK1      4     2      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           _snprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            27    19      8   12444
                                             77 BANK0      3     3      0
                                             44 BANK1     24    16      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4   11993
                                             72 BANK0      5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13     9      4   11868
                                             60 BANK0     12     8      4
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              56    49      7   11208
                                             49 BANK0     11     4      7
                                              0 BANK1     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     3      3      81
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5     845
                                             13 COMMON     1     1      0
                                              8 BANK0      7     2      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2      94
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     5      3     331
                                              0 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                               13     9      4     232
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _memcpy                                               7     3      4     146
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) _labs                                                 4     0      4      69
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     340
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       16    12      4     137
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     232
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    2045
                                             41 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    1994
                                             21 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4      46
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    1622
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     192
                                             21 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8      94
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    1134
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDdisplay
     _strlen
     _toggleEnable
   _calculate
     ___fladd
       ___flmul (ARG)
         __Umul8_16
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
       ___flmul (ARG)
     _snprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
             _strcpy
           _fputc
     _strlen
   _getInput
     _strlen
   _memset
   _selectRow
     _sendCommand
       _toggleEnable
   _sendCommand
   _setDigit
     _LCDdisplay
     ___fladd
     ___flmul
     ___xxtofl
   _strcpy

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     80      80    100.0%
BANK1               80     75      80    100.0%
BANK3               96     32      68     70.8%
BANK2               96      0      80     83.3%
STACK                0      0       0      0.0%
DATA                 0      0     322      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Feb 22 15:22:08 2025

       setDigit@oldValue 0049         setDigit@newValue 004A       LCDdisplay@sentence 0074  
           ___fldiv@aexp 002C             ___fldiv@bexp 002B                        pc 0002  
           ___fldiv@sign 0024                       l25 1B4D                       l41 1B83  
                     l34 1C98                       l51 1686                       l60 16D5  
                     l28 1B23                       l44 1E24                       l54 169C  
                     l63 16EB                       l72 173A                       l48 1670  
                     l90 17CB                       l66 1701                       l75 1750  
                     l84 179F                       l78 1766                       l87 17B5  
                     l97 17FF                       fsr 0004      __Umul8_16@word_mpld 0076  
                    l111 149B                      l400 1CB5                      l401 1CD1  
                    l129 1528                      l412 008F                      l421 1B16  
                    l406 1CE6                      l432 1D98                      l417 00A8  
                    l409 0023                      l425 1DAD                      l610 0A59  
                    l435 1DAD                      l612 0A65                      l604 09E7  
                    l532 0ACB                      l527 0A9A                      l703 089D  
                    l640 0FF5                      l536 0B4A                      l553 0C10  
                    l545 0CBD                      l634 0F71                      l538 0B25  
                    l563 0C57                      l628 0FFF                      l557 0C34  
                    l741 1CEF                      l805 1073                      l590 0A6D  
                    l574 0CB3                      l566 0C93                      l647 1C22  
                    l575 0CBD                      l823 1041                      l816 111B  
                    l672 1F6E                      l649 1C34                      l833 1EB1  
                    l841 1169                      l745 1D39                      l753 12A3  
                    l673 1F7F                      l578 1BE9                      l842 122A  
                    l674 1FFF                      l588 08F3                      l772 02F4  
                    l756 07E3                      l693 1B66                      l685 1FC9  
                    l846 1222                      l862 1BA4                      l782 05C7  
                    l686 1FD5                      l678 1FAD                      l856 1B38  
                    l874 1F4B                      l882 1C5F                      l859 1B96  
                    l891 1BC5                      l885 0004                      l897 1C0D  
                    _pad 1CE7                      fsr0 0004                      indf 0000  
            ?_LCDdisplay 0074             ___flmul@aexp 002D             ___flmul@bexp 002E  
           ___flmul@sign 0028             ___flmul@temp 0033             ___flmul@prod 002F  
           ___fltol@exp1 0079                     l3001 11B7                     l3011 121A  
                   l3003 11CE                     l3005 11DF                     l3021 1B90  
                   l3101 02E7                     l3007 11F8                     l3015 1B84  
                   l3111 0308                     l3103 02EB                     l3031 1271  
                   l3023 122B                     l2401 0ADD                     l3009 1201  
                   l3017 1B89                     l2321 1EB2                     l3201 069E  
                   l3121 0320                     l3113 0310                     l3105 02F0  
                   l3041 129A                     l3033 1288                     l3025 122E  
                   l2411 0AE7                     l2403 0ADF                     l3019 1B8E  
                   l2331 1F0F                     l2323 1EB8                     l3211 0751  
                   l3203 0710                     l3131 03F4                     l3123 0328  
                   l3115 0312                     l3107 02FE                     l3051 12CF  
                   l3043 129F                     l3035 128C                     l3027 1246  
                   l2501 0C43                     l2421 0AF1                     l2413 0AE9  
                   l2405 0AE1                     l2325 1EBE                     l2341 1C05  
                   l3221 0793                     l3213 0760                     l3205 072F  
                   l3141 04A5                     l3133 0413                     l3125 0331  
                   l3117 0318                     l3109 0304                     l3061 1323  
                   l3053 12DB                     l3045 12A5                     l3037 1290  
                   l3029 126D                     l3301 1035                     l2511 0C54  
                   l2503 0C45                     l2431 0B29                     l2423 0AF3  
                   l2415 0AEB                     l2407 0AE3                     l2351 0A78  
                   l2327 1EC5                     l2335 1BEA                     l3223 07A8  
                   l3215 0766                     l3207 0735                     l3151 0526  
                   l3143 04B0                     l3127 036F                     l3135 0419  
                   l3119 031E                     l3071 00B3                     l3063 1333  
                   l3047 12B8                     l3039 1295                     l3311 1C60  
                   l2601 1B0C                     l2521 0C73                     l2505 0C49  
                   l2441 0B40                     l2433 0B30                     l2417 0AED  
                   l2409 0AE5                     l2425 0AF5                     l2361 0A8F  
                   l2353 0A7C                     l2345 0A6E                     l2329 1EDD  
                   l2337 1BEF                     l3225 07AD                     l3217 076B  
                   l3209 073B                     l3161 05D5                     l3153 0574  
                   l3145 04CB                     l3137 042F                     l3129 0382  
                   l3081 011E                     l3073 00B5                     l3049 12BF  
                   l3057 1305                     l3241 1061                     l3233 1042  
                   l3305 1B18                     l3401 1B67                     l3321 1C88  
                   l3313 1C64                     l2603 1B14                     l2531 0CAA  
                   l2523 0C91                     l2515 0C5C                     l2507 0C4A  
                   l2451 0B5C                     l2435 0B32                     l2443 0B42  
                   l2427 0AF6                     l2419 0AEF                     l2371 0AA4  
                   l2363 0A90                     l2355 0A7D                     l2347 0A72  
                   l2611 1D43                     l2339 1BF5                     l3227 07B9  
                   l3219 0789                     l3171 0649                     l3163 05D6  
                   l3155 057C                     l3147 04D1                     l3139 046E  
                   l3091 0241                     l3083 017C                     l3059 131C  
                   l3251 1078                     l3243 1067                     l3235 1053  
                   l3331 0816                     l3307 1B1C                     l3403 1B68  
                   l3323 1C8E                     l3315 1C71                     l2701 0912  
                   l2605 1B16                     l2541 0CBC                     l2533 0CAB  
                   l2525 0C98                     l2517 0C61                     l2509 0C4E  
                   l2461 0B84                     l2453 0B73                     l2445 0B4E  
                   l2437 0B36                     l2429 0B0D                     l2381 0AB3  
                   l2373 0AA5                     l2357 0A82                     l2365 0A92  
                   l2349 0A74                     l2621 1D68                     l3229 07BF  
                   l3181 0664                     l3173 064F                     l3165 05D8  
                   l3157 05BB                     l3149 04D9                     l3093 0247  
                   l3085 01B5                     l3077 00CF                     l3069 00A9  
                   l3261 10B8                     l3253 1083                     l3245 1070  
                   l3237 1057                     l3341 0830                     l3333 0818  
                   l3325 0804                     l3501 1754                     l3421 1657  
                   l3309 1B1E                     l3405 1B6F                     l3317 1C74  
                   l2711 093A                     l2703 0917                     l2551 1C2B  
                   l2543 1C0F                     l2535 0CAF                     l2527 0C9D  
                   l2519 0C6F                     l2471 0BAB                     l2463 0B88  
                   l2455 0B77                     l2447 0B53                     l2439 0B37  
                   l2391 0AD1                     l2383 0AB8                     l2375 0AA9  
                   l2367 0A9C                     l2359 0A87                     l2631 1D76  
                   l2623 1D6A                     l2615 1D4C                     l3191 067F  
                   l3183 066A                     l3175 0654                     l3167 05DB  
                   l3159 05C1                     l3087 0215                     l3079 00DF  
                   l3271 10E6                     l3263 10C0                     l3255 1090  
                   l3247 1076                     l3239 105D                     l3351 0883  
                   l3343 0838                     l3335 081C                     l3327 080F  
                   l3511 1779                     l3503 175D                     l3431 1674  
                   l3423 165A                     l3319 1C83                     l3415 1DAE  
                   l2721 0963                     l2713 0942                     l2553 1C30  
                   l2545 1C11                     l2801 0CC8                     l2537 0CB1  
                   l2529 0CA5                     l2473 0BE9                     l2481 0C02  
                   l2465 0B89                     l2457 0B7B                     l2393 0AD5  
                   l2385 0AC0                     l2377 0AAD                     l2369 0A9E  
                   l2641 1D9D                     l2625 1D6E                     l2633 1D86  
                   l2617 1D5F                     l2609 1D3A                     l2561 1C4A  
                   l3185 066D                     l3177 0658                     l3193 0685  
                   l3169 0633                     l3089 0220                     l3097 02A6  
                   l3281 1110                     l3265 10C6                     l3257 10A4  
                   l3273 10F1                     l3353 088E                     l3345 0857  
                   l3337 0825                     l3521 178D                     l3513 177C  
                   l3505 1763                     l3441 1699                     l3433 167D  
                   l3425 165E                     l3601 1B58                     l3409 1B76  
                   l3361 1F52                     l3417 1E16                     l2731 0984  
                   l2723 0967                     l2715 094A                     l2707 0920  
                   l2651 089E                     l2571 1CAD                     l2547 1C18  
                   l2811 0CDF                     l2803 0CCC                     l2539 0CB8  
                   l2491 0C2F                     l2483 0C18                     l2475 0BEB  
                   l2467 0B92                     l2459 0B82                     l2395 0AD7  
                   l2387 0AC1                     l2379 0AAE                     l2643 1DA2  
                   l2619 1D60                     l2563 1C52                     l3195 068B  
                   l3187 0673                     l3179 065E                     l3099 02DF  
                   l3283 1117                     l3275 10F5                     l3355 0894  
                   l3347 085D                     l3339 082D                     l3531 17B2  
                   l3523 1796                     l3507 176A                     l3515 1785  
                   l3443 16A0                     l3435 1683                     l3451 16BB  
                   l3427 1667                     l3419 1648                     l3291 1B41  
                   l3371 1F82                     l3363 1F56                     l3611 14B1  
                   l3603 149C                     l2741 09AA                     l2733 0998  
                   l2725 0968                     l2717 094C                     l2709 0932  
                   l2661 08AD                     l2653 08A2                     l2573 1CC9  
                   l2581 0005                     l2549 1C1C                     l2901 0F6E  
                   l2821 0CF4                     l2813 0CE1                     l2805 0CCD  
                   l2493 0C33                     l2485 0C1D                     l2477 0BEE  
                   l2469 0B95                     l2397 0AD9                     l2389 0AC3  
                   l2645 1BC6                     l2557 1C35                     l2565 1BA5  
                   l3197 0692                     l3189 0679                     l3293 1003  
                   l3349 0861                     l3541 17D8                     l3533 17B9  
                   l3525 179C                     l3517 1788                     l3509 1773  
                   l3461 16D2                     l3453 16BE                     l3445 16A9  
                   l3437 168A                     l3429 166D                     l3381 1FB4  
                   l3373 1F8D                     l3365 1F66                     l3621 14CA  
                   l3605 14AC                     l2743 09B3                     l2751 09C7  
                   l2719 0951                     l2727 0971                     l2735 099A  
                   l2663 08B2                     l2671 08C2                     l2655 08A4  
                   l2575 1CE3                     l2591 0067                     l2583 001B  
                   l2911 0F8D                     l2831 0D09                     l2823 0CF5  
                   l2815 0CE9                     l2807 0CD2                     l2495 0C38  
                   l2479 0BF3                     l2399 0ADB                     l2647 1BCA  
                   l2639 1D8D                     l2559 1C3A                     l2567 1BA7  
                   l3199 0698                     l3279 10F8                     l3295 1007  
                   l3551 17FE                     l3543 17DE                     l3535 17C2  
                   l3527 17A3                     l3519 1789                     l3471 16F8  
                   l3463 16D9                     l3455 16BF                     l3447 16AF  
                   l3439 1693                     l3287 1B39                     l3391 1FED  
                   l3383 1FBF                     l3375 1F94                     l3367 1F76  
                   l3359 1F4D                     l3631 14F5                     l3623 14D2  
                   l3607 14AF                     l2753 09CB                     l2745 09B7  
                   l2737 09A0                     l2729 0983                     l2681 08D6  
                   l2673 08CA                     l2665 08B7                     l2657 08A8  
                   l2577 1CE5                     l2569 1C99                     l2593 006B  
                   l2585 0037                     l2921 0FD3                     l2913 0FA6  
                   l2905 0F76                     l2841 0D24                     l2833 0D11  
                   l2825 0CFA                     l2817 0CEC                     l2809 0CD7  
                   l2497 0C3C                     l2489 0C26                     l3297 100C  
                   l3561 13B5                     l3545 17E1                     l3537 17C8  
                   l3529 17AC                     l3481 1717                     l3473 16FE  
                   l3465 16E2                     l3457 16C3                     l3449 16B2  
                   l3289 1B3C                     l3393 1FF2                     l3385 1FC3  
                   l3377 1F96                     l3641 1514                     l3633 14FB  
                   l3625 14DB                     l3617 14B6                     l3609 14B0  
                   l2771 0A1C                     l2763 09EC                     l2755 09CC  
                   l2747 09B8                     l2739 09A8                     l2683 08DB  
                   l2691 08EB                     l2675 08CD                     l2667 08BF  
                   l2659 08AC                     l2595 00A5                     l2587 003F  
                   l2931 0FF0                     l2923 0FDD                     l2907 0F7B  
                   l2915 0FAC                     l2851 0DA0                     l2843 0D32  
                   l2835 0D16                     l2827 0CFF                     l2819 0CF0  
                   l2499 0C3E                     l3299 1027                     l3563 13EF  
                   l3571 1426                     l3555 1340                     l3539 17CF  
                   l3547 17EA                     l3491 1731                     l3475 1705  
                   l3467 16E8                     l3483 1720                     l3459 16CC  
                   l3395 1FF6                     l3387 1FCD                     l3379 1FA4  
                   l3651 1538                     l3643 151D                     l3635 1501  
                   l3627 14E9                     l3619 14C4                     l2781 0A50  
                   l2765 09F1                     l2773 0A22                     l2757 09D0  
                   l2749 09C1                     l2693 08FB                     l2685 08E0  
                   l2677 08D1                     l2669 08C0                     l2597 00A7  
                   l2589 0043                     l2933 0FF7                     l2925 0FDF  
                   l2917 0FB9                     l2909 0F89                     l2861 0E0C  
                   l2853 0DBC                     l2845 0D3F                     l2837 0D1B  
                   l2829 0D07                     l2941 1CF2                     l3581 1473  
                   l3565 1421                     l3573 1436                     l3557 1341  
                   l3549 17ED                     l3493 1737                     l3485 1723  
                   l3477 170E                     l3469 16EF                     l3397 1FF7  
                   l3389 1FD7                     l3653 155E                     l3661 1581  
                   l3645 151F                     l3637 1507                     l3629 14EF  
                   ?_pad 0028                     l2783 0A58                     l2775 0A2F  
                   l2767 09FF                     l2759 09E4                     l2695 0907  
                   l2687 08E8                     l2679 08D5                     l2927 0FEB  
                   l2919 0FC4                     l2871 0E96                     l2863 0E1A  
                   l2855 0DD8                     l2847 0D5A                     l2943 1D01  
                   l3591 1497                     l3583 147D                     l3575 1446  
                   l3559 137B                     l3495 173E                     l3487 1724  
                   l3479 1714                     l3671 15D7                     l3663 158F  
                   l3655 1564                     l3647 1528                     l3639 1510  
                   l2785 0A5D                     l2777 0A3D                     l2769 0A03  
                   l2697 0909                     l2689 08E9                     l2929 0FEF  
                   l2881 0F26                     l2873 0EA4                     l2865 0E37  
                   l2857 0DE1                     l2849 0D76                     l2961 1E7B  
                   l2953 1E25                     l2945 1D09                     l2937 1CE7  
                   l3585 1482                     l3577 1460                     l3497 1747  
                   l3489 1728                     l3681 15F6                     l3673 15E3  
                   l3665 15B5                     l3657 156A                     l3649 1531  
                   l2787 0A61                     l2779 0A4C                     l2891 0F4B  
                   l2883 0F34                     l2875 0ECF                     l2867 0E4E  
                   l2859 0DEF                     l2795 0CBE                     l2963 1E80  
                   l2955 1E45                     l2947 1D17                     l2939 1CED  
                   l3587 148B                     l3499 174D                     l3595 1B4E  
                   l3683 1604                     l3675 15EA                     l3667 15BE  
                   l3659 1574                     l2789 0A63                     l2885 0F3D  
                   l2893 0F51                     l2877 0EF5                     l2869 0E6B  
                   l2797 0CC2                     l2973 1EAD                     l2957 1E5C  
                   l2981 1B29                     l2949 1D24                     l3589 1490  
                   l3597 1B51                     l3685 1612                     l3677 15EC  
                   l3669 15D0                     l3757 1579                     l2895 0F55  
                   l2887 0F41                     l2879 0F1D                     l2799 0CC4  
                   l2959 1E62                     l2967 1E85                     l2991 1168  
                   l3599 1B56                     l3759 1B7B                     l3679 15F2  
                   l3687 162E                     l2897 0F56                     l2889 0F42  
                   l2969 1E8B                     l2993 116F                     l2985 111C  
                   l2977 1B24                     l2899 0F5A                     l2995 1189  
                   l2987 113C                     l2979 1B28                     l2989 115B  
                   l2999 119E                     STR_1 181C                     STR_2 182F  
                   STR_3 1829                     STR_4 1823                     STR_5 1837  
                   STR_6 1831                     STR_7 182B                     STR_8 1825  
                   STR_9 1821                     u3001 0BC2                     u3010 0BD6  
                   u3002 0BC3                     u3011 0BD7                     u3003 0BC8  
                   u3100 0C4E                     u3020 0BF3                     u3012 0BDC  
                   u3004 0BC9                     u3101 0C4D                     u3021 0BF2  
                   u3013 0BDD                     u3005 0BCE                     u3110 0C54  
                   u3030 0C18                     u3006 0BCF                     u3111 0C53  
                   u3031 0C17                     u3200 0CAF                     u3120 0C5B  
                   u3040 0C1D                     u4001 0F0F                     u3201 0CAE  
                   u3121 0C5A                     u3041 0C1C                     u4002 0F16  
                   u3210 0CBC                     u3130 0C61                     u4003 0F1D  
                   u3211 0CBB                     u3131 0C60                     u3300 001B  
                   u3220 1C1C                     u4100 0F8D                     u3140 0C73  
                   u3060 0C33                     u3301 001A                     u3221 1C1B  
                   u4101 0F8C                     u3141 0C72                     u3061 0C32  
                   u3310 0037                     u4110 0F9C                     u4030 0F41  
                   u3150 0C82                     u3070 0C38                     u3311 0036  
                   u4031 0F40                     u4015 0F1F                     u3071 0C37  
                   u3055 0C28                     u3320 0043                     u3240 1C30  
                   u4120 0FB9                     u3160 0C91                     u3080 0C43  
                   u3400 1D6E                     u4200 1E7B                     u5000 1683  
                   u3321 0042                     u3241 1C2F                     u4121 0FB8  
                   u4025 0F36                     u3161 0C90                     u3081 0C42  
                   u3401 1D6D                     u4201 1E7A                     u5001 1682  
                   u4130 0FD3                     u4050 0F55                     u3170 0C98  
                   u3090 0C49                     u3410 1D75                     u4210 1E8B  
                   u3250 1C5F                     u5010 168A                     u3331 0052  
                   u3235 1C23                     u4131 0FD2                     u4115 0F97  
                   u4051 0F54                     u3171 0C97                     u3155 0C7D  
                   u3091 0C48                     u3411 1D74                     u4211 1E8A  
                   u3251 1C5E                     u5011 1689                     u3500 08B7  
                   u3340 006B                     u3332 0053                     u4140 0FEF  
                   u4060 0F5A                     u3180 0C9D                     u4220 1E99  
                   u4300 119D                     u2700 1EB8                     u3260 1BC5  
                   u5100 16FE                     u5020 1699                     u3501 08B6  
                   u3341 006A                     u3333 0058                     u4141 0FEE  
                   u4125 0FB5                     u4061 0F59                     u4045 0F44  
                   u3181 0C9C                     u4301 119C                     u2701 1EB7  
                   u3261 1BC4                     u5101 16FD                     u5021 1698  
                   u3510 08D5                     u3270 1CAD                     u3334 0059  
                   u4070 0F6E                     u3190 0CAA                     u3430 1D85  
                   u4230 1EA5                     u4310 11AC                     u2710 1EBE  
                   u4150 1CED                     u5110 1705                     u5030 16A0  
                   u3511 08D4                     u3271 1CAC                     u3351 007A  
                   u3335 005E                     u4135 0FCF                     u4071 0F6D  
                   u3191 0CA9                     u3431 1D84                     u4231 1EA3  
                   u2711 1EBD                     u4151 1CEC                     u5111 1704  
                   u5031 169F                     u3520 08DB                     u3280 1CC9  
                   u3360 00A5                     u3352 007B                     u3336 005F  
                   u4080 0F75                     u2800 0AAD                     u3440 1D8C  
                   u4240 1EA6                     u4320 11B7                     u2720 1EDD  
                   u4160 1D17                     u4400 1295                     u5200 1779  
                   u5120 1714                     u5040 16AF                     u3521 08DA  
                   u3281 1CC8                     u3361 00A4                     u3353 0080  
                   u4081 0F74                     u2801 0AAC                     u3441 1D8B  
                   u3425 1D77                     u4225 1E94                     u4321 11B6  
                   u2721 1EDC                     u4161 1D16                     u4401 1294  
                   u5201 1778                     u5121 1713                     u5041 16AE  
                   u3610 0983                     u3530 08E0                     u3290 1CE3  
                   u3354 0081                     u4090 0F7B                     u3370 1B14  
                   u2810 0AB3                     u4170 1E53                     u4250 1B28  
                   u2730 1F0F                     u4410 129A                     u5210 178D  
                   u5130 1728                     u5050 16C3                     u3611 0982  
                   u3531 08DF                     u3291 1CE2                     u3355 0086  
                   u4091 0F7A                     u3371 1B13                     u2811 0AB2  
                   u4331 11C0                     u4315 11A7                     u4251 1B27  
                   u2731 1F0E                     u4411 1299                     u5211 178C  
                   u5131 1727                     u5051 16C2                     u3700 09E4  
                   u3620 0998                     u3540 08FB                     u3356 0087  
                   u2820 0AB8                     u3460 1D9D                     u3380 1D43  
                   u4180 1E62                     u4340 11ED                     u4332 11C7  
                   u4260 114A                     u2740 1F30                     u4420 12B8  
                   u5300 147D                     u5220 179C                     u5140 1737  
                   u5060 16D2                     u3701 09E3                     u3605 096A  
                   u3541 08FA                     u3365 00A1                     u2821 0AB7  
                   u3461 1D9C                     u3381 1D42                     u4181 1E61  
                   u4333 11CE                     u4165 1D13                     u4501 01DA  
                   u4421 12B7                     u5301 147C                     u5221 179B  
                   u5141 1736                     u5061 16D1                     u3710 09EB  
                   u3630 09A0                     u3550 0917                     u2910 0B4A  
                   u2830 0AD1                     u3470 1DA2                     u3390 1D5A  
                   u4190 1E70                     u4350 11F8                     u4270 1168  
                   u2750 1C05                     u4510 0215                     u4502 01DD  
                   u4430 12BF                     u5310 148B                     u5230 17A3  
                   u5150 173E                     u5070 16D9                     u3711 09EA  
                   u3631 099F                     u3615 097F                     u3551 0916  
                   u3295 1CDF                     u2911 0B49                     u2831 0AD0  
                   u3471 1DA1                     u3455 1D8F                     u4175 1E4E  
                   u4351 11F7                     u4271 1167                     u2735 1F0B  
                   u2751 1C04                     u4511 0214                     u4503 01E4  
                   u4431 12BE                     u5311 148A                     u5231 17A2  
                   u5151 173D                     u5071 16D8                     u3720 09F1  
                   u3640 09A8                     u3560 0951                     u3480 08AC  
                   u3800 0CD7                     u2920 0B4E                     u2840 0AD5  
                   u2760 0A7C                     u4360 120F                     u4280 116F  
                   u4600 04A5                     u4504 01E7                     u4440 131C  
                   u5240 17B2                     u5160 174D                     u5080 16E8  
                   u5320 1B66                     u3721 09F0                     u3641 09A7  
                   u3625 098B                     u3561 0950                     u3481 08AB  
                   u3801 0CD6                     u2921 0B4D                     u2905 0B39  
                   u2841 0AD4                     u2761 0A7B                     u4345 11E8  
                   u4281 116E                     u4265 1145                     u4601 04A4  
                   u4521 026A                     u4513 0211                     u4505 01EE  
                   u4441 1319                     u5241 17B1                     u5161 174C  
                   u5081 16E7                     u5321 1B65                     u3730 0A03  
                   u3626 098C                     u3490 08B2                     u3810 0CF4  
                   u2930 0B53                     u2850 0B0D                     u2770 0A82  
                   u4370 121A                     u4290 117F                     u4610 04CB  
                   u4530 02A5                     u4522 026D                     u4506 01F1  
                   u4450 1323                     u5250 17B9                     u5170 1754  
                   u5090 16EF                     u5330 14DB                     u3731 0A02  
                   u3627 0991                     u3491 08B1                     u3811 0CF3  
                   u2931 0B52                     u2851 0B0C                     u2771 0A81  
                   u3395 1D55                     u4195 1E6B                     u4371 1219  
                   u4275 1164                     u4611 04CA                     u4531 02A4  
                   u4523 0274                     u4451 1322                     u5251 17B8  
                   u5171 1753                     u5091 16EE                     u5331 14DA  
                   u3740 0A12                     u3660 09B7                     u3628 0992  
                   u3820 0CFA                     u2860 0B18                     u2780 0A87  
                   u4380 1BA4                     u4700 0760                     u4620 04D1  
                   u4540 02DF                     u4524 0277                     u4460 00CE  
                   u5260 17C8                     u5180 1763                     u5340 1518  
                   u3661 09B6                     u3629 0997                     u3821 0CF9  
                   u2941 0B65                     u2861 0B16                     u2781 0A86  
                   u4365 120A                     u4381 1BA3                     u4701 075F  
                   u4621 04D0                     u4541 02DE                     u4533 02A1  
                   u4525 027E                     u4461 00CD                     u5261 17C7  
                   u5181 1762                     u3750 0A2F                     u3590 0967  
                   u3830 0CFF                     u2950 0B77                     u2942 0B6C  
                   u2870 0B19                     u2790 0AA4                     u4710 0799  
                   u4630 0574                     u4550 02EB                     u4526 0281  
                   u4390 126D                     u5270 17CF                     u5190 176A  
                   u5350 15E3                     u3751 0A2E                     u3655 09AC  
                   u3591 0966                     u3575 0953                     u3911 0DFE  
                   u3831 0CFE                     u2951 0B76                     u2943 0B73  
                   u2855 0B09                     u2791 0AA3                     u4295 117A  
                   u4711 0797                     u4631 0573                     u4551 02EA  
                   u4471 0141                     u4391 126C                     u5271 17CE  
                   u5191 1769                     u5351 15E2                     u5407 14E3  
                   u3760 0A4C                     u3680 09CB                     u3912 0E05  
                   u3840 0D16                     u2960 0B7B                     u2880 0B29  
                   u4720 079A                     u4640 05C1                     u4560 0304  
                   u4480 017C                     u4472 0144                     u4800 085D  
                   u5280 17DE                     u5360 15EA                     u3761 0A4B  
                   u3745 0A0D                     u3681 09CA                     u3585 095C  
                   u3921 0E29                     u3913 0E0C                     u3905 0DDA  
                   u3841 0D15                     u2961 0B7A                     u2881 0B28  
                   u4705 075C                     u4641 05C0                     u4561 0303  
                   u4481 017B                     u4473 014B                     u4801 085C  
                   u5281 17DD                     u5417 1E1E                     u5361 15E9  
                   u3770 0A61                     u3690 09D0                     u3922 0E30  
                   u3850 0D1B                     u2970 0B88                     u2890 0B36  
                   u4730 07AD                     u4650 0633                     u4570 0308  
                   u4490 01B5                     u4474 014E                     u4810 0861  
                   u5290 17FE                     u5370 1612                     u3771 0A60  
                   u3755 0A2B                     u3691 09CF                     u3675 09BA  
                   u3923 0E37                     u3851 0D1A                     u2971 0B87  
                   u2891 0B35                     u4731 07AC                     u4651 0632  
                   u4571 0307                     u4491 01B4                     u4483 0178  
                   u4475 0155                     u4811 0860                     u5291 17FD  
                   u5507 16C7                     u5427 1B3E                     u5371 1611  
                   u3780 0CCC                     u4660 0654                     u4580 0318  
                   u4476 0158                     u4740 1053                     u4820 0883  
                   u3765 0A48                     u3941 0E5D                     u3861 0D68  
                   u3781 0CCB                     u4661 0653                     u4581 0317  
                   u4741 1052                     u4821 0882                     u5517 16DD  
                   u5437 1B48                     u3942 0E64                     u3862 0D6F  
                   u3790 0CD2                     u2990 0BAB                     u4670 0658  
                   u4590 042F                     u4750 108F                     u4910 1FC3  
                   u4830 1F52                     u3951 0E88                     u3943 0E6B  
                   u3935 0E39                     u3871 0D84                     u3863 0D76  
                   u3791 0CD1                     u2991 0BAA                     u4671 0657  
                   u4655 062F                     u4591 042E                     u4751 108E  
                   u5607 1791                     u5527 16F3                     u5447 1650  
                   u4911 1FC2                     u4831 1F51                     u3952 0E8F  
                   u3872 0D8B                     u4680 068B                     u4760 1035  
                   u4920 1FC9                     u4840 1F56                     u3961 0EB3  
                   u3953 0E96                     u3881 0DAE                     u3873 0D92  
                   u2993 0BA7                     u2985 0B8B                     u4681 068A  
                   u4761 1034                     u4825 087F                     u5617 17A7  
                   u5537 1709                     u5457 1662                     u4921 1FC8  
                   u4905 1FB8                     u4841 1F55                     u5385 1617  
                   u3970 0EDB                     u3962 0EBA                     u3882 0DB5  
                   u4690 0751                     u4770 1C98                     u4930 1FCD  
                   u4850 1F76                     u3963 0EC1                     u3891 0DCA  
                   u3883 0DBC                     u4691 0750                     u4595 042B  
                   u5627 17BD                     u5547 171B                     u5467 1678  
                   u4771 1C97                     u4931 1FCC                     u4851 1F75  
                   u3892 0DD1                     u4780 080F                     u4940 1FE2  
                   u3981 0EE7                     u3893 0DD8                     u4781 080E  
                   u5637 17D3                     u5557 172C                     u5477 168E  
                   u5397 14BE                     u3990 0F03                     u3982 0EEE  
                   u4790 0825                     u4950 1FF2                     u4870 1F93  
                   u3983 0EF5                     u3975 0ED6                     u4695 074D  
                   u4791 0824                     u5647 17E5                     u5567 1742  
                   u5487 16A4                     u4775 1C94                     u4951 1FF1  
                   u4871 1F92                     u4960 1FF6                     u5577 1758  
                   u5497 16B6                     u4961 1FF5                     u4945 1FDD  
                   u4865 1F85                     u4970 165E                     u4890 1FB3  
                   u3995 0EFE                     u5587 176E                     u4971 165D  
                   u4891 1FB2                     u4980 166D                     u5597 1780  
                   u4981 166C                     u4885 1FA5                     u4990 1674  
                   u4991 1673                     _dbuf 0110                     _labs 1B24  
                   _main 149C                     _prec 00ED                     _nout 01A0  
                   pad@i 002D                     pad@p 002B              main@valueNo 01C9  
                   btemp 007E            ___fpclassifyf 1E25             _snprintf$715 00D4  
                   start 0000          ___fldiv@new_exp 0025                    ??_pad 007D  
          ___fltol@sign1 0078                    ?_labs 0070          __end_of___fladd 0CBE  
                  ?_main 0070          __end_of___fldiv 0A6E          __end_of___flneg 1B17  
                  STR_10 1833                    STR_11 182D                    STR_12 1827  
                  STR_20 1810                    STR_13 1835                    STR_14 181F  
                  STR_15 1839                    STR_23 1814                    STR_16 181D  
                  STR_17 181B                    STR_18 181C                    STR_19 1818  
        __end_of___flmul 1000          __end_of___flsub 1BEA          __end_of___fltol 1DAE  
           vfpfcnvrt@fmt 005E                    _PORTB 0006                    _TRISB 0086  
           main@newInput 01D3                    _flags 00EF                    _errno 01A2  
                  _fputc 1EB2                    _fputs 1C35             main@operator 01C8  
                  labs@a 0070                    pad@fp 0028                    _width 00EB  
                  _putch 0004                    main@x 01C4                    pclath 000A  
                  status 0003                    wtemp0 007E           ?___fpclassifyf 0070  
     sendCommand@command 0072          __initialization 07E4             __end_of_labs 1B39  
           __end_of_main 1648             ?_sendCommand 0070                   ??_labs 0074  
                 ??_main 00E8                   ?_fputc 0070                   ?_fputs 0020  
                 ?_putch 0070         __end_of___xxtofl 2000         __end_of_getInput 1800  
           vfprintf@cfmt 006C                   ___flge 0005                   ___fleq 1C99  
              ??___fladd 003D                ??___fldiv 0078                ??___flneg 0074  
              ??___flmul 0079                ??___flsub 007E                ??___fltol 0074  
                 _efgtoa 122B                   _floorf 111C                   _memcpy 1B84  
                 _memset 1B4E                   pad@buf 002A         __end_of_setDigit 1E25  
                 _strcpy 1BA5                   _strlen 1BEA                   fputc@c 0070  
                 fputs@c 0025                   fputs@i 0026                   fputs@s 0020  
        ___fpclassifyf@e 0020          ___fpclassifyf@u 0022          ___fpclassifyf@x 0070  
                 putch@c 0070         __end_of_vfprintf 1042         __end_of_snprintf 089E  
             ___flge@ff1 0035               ___flge@ff2 0039          ??___fpclassifyf 0074  
           ___xxtofl@arg 007A             ___xxtofl@exp 0079             ___xxtofl@val 0070  
             ___fleq@ff1 0070               ___fleq@ff2 0074  __end_of__initialization 07FC  
             ___flneg@f1 0070               ___fltol@f1 0070           __pcstackCOMMON 0070  
          __end_of_fputc 1F4C            __end_of_fputs 1C60            __end_of_putch 0005  
           ??_LCDdisplay 0076                  ??_fputc 0074                  ??_fputs 0023  
                ??_putch 0070               __pbssBANK1 00EB               __pbssBANK2 0110  
             __pbssBANK3 0190        __end_of__Umul8_16 1C35               _efgtoa$802 00A6  
             __pmaintext 149C                  ?___flge 0035                  ?___fleq 0070  
     __end_of_LCDdisplay 1C99                  ?_efgtoa 0051                  ?_floorf 002D  
                ?_memcpy 0070                  ?_memset 0070                  ?_strcpy 0070  
                ?_strlen 0070                ?___xxtofl 0070                ?_getInput 0070  
      __end_of_calculate 149C               __stringtab 1800                ?_setDigit 0049  
             calculate@x 00E6                  ___fladd 0A6E                  ___fldiv 089E  
                ___flneg 1B0C                  ___flmul 0CBE                  ___flsub 1BC6  
                ___fltol 1D3A                ?_vfprintf 0068                ?_snprintf 00CC  
                __ptext1 1DAE                  __ptext2 1F4C                  __ptext3 1C60  
                __ptext4 1B67                  __ptext5 1B17                  __ptext6 1B39  
                __ptext7 1B4E                  __ptext8 1648                  __ptext9 1340  
             ??___xxtofl 0074                  efgtoa@c 0057                  efgtoa@d 00AB  
                efgtoa@e 00AF                  efgtoa@f 0053                  efgtoa@g 00C4  
                efgtoa@h 00B9                  efgtoa@i 00B7                  efgtoa@l 00BD  
                efgtoa@m 00AD                  efgtoa@n 00C2                  efgtoa@p 00A2  
                efgtoa@t 00A4                  efgtoa@u 00C8                  efgtoa@w 00B1  
             ??_getInput 0074                  clrloop0 1B05     end_of_initialization 07FC  
                floorf@e 003B                  floorf@m 0037                  floorf@u 003D  
                floorf@x 002D        __end_of_selectRow 1B84                  memcpy@d 0075  
                memcpy@n 0072                  memcpy@s 0076                  fputc@fp 0072  
                memset@c 0071                  memset@n 0073                  memset@p 0075  
                fputs@fp 0021               ??_setDigit 004B        __end_of_vfpfcnvrt 111C  
             efgtoa@mode 00A9               efgtoa@sign 00C1                  psplit$0 19002D  
       vfpfcnvrt@convarg 0062               ??_vfprintf 007E               ??_snprintf 006D  
                strcpy@d 0075                  strlen@a 0072                  strlen@s 0070  
              _PORTCbits 0007                _PORTDbits 0008              ___fladd@grs 0048  
          ___xxtofl@sign 0078                _TRISCbits 0087                _TRISDbits 0088  
            ___fldiv@grs 0027              ___fldiv@rem 0020            ?_toggleEnable 0070  
            ___flmul@grs 0029               main@values 01CB               main@output 01B4  
         __end_of___flge 00A9           __end_of___fleq 1CE7              vfpfcnvrt@ap 005F  
            vfpfcnvrt@cp 0067              vfpfcnvrt@fp 005C           __end_of_efgtoa 07E4  
         __end_of_floorf 122B           __end_of_memcpy 1BA5               floorf@F521 0198  
         __end_of_memset 1B67           __end_of_strcpy 1BC6           __end_of_strlen 1C0E  
    start_initialization 07E4           ??_toggleEnable 0070              __end_of_pad 1D3A  
  __end_of___fpclassifyf 1EB2              vfprintf@fmt 006A                 ??___flge 003D  
               ??___fleq 0078                 ??_efgtoa 0058                __Umul8_16 1C0E  
               ??_floorf 0031                 ??_memcpy 0074                 ??_memset 0075  
             memset@dest 0070                 ??_strcpy 0073                 ??_strlen 0072  
              ___fladd@a 0039                ___fladd@b 0035                ___fldiv@a 0070  
              ___fldiv@b 0074                ___flmul@a 0024                ___flmul@b 0020  
              ___flsub@a 0049                ___flsub@b 004D                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0            __pcstackBANK3 01B4  
            snprintf@cnt 00D7              snprintf@fmt 00CF           getInput@output 0077  
              _calculate 1340            LCDdisplay@ind 0078                _main$1087 01C6  
               ?___fladd 0035                 ?___fldiv 0070                 ?___flneg 0070  
               ?___flmul 0020                 ?___flsub 0049                 ?___fltol 0070  
             ?__Umul8_16 0070            ??_sendCommand 0072                __pstrings 1800  
             pnum$text13 0019               ?_calculate 00E4                clear_ram0 1B04  
              _selectRow 1B67          calculate@values 00E4          calculate@result 01A4  
   __end_of_toggleEnable 1B4E                main@F1517 0190                _vfpfcnvrt 1042  
            __stringbase 180F             selectRow@row 0073      __end_of_sendCommand 1B24  
             vfpfcnvrt@c 0066               ?_selectRow 0073                memcpy@tmp 0074  
             vfprintf@ap 006B               vfprintf@fp 0068              ??__Umul8_16 0072  
             ?_vfpfcnvrt 005C               snprintf@ap 00D6       __end_of__stringtab 1810  
     ___fpclassifyf@F465 019C                 ___xxtofl 1F4C                 _getInput 1648  
               __ptext10 0804                 __ptext11 1003                 __ptext20 1B84  
               __ptext12 1042                 __ptext21 1B24                 __ptext13 122B  
               __ptext30 0005                 __ptext22 111C                 __ptext14 1BA5  
               __ptext31 1C99                 __ptext23 1E25                 __ptext15 1CE7  
               __ptext32 089E                 __ptext24 1D3A                 __ptext16 1BEA  
               __ptext25 1BC6                 __ptext17 1C35                 __ptext26 0A6E  
               __ptext18 1EB2                 __ptext27 1B0C                 __ptext19 0004  
               __ptext28 0CBE                 __ptext29 1C0E               strcpy@dest 0070  
            ??_calculate 007E                 _setDigit 1DAE                 efgtoa@fp 0051  
               efgtoa@ne 00A0                 efgtoa@pp 00A8                 efgtoa@ou 00B3  
     pnum$text13_split_1 002D                 _vfprintf 1003                 _snprintf 0804  
            _sendCommand 1B17                 memcpy@d1 0070                 memcpy@s1 0071  
             _LCDdisplay 1C60        calculate@operator 00E5                snprintf@f 00D9  
              snprintf@n 00CD                snprintf@s 00CC                strcpy@src 0071  
            ??_selectRow 0075                stringcode 180A              efgtoa@nmode 00AA  
            ??_vfpfcnvrt 0060     LCDdisplay@lineLength 0076   __Umul8_16@multiplicand 0070  
               stringdir 180A                 stringtab 1800             _toggleEnable 1B39  
          ___fladd@signs 0045             ___fladd@aexp 0046             ___fladd@bexp 0047  
   __Umul8_16@multiplier 0078        __Umul8_16@product 0074  

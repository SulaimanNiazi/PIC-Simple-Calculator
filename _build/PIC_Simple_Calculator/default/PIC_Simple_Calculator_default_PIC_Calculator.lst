

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Feb 23 15:02:44 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,space=0,delta=2
    10                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
    15                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,space=0,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,space=0,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,space=0,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,space=0,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,space=0,merge=1,delta=2,group=3
    24                           	psect	text10,local,class=CODE,space=0,merge=1,delta=2,group=1
    25                           	psect	text11,local,class=CODE,space=0,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,space=0,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,space=0,merge=1,delta=2,group=3
    28                           	psect	text14,local,class=CODE,space=0,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,space=0,merge=1,delta=2,group=3
    30                           	psect	text16,local,class=CODE,space=0,merge=1,delta=2,group=3
    31                           	psect	text17,local,class=CODE,space=0,merge=1,delta=2,group=3
    32                           	psect	text18,local,class=CODE,space=0,merge=1,delta=2,group=3
    33                           	psect	text19,local,class=CODE,space=0,merge=1,delta=2,group=3
    34                           	psect	text20,local,class=CODE,space=0,merge=1,delta=2,group=3
    35                           	psect	text21,local,class=CODE,space=0,merge=1,delta=2,group=3
    36                           	psect	text22,local,class=CODE,space=0,merge=1,delta=2,group=3
    37                           	psect	text23,local,class=CODE,space=0,merge=1,delta=2,group=2
    38                           	psect	text24,local,class=CODE,space=0,merge=1,delta=2,group=2
    39                           	psect	text25,local,class=CODE,space=0,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,space=0,merge=1,delta=2,group=2
    41                           	psect	text27,local,class=CODE,space=0,merge=1,delta=2,group=2
    42                           	psect	text28,local,class=CODE,space=0,merge=1,delta=2,group=2
    43                           	psect	text29,local,class=CODE,space=0,merge=1,delta=2,group=2
    44                           	psect	text30,local,class=CODE,space=0,merge=1,delta=2,group=2
    45                           	psect	text31,local,class=CODE,space=0,merge=1,delta=2,group=2
    46                           	psect	text12_split_1,local,class=CODE,space=0,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48     0000                     
    49                           ; Generated 12/10/2023 GMT
    50                           ; 
    51                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution. Publication is not required when
    65                           ;        this file is used in an embedded application.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F877A Definitions
    81                           ; 
    82                           ; SFR Addresses
    83     0004                     fsr             equ	4
    84     0004                     fsr0            equ	4
    85     0000                     indf            equ	0
    86     0000                     indf0           equ	0
    87     0002                     pc              equ	2
    88     0002                     pcl             equ	2
    89     000A                     pclath          equ	10
    90     0003                     status          equ	3
    91     0000                     INDF            equ	0	;# 
    92     0001                     TMR0            equ	1	;# 
    93     0002                     PCL             equ	2	;# 
    94     0003                     STATUS          equ	3	;# 
    95     0004                     FSR             equ	4	;# 
    96     0005                     PORTA           equ	5	;# 
    97     0006                     PORTB           equ	6	;# 
    98     0007                     PORTC           equ	7	;# 
    99     0008                     PORTD           equ	8	;# 
   100     0009                     PORTE           equ	9	;# 
   101     000A                     PCLATH          equ	10	;# 
   102     000B                     INTCON          equ	11	;# 
   103     000C                     PIR1            equ	12	;# 
   104     000D                     PIR2            equ	13	;# 
   105     000E                     TMR1            equ	14	;# 
   106     000E                     TMR1L           equ	14	;# 
   107     000F                     TMR1H           equ	15	;# 
   108     0010                     T1CON           equ	16	;# 
   109     0011                     TMR2            equ	17	;# 
   110     0012                     T2CON           equ	18	;# 
   111     0013                     SSPBUF          equ	19	;# 
   112     0014                     SSPCON          equ	20	;# 
   113     0015                     CCPR1           equ	21	;# 
   114     0015                     CCPR1L          equ	21	;# 
   115     0016                     CCPR1H          equ	22	;# 
   116     0017                     CCP1CON         equ	23	;# 
   117     0018                     RCSTA           equ	24	;# 
   118     0019                     TXREG           equ	25	;# 
   119     001A                     RCREG           equ	26	;# 
   120     001B                     CCPR2           equ	27	;# 
   121     001B                     CCPR2L          equ	27	;# 
   122     001C                     CCPR2H          equ	28	;# 
   123     001D                     CCP2CON         equ	29	;# 
   124     001E                     ADRESH          equ	30	;# 
   125     001F                     ADCON0          equ	31	;# 
   126     0081                     OPTION_REG      equ	129	;# 
   127     0085                     TRISA           equ	133	;# 
   128     0086                     TRISB           equ	134	;# 
   129     0087                     TRISC           equ	135	;# 
   130     0088                     TRISD           equ	136	;# 
   131     0089                     TRISE           equ	137	;# 
   132     008C                     PIE1            equ	140	;# 
   133     008D                     PIE2            equ	141	;# 
   134     008E                     PCON            equ	142	;# 
   135     0091                     SSPCON2         equ	145	;# 
   136     0092                     PR2             equ	146	;# 
   137     0093                     SSPADD          equ	147	;# 
   138     0094                     SSPSTAT         equ	148	;# 
   139     0098                     TXSTA           equ	152	;# 
   140     0099                     SPBRG           equ	153	;# 
   141     009C                     CMCON           equ	156	;# 
   142     009D                     CVRCON          equ	157	;# 
   143     009E                     ADRESL          equ	158	;# 
   144     009F                     ADCON1          equ	159	;# 
   145     010C                     EEDATA          equ	268	;# 
   146     010D                     EEADR           equ	269	;# 
   147     010E                     EEDATH          equ	270	;# 
   148     010F                     EEADRH          equ	271	;# 
   149     018C                     EECON1          equ	396	;# 
   150     018D                     EECON2          equ	397	;# 
   151     0000                     INDF            equ	0	;# 
   152     0001                     TMR0            equ	1	;# 
   153     0002                     PCL             equ	2	;# 
   154     0003                     STATUS          equ	3	;# 
   155     0004                     FSR             equ	4	;# 
   156     0005                     PORTA           equ	5	;# 
   157     0006                     PORTB           equ	6	;# 
   158     0007                     PORTC           equ	7	;# 
   159     0008                     PORTD           equ	8	;# 
   160     0009                     PORTE           equ	9	;# 
   161     000A                     PCLATH          equ	10	;# 
   162     000B                     INTCON          equ	11	;# 
   163     000C                     PIR1            equ	12	;# 
   164     000D                     PIR2            equ	13	;# 
   165     000E                     TMR1            equ	14	;# 
   166     000E                     TMR1L           equ	14	;# 
   167     000F                     TMR1H           equ	15	;# 
   168     0010                     T1CON           equ	16	;# 
   169     0011                     TMR2            equ	17	;# 
   170     0012                     T2CON           equ	18	;# 
   171     0013                     SSPBUF          equ	19	;# 
   172     0014                     SSPCON          equ	20	;# 
   173     0015                     CCPR1           equ	21	;# 
   174     0015                     CCPR1L          equ	21	;# 
   175     0016                     CCPR1H          equ	22	;# 
   176     0017                     CCP1CON         equ	23	;# 
   177     0018                     RCSTA           equ	24	;# 
   178     0019                     TXREG           equ	25	;# 
   179     001A                     RCREG           equ	26	;# 
   180     001B                     CCPR2           equ	27	;# 
   181     001B                     CCPR2L          equ	27	;# 
   182     001C                     CCPR2H          equ	28	;# 
   183     001D                     CCP2CON         equ	29	;# 
   184     001E                     ADRESH          equ	30	;# 
   185     001F                     ADCON0          equ	31	;# 
   186     0081                     OPTION_REG      equ	129	;# 
   187     0085                     TRISA           equ	133	;# 
   188     0086                     TRISB           equ	134	;# 
   189     0087                     TRISC           equ	135	;# 
   190     0088                     TRISD           equ	136	;# 
   191     0089                     TRISE           equ	137	;# 
   192     008C                     PIE1            equ	140	;# 
   193     008D                     PIE2            equ	141	;# 
   194     008E                     PCON            equ	142	;# 
   195     0091                     SSPCON2         equ	145	;# 
   196     0092                     PR2             equ	146	;# 
   197     0093                     SSPADD          equ	147	;# 
   198     0094                     SSPSTAT         equ	148	;# 
   199     0098                     TXSTA           equ	152	;# 
   200     0099                     SPBRG           equ	153	;# 
   201     009C                     CMCON           equ	156	;# 
   202     009D                     CVRCON          equ	157	;# 
   203     009E                     ADRESL          equ	158	;# 
   204     009F                     ADCON1          equ	159	;# 
   205     010C                     EEDATA          equ	268	;# 
   206     010D                     EEADR           equ	269	;# 
   207     010E                     EEDATH          equ	270	;# 
   208     010F                     EEADRH          equ	271	;# 
   209     018C                     EECON1          equ	396	;# 
   210     018D                     EECON2          equ	397	;# 
   211     0008                     _PORTDbits      set	8
   212     0006                     _PORTB          set	6
   213     0007                     _PORTCbits      set	7
   214     0087                     _TRISCbits      set	135
   215     0086                     _TRISB          set	134
   216     0088                     _TRISDbits      set	136
   217                           
   218                           	psect	strings
   219     1800                     __pstrings:
   220     1800                     stringtab:
   221     1800                     __stringtab:
   222                           
   223                           ;	String table - string pointers are 1 byte each
   224     1800  1BFF               	btfsc	btemp+1,7
   225     1801  280A               	ljmp	stringcode
   226     1802  1383               	bcf	3,7
   227     1803  187F               	btfsc	btemp+1,0
   228     1804  1783               	bsf	3,7
   229     1805  0800               	movf	0,w
   230     1806  0A84               	incf	4,f
   231     1807  1903               	skipnz
   232     1808  0AFF               	incf	btemp+1,f
   233     1809  0008               	return
   234     180A                     stringcode:
   235     180A                     stringdir:
   236     180A  3018               	movlw	high stringdir
   237     180B  008A               	movwf	10
   238     180C  0804               	movf	4,w
   239     180D  0A84               	incf	4,f
   240     180E  0782               	addwf	2,f
   241     180F                     __stringbase:
   242     180F  3400               	retlw	0
   243     1810                     __end_of__stringtab:
   244     1810                     STR_19:
   245     1810  3469               	retlw	105	;'i'
   246     1811  346E               	retlw	110	;'n'
   247     1812  3466               	retlw	102	;'f'
   248     1813  3400               	retlw	0
   249     1814                     STR_22:
   250     1814  346E               	retlw	110	;'n'
   251     1815  3461               	retlw	97	;'a'
   252     1816  346E               	retlw	110	;'n'
   253     1817  3400               	retlw	0
   254     1818                     STR_18:
   255     1818  3425               	retlw	37	;'%'
   256     1819  3466               	retlw	102	;'f'
   257     181A  3400               	retlw	0
   258     181B                     STR_17:
   259     181B  342B               	retlw	43	;'+'
   260     181C  3400               	retlw	0
   261     181D                     STR_16:
   262     181D  342D               	retlw	45	;'-'
   263     181E  3400               	retlw	0
   264     181F                     STR_14:
   265     181F  342F               	retlw	47	;'/'
   266     1820  3400               	retlw	0
   267     1821                     STR_9:
   268     1821  3430               	retlw	48	;'0'
   269     1822  3400               	retlw	0
   270     1823                     STR_4:
   271     1823  3431               	retlw	49	;'1'
   272     1824  3400               	retlw	0
   273     1825                     STR_8:
   274     1825  3432               	retlw	50	;'2'
   275     1826  3400               	retlw	0
   276     1827                     STR_12:
   277     1827  3433               	retlw	51	;'3'
   278     1828  3400               	retlw	0
   279     1829                     STR_3:
   280     1829  3434               	retlw	52	;'4'
   281     182A  3400               	retlw	0
   282     182B                     STR_7:
   283     182B  3435               	retlw	53	;'5'
   284     182C  3400               	retlw	0
   285     182D                     STR_11:
   286     182D  3436               	retlw	54	;'6'
   287     182E  3400               	retlw	0
   288     182F                     STR_2:
   289     182F  3437               	retlw	55	;'7'
   290     1830  3400               	retlw	0
   291     1831                     STR_6:
   292     1831  3438               	retlw	56	;'8'
   293     1832  3400               	retlw	0
   294     1833                     STR_10:
   295     1833  3439               	retlw	57	;'9'
   296     1834  3400               	retlw	0
   297     1835                     STR_13:
   298     1835  343D               	retlw	61	;'='
   299     1836  3400               	retlw	0
   300     1837                     STR_5:
   301     1837  3443               	retlw	67	;'C'
   302     1838  3400               	retlw	0
   303     1839                     STR_15:
   304     1839  3478               	retlw	120	;'x'
   305     183A  3400               	retlw	0
   306     1814                     STR_23          equ	STR_22
   307     1814                     STR_24          equ	STR_22
   308     1810                     STR_20          equ	STR_19
   309     1810                     STR_21          equ	STR_19
   310     181C                     STR_1           equ	STR_17+1
   311                           
   312                           	psect	cinit
   313     07E6                     start_initialization:	
   314                           ; #config settings
   315                           
   316     07E6                     __initialization:
   317                           
   318                           ; Clear objects allocated to BANK1
   319     07E6  1683               	bsf	3,5	;RP0=1, select bank1
   320     07E7  1303               	bcf	3,6	;RP1=0, select bank1
   321     07E8  01EC               	clrf	__pbssBANK1& (0+127)
   322     07E9  01ED               	clrf	(__pbssBANK1+1)& (0+127)
   323     07EA  01EE               	clrf	(__pbssBANK1+2)& (0+127)
   324                           
   325                           ; Clear objects allocated to BANK3
   326     07EB  1783               	bsf	3,7	;select IRP bank2
   327     07EC  3090               	movlw	low __pbssBANK3
   328     07ED  0084               	movwf	4
   329     07EE  30B6               	movlw	low (__pbssBANK3+38)
   330     07EF  160A  158A  22B7  120A  118A  	fcall	clear_ram0
   331                           
   332                           ; Clear objects allocated to BANK2
   333     07F4  3010               	movlw	low __pbssBANK2
   334     07F5  0084               	movwf	4
   335     07F6  3060               	movlw	low (__pbssBANK2+80)
   336     07F7  160A  158A  22B7  120A  118A  	fcall	clear_ram0
   337     07FC                     end_of_initialization:	
   338                           ;End of C runtime variable initialization code
   339                           
   340     07FC                     __end_of__initialization:
   341     07FC  0183               	clrf	3
   342     07FD  160A  118A  2E42   	ljmp	_main	;jump to C main() function
   343                           
   344                           	psect	bssBANK1
   345     00EC                     __pbssBANK1:
   346     00EC                     _prec:
   347     00EC                     	ds	2
   348     00EE                     _flags:
   349     00EE                     	ds	1
   350                           
   351                           	psect	bssBANK3
   352     0190                     __pbssBANK3:
   353     0190                     main@F1519:
   354     0190                     	ds	8
   355     0198                     floorf@F521:
   356     0198                     	ds	4
   357     019C                     ___fpclassifyf@F465:
   358     019C                     	ds	4
   359     01A0                     _nout:
   360     01A0                     	ds	2
   361     01A2                     _width:
   362     01A2                     	ds	2
   363     01A4                     _errno:
   364     01A4                     	ds	2
   365     01A6                     calculate@result:
   366     01A6                     	ds	16
   367                           
   368                           	psect	bssBANK2
   369     0110                     __pbssBANK2:
   370     0110                     _dbuf:
   371     0110                     	ds	80
   372                           
   373                           	psect	clrtext
   374     1AB7                     clear_ram0:	
   375                           ;	Called with FSR containing the base address, and
   376                           ;	W with the last address+1
   377                           
   378     1AB7  0064               	clrwdt	;clear the watchdog before getting into this loop
   379     1AB8                     clrloop0:
   380     1AB8  0180               	clrf	0	;clear RAM location pointed to by FSR
   381     1AB9  0A84               	incf	4,f	;increment pointer
   382     1ABA  0604               	xorwf	4,w	;XOR with final address
   383     1ABB  1903               	btfsc	3,2	;have we reached the end yet?
   384     1ABC  3400               	retlw	0	;all done for this memory range, return
   385     1ABD  0604               	xorwf	4,w	;XOR again to restore value
   386     1ABE  2AB8               	goto	clrloop0	;do the next byte
   387                           
   388                           	psect	cstackBANK3
   389     01B6                     __pcstackBANK3:
   390     01B6                     main@output:
   391                           
   392                           ; 16 bytes @ 0x0
   393     01B6                     	ds	16
   394     01C6                     main@x:
   395                           
   396                           ; 2 bytes @ 0x10
   397     01C6                     	ds	2
   398     01C8                     _main$1077:
   399                           
   400                           ; 1 bytes @ 0x12
   401     01C8                     	ds	1
   402     01C9                     main@positive:
   403                           
   404                           ; 1 bytes @ 0x13
   405     01C9                     	ds	1
   406     01CA                     main@operator:
   407                           
   408                           ; 1 bytes @ 0x14
   409     01CA                     	ds	1
   410     01CB                     main@valuesCompleted:
   411                           
   412                           ; 2 bytes @ 0x15
   413     01CB                     	ds	2
   414     01CD                     main@values:
   415                           
   416                           ; 8 bytes @ 0x17
   417     01CD                     	ds	8
   418     01D5                     main@newInput:
   419                           
   420                           ; 1 bytes @ 0x1F
   421     01D5                     	ds	1
   422                           
   423                           	psect	cstackBANK1
   424     00A0                     __pcstackBANK1:
   425     00A0                     efgtoa@ne:
   426                           
   427                           ; 2 bytes @ 0x0
   428     00A0                     	ds	2
   429     00A2                     efgtoa@p:
   430                           
   431                           ; 2 bytes @ 0x2
   432     00A2                     	ds	2
   433     00A4                     efgtoa@t:
   434                           
   435                           ; 2 bytes @ 0x4
   436     00A4                     	ds	2
   437     00A6                     _efgtoa$792:
   438                           
   439                           ; 2 bytes @ 0x6
   440     00A6                     	ds	2
   441     00A8                     efgtoa@pp:
   442                           
   443                           ; 1 bytes @ 0x8
   444     00A8                     	ds	1
   445     00A9                     efgtoa@mode:
   446                           
   447                           ; 1 bytes @ 0x9
   448     00A9                     	ds	1
   449     00AA                     efgtoa@nmode:
   450                           
   451                           ; 1 bytes @ 0xA
   452     00AA                     	ds	1
   453     00AB                     efgtoa@d:
   454                           
   455                           ; 2 bytes @ 0xB
   456     00AB                     	ds	2
   457     00AD                     efgtoa@m:
   458                           
   459                           ; 2 bytes @ 0xD
   460     00AD                     	ds	2
   461     00AF                     efgtoa@e:
   462                           
   463                           ; 2 bytes @ 0xF
   464     00AF                     	ds	2
   465     00B1                     efgtoa@w:
   466                           
   467                           ; 2 bytes @ 0x11
   468     00B1                     	ds	2
   469     00B3                     efgtoa@ou:
   470                           
   471                           ; 4 bytes @ 0x13
   472     00B3                     	ds	4
   473     00B7                     efgtoa@i:
   474                           
   475                           ; 2 bytes @ 0x17
   476     00B7                     	ds	2
   477     00B9                     efgtoa@h:
   478                           
   479                           ; 4 bytes @ 0x19
   480     00B9                     	ds	4
   481     00BD                     efgtoa@l:
   482                           
   483                           ; 4 bytes @ 0x1D
   484     00BD                     	ds	4
   485     00C1                     efgtoa@sign:
   486                           
   487                           ; 1 bytes @ 0x21
   488     00C1                     	ds	1
   489     00C2                     efgtoa@n:
   490                           
   491                           ; 2 bytes @ 0x22
   492     00C2                     	ds	2
   493     00C4                     efgtoa@g:
   494                           
   495                           ; 4 bytes @ 0x24
   496     00C4                     	ds	4
   497     00C8                     efgtoa@u:
   498                           
   499                           ; 4 bytes @ 0x28
   500     00C8                     	ds	4
   501     00CC                     ?_snprintf:
   502     00CC                     snprintf@s:	
   503                           ; 2 bytes @ 0x2C
   504                           
   505                           
   506                           ; 1 bytes @ 0x2C
   507     00CC                     	ds	1
   508     00CD                     snprintf@n:
   509                           
   510                           ; 2 bytes @ 0x2D
   511     00CD                     	ds	2
   512     00CF                     snprintf@fmt:
   513                           
   514                           ; 1 bytes @ 0x2F
   515     00CF                     	ds	5
   516     00D4                     _snprintf$705:
   517                           
   518                           ; 2 bytes @ 0x34
   519     00D4                     	ds	2
   520     00D6                     snprintf@ap:
   521                           
   522                           ; 1 bytes @ 0x36
   523     00D6                     	ds	1
   524     00D7                     snprintf@cnt:
   525                           
   526                           ; 2 bytes @ 0x37
   527     00D7                     	ds	2
   528     00D9                     snprintf@f:
   529                           
   530                           ; 11 bytes @ 0x39
   531     00D9                     	ds	11
   532     00E4                     ?_calculate:
   533     00E4                     calculate@num1:	
   534                           ; 1 bytes @ 0x44
   535                           
   536                           
   537                           ; 1 bytes @ 0x44
   538     00E4                     	ds	1
   539     00E5                     calculate@operator:
   540                           
   541                           ; 1 bytes @ 0x45
   542     00E5                     	ds	1
   543     00E6                     calculate@num2:
   544                           
   545                           ; 1 bytes @ 0x46
   546     00E6                     	ds	1
   547     00E7                     calculate@x:
   548                           
   549                           ; 2 bytes @ 0x47
   550     00E7                     	ds	2
   551     00E9                     ??_main:
   552                           
   553                           ; 1 bytes @ 0x49
   554     00E9                     	ds	3
   555                           
   556                           	psect	cstackCOMMON
   557     0070                     __pcstackCOMMON:
   558     0070                     ?_strcpy:
   559     0070                     ?_getInput:	
   560                           ; 1 bytes @ 0x0
   561                           
   562     0070                     ?_memcpy:	
   563                           ; 1 bytes @ 0x0
   564                           
   565     0070                     ?_putch:	
   566                           ; 1 bytes @ 0x0
   567                           
   568     0070                     ?_toggleEnable:	
   569                           ; 1 bytes @ 0x0
   570                           
   571     0070                     ?_sendCommand:	
   572                           ; 1 bytes @ 0x0
   573                           
   574     0070                     ?___fleq:	
   575                           ; 1 bytes @ 0x0
   576                           
   577     0070                     ?_strlen:	
   578                           ; 1 bit 
   579                           
   580     0070                     ?__Umul8_16:	
   581                           ; 2 bytes @ 0x0
   582                           
   583     0070                     ?_fputc:	
   584                           ; 2 bytes @ 0x0
   585                           
   586     0070                     ?___fpclassifyf:	
   587                           ; 2 bytes @ 0x0
   588                           
   589     0070                     ?_main:	
   590                           ; 2 bytes @ 0x0
   591                           
   592     0070                     ?_labs:	
   593                           ; 2 bytes @ 0x0
   594                           
   595     0070                     ?___flneg:	
   596                           ; 4 bytes @ 0x0
   597                           
   598     0070                     ?___fltol:	
   599                           ; 4 bytes @ 0x0
   600                           
   601     0070                     ?___fldiv:	
   602                           ; 4 bytes @ 0x0
   603                           
   604     0070                     ?___xxtofl:	
   605                           ; 4 bytes @ 0x0
   606                           
   607     0070                     __Umul8_16@multiplicand:	
   608                           ; 4 bytes @ 0x0
   609                           
   610     0070                     memcpy@d1:	
   611                           ; 1 bytes @ 0x0
   612                           
   613     0070                     putch@c:	
   614                           ; 1 bytes @ 0x0
   615                           
   616     0070                     strcpy@dest:	
   617                           ; 1 bytes @ 0x0
   618                           
   619     0070                     fputc@c:	
   620                           ; 1 bytes @ 0x0
   621                           
   622     0070                     strlen@s:	
   623                           ; 2 bytes @ 0x0
   624                           
   625     0070                     ___fleq@ff1:	
   626                           ; 2 bytes @ 0x0
   627                           
   628     0070                     ___flneg@f1:	
   629                           ; 4 bytes @ 0x0
   630                           
   631     0070                     ___fltol@f1:	
   632                           ; 4 bytes @ 0x0
   633                           
   634     0070                     ___fldiv@a:	
   635                           ; 4 bytes @ 0x0
   636                           
   637     0070                     ___xxtofl@val:	
   638                           ; 4 bytes @ 0x0
   639                           
   640     0070                     ___fpclassifyf@x:	
   641                           ; 4 bytes @ 0x0
   642                           
   643     0070                     labs@a:	
   644                           ; 4 bytes @ 0x0
   645                           
   646     0070                     ??_putch:	
   647                           ; 4 bytes @ 0x0
   648                           
   649     0070                     ??_toggleEnable:	
   650                           ; 1 bytes @ 0x0
   651                           
   652                           
   653                           ; 1 bytes @ 0x0
   654     0070                     	ds	1
   655     0071                     memcpy@s1:
   656     0071                     strcpy@src:	
   657                           ; 1 bytes @ 0x1
   658                           
   659                           
   660                           ; 2 bytes @ 0x1
   661     0071                     	ds	1
   662     0072                     sendCommand@command:
   663     0072                     memcpy@n:	
   664                           ; 1 bytes @ 0x2
   665                           
   666     0072                     fputc@fp:	
   667                           ; 2 bytes @ 0x2
   668                           
   669     0072                     strlen@a:	
   670                           ; 2 bytes @ 0x2
   671                           
   672     0072                     ??_strlen:	
   673                           ; 2 bytes @ 0x2
   674                           
   675     0072                     ??__Umul8_16:	
   676                           ; 1 bytes @ 0x2
   677                           
   678     0072                     ??_sendCommand:	
   679                           ; 1 bytes @ 0x2
   680                           
   681                           
   682                           ; 1 bytes @ 0x2
   683     0072                     	ds	1
   684     0073                     ?_selectRow:
   685     0073                     selectRow@row:	
   686                           ; 1 bytes @ 0x3
   687                           
   688     0073                     ??_strcpy:	
   689                           ; 2 bytes @ 0x3
   690                           
   691                           
   692                           ; 1 bytes @ 0x3
   693     0073                     	ds	1
   694     0074                     ?_LCDdisplay:
   695     0074                     memcpy@tmp:	
   696                           ; 1 bytes @ 0x4
   697                           
   698     0074                     LCDdisplay@sentence:	
   699                           ; 1 bytes @ 0x4
   700                           
   701     0074                     __Umul8_16@product:	
   702                           ; 2 bytes @ 0x4
   703                           
   704     0074                     ___fleq@ff2:	
   705                           ; 2 bytes @ 0x4
   706                           
   707     0074                     ___fldiv@b:	
   708                           ; 4 bytes @ 0x4
   709                           
   710     0074                     ??_getInput:	
   711                           ; 4 bytes @ 0x4
   712                           
   713     0074                     ??_fputc:	
   714                           ; 1 bytes @ 0x4
   715                           
   716     0074                     ??___fpclassifyf:	
   717                           ; 1 bytes @ 0x4
   718                           
   719     0074                     ??_labs:	
   720                           ; 1 bytes @ 0x4
   721                           
   722     0074                     ??_memcpy:	
   723                           ; 1 bytes @ 0x4
   724                           
   725     0074                     ??___flneg:	
   726                           ; 1 bytes @ 0x4
   727                           
   728     0074                     ??___fltol:	
   729                           ; 1 bytes @ 0x4
   730                           
   731     0074                     ??___xxtofl:	
   732                           ; 1 bytes @ 0x4
   733                           
   734                           
   735                           ; 1 bytes @ 0x4
   736     0074                     	ds	1
   737     0075                     memcpy@d:
   738     0075                     strcpy@d:	
   739                           ; 1 bytes @ 0x5
   740                           
   741     0075                     ??_selectRow:	
   742                           ; 1 bytes @ 0x5
   743                           
   744                           
   745                           ; 1 bytes @ 0x5
   746     0075                     	ds	1
   747     0076                     memcpy@s:
   748     0076                     LCDdisplay@lineLength:	
   749                           ; 1 bytes @ 0x6
   750                           
   751     0076                     __Umul8_16@word_mpld:	
   752                           ; 2 bytes @ 0x6
   753                           
   754     0076                     ??_LCDdisplay:	
   755                           ; 2 bytes @ 0x6
   756                           
   757                           
   758                           ; 1 bytes @ 0x6
   759     0076                     	ds	1
   760     0077                     getInput@output:
   761                           
   762                           ; 1 bytes @ 0x7
   763     0077                     	ds	1
   764     0078                     ___fltol@sign1:
   765     0078                     __Umul8_16@multiplier:	
   766                           ; 1 bytes @ 0x8
   767                           
   768     0078                     ___xxtofl@sign:	
   769                           ; 1 bytes @ 0x8
   770                           
   771     0078                     LCDdisplay@ind:	
   772                           ; 1 bytes @ 0x8
   773                           
   774     0078                     ??___fleq:	
   775                           ; 2 bytes @ 0x8
   776                           
   777     0078                     ??___fldiv:	
   778                           ; 1 bytes @ 0x8
   779                           
   780                           
   781                           ; 1 bytes @ 0x8
   782     0078                     	ds	1
   783     0079                     ___fltol@exp1:
   784     0079                     ___xxtofl@exp:	
   785                           ; 1 bytes @ 0x9
   786                           
   787     0079                     ??___flmul:	
   788                           ; 1 bytes @ 0x9
   789                           
   790                           
   791                           ; 1 bytes @ 0x9
   792     0079                     	ds	1
   793     007A                     ___xxtofl@arg:
   794                           
   795                           ; 4 bytes @ 0xA
   796     007A                     	ds	3
   797     007D                     ??_pad:
   798                           
   799                           ; 1 bytes @ 0xD
   800     007D                     	ds	1
   801     007E                     ??_calculate:
   802     007E                     ??_vfprintf:	
   803                           ; 1 bytes @ 0xE
   804                           
   805     007E                     ??___flsub:	
   806                           ; 1 bytes @ 0xE
   807                           
   808                           
   809                           	psect	cstackBANK0
   810     0020                     __pcstackBANK0:	
   811                           ; 1 bytes @ 0xE
   812                           
   813     0020                     ?_fputs:
   814     0020                     ?___flmul:	
   815                           ; 2 bytes @ 0x0
   816                           
   817     0020                     fputs@s:	
   818                           ; 4 bytes @ 0x0
   819                           
   820     0020                     ___fpclassifyf@e:	
   821                           ; 1 bytes @ 0x0
   822                           
   823     0020                     ___fldiv@rem:	
   824                           ; 2 bytes @ 0x0
   825                           
   826     0020                     ___flmul@b:	
   827                           ; 4 bytes @ 0x0
   828                           
   829                           
   830                           ; 4 bytes @ 0x0
   831     0020                     	ds	1
   832     0021                     fputs@fp:
   833                           
   834                           ; 2 bytes @ 0x1
   835     0021                     	ds	1
   836     0022                     ___fpclassifyf@u:
   837                           
   838                           ; 4 bytes @ 0x2
   839     0022                     	ds	1
   840     0023                     ??_fputs:
   841                           
   842                           ; 1 bytes @ 0x3
   843     0023                     	ds	1
   844     0024                     ___fldiv@sign:
   845     0024                     ___flmul@a:	
   846                           ; 1 bytes @ 0x4
   847                           
   848                           
   849                           ; 4 bytes @ 0x4
   850     0024                     	ds	1
   851     0025                     fputs@c:
   852     0025                     ___fldiv@new_exp:	
   853                           ; 1 bytes @ 0x5
   854                           
   855                           
   856                           ; 2 bytes @ 0x5
   857     0025                     	ds	1
   858     0026                     fputs@i:
   859                           
   860                           ; 2 bytes @ 0x6
   861     0026                     	ds	1
   862     0027                     ___fldiv@grs:
   863                           
   864                           ; 4 bytes @ 0x7
   865     0027                     	ds	1
   866     0028                     ?_pad:
   867     0028                     ___flmul@sign:	
   868                           ; 2 bytes @ 0x8
   869                           
   870     0028                     pad@fp:	
   871                           ; 1 bytes @ 0x8
   872                           
   873                           
   874                           ; 2 bytes @ 0x8
   875     0028                     	ds	1
   876     0029                     ___flmul@grs:
   877                           
   878                           ; 4 bytes @ 0x9
   879     0029                     	ds	1
   880     002A                     pad@buf:
   881                           
   882                           ; 1 bytes @ 0xA
   883     002A                     	ds	1
   884     002B                     ___fldiv@bexp:
   885     002B                     pad@p:	
   886                           ; 1 bytes @ 0xB
   887                           
   888                           
   889                           ; 2 bytes @ 0xB
   890     002B                     	ds	1
   891     002C                     ___fldiv@aexp:
   892                           
   893                           ; 1 bytes @ 0xC
   894     002C                     	ds	1
   895     002D                     ?_floorf:
   896     002D                     ___flmul@aexp:	
   897                           ; 4 bytes @ 0xD
   898                           
   899     002D                     pad@i:	
   900                           ; 1 bytes @ 0xD
   901                           
   902     002D                     floorf@x:	
   903                           ; 2 bytes @ 0xD
   904                           
   905                           
   906                           ; 4 bytes @ 0xD
   907     002D                     	ds	1
   908     002E                     ___flmul@bexp:
   909                           
   910                           ; 1 bytes @ 0xE
   911     002E                     	ds	1
   912     002F                     ___flmul@prod:
   913                           
   914                           ; 4 bytes @ 0xF
   915     002F                     	ds	2
   916     0031                     ??_floorf:
   917                           
   918                           ; 1 bytes @ 0x11
   919     0031                     	ds	2
   920     0033                     ___flmul@temp:
   921                           
   922                           ; 2 bytes @ 0x13
   923     0033                     	ds	2
   924     0035                     ?___flge:
   925     0035                     ?___fladd:	
   926                           ; 1 bit 
   927                           
   928     0035                     ___flge@ff1:	
   929                           ; 4 bytes @ 0x15
   930                           
   931     0035                     ___fladd@b:	
   932                           ; 4 bytes @ 0x15
   933                           
   934                           
   935                           ; 4 bytes @ 0x15
   936     0035                     	ds	2
   937     0037                     floorf@m:
   938                           
   939                           ; 4 bytes @ 0x17
   940     0037                     	ds	2
   941     0039                     ___flge@ff2:
   942     0039                     ___fladd@a:	
   943                           ; 4 bytes @ 0x19
   944                           
   945                           
   946                           ; 4 bytes @ 0x19
   947     0039                     	ds	2
   948     003B                     floorf@e:
   949                           
   950                           ; 2 bytes @ 0x1B
   951     003B                     	ds	2
   952     003D                     floorf@u:
   953     003D                     ??___flge:	
   954                           ; 4 bytes @ 0x1D
   955                           
   956     003D                     ??___fladd:	
   957                           ; 1 bytes @ 0x1D
   958                           
   959                           
   960                           ; 1 bytes @ 0x1D
   961     003D                     	ds	8
   962     0045                     ___fladd@signs:
   963                           
   964                           ; 1 bytes @ 0x25
   965     0045                     	ds	1
   966     0046                     ___fladd@aexp:
   967                           
   968                           ; 1 bytes @ 0x26
   969     0046                     	ds	1
   970     0047                     ___fladd@bexp:
   971                           
   972                           ; 1 bytes @ 0x27
   973     0047                     	ds	1
   974     0048                     ___fladd@grs:
   975                           
   976                           ; 1 bytes @ 0x28
   977     0048                     	ds	1
   978     0049                     ?___flsub:
   979     0049                     ___flsub@a:	
   980                           ; 4 bytes @ 0x29
   981                           
   982                           
   983                           ; 4 bytes @ 0x29
   984     0049                     	ds	4
   985     004D                     ___flsub@b:
   986                           
   987                           ; 4 bytes @ 0x2D
   988     004D                     	ds	4
   989     0051                     ?_setDigit:
   990     0051                     ?_efgtoa:	
   991                           ; 1 bytes @ 0x31
   992                           
   993     0051                     setDigit@oldValue:	
   994                           ; 2 bytes @ 0x31
   995                           
   996     0051                     efgtoa@fp:	
   997                           ; 1 bytes @ 0x31
   998                           
   999                           
  1000                           ; 2 bytes @ 0x31
  1001     0051                     	ds	1
  1002     0052                     setDigit@newValue:
  1003                           
  1004                           ; 1 bytes @ 0x32
  1005     0052                     	ds	1
  1006     0053                     setDigit@positive:
  1007     0053                     efgtoa@f:	
  1008                           ; 1 bytes @ 0x33
  1009                           
  1010                           
  1011                           ; 4 bytes @ 0x33
  1012     0053                     	ds	1
  1013     0054                     ??_setDigit:
  1014                           
  1015                           ; 1 bytes @ 0x34
  1016     0054                     	ds	3
  1017     0057                     efgtoa@c:
  1018                           
  1019                           ; 1 bytes @ 0x37
  1020     0057                     	ds	1
  1021     0058                     ??_efgtoa:
  1022                           
  1023                           ; 1 bytes @ 0x38
  1024     0058                     	ds	4
  1025     005C                     ?_vfpfcnvrt:
  1026     005C                     vfpfcnvrt@fp:	
  1027                           ; 2 bytes @ 0x3C
  1028                           
  1029                           
  1030                           ; 2 bytes @ 0x3C
  1031     005C                     	ds	2
  1032     005E                     vfpfcnvrt@fmt:
  1033                           
  1034                           ; 1 bytes @ 0x3E
  1035     005E                     	ds	1
  1036     005F                     vfpfcnvrt@ap:
  1037                           
  1038                           ; 1 bytes @ 0x3F
  1039     005F                     	ds	1
  1040     0060                     ??_vfpfcnvrt:
  1041                           
  1042                           ; 1 bytes @ 0x40
  1043     0060                     	ds	2
  1044     0062                     vfpfcnvrt@convarg:
  1045                           
  1046                           ; 4 bytes @ 0x42
  1047     0062                     	ds	4
  1048     0066                     vfpfcnvrt@c:
  1049                           
  1050                           ; 1 bytes @ 0x46
  1051     0066                     	ds	1
  1052     0067                     vfpfcnvrt@cp:
  1053                           
  1054                           ; 1 bytes @ 0x47
  1055     0067                     	ds	1
  1056     0068                     ?_vfprintf:
  1057     0068                     vfprintf@fp:	
  1058                           ; 2 bytes @ 0x48
  1059                           
  1060                           
  1061                           ; 2 bytes @ 0x48
  1062     0068                     	ds	2
  1063     006A                     vfprintf@fmt:
  1064                           
  1065                           ; 1 bytes @ 0x4A
  1066     006A                     	ds	1
  1067     006B                     vfprintf@ap:
  1068                           
  1069                           ; 1 bytes @ 0x4B
  1070     006B                     	ds	1
  1071     006C                     vfprintf@cfmt:
  1072                           
  1073                           ; 1 bytes @ 0x4C
  1074     006C                     	ds	1
  1075     006D                     ??_snprintf:
  1076                           
  1077                           ; 1 bytes @ 0x4D
  1078     006D                     	ds	3
  1079                           
  1080                           	psect	maintext
  1081     1642                     __pmaintext:	
  1082 ;;
  1083 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1084 ;;
  1085 ;; *************** function _main *****************
  1086 ;; Defined at:
  1087 ;;		line 242 in file "C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;		None
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;  newInput        1   31[BANK3 ] PTR unsigned char [1]
  1092 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(2), 
  1093 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(2), 
  1094 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  1095 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  1096 ;;		 -> STR_1(1), 
  1097 ;;  x               2   16[BANK3 ] unsigned short 
  1098 ;;  output         16    0[BANK3 ] unsigned char [16]
  1099 ;;  values          8   23[BANK3 ] [2]
  1100 ;;  valuesComple    2   21[BANK3 ] unsigned short 
  1101 ;;  operator        1   20[BANK3 ] unsigned char 
  1102 ;;  positive        1   19[BANK3 ] _Bool 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  2  119[None  ] int 
  1105 ;; Registers used:
  1106 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : B00/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1112 ;;      Params:         0       0       0       0       0
  1113 ;;      Locals:         0       0       0      32       0
  1114 ;;      Temps:          0       0       3       0       0
  1115 ;;      Totals:         0       0       3      32       0
  1116 ;;Total ram usage:       35 bytes
  1117 ;; Hardware stack levels required when called: 9
  1118 ;; This function calls:
  1119 ;;		_LCDdisplay
  1120 ;;		_calculate
  1121 ;;		_getInput
  1122 ;;		_selectRow
  1123 ;;		_sendCommand
  1124 ;;		_setDigit
  1125 ;;		_strcpy
  1126 ;; This function is called by:
  1127 ;;		Startup code after reset
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131     1642                     _main:	
  1132                           ;psect for function _main
  1133                           
  1134     1642                     l3608:	
  1135                           ;incstack = 0
  1136 ;; hardware stack exceeded
  1137                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1138                           
  1139                           
  1140                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 245:     TRISDbits.TRI
      +                          SD0 = 1;
  1141     1642  1683               	bsf	3,5	;RP0=1, select bank1
  1142     1643  1303               	bcf	3,6	;RP1=0, select bank1
  1143     1644  1408               	bsf	8,0	;volatile
  1144                           
  1145                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 246:     TRISDbits.TRI
      +                          SD1 = 1;
  1146     1645  1488               	bsf	8,1	;volatile
  1147                           
  1148                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 247:     TRISDbits.TRI
      +                          SD2 = 1;
  1149     1646  1508               	bsf	8,2	;volatile
  1150                           
  1151                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 248:     TRISDbits.TRI
      +                          SD3 = 1;
  1152     1647  1588               	bsf	8,3	;volatile
  1153                           
  1154                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 249:     TRISDbits.TRI
      +                          SD4 = 0;
  1155     1648  1208               	bcf	8,4	;volatile
  1156                           
  1157                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 250:     TRISDbits.TRI
      +                          SD5 = 0;
  1158     1649  1288               	bcf	8,5	;volatile
  1159                           
  1160                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 251:     TRISDbits.TRI
      +                          SD6 = 0;
  1161     164A  1308               	bcf	8,6	;volatile
  1162                           
  1163                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 252:     TRISDbits.TRI
      +                          SD7 = 0;
  1164     164B  1388               	bcf	8,7	;volatile
  1165                           
  1166                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 253:     PORTDbits.RD4
      +                           = 0;
  1167     164C  1283               	bcf	3,5	;RP0=0, select bank0
  1168     164D  1303               	bcf	3,6	;RP1=0, select bank0
  1169     164E  1208               	bcf	8,4	;volatile
  1170                           
  1171                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 254:     PORTDbits.RD5
      +                           = 0;
  1172     164F  1288               	bcf	8,5	;volatile
  1173                           
  1174                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 255:     PORTDbits.RD6
      +                           = 0;
  1175     1650  1308               	bcf	8,6	;volatile
  1176                           
  1177                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 256:     PORTDbits.RD7
      +                           = 0;
  1178     1651  1388               	bcf	8,7	;volatile
  1179     1652                     l3610:
  1180                           
  1181                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 260:     TRISB = 0x00;
  1182     1652  1683               	bsf	3,5	;RP0=1, select bank1
  1183     1653  1303               	bcf	3,6	;RP1=0, select bank1
  1184     1654  0186               	clrf	6	;volatile
  1185     1655                     l3612:
  1186                           
  1187                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 261:     TRISCbits.TRI
      +                          SC2 = 0;
  1188     1655  1107               	bcf	7,2	;volatile
  1189     1656                     l3614:
  1190                           
  1191                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 262:     TRISCbits.TRI
      +                          SC0 = 0;
  1192     1656  1007               	bcf	7,0	;volatile
  1193     1657                     l3616:
  1194                           
  1195                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 263:     TRISCbits.TRI
      +                          SC1 = 0;
  1196     1657  1087               	bcf	7,1	;volatile
  1197                           
  1198                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 264:     for(uint16_t 
      +                          x = 0; x < 3; x++){
  1199     1658  1683               	bsf	3,5	;RP0=1, select bank3
  1200     1659  1703               	bsf	3,6	;RP1=1, select bank3
  1201     165A  01C6               	clrf	main@x^(0+384)
  1202     165B  01C7               	clrf	(main@x+1)^(0+384)
  1203     165C                     l3622:
  1204                           
  1205                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 265:         _delay((u
      +                          nsigned long)((100)*(20000000/4000.0)));
  1206     165C  3003               	movlw	3
  1207     165D  1683               	bsf	3,5	;RP0=1, select bank1
  1208     165E  1303               	bcf	3,6	;RP1=0, select bank1
  1209     165F  00EB               	movwf	(??_main^(0+128)+2)
  1210     1660  308A               	movlw	138
  1211     1661  00EA               	movwf	(??_main^(0+128)+1)
  1212     1662  3055               	movlw	85
  1213     1663  00E9               	movwf	??_main^(0+128)
  1214     1664                     u5457:
  1215     1664  0BE9               	decfsz	??_main^(0+128),f
  1216     1665  2E64               	goto	u5457
  1217     1666  0BEA               	decfsz	(??_main^(0+128)+1),f
  1218     1667  2E64               	goto	u5457
  1219     1668  0BEB               	decfsz	(??_main^(0+128)+2),f
  1220     1669  2E64               	goto	u5457
  1221     166A                     l3624:
  1222                           
  1223                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 266:         sendComma
      +                          nd(0x30);
  1224     166A  3030               	movlw	48
  1225     166B  160A  158A  22BF  160A  118A  	fcall	_sendCommand
  1226     1670                     l3626:
  1227                           
  1228                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 267:     }
  1229     1670  3001               	movlw	1
  1230     1671  1683               	bsf	3,5	;RP0=1, select bank3
  1231     1672  1703               	bsf	3,6	;RP1=1, select bank3
  1232     1673  07C6               	addwf	main@x^(0+384),f
  1233     1674  1803               	skipnc
  1234     1675  0AC7               	incf	(main@x+1)^(0+384),f
  1235     1676  3000               	movlw	0
  1236     1677  07C7               	addwf	(main@x+1)^(0+384),f
  1237     1678                     l3628:
  1238     1678  3000               	movlw	0
  1239     1679  0247               	subwf	(main@x+1)^(0+384),w
  1240     167A  3003               	movlw	3
  1241     167B  1903               	skipnz
  1242     167C  0246               	subwf	main@x^(0+384),w
  1243     167D  1C03               	skipc
  1244     167E  2E80               	goto	u5361
  1245     167F  2E81               	goto	u5360
  1246     1680                     u5361:
  1247     1680  2E5C               	goto	l3622
  1248     1681                     u5360:
  1249     1681                     l3630:
  1250                           
  1251                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 268:     _delay((unsig
      +                          ned long)((100)*(20000000/4000.0)));
  1252     1681  3003               	movlw	3
  1253     1682  1683               	bsf	3,5	;RP0=1, select bank1
  1254     1683  1303               	bcf	3,6	;RP1=0, select bank1
  1255     1684  00EB               	movwf	(??_main^(0+128)+2)
  1256     1685  308A               	movlw	138
  1257     1686  00EA               	movwf	(??_main^(0+128)+1)
  1258     1687  3055               	movlw	85
  1259     1688  00E9               	movwf	??_main^(0+128)
  1260     1689                     u5467:
  1261     1689  0BE9               	decfsz	??_main^(0+128),f
  1262     168A  2E89               	goto	u5467
  1263     168B  0BEA               	decfsz	(??_main^(0+128)+1),f
  1264     168C  2E89               	goto	u5467
  1265     168D  0BEB               	decfsz	(??_main^(0+128)+2),f
  1266     168E  2E89               	goto	u5467
  1267     168F                     l3632:
  1268                           
  1269                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 269:     sendCommand(0
      +                          x38);
  1270     168F  3038               	movlw	56
  1271     1690  160A  158A  22BF  160A  118A  	fcall	_sendCommand
  1272     1695                     l3634:
  1273                           
  1274                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 270:     sendCommand(0
      +                          x08);
  1275     1695  3008               	movlw	8
  1276     1696  160A  158A  22BF  160A  118A  	fcall	_sendCommand
  1277     169B                     l3636:
  1278                           
  1279                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 271:     sendCommand(0
      +                          x01);
  1280     169B  3001               	movlw	1
  1281     169C  160A  158A  22BF  160A  118A  	fcall	_sendCommand
  1282     16A1                     l3638:
  1283                           
  1284                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 272:     sendCommand(0
      +                          x06);
  1285     16A1  3006               	movlw	6
  1286     16A2  160A  158A  22BF  160A  118A  	fcall	_sendCommand
  1287     16A7                     l3640:
  1288                           
  1289                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 273:     sendCommand(0
      +                          x0F);
  1290     16A7  300F               	movlw	15
  1291     16A8  160A  158A  22BF  160A  118A  	fcall	_sendCommand
  1292     16AD                     l3642:
  1293                           
  1294                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 274:     selectRow(1);
  1295     16AD  3001               	movlw	1
  1296     16AE  00F3               	movwf	selectRow@row
  1297     16AF  3000               	movlw	0
  1298     16B0  00F4               	movwf	selectRow@row+1
  1299     16B1  160A  158A  22F6  160A  118A  	fcall	_selectRow
  1300     16B6                     l3644:
  1301                           
  1302                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 278:     char output[1
      +                          6], operator = '+';
  1303     16B6  302B               	movlw	43
  1304     16B7  1683               	bsf	3,5	;RP0=1, select bank3
  1305     16B8  1703               	bsf	3,6	;RP1=1, select bank3
  1306     16B9  00CA               	movwf	main@operator^(0+384)
  1307     16BA                     l3646:
  1308                           
  1309                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 279:     double values
      +                          [2] = {0,0};
  1310     16BA  30CD               	movlw	main@values& (0+255)
  1311     16BB  0084               	movwf	4
  1312     16BC  3008               	movlw	8
  1313     16BD  00FF               	movwf	btemp+1
  1314     16BE                     u5370:
  1315     16BE  1783               	bsf	3,7	;select IRP bank3
  1316     16BF  0180               	clrf	0
  1317     16C0  0A84               	incf	4,f
  1318     16C1  0BFF               	decfsz	btemp+1,f
  1319     16C2  2EBE               	goto	u5370
  1320     16C3                     l3648:
  1321                           
  1322                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 280:     uint16_t valu
      +                          esCompleted = 0;
  1323     16C3  01CB               	clrf	main@valuesCompleted^(0+384)
  1324     16C4  01CC               	clrf	(main@valuesCompleted+1)^(0+384)
  1325     16C5                     l3650:
  1326                           
  1327                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 281:     _Bool positiv
      +                          e = 1;
  1328     16C5  3001               	movlw	1
  1329     16C6  00C9               	movwf	main@positive^(0+384)
  1330     16C7                     l3652:
  1331                           
  1332                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 284:         char *new
      +                          Input[1];;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 285:         
      +                          *newInput = getInput();
  1333     16C7  160A  118A  248A  160A  118A  	fcall	_getInput
  1334     16CC  1683               	bsf	3,5	;RP0=1, select bank3
  1335     16CD  1703               	bsf	3,6	;RP1=1, select bank3
  1336     16CE  00D5               	movwf	main@newInput^(0+384)
  1337                           
  1338                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 286:         switch(*n
      +                          ewInput[0]){
  1339     16CF  2FE6               	goto	l3710
  1340     16D0                     l3654:
  1341                           
  1342                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 288:             if(po
      +                          sitive && valuesCompleted<2){
  1343     16D0  0849               	movf	main@positive^(0+384),w
  1344     16D1  1903               	btfsc	3,2
  1345     16D2  2ED4               	goto	u5381
  1346     16D3  2ED5               	goto	u5380
  1347     16D4                     u5381:
  1348     16D4  2EF2               	goto	l132
  1349     16D5                     u5380:
  1350     16D5                     l3656:
  1351     16D5  3000               	movlw	0
  1352     16D6  024C               	subwf	(main@valuesCompleted+1)^(0+384),w
  1353     16D7  3002               	movlw	2
  1354     16D8  1903               	skipnz
  1355     16D9  024B               	subwf	main@valuesCompleted^(0+384),w
  1356     16DA  1803               	skipnc
  1357     16DB  2EDD               	goto	u5391
  1358     16DC  2EDE               	goto	u5390
  1359     16DD                     u5391:
  1360     16DD  2EF2               	goto	l132
  1361     16DE                     u5390:
  1362     16DE                     l3658:
  1363                           
  1364                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 289:                 p
      +                          ositive = 0;
  1365     16DE  01C9               	clrf	main@positive^(0+384)
  1366     16DF                     l3660:
  1367                           
  1368                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 290:                 i
      +                          f(operator != '\0'){
  1369     16DF  084A               	movf	main@operator^(0+384),w
  1370     16E0  1903               	btfsc	3,2
  1371     16E1  2EE3               	goto	u5401
  1372     16E2  2EE4               	goto	u5400
  1373     16E3                     u5401:
  1374     16E3  2EF2               	goto	l130
  1375     16E4                     u5400:
  1376     16E4                     l3662:
  1377                           
  1378                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 291:                  
      +                             LCDdisplay(*newInput);
  1379     16E4  1683               	bsf	3,5	;RP0=1, select bank3
  1380     16E5  1703               	bsf	3,6	;RP1=1, select bank3
  1381     16E6  0855               	movf	main@newInput^(0+384),w
  1382     16E7  00F4               	movwf	LCDdisplay@sentence
  1383     16E8  3000               	movlw	0
  1384     16E9  1D03               	btfss	3,2
  1385     16EA  3080               	movlw	128
  1386     16EB  00F5               	movwf	LCDdisplay@sentence+1
  1387     16EC  160A  158A  23C4  160A  118A  	fcall	_LCDdisplay
  1388                           
  1389                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 292:                  
      +                             break;
  1390     16F1  2EC7               	goto	l3652
  1391     16F2                     l130:	
  1392                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 296:             case 
      +                          '/':
  1393                           
  1394     16F2                     l132:	
  1395                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 298:             case 
      +                          'x':
  1396                           
  1397                           
  1398                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 299:             posit
      +                          ive = 1;
  1399     16F2  3001               	movlw	1
  1400     16F3  00C9               	movwf	main@positive^(0+384)
  1401     16F4                     l3664:
  1402                           
  1403                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 300:             opera
      +                          tor = *newInput[0];
  1404     16F4  0855               	movf	main@newInput^(0+384),w
  1405     16F5  0084               	movwf	4
  1406     16F6  160A  158A  200A  160A  118A  	fcall	stringdir
  1407     16FB  00CA               	movwf	main@operator^(0+384)
  1408                           
  1409                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 301:             switc
      +                          h(valuesCompleted){
  1410     16FC  2F39               	goto	l3676
  1411     16FD                     l3666:
  1412                           
  1413                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 303:                 v
      +                          aluesCompleted++;
  1414     16FD  3001               	movlw	1
  1415     16FE  07CB               	addwf	main@valuesCompleted^(0+384),f
  1416     16FF  1803               	skipnc
  1417     1700  0ACC               	incf	(main@valuesCompleted+1)^(0+384),f
  1418     1701  3000               	movlw	0
  1419     1702  07CC               	addwf	(main@valuesCompleted+1)^(0+384),f
  1420                           
  1421                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 304:                 b
      +                          reak;
  1422     1703  2EE4               	goto	l3662
  1423     1704                     l3668:
  1424                           
  1425                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 307:                 s
      +                          trcpy(output, calculate(&values[0], operator, &values[1]));
  1426     1704  30CD               	movlw	(low (main@values| (0+256)))& (0+255)
  1427     1705  1683               	bsf	3,5	;RP0=1, select bank1
  1428     1706  1303               	bcf	3,6	;RP1=0, select bank1
  1429     1707  00E4               	movwf	calculate@num1^(0+128)
  1430     1708  1683               	bsf	3,5	;RP0=1, select bank3
  1431     1709  1703               	bsf	3,6	;RP1=1, select bank3
  1432     170A  084A               	movf	main@operator^(0+384),w
  1433     170B  1683               	bsf	3,5	;RP0=1, select bank1
  1434     170C  1303               	bcf	3,6	;RP1=0, select bank1
  1435     170D  00E5               	movwf	calculate@operator^(0+128)
  1436     170E  30D1               	movlw	(low ((main@values| (0+256)+4)))& (0+255)
  1437     170F  00E6               	movwf	calculate@num2^(0+128)
  1438     1710  160A  118A  233E  160A  118A  	fcall	_calculate
  1439     1715  1683               	bsf	3,5	;RP0=1, select bank3
  1440     1716  1703               	bsf	3,6	;RP1=1, select bank3
  1441     1717  00C8               	movwf	_main$1077^(0+384)
  1442                           
  1443                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 307:                 s
      +                          trcpy(output, calculate(&values[0], operator, &values[1]));
  1444     1718  30B6               	movlw	(low (main@output| (0+256)))& (0+255)
  1445     1719  00F0               	movwf	strcpy@dest
  1446     171A  0848               	movf	_main$1077^(0+384),w
  1447     171B  00F1               	movwf	strcpy@src
  1448     171C  3001               	movlw	1
  1449     171D  00F2               	movwf	strcpy@src+1
  1450     171E  160A  158A  2334  160A  118A  	fcall	_strcpy
  1451     1723                     l3670:
  1452                           
  1453                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 310:                 s
      +                          endCommand(0x01);
  1454     1723  3001               	movlw	1
  1455     1724  160A  158A  22BF  160A  118A  	fcall	_sendCommand
  1456     1729                     l3672:
  1457                           
  1458                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 311:                 v
      +                          aluesCompleted = 1;
  1459     1729  3001               	movlw	1
  1460     172A  1683               	bsf	3,5	;RP0=1, select bank3
  1461     172B  1703               	bsf	3,6	;RP1=1, select bank3
  1462     172C  00CB               	movwf	main@valuesCompleted^(0+384)
  1463     172D  3000               	movlw	0
  1464     172E  00CC               	movwf	(main@valuesCompleted^(0+384)+1)
  1465     172F                     l3674:
  1466                           
  1467                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 312:                 L
      +                          CDdisplay(output);
  1468     172F  30B6               	movlw	(low (main@output| (0+256)))& (0+255)
  1469     1730  00F4               	movwf	LCDdisplay@sentence
  1470     1731  3001               	movlw	1
  1471     1732  00F5               	movwf	LCDdisplay@sentence+1
  1472     1733  160A  158A  23C4  160A  118A  	fcall	_LCDdisplay
  1473                           
  1474                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 313:             }
  1475     1738  2EE4               	goto	l3662
  1476     1739                     l3676:
  1477                           
  1478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1479                           ; Switch size 1, requested type "simple"
  1480                           ; Number of cases is 1, Range of values is 0 to 0
  1481                           ; switch strategies available:
  1482                           ; Name         Instructions Cycles
  1483                           ; simple_byte            4     3 (average)
  1484                           ; direct_byte           11     8 (fixed)
  1485                           ; jumptable            260     6 (fixed)
  1486                           ;	Chosen strategy is simple_byte
  1487     1739  084C               	movf	(main@valuesCompleted+1)^(0+384),w
  1488     173A  3A00               	xorlw	0	; case 0
  1489     173B  1903               	skipnz
  1490     173C  2F3E               	goto	l3780
  1491     173D  2F23               	goto	l3670
  1492     173E                     l3780:
  1493                           
  1494                           ; Switch size 1, requested type "simple"
  1495                           ; Number of cases is 2, Range of values is 0 to 1
  1496                           ; switch strategies available:
  1497                           ; Name         Instructions Cycles
  1498                           ; simple_byte            7     4 (average)
  1499                           ; direct_byte           14     8 (fixed)
  1500                           ; jumptable            260     6 (fixed)
  1501                           ;	Chosen strategy is simple_byte
  1502     173E  084B               	movf	main@valuesCompleted^(0+384),w
  1503     173F  3A00               	xorlw	0	; case 0
  1504     1740  1903               	skipnz
  1505     1741  2EFD               	goto	l3666
  1506     1742  3A01               	xorlw	1	; case 1
  1507     1743  1903               	skipnz
  1508     1744  2F04               	goto	l3668
  1509     1745  2F23               	goto	l3670
  1510     1746                     l3680:
  1511                           
  1512                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 318:             strcp
      +                          y(output, calculate(&values[0], operator, &values[1]));
  1513     1746  30CD               	movlw	(low (main@values| (0+256)))& (0+255)
  1514     1747  1683               	bsf	3,5	;RP0=1, select bank1
  1515     1748  1303               	bcf	3,6	;RP1=0, select bank1
  1516     1749  00E4               	movwf	calculate@num1^(0+128)
  1517     174A  1683               	bsf	3,5	;RP0=1, select bank3
  1518     174B  1703               	bsf	3,6	;RP1=1, select bank3
  1519     174C  084A               	movf	main@operator^(0+384),w
  1520     174D  1683               	bsf	3,5	;RP0=1, select bank1
  1521     174E  1303               	bcf	3,6	;RP1=0, select bank1
  1522     174F  00E5               	movwf	calculate@operator^(0+128)
  1523     1750  30D1               	movlw	(low ((main@values| (0+256)+4)))& (0+255)
  1524     1751  00E6               	movwf	calculate@num2^(0+128)
  1525     1752  160A  118A  233E  160A  118A  	fcall	_calculate
  1526     1757  1683               	bsf	3,5	;RP0=1, select bank3
  1527     1758  1703               	bsf	3,6	;RP1=1, select bank3
  1528     1759  00C8               	movwf	_main$1077^(0+384)
  1529                           
  1530                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 318:             strcp
      +                          y(output, calculate(&values[0], operator, &values[1]));
  1531     175A  30B6               	movlw	(low (main@output| (0+256)))& (0+255)
  1532     175B  00F0               	movwf	strcpy@dest
  1533     175C  0848               	movf	_main$1077^(0+384),w
  1534     175D  00F1               	movwf	strcpy@src
  1535     175E  3001               	movlw	1
  1536     175F  00F2               	movwf	strcpy@src+1
  1537     1760  160A  158A  2334  160A  118A  	fcall	_strcpy
  1538     1765                     l3682:
  1539                           
  1540                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 319:             selec
      +                          tRow(2);
  1541     1765  3002               	movlw	2
  1542     1766  00F3               	movwf	selectRow@row
  1543     1767  3000               	movlw	0
  1544     1768  00F4               	movwf	selectRow@row+1
  1545     1769  160A  158A  22F6  160A  118A  	fcall	_selectRow
  1546     176E                     l3684:
  1547                           
  1548                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 320:             LCDdi
      +                          splay(output);
  1549     176E  30B6               	movlw	(low (main@output| (0+256)))& (0+255)
  1550     176F  00F4               	movwf	LCDdisplay@sentence
  1551     1770  3001               	movlw	1
  1552     1771  00F5               	movwf	LCDdisplay@sentence+1
  1553     1772  160A  158A  23C4  160A  118A  	fcall	_LCDdisplay
  1554                           
  1555                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 321:             selec
      +                          tRow(1);
  1556     1777  3001               	movlw	1
  1557     1778  00F3               	movwf	selectRow@row
  1558     1779  3000               	movlw	0
  1559     177A  00F4               	movwf	selectRow@row+1
  1560     177B  160A  158A  22F6  160A  118A  	fcall	_selectRow
  1561     1780                     l3686:
  1562                           
  1563                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 322:             value
      +                          sCompleted = 2;
  1564     1780  3002               	movlw	2
  1565     1781  1683               	bsf	3,5	;RP0=1, select bank3
  1566     1782  1703               	bsf	3,6	;RP1=1, select bank3
  1567     1783  00CB               	movwf	main@valuesCompleted^(0+384)
  1568     1784  3000               	movlw	0
  1569     1785  00CC               	movwf	(main@valuesCompleted^(0+384)+1)
  1570                           
  1571                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 323:             break
      +                          ;
  1572     1786  2EC7               	goto	l3652
  1573     1787                     l3688:
  1574                           
  1575                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 326:             if(*n
      +                          ewInput[0] == 'C' || valuesCompleted == 2){
  1576     1787  0855               	movf	main@newInput^(0+384),w
  1577     1788  0084               	movwf	4
  1578     1789  160A  158A  200A  160A  118A  	fcall	stringdir
  1579     178E  3A43               	xorlw	67
  1580     178F  1903               	skipnz
  1581     1790  2F92               	goto	u5411
  1582     1791  2F93               	goto	u5410
  1583     1792                     u5411:
  1584     1792  2F9A               	goto	l3692
  1585     1793                     u5410:
  1586     1793                     l3690:
  1587     1793  3002               	movlw	2
  1588     1794  064B               	xorwf	main@valuesCompleted^(0+384),w
  1589     1795  044C               	iorwf	(main@valuesCompleted+1)^(0+384),w
  1590     1796  1D03               	btfss	3,2
  1591     1797  2F99               	goto	u5421
  1592     1798  2F9A               	goto	u5420
  1593     1799                     u5421:
  1594     1799  2FC4               	goto	l3708
  1595     179A                     u5420:
  1596     179A                     l3692:
  1597                           
  1598                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 327:                 v
      +                          aluesCompleted = 0;
  1599     179A  01CB               	clrf	main@valuesCompleted^(0+384)
  1600     179B  01CC               	clrf	(main@valuesCompleted+1)^(0+384)
  1601     179C                     l3694:
  1602                           
  1603                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 328:                 s
      +                          endCommand(0x01);
  1604     179C  3001               	movlw	1
  1605     179D  160A  158A  22BF  160A  118A  	fcall	_sendCommand
  1606     17A2                     l3696:
  1607                           
  1608                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 329:                 o
      +                          perator = '\0';
  1609     17A2  1683               	bsf	3,5	;RP0=1, select bank3
  1610     17A3  1703               	bsf	3,6	;RP1=1, select bank3
  1611     17A4  01CA               	clrf	main@operator^(0+384)
  1612     17A5                     l3698:
  1613                           
  1614                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 330:                 v
      +                          alues[0] = 0;
  1615     17A5  3000               	movlw	0
  1616     17A6  00D0               	movwf	(main@values+3)^(0+384)
  1617     17A7  3000               	movlw	0
  1618     17A8  00CF               	movwf	(main@values+2)^(0+384)
  1619     17A9  3000               	movlw	0
  1620     17AA  00CE               	movwf	(main@values+1)^(0+384)
  1621     17AB  3000               	movlw	0
  1622     17AC  00CD               	movwf	main@values^(0+384)
  1623     17AD                     l3700:
  1624                           
  1625                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 331:                 v
      +                          alues[1] = 0;
  1626     17AD  3000               	movlw	0
  1627     17AE  00D4               	movwf	((main@values+3)^(0+384)+4)
  1628     17AF  3000               	movlw	0
  1629     17B0  00D3               	movwf	((main@values+2)^(0+384)+4)
  1630     17B1  3000               	movlw	0
  1631     17B2  00D2               	movwf	((main@values+1)^(0+384)+4)
  1632     17B3  3000               	movlw	0
  1633     17B4  00D1               	movwf	(main@values^(0+384)+4)
  1634     17B5                     l3702:
  1635                           
  1636                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 332:                 p
      +                          ositive = 1;
  1637     17B5  3001               	movlw	1
  1638     17B6  00C9               	movwf	main@positive^(0+384)
  1639     17B7                     l3704:
  1640                           
  1641                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 333:                 i
      +                          f(*newInput[0] == 'C'){
  1642     17B7  0855               	movf	main@newInput^(0+384),w
  1643     17B8  0084               	movwf	4
  1644     17B9  160A  158A  200A  160A  118A  	fcall	stringdir
  1645     17BE  3A43               	xorlw	67
  1646     17BF  1D03               	skipz
  1647     17C0  2FC2               	goto	u5431
  1648     17C1  2FC3               	goto	u5430
  1649     17C2                     u5431:
  1650     17C2  2FC4               	goto	l3708
  1651     17C3                     u5430:
  1652     17C3  2EC7               	goto	l3652
  1653     17C4                     l3708:
  1654                           
  1655                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 337:             setDi
      +                          git(&values[valuesCompleted], newInput[0], positive);
  1656     17C4  084B               	movf	main@valuesCompleted^(0+384),w
  1657     17C5  1683               	bsf	3,5	;RP0=1, select bank1
  1658     17C6  1303               	bcf	3,6	;RP1=0, select bank1
  1659     17C7  00E9               	movwf	??_main^(0+128)
  1660     17C8  3001               	movlw	1
  1661     17C9                     u5445:
  1662     17C9  1003               	clrc
  1663     17CA  0DE9               	rlf	??_main^(0+128),f
  1664     17CB  3EFF               	addlw	-1
  1665     17CC  1D03               	skipz
  1666     17CD  2FC9               	goto	u5445
  1667     17CE  1003               	clrc
  1668     17CF  0D69               	rlf	??_main^(0+128),w
  1669     17D0  3ECD               	addlw	(low (main@values| (0+256)))& (0+255)
  1670     17D1  1283               	bcf	3,5	;RP0=0, select bank0
  1671     17D2  1303               	bcf	3,6	;RP1=0, select bank0
  1672     17D3  00D1               	movwf	setDigit@oldValue
  1673     17D4  1683               	bsf	3,5	;RP0=1, select bank3
  1674     17D5  1703               	bsf	3,6	;RP1=1, select bank3
  1675     17D6  0855               	movf	main@newInput^(0+384),w
  1676     17D7  1283               	bcf	3,5	;RP0=0, select bank0
  1677     17D8  1303               	bcf	3,6	;RP1=0, select bank0
  1678     17D9  00D2               	movwf	setDigit@newValue
  1679     17DA  1683               	bsf	3,5	;RP0=1, select bank3
  1680     17DB  1703               	bsf	3,6	;RP1=1, select bank3
  1681     17DC  0849               	movf	main@positive^(0+384),w
  1682     17DD  1283               	bcf	3,5	;RP0=0, select bank0
  1683     17DE  1303               	bcf	3,6	;RP1=0, select bank0
  1684     17DF  00D3               	movwf	setDigit@positive
  1685     17E0  160A  158A  272C  160A  118A  	fcall	_setDigit
  1686                           
  1687                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 338:         }
  1688     17E5  2EC7               	goto	l3652
  1689     17E6                     l3710:
  1690     17E6  0855               	movf	main@newInput^(0+384),w
  1691     17E7  0084               	movwf	4
  1692     17E8  160A  158A  200A  160A  118A  	fcall	stringdir
  1693                           
  1694                           ; Switch size 1, requested type "simple"
  1695                           ; Number of cases is 5, Range of values is 43 to 120
  1696                           ; switch strategies available:
  1697                           ; Name         Instructions Cycles
  1698                           ; simple_byte           16     9 (average)
  1699                           ; direct_byte          245    11 (fixed)
  1700                           ; jumptable            263     9 (fixed)
  1701                           ;	Chosen strategy is simple_byte
  1702     17ED  3A2B               	xorlw	43	; case 43
  1703     17EE  1903               	skipnz
  1704     17EF  2EF2               	goto	l132
  1705     17F0  3A06               	xorlw	6	; case 45
  1706     17F1  1903               	skipnz
  1707     17F2  2ED0               	goto	l3654
  1708     17F3  3A02               	xorlw	2	; case 47
  1709     17F4  1903               	skipnz
  1710     17F5  2EF2               	goto	l132
  1711     17F6  3A12               	xorlw	18	; case 61
  1712     17F7  1903               	skipnz
  1713     17F8  2F46               	goto	l3680
  1714     17F9  3A45               	xorlw	69	; case 120
  1715     17FA  1903               	skipnz
  1716     17FB  2EF2               	goto	l132
  1717     17FC  2F87               	goto	l3688
  1718     17FD  120A  118A  2800   	ljmp	start
  1719     1800                     __end_of_main:
  1720                           
  1721                           	psect	text1
  1722     1F2C                     __ptext1:	
  1723 ;; *************** function _setDigit *****************
  1724 ;; Defined at:
  1725 ;;		line 72 in file "C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  oldValue        1   49[BANK0 ] PTR 
  1728 ;;		 -> main@values(8), 
  1729 ;;  newValue        1   50[BANK0 ] PTR unsigned char 
  1730 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(2), 
  1731 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(2), 
  1732 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  1733 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  1734 ;;		 -> STR_1(1), 
  1735 ;;  positive        1   51[BANK0 ] _Bool 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  1    wreg      void 
  1740 ;; Registers used:
  1741 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       3       0       0       0
  1748 ;;      Locals:         0       0       0       0       0
  1749 ;;      Temps:          0       3       0       0       0
  1750 ;;      Totals:         0       6       0       0       0
  1751 ;;Total ram usage:        6 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; Hardware stack levels required when called: 3
  1754 ;; This function calls:
  1755 ;;		_LCDdisplay
  1756 ;;		___fladd
  1757 ;;		___flmul
  1758 ;;		___flsub
  1759 ;;		___xxtofl
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765     1F2C                     _setDigit:	
  1766                           ;psect for function _setDigit
  1767                           
  1768     1F2C                     l3430:	
  1769                           ;incstack = 0
  1770                           ; Regs used in _setDigit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1771                           
  1772                           
  1773                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 73:     if(positive){
  1774     1F2C  1283               	bcf	3,5	;RP0=0, select bank0
  1775     1F2D  1303               	bcf	3,6	;RP1=0, select bank0
  1776     1F2E  0853               	movf	setDigit@positive,w
  1777     1F2F  1903               	btfsc	3,2
  1778     1F30  2F32               	goto	u5001
  1779     1F31  2F33               	goto	u5000
  1780     1F32                     u5001:
  1781     1F32  2F8D               	goto	l3434
  1782     1F33                     u5000:
  1783     1F33                     l3432:
  1784                           
  1785                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 74:         *oldValue 
      +                          = *oldValue * 10 + (double)(*newValue - '0');
  1786     1F33  0852               	movf	setDigit@newValue,w
  1787     1F34  0084               	movwf	4
  1788     1F35  160A  158A  200A  160A  158A  	fcall	stringdir
  1789     1F3A  3ED0               	addlw	208
  1790     1F3B  00F0               	movwf	___xxtofl@val
  1791     1F3C  30FF               	movlw	255
  1792     1F3D  1803               	skipnc
  1793     1F3E  3000               	movlw	0
  1794     1F3F  00F1               	movwf	___xxtofl@val+1
  1795     1F40  01F2               	clrf	___xxtofl@val+2
  1796     1F41  01F3               	clrf	___xxtofl@val+3
  1797     1F42  3000               	movlw	0
  1798     1F43  160A  158A  2678  160A  158A  	fcall	___xxtofl
  1799     1F48  0873               	movf	?___xxtofl+3,w
  1800     1F49  1283               	bcf	3,5	;RP0=0, select bank0
  1801     1F4A  1303               	bcf	3,6	;RP1=0, select bank0
  1802     1F4B  00B8               	movwf	___fladd@b+3
  1803     1F4C  0872               	movf	?___xxtofl+2,w
  1804     1F4D  00B7               	movwf	___fladd@b+2
  1805     1F4E  0871               	movf	?___xxtofl+1,w
  1806     1F4F  00B6               	movwf	___fladd@b+1
  1807     1F50  0870               	movf	?___xxtofl,w
  1808     1F51  00B5               	movwf	___fladd@b
  1809     1F52  3041               	movlw	65
  1810     1F53  00A3               	movwf	___flmul@b+3
  1811     1F54  3020               	movlw	32
  1812     1F55  00A2               	movwf	___flmul@b+2
  1813     1F56  3000               	movlw	0
  1814     1F57  00A1               	movwf	___flmul@b+1
  1815     1F58  3000               	movlw	0
  1816     1F59  00A0               	movwf	___flmul@b
  1817     1F5A  0851               	movf	setDigit@oldValue,w
  1818     1F5B  0084               	movwf	4
  1819     1F5C  1783               	bsf	3,7	;select IRP bank2
  1820     1F5D  0800               	movf	0,w
  1821     1F5E  00A4               	movwf	___flmul@a
  1822     1F5F  0A84               	incf	4,f
  1823     1F60  0800               	movf	0,w
  1824     1F61  00A5               	movwf	___flmul@a+1
  1825     1F62  0A84               	incf	4,f
  1826     1F63  0800               	movf	0,w
  1827     1F64  00A6               	movwf	___flmul@a+2
  1828     1F65  0A84               	incf	4,f
  1829     1F66  0800               	movf	0,w
  1830     1F67  00A7               	movwf	___flmul@a+3
  1831     1F68  120A  158A  24BE  160A  158A  	fcall	___flmul
  1832     1F6D  1283               	bcf	3,5	;RP0=0, select bank0
  1833     1F6E  1303               	bcf	3,6	;RP1=0, select bank0
  1834     1F6F  0823               	movf	?___flmul+3,w
  1835     1F70  00BC               	movwf	___fladd@a+3
  1836     1F71  0822               	movf	?___flmul+2,w
  1837     1F72  00BB               	movwf	___fladd@a+2
  1838     1F73  0821               	movf	?___flmul+1,w
  1839     1F74  00BA               	movwf	___fladd@a+1
  1840     1F75  0820               	movf	?___flmul,w
  1841     1F76  00B9               	movwf	___fladd@a
  1842     1F77  120A  158A  226E  160A  158A  	fcall	___fladd
  1843     1F7C  1283               	bcf	3,5	;RP0=0, select bank0
  1844     1F7D  1303               	bcf	3,6	;RP1=0, select bank0
  1845     1F7E  0851               	movf	setDigit@oldValue,w
  1846     1F7F  0084               	movwf	4
  1847     1F80  0835               	movf	?___fladd,w
  1848     1F81  1783               	bsf	3,7	;select IRP bank2
  1849     1F82  0080               	movwf	0
  1850     1F83  0A84               	incf	4,f
  1851     1F84  0836               	movf	?___fladd+1,w
  1852     1F85  0080               	movwf	0
  1853     1F86  0A84               	incf	4,f
  1854     1F87  0837               	movf	?___fladd+2,w
  1855     1F88  0080               	movwf	0
  1856     1F89  0A84               	incf	4,f
  1857     1F8A  0838               	movf	?___fladd+3,w
  1858     1F8B  0080               	movwf	0
  1859                           
  1860                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 75:     }
  1861     1F8C  2FE6               	goto	l43
  1862     1F8D                     l3434:
  1863                           
  1864                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 77:         *oldValue 
      +                          = *oldValue * 10 - (double)(*newValue - '0');
  1865     1F8D  0852               	movf	setDigit@newValue,w
  1866     1F8E  0084               	movwf	4
  1867     1F8F  160A  158A  200A  160A  158A  	fcall	stringdir
  1868     1F94  3ED0               	addlw	208
  1869     1F95  00F0               	movwf	___xxtofl@val
  1870     1F96  30FF               	movlw	255
  1871     1F97  1803               	skipnc
  1872     1F98  3000               	movlw	0
  1873     1F99  00F1               	movwf	___xxtofl@val+1
  1874     1F9A  01F2               	clrf	___xxtofl@val+2
  1875     1F9B  01F3               	clrf	___xxtofl@val+3
  1876     1F9C  3000               	movlw	0
  1877     1F9D  160A  158A  2678  160A  158A  	fcall	___xxtofl
  1878     1FA2  0873               	movf	?___xxtofl+3,w
  1879     1FA3  1283               	bcf	3,5	;RP0=0, select bank0
  1880     1FA4  1303               	bcf	3,6	;RP1=0, select bank0
  1881     1FA5  00CC               	movwf	___flsub@a+3
  1882     1FA6  0872               	movf	?___xxtofl+2,w
  1883     1FA7  00CB               	movwf	___flsub@a+2
  1884     1FA8  0871               	movf	?___xxtofl+1,w
  1885     1FA9  00CA               	movwf	___flsub@a+1
  1886     1FAA  0870               	movf	?___xxtofl,w
  1887     1FAB  00C9               	movwf	___flsub@a
  1888     1FAC  3041               	movlw	65
  1889     1FAD  00A3               	movwf	___flmul@b+3
  1890     1FAE  3020               	movlw	32
  1891     1FAF  00A2               	movwf	___flmul@b+2
  1892     1FB0  3000               	movlw	0
  1893     1FB1  00A1               	movwf	___flmul@b+1
  1894     1FB2  3000               	movlw	0
  1895     1FB3  00A0               	movwf	___flmul@b
  1896     1FB4  0851               	movf	setDigit@oldValue,w
  1897     1FB5  0084               	movwf	4
  1898     1FB6  1783               	bsf	3,7	;select IRP bank2
  1899     1FB7  0800               	movf	0,w
  1900     1FB8  00A4               	movwf	___flmul@a
  1901     1FB9  0A84               	incf	4,f
  1902     1FBA  0800               	movf	0,w
  1903     1FBB  00A5               	movwf	___flmul@a+1
  1904     1FBC  0A84               	incf	4,f
  1905     1FBD  0800               	movf	0,w
  1906     1FBE  00A6               	movwf	___flmul@a+2
  1907     1FBF  0A84               	incf	4,f
  1908     1FC0  0800               	movf	0,w
  1909     1FC1  00A7               	movwf	___flmul@a+3
  1910     1FC2  120A  158A  24BE  160A  158A  	fcall	___flmul
  1911     1FC7  1283               	bcf	3,5	;RP0=0, select bank0
  1912     1FC8  1303               	bcf	3,6	;RP1=0, select bank0
  1913     1FC9  0823               	movf	?___flmul+3,w
  1914     1FCA  00D0               	movwf	___flsub@b+3
  1915     1FCB  0822               	movf	?___flmul+2,w
  1916     1FCC  00CF               	movwf	___flsub@b+2
  1917     1FCD  0821               	movf	?___flmul+1,w
  1918     1FCE  00CE               	movwf	___flsub@b+1
  1919     1FCF  0820               	movf	?___flmul,w
  1920     1FD0  00CD               	movwf	___flsub@b
  1921     1FD1  160A  158A  2355  160A  158A  	fcall	___flsub
  1922     1FD6  1283               	bcf	3,5	;RP0=0, select bank0
  1923     1FD7  1303               	bcf	3,6	;RP1=0, select bank0
  1924     1FD8  0851               	movf	setDigit@oldValue,w
  1925     1FD9  0084               	movwf	4
  1926     1FDA  0849               	movf	?___flsub,w
  1927     1FDB  1783               	bsf	3,7	;select IRP bank2
  1928     1FDC  0080               	movwf	0
  1929     1FDD  0A84               	incf	4,f
  1930     1FDE  084A               	movf	?___flsub+1,w
  1931     1FDF  0080               	movwf	0
  1932     1FE0  0A84               	incf	4,f
  1933     1FE1  084B               	movf	?___flsub+2,w
  1934     1FE2  0080               	movwf	0
  1935     1FE3  0A84               	incf	4,f
  1936     1FE4  084C               	movf	?___flsub+3,w
  1937     1FE5  0080               	movwf	0
  1938     1FE6                     l43:	
  1939                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 78:     }
  1940                           
  1941                           
  1942                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 79:     LCDdisplay(new
      +                          Value);
  1943     1FE6  0852               	movf	setDigit@newValue,w
  1944     1FE7  00F4               	movwf	LCDdisplay@sentence
  1945     1FE8  3000               	movlw	0
  1946     1FE9  1D03               	btfss	3,2
  1947     1FEA  3080               	movlw	128
  1948     1FEB  00F5               	movwf	LCDdisplay@sentence+1
  1949     1FEC  160A  158A  23C4  160A  158A  	fcall	_LCDdisplay
  1950     1FF1                     l3436:
  1951                           
  1952                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 80:     _delay((unsign
      +                          ed long)((300)*(20000000/4000.0)));
  1953     1FF1  3008               	movlw	8
  1954     1FF2  1283               	bcf	3,5	;RP0=0, select bank0
  1955     1FF3  1303               	bcf	3,6	;RP1=0, select bank0
  1956     1FF4  00D6               	movwf	??_setDigit+2
  1957     1FF5  309D               	movlw	157
  1958     1FF6  00D5               	movwf	??_setDigit+1
  1959     1FF7  3005               	movlw	5
  1960     1FF8  00D4               	movwf	??_setDigit
  1961     1FF9                     u5477:
  1962     1FF9  0BD4               	decfsz	??_setDigit,f
  1963     1FFA  2FF9               	goto	u5477
  1964     1FFB  0BD5               	decfsz	??_setDigit+1,f
  1965     1FFC  2FF9               	goto	u5477
  1966     1FFD  0BD6               	decfsz	??_setDigit+2,f
  1967     1FFE  2FF9               	goto	u5477
  1968     1FFF                     l44:
  1969     1FFF  0008               	return
  1970     2000                     __end_of_setDigit:
  1971                           
  1972                           	psect	text2
  1973     1E78                     __ptext2:	
  1974 ;; *************** function ___xxtofl *****************
  1975 ;; Defined at:
  1976 ;;		line 10 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\xxtofl.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  sign            1    wreg     unsigned char 
  1979 ;;  val             4    0[COMMON] long 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  sign            1    8[COMMON] unsigned char 
  1982 ;;  arg             4   10[COMMON] unsigned long 
  1983 ;;  exp             1    9[COMMON] unsigned char 
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  4    0[COMMON] unsigned char 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1993 ;;      Params:         4       0       0       0       0
  1994 ;;      Locals:         6       0       0       0       0
  1995 ;;      Temps:          4       0       0       0       0
  1996 ;;      Totals:        14       0       0       0       0
  1997 ;;Total ram usage:       14 bytes
  1998 ;; Hardware stack levels used: 1
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_setDigit
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006     1E78                     ___xxtofl:	
  2007                           ;psect for function ___xxtofl
  2008                           
  2009                           
  2010                           ;incstack = 0
  2011                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2012                           ;___xxtofl@sign stored from wreg
  2013     1E78  00F8               	movwf	___xxtofl@sign
  2014     1E79                     l3374:
  2015     1E79  0878               	movf	___xxtofl@sign,w
  2016     1E7A  1903               	btfsc	3,2
  2017     1E7B  2E7D               	goto	u4861
  2018     1E7C  2E7E               	goto	u4860
  2019     1E7D                     u4861:
  2020     1E7D  2E92               	goto	l3380
  2021     1E7E                     u4860:
  2022     1E7E                     l3376:
  2023     1E7E  1FF3               	btfss	___xxtofl@val+3,7
  2024     1E7F  2E81               	goto	u4871
  2025     1E80  2E82               	goto	u4870
  2026     1E81                     u4871:
  2027     1E81  2E92               	goto	l3380
  2028     1E82                     u4870:
  2029     1E82                     l3378:
  2030     1E82  0970               	comf	___xxtofl@val,w
  2031     1E83  00FA               	movwf	___xxtofl@arg
  2032     1E84  0971               	comf	___xxtofl@val+1,w
  2033     1E85  00FB               	movwf	___xxtofl@arg+1
  2034     1E86  0972               	comf	___xxtofl@val+2,w
  2035     1E87  00FC               	movwf	___xxtofl@arg+2
  2036     1E88  0973               	comf	___xxtofl@val+3,w
  2037     1E89  00FD               	movwf	___xxtofl@arg+3
  2038     1E8A  0AFA               	incf	___xxtofl@arg,f
  2039     1E8B  1903               	skipnz
  2040     1E8C  0AFB               	incf	___xxtofl@arg+1,f
  2041     1E8D  1903               	skipnz
  2042     1E8E  0AFC               	incf	___xxtofl@arg+2,f
  2043     1E8F  1903               	skipnz
  2044     1E90  0AFD               	incf	___xxtofl@arg+3,f
  2045     1E91  2E9A               	goto	l673
  2046     1E92                     l3380:
  2047     1E92  0873               	movf	___xxtofl@val+3,w
  2048     1E93  00FD               	movwf	___xxtofl@arg+3
  2049     1E94  0872               	movf	___xxtofl@val+2,w
  2050     1E95  00FC               	movwf	___xxtofl@arg+2
  2051     1E96  0871               	movf	___xxtofl@val+1,w
  2052     1E97  00FB               	movwf	___xxtofl@arg+1
  2053     1E98  0870               	movf	___xxtofl@val,w
  2054     1E99  00FA               	movwf	___xxtofl@arg
  2055     1E9A                     l673:
  2056     1E9A  0873               	movf	___xxtofl@val+3,w
  2057     1E9B  0472               	iorwf	___xxtofl@val+2,w
  2058     1E9C  0471               	iorwf	___xxtofl@val+1,w
  2059     1E9D  0470               	iorwf	___xxtofl@val,w
  2060     1E9E  1D03               	skipz
  2061     1E9F  2EA1               	goto	u4881
  2062     1EA0  2EA2               	goto	u4880
  2063     1EA1                     u4881:
  2064     1EA1  2EAB               	goto	l674
  2065     1EA2                     u4880:
  2066     1EA2                     l3382:
  2067     1EA2  3000               	movlw	0
  2068     1EA3  00F3               	movwf	?___xxtofl+3
  2069     1EA4  3000               	movlw	0
  2070     1EA5  00F2               	movwf	?___xxtofl+2
  2071     1EA6  3000               	movlw	0
  2072     1EA7  00F1               	movwf	?___xxtofl+1
  2073     1EA8  3000               	movlw	0
  2074     1EA9  00F0               	movwf	?___xxtofl
  2075     1EAA  2F2B               	goto	l675
  2076     1EAB                     l674:
  2077     1EAB  3096               	movlw	150
  2078     1EAC  00F9               	movwf	___xxtofl@exp
  2079     1EAD  2EB9               	goto	l3388
  2080     1EAE                     l3386:
  2081     1EAE  3001               	movlw	1
  2082     1EAF  07F9               	addwf	___xxtofl@exp,f
  2083     1EB0  3001               	movlw	1
  2084     1EB1                     u4895:
  2085     1EB1  1003               	clrc
  2086     1EB2  0CFD               	rrf	___xxtofl@arg+3,f
  2087     1EB3  0CFC               	rrf	___xxtofl@arg+2,f
  2088     1EB4  0CFB               	rrf	___xxtofl@arg+1,f
  2089     1EB5  0CFA               	rrf	___xxtofl@arg,f
  2090     1EB6  3EFF               	addlw	-1
  2091     1EB7  1D03               	skipz
  2092     1EB8  2EB1               	goto	u4895
  2093     1EB9                     l3388:
  2094     1EB9  30FE               	movlw	254
  2095     1EBA  057D               	andwf	___xxtofl@arg+3,w
  2096     1EBB  1D03               	btfss	3,2
  2097     1EBC  2EBE               	goto	u4901
  2098     1EBD  2EBF               	goto	u4900
  2099     1EBE                     u4901:
  2100     1EBE  2EAE               	goto	l3386
  2101     1EBF                     u4900:
  2102     1EBF  2ED9               	goto	l679
  2103     1EC0                     l3390:
  2104     1EC0  3001               	movlw	1
  2105     1EC1  07F9               	addwf	___xxtofl@exp,f
  2106     1EC2                     l3392:
  2107     1EC2  3001               	movlw	1
  2108     1EC3  07FA               	addwf	___xxtofl@arg,f
  2109     1EC4  3000               	movlw	0
  2110     1EC5  1803               	skipnc
  2111     1EC6  3001               	movlw	1
  2112     1EC7  07FB               	addwf	___xxtofl@arg+1,f
  2113     1EC8  3000               	movlw	0
  2114     1EC9  1803               	skipnc
  2115     1ECA  3001               	movlw	1
  2116     1ECB  07FC               	addwf	___xxtofl@arg+2,f
  2117     1ECC  3000               	movlw	0
  2118     1ECD  1803               	skipnc
  2119     1ECE  3001               	movlw	1
  2120     1ECF  07FD               	addwf	___xxtofl@arg+3,f
  2121     1ED0                     l3394:
  2122     1ED0  3001               	movlw	1
  2123     1ED1                     u4915:
  2124     1ED1  1003               	clrc
  2125     1ED2  0CFD               	rrf	___xxtofl@arg+3,f
  2126     1ED3  0CFC               	rrf	___xxtofl@arg+2,f
  2127     1ED4  0CFB               	rrf	___xxtofl@arg+1,f
  2128     1ED5  0CFA               	rrf	___xxtofl@arg,f
  2129     1ED6  3EFF               	addlw	-1
  2130     1ED7  1D03               	skipz
  2131     1ED8  2ED1               	goto	u4915
  2132     1ED9                     l679:
  2133     1ED9  30FF               	movlw	255
  2134     1EDA  057D               	andwf	___xxtofl@arg+3,w
  2135     1EDB  1D03               	btfss	3,2
  2136     1EDC  2EDE               	goto	u4921
  2137     1EDD  2EDF               	goto	u4920
  2138     1EDE                     u4921:
  2139     1EDE  2EC0               	goto	l3390
  2140     1EDF                     u4920:
  2141     1EDF  2EEB               	goto	l3398
  2142     1EE0                     l3396:
  2143     1EE0  3001               	movlw	1
  2144     1EE1  02F9               	subwf	___xxtofl@exp,f
  2145     1EE2  3001               	movlw	1
  2146     1EE3  00F4               	movwf	??___xxtofl
  2147     1EE4                     u4935:
  2148     1EE4  1003               	clrc
  2149     1EE5  0DFA               	rlf	___xxtofl@arg,f
  2150     1EE6  0DFB               	rlf	___xxtofl@arg+1,f
  2151     1EE7  0DFC               	rlf	___xxtofl@arg+2,f
  2152     1EE8  0DFD               	rlf	___xxtofl@arg+3,f
  2153     1EE9  0BF4               	decfsz	??___xxtofl,f
  2154     1EEA  2EE4               	goto	u4935
  2155     1EEB                     l3398:
  2156     1EEB  1BFC               	btfsc	___xxtofl@arg+2,7
  2157     1EEC  2EEE               	goto	u4941
  2158     1EED  2EEF               	goto	u4940
  2159     1EEE                     u4941:
  2160     1EEE  2EF5               	goto	l686
  2161     1EEF                     u4940:
  2162     1EEF                     l3400:
  2163     1EEF  3002               	movlw	2
  2164     1EF0  0279               	subwf	___xxtofl@exp,w
  2165     1EF1  1803               	skipnc
  2166     1EF2  2EF4               	goto	u4951
  2167     1EF3  2EF5               	goto	u4950
  2168     1EF4                     u4951:
  2169     1EF4  2EE0               	goto	l3396
  2170     1EF5                     u4950:
  2171     1EF5                     l686:
  2172     1EF5  1879               	btfsc	___xxtofl@exp,0
  2173     1EF6  2EF8               	goto	u4961
  2174     1EF7  2EF9               	goto	u4960
  2175     1EF8                     u4961:
  2176     1EF8  2F01               	goto	l687
  2177     1EF9                     u4960:
  2178     1EF9                     l3402:
  2179     1EF9  30FF               	movlw	255
  2180     1EFA  05FA               	andwf	___xxtofl@arg,f
  2181     1EFB  30FF               	movlw	255
  2182     1EFC  05FB               	andwf	___xxtofl@arg+1,f
  2183     1EFD  307F               	movlw	127
  2184     1EFE  05FC               	andwf	___xxtofl@arg+2,f
  2185     1EFF  30FF               	movlw	255
  2186     1F00  05FD               	andwf	___xxtofl@arg+3,f
  2187     1F01                     l687:
  2188     1F01  1003               	clrc
  2189     1F02  0CF9               	rrf	___xxtofl@exp,f
  2190     1F03                     l3404:
  2191     1F03  0879               	movf	___xxtofl@exp,w
  2192     1F04  00F4               	movwf	??___xxtofl
  2193     1F05  01F5               	clrf	??___xxtofl+1
  2194     1F06  01F6               	clrf	??___xxtofl+2
  2195     1F07  01F7               	clrf	??___xxtofl+3
  2196     1F08  3018               	movlw	24
  2197     1F09                     u4975:
  2198     1F09  1003               	clrc
  2199     1F0A  0DF4               	rlf	??___xxtofl,f
  2200     1F0B  0DF5               	rlf	??___xxtofl+1,f
  2201     1F0C  0DF6               	rlf	??___xxtofl+2,f
  2202     1F0D  0DF7               	rlf	??___xxtofl+3,f
  2203     1F0E                     u4970:
  2204     1F0E  3EFF               	addlw	-1
  2205     1F0F  1D03               	skipz
  2206     1F10  2F09               	goto	u4975
  2207     1F11  0874               	movf	??___xxtofl,w
  2208     1F12  04FA               	iorwf	___xxtofl@arg,f
  2209     1F13  0875               	movf	??___xxtofl+1,w
  2210     1F14  04FB               	iorwf	___xxtofl@arg+1,f
  2211     1F15  0876               	movf	??___xxtofl+2,w
  2212     1F16  04FC               	iorwf	___xxtofl@arg+2,f
  2213     1F17  0877               	movf	??___xxtofl+3,w
  2214     1F18  04FD               	iorwf	___xxtofl@arg+3,f
  2215     1F19                     l3406:
  2216     1F19  0878               	movf	___xxtofl@sign,w
  2217     1F1A  1903               	btfsc	3,2
  2218     1F1B  2F1D               	goto	u4981
  2219     1F1C  2F1E               	goto	u4980
  2220     1F1D                     u4981:
  2221     1F1D  2F23               	goto	l3412
  2222     1F1E                     u4980:
  2223     1F1E                     l3408:
  2224     1F1E  1FF3               	btfss	___xxtofl@val+3,7
  2225     1F1F  2F21               	goto	u4991
  2226     1F20  2F22               	goto	u4990
  2227     1F21                     u4991:
  2228     1F21  2F23               	goto	l3412
  2229     1F22                     u4990:
  2230     1F22                     l3410:
  2231     1F22  17FD               	bsf	___xxtofl@arg+3,7
  2232     1F23                     l3412:
  2233     1F23  087D               	movf	___xxtofl@arg+3,w
  2234     1F24  00F3               	movwf	?___xxtofl+3
  2235     1F25  087C               	movf	___xxtofl@arg+2,w
  2236     1F26  00F2               	movwf	?___xxtofl+2
  2237     1F27  087B               	movf	___xxtofl@arg+1,w
  2238     1F28  00F1               	movwf	?___xxtofl+1
  2239     1F29  087A               	movf	___xxtofl@arg,w
  2240     1F2A  00F0               	movwf	?___xxtofl
  2241     1F2B                     l675:
  2242     1F2B  0008               	return
  2243     1F2C                     __end_of___xxtofl:
  2244                           
  2245                           	psect	text3
  2246     1BC4                     __ptext3:	
  2247 ;; *************** function _LCDdisplay *****************
  2248 ;; Defined at:
  2249 ;;		line 56 in file "C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c"
  2250 ;; Parameters:    Size  Location     Type
  2251 ;;  sentence        2    4[COMMON] PTR unsigned char 
  2252 ;;		 -> main@output(16), STR_17(2), STR_16(2), STR_15(2), 
  2253 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  2254 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  2255 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  2256 ;;		 -> STR_2(2), STR_1(1), 
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;  ind             2    8[COMMON] unsigned short 
  2259 ;;  lineLength      2    6[COMMON] unsigned short 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;                  1    wreg      void 
  2262 ;; Registers used:
  2263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2269 ;;      Params:         2       0       0       0       0
  2270 ;;      Locals:         4       0       0       0       0
  2271 ;;      Temps:          0       0       0       0       0
  2272 ;;      Totals:         6       0       0       0       0
  2273 ;;Total ram usage:        6 bytes
  2274 ;; Hardware stack levels used: 1
  2275 ;; Hardware stack levels required when called: 2
  2276 ;; This function calls:
  2277 ;;		_strlen
  2278 ;;		_toggleEnable
  2279 ;; This function is called by:
  2280 ;;		_setDigit
  2281 ;;		_main
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285     1BC4                     _LCDdisplay:	
  2286                           ;psect for function _LCDdisplay
  2287                           
  2288     1BC4                     l3326:	
  2289                           ;incstack = 0
  2290                           ; Regs used in _LCDdisplay: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2291                           
  2292                           
  2293                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 57:     PORTCbits.RC0 
      +                          = 1;
  2294     1BC4  1283               	bcf	3,5	;RP0=0, select bank0
  2295     1BC5  1303               	bcf	3,6	;RP1=0, select bank0
  2296     1BC6  1407               	bsf	7,0	;volatile
  2297                           
  2298                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 58:     PORTCbits.RC1 
      +                          = 0;
  2299     1BC7  1087               	bcf	7,1	;volatile
  2300     1BC8                     l3328:
  2301                           
  2302                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 59:     uint16_t lineL
      +                          ength = strlen(sentence);
  2303     1BC8  0874               	movf	LCDdisplay@sentence,w
  2304     1BC9  00F0               	movwf	strlen@s
  2305     1BCA  0875               	movf	LCDdisplay@sentence+1,w
  2306     1BCB  00F1               	movwf	strlen@s+1
  2307     1BCC  160A  158A  2379  160A  158A  	fcall	_strlen
  2308     1BD1  0871               	movf	?_strlen+1,w
  2309     1BD2  00F7               	movwf	LCDdisplay@lineLength+1
  2310     1BD3  0870               	movf	?_strlen,w
  2311     1BD4  00F6               	movwf	LCDdisplay@lineLength
  2312     1BD5                     l3330:
  2313                           
  2314                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 60:     for(uint16_t i
      +                          nd = 0; ind < lineLength; ind++){
  2315     1BD5  01F8               	clrf	LCDdisplay@ind
  2316     1BD6  01F9               	clrf	LCDdisplay@ind+1
  2317     1BD7  2BF2               	goto	l3338
  2318     1BD8                     l3332:
  2319                           
  2320                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 61:         PORTB = (u
      +                          int8_t)sentence[ind];
  2321     1BD8  0878               	movf	LCDdisplay@ind,w
  2322     1BD9  0774               	addwf	LCDdisplay@sentence,w
  2323     1BDA  0084               	movwf	4
  2324     1BDB  0875               	movf	LCDdisplay@sentence+1,w
  2325     1BDC  1803               	skipnc
  2326     1BDD  0A75               	incf	LCDdisplay@sentence+1,w
  2327     1BDE  1283               	bcf	3,5	;RP0=0, select bank0
  2328     1BDF  1303               	bcf	3,6	;RP1=0, select bank0
  2329     1BE0  00FF               	movwf	btemp+1
  2330     1BE1  160A  158A  2000  160A  158A  	fcall	stringtab
  2331     1BE6  0086               	movwf	6	;volatile
  2332     1BE7                     l3334:
  2333                           
  2334                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 62:         toggleEnab
      +                          le();
  2335     1BE7  160A  158A  22E1  160A  158A  	fcall	_toggleEnable
  2336     1BEC                     l3336:
  2337                           
  2338                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 63:     }
  2339     1BEC  3001               	movlw	1
  2340     1BED  07F8               	addwf	LCDdisplay@ind,f
  2341     1BEE  1803               	skipnc
  2342     1BEF  0AF9               	incf	LCDdisplay@ind+1,f
  2343     1BF0  3000               	movlw	0
  2344     1BF1  07F9               	addwf	LCDdisplay@ind+1,f
  2345     1BF2                     l3338:
  2346     1BF2  0877               	movf	LCDdisplay@lineLength+1,w
  2347     1BF3  0279               	subwf	LCDdisplay@ind+1,w
  2348     1BF4  1D03               	skipz
  2349     1BF5  2BF8               	goto	u4805
  2350     1BF6  0876               	movf	LCDdisplay@lineLength,w
  2351     1BF7  0278               	subwf	LCDdisplay@ind,w
  2352     1BF8                     u4805:
  2353     1BF8  1C03               	skipc
  2354     1BF9  2BFB               	goto	u4801
  2355     1BFA  2BFC               	goto	u4800
  2356     1BFB                     u4801:
  2357     1BFB  2BD8               	goto	l3332
  2358     1BFC                     u4800:
  2359     1BFC                     l32:
  2360     1BFC  0008               	return
  2361     1BFD                     __end_of_LCDdisplay:
  2362                           
  2363                           	psect	text4
  2364     1AF6                     __ptext4:	
  2365 ;; *************** function _selectRow *****************
  2366 ;; Defined at:
  2367 ;;		line 65 in file "C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  row             2    3[COMMON] unsigned short 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;		None
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2381 ;;      Params:         2       0       0       0       0
  2382 ;;      Locals:         0       0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0
  2384 ;;      Totals:         2       0       0       0       0
  2385 ;;Total ram usage:        2 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 2
  2388 ;; This function calls:
  2389 ;;		_sendCommand
  2390 ;; This function is called by:
  2391 ;;		_main
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395     1AF6                     _selectRow:	
  2396                           ;psect for function _selectRow
  2397                           
  2398     1AF6                     l3416:	
  2399                           ;incstack = 0
  2400                           ; Regs used in _selectRow: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2401                           
  2402                           
  2403                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 66:     switch(row){
  2404     1AF6  2B05               	goto	l3424
  2405     1AF7                     l3418:
  2406     1AF7  3080               	movlw	128
  2407     1AF8  160A  158A  22BF  160A  158A  	fcall	_sendCommand
  2408     1AFD  2B12               	goto	l39
  2409     1AFE                     l3420:
  2410     1AFE  30C0               	movlw	192
  2411     1AFF  160A  158A  22BF  160A  158A  	fcall	_sendCommand
  2412     1B04  2B12               	goto	l39
  2413     1B05                     l3424:
  2414                           
  2415                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2416                           ; Switch size 1, requested type "simple"
  2417                           ; Number of cases is 1, Range of values is 0 to 0
  2418                           ; switch strategies available:
  2419                           ; Name         Instructions Cycles
  2420                           ; simple_byte            4     3 (average)
  2421                           ; direct_byte           11     8 (fixed)
  2422                           ; jumptable            260     6 (fixed)
  2423                           ;	Chosen strategy is simple_byte
  2424     1B05  0874               	movf	selectRow@row+1,w
  2425     1B06  3A00               	xorlw	0	; case 0
  2426     1B07  1903               	skipnz
  2427     1B08  2B0A               	goto	l3782
  2428     1B09  2B12               	goto	l39
  2429     1B0A                     l3782:
  2430                           
  2431                           ; Switch size 1, requested type "simple"
  2432                           ; Number of cases is 2, Range of values is 1 to 2
  2433                           ; switch strategies available:
  2434                           ; Name         Instructions Cycles
  2435                           ; simple_byte            7     4 (average)
  2436                           ; direct_byte           17    11 (fixed)
  2437                           ; jumptable            263     9 (fixed)
  2438                           ;	Chosen strategy is simple_byte
  2439     1B0A  0873               	movf	selectRow@row,w
  2440     1B0B  3A01               	xorlw	1	; case 1
  2441     1B0C  1903               	skipnz
  2442     1B0D  2AF7               	goto	l3418
  2443     1B0E  3A03               	xorlw	3	; case 2
  2444     1B0F  1903               	skipnz
  2445     1B10  2AFE               	goto	l3420
  2446     1B11  2B12               	goto	l39
  2447     1B12                     l39:
  2448     1B12  0008               	return
  2449     1B13                     __end_of_selectRow:
  2450                           
  2451                           	psect	text5
  2452     1ABF                     __ptext5:	
  2453 ;; *************** function _sendCommand *****************
  2454 ;; Defined at:
  2455 ;;		line 50 in file "C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  command         1    wreg     unsigned char 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;  command         1    2[COMMON] unsigned char 
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		wreg, status,2, status,0, pclath, cstack
  2464 ;; Tracked objects:
  2465 ;;		On entry : 0/0
  2466 ;;		On exit  : 0/0
  2467 ;;		Unchanged: 0/0
  2468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2469 ;;      Params:         0       0       0       0       0
  2470 ;;      Locals:         1       0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0
  2472 ;;      Totals:         1       0       0       0       0
  2473 ;;Total ram usage:        1 bytes
  2474 ;; Hardware stack levels used: 1
  2475 ;; Hardware stack levels required when called: 1
  2476 ;; This function calls:
  2477 ;;		_toggleEnable
  2478 ;; This function is called by:
  2479 ;;		_selectRow
  2480 ;;		_main
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484     1ABF                     _sendCommand:	
  2485                           ;psect for function _sendCommand
  2486                           
  2487                           
  2488                           ;incstack = 0
  2489                           ; Regs used in _sendCommand: [wreg+status,2+status,0+pclath+cstack]
  2490                           ;sendCommand@command stored from wreg
  2491     1ABF  00F2               	movwf	sendCommand@command
  2492     1AC0                     l3320:
  2493                           
  2494                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 51:     PORTCbits.RC0 
      +                          = 0;
  2495     1AC0  1283               	bcf	3,5	;RP0=0, select bank0
  2496     1AC1  1303               	bcf	3,6	;RP1=0, select bank0
  2497     1AC2  1007               	bcf	7,0	;volatile
  2498                           
  2499                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 52:     PORTCbits.RC1 
      +                          = 0;
  2500     1AC3  1087               	bcf	7,1	;volatile
  2501     1AC4                     l3322:
  2502                           
  2503                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 53:     PORTB = comman
      +                          d;
  2504     1AC4  0872               	movf	sendCommand@command,w
  2505     1AC5  0086               	movwf	6	;volatile
  2506     1AC6                     l3324:
  2507                           
  2508                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 54:     toggleEnable()
      +                          ;
  2509     1AC6  160A  158A  22E1  160A  158A  	fcall	_toggleEnable
  2510     1ACB                     l26:
  2511     1ACB  0008               	return
  2512     1ACC                     __end_of_sendCommand:
  2513                           
  2514                           	psect	text6
  2515     1AE1                     __ptext6:	
  2516 ;; *************** function _toggleEnable *****************
  2517 ;; Defined at:
  2518 ;;		line 44 in file "C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;		None
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2532 ;;      Params:         0       0       0       0       0
  2533 ;;      Locals:         0       0       0       0       0
  2534 ;;      Temps:          2       0       0       0       0
  2535 ;;      Totals:         2       0       0       0       0
  2536 ;;Total ram usage:        2 bytes
  2537 ;; Hardware stack levels used: 1
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_sendCommand
  2542 ;;		_LCDdisplay
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546     1AE1                     _toggleEnable:	
  2547                           ;psect for function _toggleEnable
  2548                           
  2549     1AE1                     l3302:	
  2550                           ;incstack = 0
  2551                           ; Regs used in _toggleEnable: [wreg]
  2552                           
  2553                           
  2554                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 45:     PORTCbits.RC2 
      +                          = 1;
  2555     1AE1  1283               	bcf	3,5	;RP0=0, select bank0
  2556     1AE2  1303               	bcf	3,6	;RP1=0, select bank0
  2557     1AE3  1507               	bsf	7,2	;volatile
  2558     1AE4                     l3304:
  2559                           
  2560                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 46:     _delay((unsign
      +                          ed long)((10)*(20000000/4000000.0)));
  2561     1AE4  3010               	movlw	16
  2562     1AE5  00F0               	movwf	??_toggleEnable
  2563     1AE6                     u5487:
  2564     1AE6  0BF0               	decfsz	??_toggleEnable,f
  2565     1AE7  2AE6               	goto	u5487
  2566     1AE8  0000               	nop
  2567     1AE9                     l3306:
  2568                           
  2569                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 47:     PORTCbits.RC2 
      +                          = 0;
  2570     1AE9  1283               	bcf	3,5	;RP0=0, select bank0
  2571     1AEA  1303               	bcf	3,6	;RP1=0, select bank0
  2572     1AEB  1107               	bcf	7,2	;volatile
  2573                           
  2574                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 48:     _delay((unsign
      +                          ed long)((10)*(20000000/4000.0)));
  2575     1AEC  3041               	movlw	65
  2576     1AED  00F1               	movwf	??_toggleEnable+1
  2577     1AEE  30EE               	movlw	238
  2578     1AEF  00F0               	movwf	??_toggleEnable
  2579     1AF0                     u5497:
  2580     1AF0  0BF0               	decfsz	??_toggleEnable,f
  2581     1AF1  2AF0               	goto	u5497
  2582     1AF2  0BF1               	decfsz	??_toggleEnable+1,f
  2583     1AF3  2AF0               	goto	u5497
  2584     1AF4  0000               	nop
  2585     1AF5                     l23:
  2586     1AF5  0008               	return
  2587     1AF6                     __end_of_toggleEnable:
  2588                           
  2589                           	psect	text7
  2590     148A                     __ptext7:	
  2591 ;; *************** function _getInput *****************
  2592 ;; Defined at:
  2593 ;;		line 82 in file "C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  output          1    7[COMMON] PTR unsigned char [1]
  2598 ;;		 -> STR_17(2), STR_16(2), STR_15(2), STR_14(2), 
  2599 ;;		 -> STR_13(2), STR_12(2), STR_11(2), STR_10(2), 
  2600 ;;		 -> STR_9(2), STR_8(2), STR_7(2), STR_6(2), 
  2601 ;;		 -> STR_5(2), STR_4(2), STR_3(2), STR_2(2), 
  2602 ;;		 -> STR_1(1), 
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1   46[None  ] PTR unsigned char 
  2605 ;; Registers used:
  2606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2612 ;;      Params:         0       0       0       0       0
  2613 ;;      Locals:         1       0       0       0       0
  2614 ;;      Temps:          3       0       0       0       0
  2615 ;;      Totals:         4       0       0       0       0
  2616 ;;Total ram usage:        4 bytes
  2617 ;; Hardware stack levels used: 1
  2618 ;; Hardware stack levels required when called: 2
  2619 ;; This function calls:
  2620 ;;		_strlen
  2621 ;; This function is called by:
  2622 ;;		_main
  2623 ;; This function uses a non-reentrant model
  2624 ;;
  2625                           
  2626     148A                     _getInput:	
  2627                           ;psect for function _getInput
  2628                           
  2629     148A                     l3438:	
  2630                           ;incstack = 0
  2631                           ; Regs used in _getInput: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2632                           
  2633                           
  2634                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 83:     char *output[1
      +                          ];;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 84:     *output = ""
      +                          ;
  2635     148A  300D               	movlw	(low (((STR_17+1)-__stringbase)| (0+32768)))& (0+255)
  2636     148B  00F7               	movwf	getInput@output
  2637                           
  2638                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 85:     _delay((unsign
      +                          ed long)((300)*(20000000/4000.0)));
  2639     148C  3008               	movlw	8
  2640     148D  00F6               	movwf	??_getInput+2
  2641     148E  309D               	movlw	157
  2642     148F  00F5               	movwf	??_getInput+1
  2643     1490  3005               	movlw	5
  2644     1491  00F4               	movwf	??_getInput
  2645     1492                     u5507:
  2646     1492  0BF4               	decfsz	??_getInput,f
  2647     1493  2C92               	goto	u5507
  2648     1494  0BF5               	decfsz	??_getInput+1,f
  2649     1495  2C92               	goto	u5507
  2650     1496  0BF6               	decfsz	??_getInput+2,f
  2651     1497  2C92               	goto	u5507
  2652     1498  2C99               	nop2
  2653     1499                     l3440:
  2654                           
  2655                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 87:         PORTDbits.
      +                          RD4 = 1;
  2656     1499  1283               	bcf	3,5	;RP0=0, select bank0
  2657     149A  1303               	bcf	3,6	;RP1=0, select bank0
  2658     149B  1608               	bsf	8,4	;volatile
  2659     149C                     l3442:
  2660                           
  2661                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 88:         if(PORTDbi
      +                          ts.RD0){
  2662     149C  1C08               	btfss	8,0	;volatile
  2663     149D  2C9F               	goto	u5011
  2664     149E  2CA0               	goto	u5010
  2665     149F                     u5011:
  2666     149F  2CB2               	goto	l48
  2667     14A0                     u5010:
  2668     14A0                     l3444:
  2669                           
  2670                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 89:             _delay
      +                          ((unsigned long)((10)*(20000000/4000.0)));
  2671     14A0  3041               	movlw	65
  2672     14A1  00F5               	movwf	??_getInput+1
  2673     14A2  30EE               	movlw	238
  2674     14A3  00F4               	movwf	??_getInput
  2675     14A4                     u5517:
  2676     14A4  0BF4               	decfsz	??_getInput,f
  2677     14A5  2CA4               	goto	u5517
  2678     14A6  0BF5               	decfsz	??_getInput+1,f
  2679     14A7  2CA4               	goto	u5517
  2680     14A8  0000               	nop
  2681     14A9                     l3446:
  2682                           
  2683                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 90:             if(POR
      +                          TDbits.RD0){
  2684     14A9  1283               	bcf	3,5	;RP0=0, select bank0
  2685     14AA  1303               	bcf	3,6	;RP1=0, select bank0
  2686     14AB  1C08               	btfss	8,0	;volatile
  2687     14AC  2CAE               	goto	u5021
  2688     14AD  2CAF               	goto	u5020
  2689     14AE                     u5021:
  2690     14AE  2CFD               	goto	l3470
  2691     14AF                     u5020:
  2692     14AF                     l3448:
  2693                           
  2694                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 91:                 *o
      +                          utput = "7";
  2695     14AF  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2696     14B0  00F7               	movwf	getInput@output
  2697     14B1  2CFD               	goto	l3470
  2698     14B2                     l48:	
  2699                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 94:         else if(PO
      +                          RTDbits.RD1){
  2700                           
  2701     14B2  1C88               	btfss	8,1	;volatile
  2702     14B3  2CB5               	goto	u5031
  2703     14B4  2CB6               	goto	u5030
  2704     14B5                     u5031:
  2705     14B5  2CC8               	goto	l51
  2706     14B6                     u5030:
  2707     14B6                     l3450:
  2708                           
  2709                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 95:             _delay
      +                          ((unsigned long)((10)*(20000000/4000.0)));
  2710     14B6  3041               	movlw	65
  2711     14B7  00F5               	movwf	??_getInput+1
  2712     14B8  30EE               	movlw	238
  2713     14B9  00F4               	movwf	??_getInput
  2714     14BA                     u5527:
  2715     14BA  0BF4               	decfsz	??_getInput,f
  2716     14BB  2CBA               	goto	u5527
  2717     14BC  0BF5               	decfsz	??_getInput+1,f
  2718     14BD  2CBA               	goto	u5527
  2719     14BE  0000               	nop
  2720     14BF                     l3452:
  2721                           
  2722                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 96:             if(POR
      +                          TDbits.RD1){
  2723     14BF  1283               	bcf	3,5	;RP0=0, select bank0
  2724     14C0  1303               	bcf	3,6	;RP1=0, select bank0
  2725     14C1  1C88               	btfss	8,1	;volatile
  2726     14C2  2CC4               	goto	u5041
  2727     14C3  2CC5               	goto	u5040
  2728     14C4                     u5041:
  2729     14C4  2CFD               	goto	l3470
  2730     14C5                     u5040:
  2731     14C5                     l3454:
  2732                           
  2733                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 97:                 *o
      +                          utput = "4";
  2734     14C5  301A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2735     14C6  00F7               	movwf	getInput@output
  2736     14C7  2CFD               	goto	l3470
  2737     14C8                     l51:	
  2738                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 100:         else if(P
      +                          ORTDbits.RD2){
  2739                           
  2740     14C8  1D08               	btfss	8,2	;volatile
  2741     14C9  2CCB               	goto	u5051
  2742     14CA  2CCC               	goto	u5050
  2743     14CB                     u5051:
  2744     14CB  2CDE               	goto	l54
  2745     14CC                     u5050:
  2746     14CC                     l3456:
  2747                           
  2748                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 101:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  2749     14CC  3041               	movlw	65
  2750     14CD  00F5               	movwf	??_getInput+1
  2751     14CE  30EE               	movlw	238
  2752     14CF  00F4               	movwf	??_getInput
  2753     14D0                     u5537:
  2754     14D0  0BF4               	decfsz	??_getInput,f
  2755     14D1  2CD0               	goto	u5537
  2756     14D2  0BF5               	decfsz	??_getInput+1,f
  2757     14D3  2CD0               	goto	u5537
  2758     14D4  0000               	nop
  2759     14D5                     l3458:
  2760                           
  2761                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 102:             if(PO
      +                          RTDbits.RD2){
  2762     14D5  1283               	bcf	3,5	;RP0=0, select bank0
  2763     14D6  1303               	bcf	3,6	;RP1=0, select bank0
  2764     14D7  1D08               	btfss	8,2	;volatile
  2765     14D8  2CDA               	goto	u5061
  2766     14D9  2CDB               	goto	u5060
  2767     14DA                     u5061:
  2768     14DA  2CFD               	goto	l3470
  2769     14DB                     u5060:
  2770     14DB                     l3460:
  2771                           
  2772                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 103:                 *
      +                          output = "1";
  2773     14DB  3014               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2774     14DC  00F7               	movwf	getInput@output
  2775     14DD  2CFD               	goto	l3470
  2776     14DE                     l54:	
  2777                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 106:         else if(P
      +                          ORTDbits.RD3){
  2778                           
  2779     14DE  1D88               	btfss	8,3	;volatile
  2780     14DF  2CE1               	goto	u5071
  2781     14E0  2CE2               	goto	u5070
  2782     14E1                     u5071:
  2783     14E1  2CF4               	goto	l3468
  2784     14E2                     u5070:
  2785     14E2                     l3462:
  2786                           
  2787                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 107:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  2788     14E2  3041               	movlw	65
  2789     14E3  00F5               	movwf	??_getInput+1
  2790     14E4  30EE               	movlw	238
  2791     14E5  00F4               	movwf	??_getInput
  2792     14E6                     u5547:
  2793     14E6  0BF4               	decfsz	??_getInput,f
  2794     14E7  2CE6               	goto	u5547
  2795     14E8  0BF5               	decfsz	??_getInput+1,f
  2796     14E9  2CE6               	goto	u5547
  2797     14EA  0000               	nop
  2798     14EB                     l3464:
  2799                           
  2800                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 108:             if(PO
      +                          RTDbits.RD3){
  2801     14EB  1283               	bcf	3,5	;RP0=0, select bank0
  2802     14EC  1303               	bcf	3,6	;RP1=0, select bank0
  2803     14ED  1D88               	btfss	8,3	;volatile
  2804     14EE  2CF0               	goto	u5081
  2805     14EF  2CF1               	goto	u5080
  2806     14F0                     u5081:
  2807     14F0  2CFD               	goto	l3470
  2808     14F1                     u5080:
  2809     14F1                     l3466:
  2810                           
  2811                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 109:                 *
      +                          output = "C";
  2812     14F1  3028               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2813     14F2  00F7               	movwf	getInput@output
  2814     14F3  2CFD               	goto	l3470
  2815     14F4                     l3468:
  2816                           
  2817                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 113:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  2818     14F4  3041               	movlw	65
  2819     14F5  00F5               	movwf	??_getInput+1
  2820     14F6  30EE               	movlw	238
  2821     14F7  00F4               	movwf	??_getInput
  2822     14F8                     u5557:
  2823     14F8  0BF4               	decfsz	??_getInput,f
  2824     14F9  2CF8               	goto	u5557
  2825     14FA  0BF5               	decfsz	??_getInput+1,f
  2826     14FB  2CF8               	goto	u5557
  2827     14FC  0000               	nop
  2828     14FD                     l3470:
  2829                           
  2830                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 115:         PORTDbits
      +                          .RD4 = 0;
  2831     14FD  1283               	bcf	3,5	;RP0=0, select bank0
  2832     14FE  1303               	bcf	3,6	;RP1=0, select bank0
  2833     14FF  1208               	bcf	8,4	;volatile
  2834     1500                     l3472:
  2835                           
  2836                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 116:         PORTDbits
      +                          .RD5 = 1;
  2837     1500  1688               	bsf	8,5	;volatile
  2838     1501                     l3474:
  2839                           
  2840                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 117:         if(PORTDb
      +                          its.RD0){
  2841     1501  1C08               	btfss	8,0	;volatile
  2842     1502  2D04               	goto	u5091
  2843     1503  2D05               	goto	u5090
  2844     1504                     u5091:
  2845     1504  2D17               	goto	l60
  2846     1505                     u5090:
  2847     1505                     l3476:
  2848                           
  2849                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 118:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  2850     1505  3041               	movlw	65
  2851     1506  00F5               	movwf	??_getInput+1
  2852     1507  30EE               	movlw	238
  2853     1508  00F4               	movwf	??_getInput
  2854     1509                     u5567:
  2855     1509  0BF4               	decfsz	??_getInput,f
  2856     150A  2D09               	goto	u5567
  2857     150B  0BF5               	decfsz	??_getInput+1,f
  2858     150C  2D09               	goto	u5567
  2859     150D  0000               	nop
  2860     150E                     l3478:
  2861                           
  2862                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 119:             if(PO
      +                          RTDbits.RD0){
  2863     150E  1283               	bcf	3,5	;RP0=0, select bank0
  2864     150F  1303               	bcf	3,6	;RP1=0, select bank0
  2865     1510  1C08               	btfss	8,0	;volatile
  2866     1511  2D13               	goto	u5101
  2867     1512  2D14               	goto	u5100
  2868     1513                     u5101:
  2869     1513  2D62               	goto	l3502
  2870     1514                     u5100:
  2871     1514                     l3480:
  2872                           
  2873                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 120:                 *
      +                          output = "8";
  2874     1514  3022               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2875     1515  00F7               	movwf	getInput@output
  2876     1516  2D62               	goto	l3502
  2877     1517                     l60:	
  2878                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 123:         else if(P
      +                          ORTDbits.RD1){
  2879                           
  2880     1517  1C88               	btfss	8,1	;volatile
  2881     1518  2D1A               	goto	u5111
  2882     1519  2D1B               	goto	u5110
  2883     151A                     u5111:
  2884     151A  2D2D               	goto	l63
  2885     151B                     u5110:
  2886     151B                     l3482:
  2887                           
  2888                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 124:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  2889     151B  3041               	movlw	65
  2890     151C  00F5               	movwf	??_getInput+1
  2891     151D  30EE               	movlw	238
  2892     151E  00F4               	movwf	??_getInput
  2893     151F                     u5577:
  2894     151F  0BF4               	decfsz	??_getInput,f
  2895     1520  2D1F               	goto	u5577
  2896     1521  0BF5               	decfsz	??_getInput+1,f
  2897     1522  2D1F               	goto	u5577
  2898     1523  0000               	nop
  2899     1524                     l3484:
  2900                           
  2901                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 125:             if(PO
      +                          RTDbits.RD1){
  2902     1524  1283               	bcf	3,5	;RP0=0, select bank0
  2903     1525  1303               	bcf	3,6	;RP1=0, select bank0
  2904     1526  1C88               	btfss	8,1	;volatile
  2905     1527  2D29               	goto	u5121
  2906     1528  2D2A               	goto	u5120
  2907     1529                     u5121:
  2908     1529  2D62               	goto	l3502
  2909     152A                     u5120:
  2910     152A                     l3486:
  2911                           
  2912                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 126:                 *
      +                          output = "5";
  2913     152A  301C               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2914     152B  00F7               	movwf	getInput@output
  2915     152C  2D62               	goto	l3502
  2916     152D                     l63:	
  2917                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 129:         else if(P
      +                          ORTDbits.RD2){
  2918                           
  2919     152D  1D08               	btfss	8,2	;volatile
  2920     152E  2D30               	goto	u5131
  2921     152F  2D31               	goto	u5130
  2922     1530                     u5131:
  2923     1530  2D43               	goto	l66
  2924     1531                     u5130:
  2925     1531                     l3488:
  2926                           
  2927                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 130:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  2928     1531  3041               	movlw	65
  2929     1532  00F5               	movwf	??_getInput+1
  2930     1533  30EE               	movlw	238
  2931     1534  00F4               	movwf	??_getInput
  2932     1535                     u5587:
  2933     1535  0BF4               	decfsz	??_getInput,f
  2934     1536  2D35               	goto	u5587
  2935     1537  0BF5               	decfsz	??_getInput+1,f
  2936     1538  2D35               	goto	u5587
  2937     1539  0000               	nop
  2938     153A                     l3490:
  2939                           
  2940                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 131:             if(PO
      +                          RTDbits.RD2){
  2941     153A  1283               	bcf	3,5	;RP0=0, select bank0
  2942     153B  1303               	bcf	3,6	;RP1=0, select bank0
  2943     153C  1D08               	btfss	8,2	;volatile
  2944     153D  2D3F               	goto	u5141
  2945     153E  2D40               	goto	u5140
  2946     153F                     u5141:
  2947     153F  2D62               	goto	l3502
  2948     1540                     u5140:
  2949     1540                     l3492:
  2950                           
  2951                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 132:                 *
      +                          output = "2";
  2952     1540  3016               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2953     1541  00F7               	movwf	getInput@output
  2954     1542  2D62               	goto	l3502
  2955     1543                     l66:	
  2956                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 135:         else if(P
      +                          ORTDbits.RD3){
  2957                           
  2958     1543  1D88               	btfss	8,3	;volatile
  2959     1544  2D46               	goto	u5151
  2960     1545  2D47               	goto	u5150
  2961     1546                     u5151:
  2962     1546  2D59               	goto	l3500
  2963     1547                     u5150:
  2964     1547                     l3494:
  2965                           
  2966                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 136:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  2967     1547  3041               	movlw	65
  2968     1548  00F5               	movwf	??_getInput+1
  2969     1549  30EE               	movlw	238
  2970     154A  00F4               	movwf	??_getInput
  2971     154B                     u5597:
  2972     154B  0BF4               	decfsz	??_getInput,f
  2973     154C  2D4B               	goto	u5597
  2974     154D  0BF5               	decfsz	??_getInput+1,f
  2975     154E  2D4B               	goto	u5597
  2976     154F  0000               	nop
  2977     1550                     l3496:
  2978                           
  2979                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 137:             if(PO
      +                          RTDbits.RD3){
  2980     1550  1283               	bcf	3,5	;RP0=0, select bank0
  2981     1551  1303               	bcf	3,6	;RP1=0, select bank0
  2982     1552  1D88               	btfss	8,3	;volatile
  2983     1553  2D55               	goto	u5161
  2984     1554  2D56               	goto	u5160
  2985     1555                     u5161:
  2986     1555  2D62               	goto	l3502
  2987     1556                     u5160:
  2988     1556                     l3498:
  2989                           
  2990                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 138:                 *
      +                          output = "0";
  2991     1556  3012               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2992     1557  00F7               	movwf	getInput@output
  2993     1558  2D62               	goto	l3502
  2994     1559                     l3500:
  2995                           
  2996                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 142:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  2997     1559  3041               	movlw	65
  2998     155A  00F5               	movwf	??_getInput+1
  2999     155B  30EE               	movlw	238
  3000     155C  00F4               	movwf	??_getInput
  3001     155D                     u5607:
  3002     155D  0BF4               	decfsz	??_getInput,f
  3003     155E  2D5D               	goto	u5607
  3004     155F  0BF5               	decfsz	??_getInput+1,f
  3005     1560  2D5D               	goto	u5607
  3006     1561  0000               	nop
  3007     1562                     l3502:
  3008                           
  3009                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 144:         PORTDbits
      +                          .RD5 = 0;
  3010     1562  1283               	bcf	3,5	;RP0=0, select bank0
  3011     1563  1303               	bcf	3,6	;RP1=0, select bank0
  3012     1564  1288               	bcf	8,5	;volatile
  3013     1565                     l3504:
  3014                           
  3015                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 145:         PORTDbits
      +                          .RD6 = 1;
  3016     1565  1708               	bsf	8,6	;volatile
  3017     1566                     l3506:
  3018                           
  3019                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 146:         if(PORTDb
      +                          its.RD0){
  3020     1566  1C08               	btfss	8,0	;volatile
  3021     1567  2D69               	goto	u5171
  3022     1568  2D6A               	goto	u5170
  3023     1569                     u5171:
  3024     1569  2D7C               	goto	l72
  3025     156A                     u5170:
  3026     156A                     l3508:
  3027                           
  3028                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 147:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3029     156A  3041               	movlw	65
  3030     156B  00F5               	movwf	??_getInput+1
  3031     156C  30EE               	movlw	238
  3032     156D  00F4               	movwf	??_getInput
  3033     156E                     u5617:
  3034     156E  0BF4               	decfsz	??_getInput,f
  3035     156F  2D6E               	goto	u5617
  3036     1570  0BF5               	decfsz	??_getInput+1,f
  3037     1571  2D6E               	goto	u5617
  3038     1572  0000               	nop
  3039     1573                     l3510:
  3040                           
  3041                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 148:             if(PO
      +                          RTDbits.RD0){
  3042     1573  1283               	bcf	3,5	;RP0=0, select bank0
  3043     1574  1303               	bcf	3,6	;RP1=0, select bank0
  3044     1575  1C08               	btfss	8,0	;volatile
  3045     1576  2D78               	goto	u5181
  3046     1577  2D79               	goto	u5180
  3047     1578                     u5181:
  3048     1578  2DC7               	goto	l3534
  3049     1579                     u5180:
  3050     1579                     l3512:
  3051                           
  3052                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 149:                 *
      +                          output = "9";
  3053     1579  3024               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  3054     157A  00F7               	movwf	getInput@output
  3055     157B  2DC7               	goto	l3534
  3056     157C                     l72:	
  3057                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 152:         else if(P
      +                          ORTDbits.RD1){
  3058                           
  3059     157C  1C88               	btfss	8,1	;volatile
  3060     157D  2D7F               	goto	u5191
  3061     157E  2D80               	goto	u5190
  3062     157F                     u5191:
  3063     157F  2D92               	goto	l75
  3064     1580                     u5190:
  3065     1580                     l3514:
  3066                           
  3067                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 153:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3068     1580  3041               	movlw	65
  3069     1581  00F5               	movwf	??_getInput+1
  3070     1582  30EE               	movlw	238
  3071     1583  00F4               	movwf	??_getInput
  3072     1584                     u5627:
  3073     1584  0BF4               	decfsz	??_getInput,f
  3074     1585  2D84               	goto	u5627
  3075     1586  0BF5               	decfsz	??_getInput+1,f
  3076     1587  2D84               	goto	u5627
  3077     1588  0000               	nop
  3078     1589                     l3516:
  3079                           
  3080                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 154:             if(PO
      +                          RTDbits.RD1){
  3081     1589  1283               	bcf	3,5	;RP0=0, select bank0
  3082     158A  1303               	bcf	3,6	;RP1=0, select bank0
  3083     158B  1C88               	btfss	8,1	;volatile
  3084     158C  2D8E               	goto	u5201
  3085     158D  2D8F               	goto	u5200
  3086     158E                     u5201:
  3087     158E  2DC7               	goto	l3534
  3088     158F                     u5200:
  3089     158F                     l3518:
  3090                           
  3091                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 155:                 *
      +                          output = "6";
  3092     158F  301E               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  3093     1590  00F7               	movwf	getInput@output
  3094     1591  2DC7               	goto	l3534
  3095     1592                     l75:	
  3096                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 158:         else if(P
      +                          ORTDbits.RD2){
  3097                           
  3098     1592  1D08               	btfss	8,2	;volatile
  3099     1593  2D95               	goto	u5211
  3100     1594  2D96               	goto	u5210
  3101     1595                     u5211:
  3102     1595  2DA8               	goto	l78
  3103     1596                     u5210:
  3104     1596                     l3520:
  3105                           
  3106                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 159:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3107     1596  3041               	movlw	65
  3108     1597  00F5               	movwf	??_getInput+1
  3109     1598  30EE               	movlw	238
  3110     1599  00F4               	movwf	??_getInput
  3111     159A                     u5637:
  3112     159A  0BF4               	decfsz	??_getInput,f
  3113     159B  2D9A               	goto	u5637
  3114     159C  0BF5               	decfsz	??_getInput+1,f
  3115     159D  2D9A               	goto	u5637
  3116     159E  0000               	nop
  3117     159F                     l3522:
  3118                           
  3119                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 160:             if(PO
      +                          RTDbits.RD2){
  3120     159F  1283               	bcf	3,5	;RP0=0, select bank0
  3121     15A0  1303               	bcf	3,6	;RP1=0, select bank0
  3122     15A1  1D08               	btfss	8,2	;volatile
  3123     15A2  2DA4               	goto	u5221
  3124     15A3  2DA5               	goto	u5220
  3125     15A4                     u5221:
  3126     15A4  2DC7               	goto	l3534
  3127     15A5                     u5220:
  3128     15A5                     l3524:
  3129                           
  3130                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 161:                 *
      +                          output = "3";
  3131     15A5  3018               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  3132     15A6  00F7               	movwf	getInput@output
  3133     15A7  2DC7               	goto	l3534
  3134     15A8                     l78:	
  3135                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 164:         else if(P
      +                          ORTDbits.RD3){
  3136                           
  3137     15A8  1D88               	btfss	8,3	;volatile
  3138     15A9  2DAB               	goto	u5231
  3139     15AA  2DAC               	goto	u5230
  3140     15AB                     u5231:
  3141     15AB  2DBE               	goto	l3532
  3142     15AC                     u5230:
  3143     15AC                     l3526:
  3144                           
  3145                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 165:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3146     15AC  3041               	movlw	65
  3147     15AD  00F5               	movwf	??_getInput+1
  3148     15AE  30EE               	movlw	238
  3149     15AF  00F4               	movwf	??_getInput
  3150     15B0                     u5647:
  3151     15B0  0BF4               	decfsz	??_getInput,f
  3152     15B1  2DB0               	goto	u5647
  3153     15B2  0BF5               	decfsz	??_getInput+1,f
  3154     15B3  2DB0               	goto	u5647
  3155     15B4  0000               	nop
  3156     15B5                     l3528:
  3157                           
  3158                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 166:             if(PO
      +                          RTDbits.RD3){
  3159     15B5  1283               	bcf	3,5	;RP0=0, select bank0
  3160     15B6  1303               	bcf	3,6	;RP1=0, select bank0
  3161     15B7  1D88               	btfss	8,3	;volatile
  3162     15B8  2DBA               	goto	u5241
  3163     15B9  2DBB               	goto	u5240
  3164     15BA                     u5241:
  3165     15BA  2DC7               	goto	l3534
  3166     15BB                     u5240:
  3167     15BB                     l3530:
  3168                           
  3169                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 167:                 *
      +                          output = "=";
  3170     15BB  3026               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  3171     15BC  00F7               	movwf	getInput@output
  3172     15BD  2DC7               	goto	l3534
  3173     15BE                     l3532:
  3174                           
  3175                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 171:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3176     15BE  3041               	movlw	65
  3177     15BF  00F5               	movwf	??_getInput+1
  3178     15C0  30EE               	movlw	238
  3179     15C1  00F4               	movwf	??_getInput
  3180     15C2                     u5657:
  3181     15C2  0BF4               	decfsz	??_getInput,f
  3182     15C3  2DC2               	goto	u5657
  3183     15C4  0BF5               	decfsz	??_getInput+1,f
  3184     15C5  2DC2               	goto	u5657
  3185     15C6  0000               	nop
  3186     15C7                     l3534:
  3187                           
  3188                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 173:         PORTDbits
      +                          .RD6 = 0;
  3189     15C7  1283               	bcf	3,5	;RP0=0, select bank0
  3190     15C8  1303               	bcf	3,6	;RP1=0, select bank0
  3191     15C9  1308               	bcf	8,6	;volatile
  3192     15CA                     l3536:
  3193                           
  3194                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 174:         PORTDbits
      +                          .RD7 = 1;
  3195     15CA  1788               	bsf	8,7	;volatile
  3196     15CB                     l3538:
  3197                           
  3198                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 175:         if(PORTDb
      +                          its.RD0){
  3199     15CB  1C08               	btfss	8,0	;volatile
  3200     15CC  2DCE               	goto	u5251
  3201     15CD  2DCF               	goto	u5250
  3202     15CE                     u5251:
  3203     15CE  2DE1               	goto	l84
  3204     15CF                     u5250:
  3205     15CF                     l3540:
  3206                           
  3207                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 176:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3208     15CF  3041               	movlw	65
  3209     15D0  00F5               	movwf	??_getInput+1
  3210     15D1  30EE               	movlw	238
  3211     15D2  00F4               	movwf	??_getInput
  3212     15D3                     u5667:
  3213     15D3  0BF4               	decfsz	??_getInput,f
  3214     15D4  2DD3               	goto	u5667
  3215     15D5  0BF5               	decfsz	??_getInput+1,f
  3216     15D6  2DD3               	goto	u5667
  3217     15D7  0000               	nop
  3218     15D8                     l3542:
  3219                           
  3220                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 177:             if(PO
      +                          RTDbits.RD0){
  3221     15D8  1283               	bcf	3,5	;RP0=0, select bank0
  3222     15D9  1303               	bcf	3,6	;RP1=0, select bank0
  3223     15DA  1C08               	btfss	8,0	;volatile
  3224     15DB  2DDD               	goto	u5261
  3225     15DC  2DDE               	goto	u5260
  3226     15DD                     u5261:
  3227     15DD  2E2C               	goto	l3566
  3228     15DE                     u5260:
  3229     15DE                     l3544:
  3230                           
  3231                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 178:                 *
      +                          output = "/";
  3232     15DE  3010               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  3233     15DF  00F7               	movwf	getInput@output
  3234     15E0  2E2C               	goto	l3566
  3235     15E1                     l84:	
  3236                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 181:         else if(P
      +                          ORTDbits.RD1){
  3237                           
  3238     15E1  1C88               	btfss	8,1	;volatile
  3239     15E2  2DE4               	goto	u5271
  3240     15E3  2DE5               	goto	u5270
  3241     15E4                     u5271:
  3242     15E4  2DF7               	goto	l87
  3243     15E5                     u5270:
  3244     15E5                     l3546:
  3245                           
  3246                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 182:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3247     15E5  3041               	movlw	65
  3248     15E6  00F5               	movwf	??_getInput+1
  3249     15E7  30EE               	movlw	238
  3250     15E8  00F4               	movwf	??_getInput
  3251     15E9                     u5677:
  3252     15E9  0BF4               	decfsz	??_getInput,f
  3253     15EA  2DE9               	goto	u5677
  3254     15EB  0BF5               	decfsz	??_getInput+1,f
  3255     15EC  2DE9               	goto	u5677
  3256     15ED  0000               	nop
  3257     15EE                     l3548:
  3258                           
  3259                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 183:             if(PO
      +                          RTDbits.RD1){
  3260     15EE  1283               	bcf	3,5	;RP0=0, select bank0
  3261     15EF  1303               	bcf	3,6	;RP1=0, select bank0
  3262     15F0  1C88               	btfss	8,1	;volatile
  3263     15F1  2DF3               	goto	u5281
  3264     15F2  2DF4               	goto	u5280
  3265     15F3                     u5281:
  3266     15F3  2E2C               	goto	l3566
  3267     15F4                     u5280:
  3268     15F4                     l3550:
  3269                           
  3270                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 184:                 *
      +                          output = "x";
  3271     15F4  302A               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  3272     15F5  00F7               	movwf	getInput@output
  3273     15F6  2E2C               	goto	l3566
  3274     15F7                     l87:	
  3275                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 187:         else if(P
      +                          ORTDbits.RD2){
  3276                           
  3277     15F7  1D08               	btfss	8,2	;volatile
  3278     15F8  2DFA               	goto	u5291
  3279     15F9  2DFB               	goto	u5290
  3280     15FA                     u5291:
  3281     15FA  2E0D               	goto	l90
  3282     15FB                     u5290:
  3283     15FB                     l3552:
  3284                           
  3285                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 188:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3286     15FB  3041               	movlw	65
  3287     15FC  00F5               	movwf	??_getInput+1
  3288     15FD  30EE               	movlw	238
  3289     15FE  00F4               	movwf	??_getInput
  3290     15FF                     u5687:
  3291     15FF  0BF4               	decfsz	??_getInput,f
  3292     1600  2DFF               	goto	u5687
  3293     1601  0BF5               	decfsz	??_getInput+1,f
  3294     1602  2DFF               	goto	u5687
  3295     1603  0000               	nop
  3296     1604                     l3554:
  3297                           
  3298                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 189:             if(PO
      +                          RTDbits.RD2){
  3299     1604  1283               	bcf	3,5	;RP0=0, select bank0
  3300     1605  1303               	bcf	3,6	;RP1=0, select bank0
  3301     1606  1D08               	btfss	8,2	;volatile
  3302     1607  2E09               	goto	u5301
  3303     1608  2E0A               	goto	u5300
  3304     1609                     u5301:
  3305     1609  2E2C               	goto	l3566
  3306     160A                     u5300:
  3307     160A                     l3556:
  3308                           
  3309                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 190:                 *
      +                          output = "-";
  3310     160A  300E               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  3311     160B  00F7               	movwf	getInput@output
  3312     160C  2E2C               	goto	l3566
  3313     160D                     l90:	
  3314                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 193:         else if(P
      +                          ORTDbits.RD3){
  3315                           
  3316     160D  1D88               	btfss	8,3	;volatile
  3317     160E  2E10               	goto	u5311
  3318     160F  2E11               	goto	u5310
  3319     1610                     u5311:
  3320     1610  2E23               	goto	l3564
  3321     1611                     u5310:
  3322     1611                     l3558:
  3323                           
  3324                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 194:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3325     1611  3041               	movlw	65
  3326     1612  00F5               	movwf	??_getInput+1
  3327     1613  30EE               	movlw	238
  3328     1614  00F4               	movwf	??_getInput
  3329     1615                     u5697:
  3330     1615  0BF4               	decfsz	??_getInput,f
  3331     1616  2E15               	goto	u5697
  3332     1617  0BF5               	decfsz	??_getInput+1,f
  3333     1618  2E15               	goto	u5697
  3334     1619  0000               	nop
  3335     161A                     l3560:
  3336                           
  3337                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 195:             if(PO
      +                          RTDbits.RD3){
  3338     161A  1283               	bcf	3,5	;RP0=0, select bank0
  3339     161B  1303               	bcf	3,6	;RP1=0, select bank0
  3340     161C  1D88               	btfss	8,3	;volatile
  3341     161D  2E1F               	goto	u5321
  3342     161E  2E20               	goto	u5320
  3343     161F                     u5321:
  3344     161F  2E2C               	goto	l3566
  3345     1620                     u5320:
  3346     1620                     l3562:
  3347                           
  3348                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 196:                 *
      +                          output = "+";
  3349     1620  300C               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  3350     1621  00F7               	movwf	getInput@output
  3351     1622  2E2C               	goto	l3566
  3352     1623                     l3564:
  3353                           
  3354                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 200:             _dela
      +                          y((unsigned long)((10)*(20000000/4000.0)));
  3355     1623  3041               	movlw	65
  3356     1624  00F5               	movwf	??_getInput+1
  3357     1625  30EE               	movlw	238
  3358     1626  00F4               	movwf	??_getInput
  3359     1627                     u5707:
  3360     1627  0BF4               	decfsz	??_getInput,f
  3361     1628  2E27               	goto	u5707
  3362     1629  0BF5               	decfsz	??_getInput+1,f
  3363     162A  2E27               	goto	u5707
  3364     162B  0000               	nop
  3365     162C                     l3566:
  3366                           
  3367                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 202:         PORTDbits
      +                          .RD7 = 0;
  3368     162C  1283               	bcf	3,5	;RP0=0, select bank0
  3369     162D  1303               	bcf	3,6	;RP1=0, select bank0
  3370     162E  1388               	bcf	8,7	;volatile
  3371     162F                     l3568:
  3372                           
  3373                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 203:         if(strlen
      +                          (*output)){
  3374     162F  0877               	movf	getInput@output,w
  3375     1630  00F0               	movwf	strlen@s
  3376     1631  3000               	movlw	0
  3377     1632  1D03               	btfss	3,2
  3378     1633  3080               	movlw	128
  3379     1634  00F1               	movwf	strlen@s+1
  3380     1635  160A  158A  2379  160A  118A  	fcall	_strlen
  3381     163A  0870               	movf	?_strlen,w
  3382     163B  0471               	iorwf	?_strlen+1,w
  3383     163C  1903               	btfsc	3,2
  3384     163D  2E3F               	goto	u5331
  3385     163E  2E40               	goto	u5330
  3386     163F                     u5331:
  3387     163F  2C99               	goto	l3440
  3388     1640                     u5330:
  3389     1640                     l3570:
  3390                           
  3391                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 204:             retur
      +                          n *output;
  3392     1640  0877               	movf	getInput@output,w
  3393     1641                     l97:
  3394     1641  0008               	return
  3395     1642                     __end_of_getInput:
  3396                           
  3397                           	psect	text8
  3398     133E                     __ptext8:	
  3399 ;; *************** function _calculate *****************
  3400 ;; Defined at:
  3401 ;;		line 208 in file "C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;  num1            1   68[BANK1 ] PTR 
  3404 ;;		 -> main@values(8), 
  3405 ;;  operator        1   69[BANK1 ] unsigned char 
  3406 ;;  num2            1   70[BANK1 ] PTR 
  3407 ;;		 -> main@values(8), 
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;  x               2   71[BANK1 ] unsigned short 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1   68[BANK1 ] PTR unsigned char 
  3412 ;; Registers used:
  3413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3419 ;;      Params:         0       0       3       0       0
  3420 ;;      Locals:         0       0       2       0       0
  3421 ;;      Temps:          0       0       0       0       0
  3422 ;;      Totals:         0       0       5       0       0
  3423 ;;Total ram usage:        5 bytes
  3424 ;; Hardware stack levels used: 1
  3425 ;; Hardware stack levels required when called: 8
  3426 ;; This function calls:
  3427 ;;		___fladd
  3428 ;;		___fldiv
  3429 ;;		___flmul
  3430 ;;		___flsub
  3431 ;;		_snprintf
  3432 ;;		_strlen
  3433 ;; This function is called by:
  3434 ;;		_main
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438     133E                     _calculate:	
  3439                           ;psect for function _calculate
  3440                           
  3441     133E                     l3574:	
  3442                           ;incstack = 0
  3443 ;; hardware stack exceeded
  3444                           ; Regs used in _calculate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3445                           
  3446                           
  3447                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 209:     static char r
      +                          esult[16] = {};;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 210:   
      +                            switch(operator){
  3448     133E  2C1B               	goto	l3584
  3449     133F                     l3576:
  3450                           
  3451                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 212:         *num1 -= 
      +                          *num2;
  3452     133F  0866               	movf	calculate@num2^(0+128),w
  3453     1340  0084               	movwf	4
  3454     1341  1783               	bsf	3,7	;select IRP bank2
  3455     1342  0800               	movf	0,w
  3456     1343  1283               	bcf	3,5	;RP0=0, select bank0
  3457     1344  1303               	bcf	3,6	;RP1=0, select bank0
  3458     1345  00C9               	movwf	___flsub@a
  3459     1346  0A84               	incf	4,f
  3460     1347  0800               	movf	0,w
  3461     1348  00CA               	movwf	___flsub@a+1
  3462     1349  0A84               	incf	4,f
  3463     134A  0800               	movf	0,w
  3464     134B  00CB               	movwf	___flsub@a+2
  3465     134C  0A84               	incf	4,f
  3466     134D  0800               	movf	0,w
  3467     134E  00CC               	movwf	___flsub@a+3
  3468     134F  1683               	bsf	3,5	;RP0=1, select bank1
  3469     1350  1303               	bcf	3,6	;RP1=0, select bank1
  3470     1351  0864               	movf	calculate@num1^(0+128),w
  3471     1352  0084               	movwf	4
  3472     1353  0800               	movf	0,w
  3473     1354  1283               	bcf	3,5	;RP0=0, select bank0
  3474     1355  1303               	bcf	3,6	;RP1=0, select bank0
  3475     1356  00CD               	movwf	___flsub@b
  3476     1357  0A84               	incf	4,f
  3477     1358  0800               	movf	0,w
  3478     1359  00CE               	movwf	___flsub@b+1
  3479     135A  0A84               	incf	4,f
  3480     135B  0800               	movf	0,w
  3481     135C  00CF               	movwf	___flsub@b+2
  3482     135D  0A84               	incf	4,f
  3483     135E  0800               	movf	0,w
  3484     135F  00D0               	movwf	___flsub@b+3
  3485     1360  160A  158A  2355  160A  118A  	fcall	___flsub
  3486     1365  1683               	bsf	3,5	;RP0=1, select bank1
  3487     1366  1303               	bcf	3,6	;RP1=0, select bank1
  3488     1367  0864               	movf	calculate@num1^(0+128),w
  3489     1368  0084               	movwf	4
  3490     1369  1283               	bcf	3,5	;RP0=0, select bank0
  3491     136A  1303               	bcf	3,6	;RP1=0, select bank0
  3492     136B  0849               	movf	?___flsub,w
  3493     136C  1783               	bsf	3,7	;select IRP bank2
  3494     136D  0080               	movwf	0
  3495     136E  0A84               	incf	4,f
  3496     136F  084A               	movf	?___flsub+1,w
  3497     1370  0080               	movwf	0
  3498     1371  0A84               	incf	4,f
  3499     1372  084B               	movf	?___flsub+2,w
  3500     1373  0080               	movwf	0
  3501     1374  0A84               	incf	4,f
  3502     1375  084C               	movf	?___flsub+3,w
  3503     1376  0080               	movwf	0
  3504                           
  3505                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 213:         break;
  3506     1377  2C28               	goto	l3586
  3507     1378                     l3578:
  3508                           
  3509                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 216:         *num1 *= 
      +                          *num2;
  3510     1378  0866               	movf	calculate@num2^(0+128),w
  3511     1379  0084               	movwf	4
  3512     137A  1783               	bsf	3,7	;select IRP bank2
  3513     137B  0800               	movf	0,w
  3514     137C  1283               	bcf	3,5	;RP0=0, select bank0
  3515     137D  1303               	bcf	3,6	;RP1=0, select bank0
  3516     137E  00A0               	movwf	___flmul@b
  3517     137F  0A84               	incf	4,f
  3518     1380  0800               	movf	0,w
  3519     1381  00A1               	movwf	___flmul@b+1
  3520     1382  0A84               	incf	4,f
  3521     1383  0800               	movf	0,w
  3522     1384  00A2               	movwf	___flmul@b+2
  3523     1385  0A84               	incf	4,f
  3524     1386  0800               	movf	0,w
  3525     1387  00A3               	movwf	___flmul@b+3
  3526     1388  1683               	bsf	3,5	;RP0=1, select bank1
  3527     1389  1303               	bcf	3,6	;RP1=0, select bank1
  3528     138A  0864               	movf	calculate@num1^(0+128),w
  3529     138B  0084               	movwf	4
  3530     138C  0800               	movf	0,w
  3531     138D  1283               	bcf	3,5	;RP0=0, select bank0
  3532     138E  1303               	bcf	3,6	;RP1=0, select bank0
  3533     138F  00A4               	movwf	___flmul@a
  3534     1390  0A84               	incf	4,f
  3535     1391  0800               	movf	0,w
  3536     1392  00A5               	movwf	___flmul@a+1
  3537     1393  0A84               	incf	4,f
  3538     1394  0800               	movf	0,w
  3539     1395  00A6               	movwf	___flmul@a+2
  3540     1396  0A84               	incf	4,f
  3541     1397  0800               	movf	0,w
  3542     1398  00A7               	movwf	___flmul@a+3
  3543     1399  120A  158A  24BE  160A  118A  	fcall	___flmul
  3544     139E  1683               	bsf	3,5	;RP0=1, select bank1
  3545     139F  1303               	bcf	3,6	;RP1=0, select bank1
  3546     13A0  0864               	movf	calculate@num1^(0+128),w
  3547     13A1  0084               	movwf	4
  3548     13A2  1283               	bcf	3,5	;RP0=0, select bank0
  3549     13A3  1303               	bcf	3,6	;RP1=0, select bank0
  3550     13A4  0820               	movf	?___flmul,w
  3551     13A5  1783               	bsf	3,7	;select IRP bank2
  3552     13A6  0080               	movwf	0
  3553     13A7  0A84               	incf	4,f
  3554     13A8  0821               	movf	?___flmul+1,w
  3555     13A9  0080               	movwf	0
  3556     13AA  0A84               	incf	4,f
  3557     13AB  0822               	movf	?___flmul+2,w
  3558     13AC  0080               	movwf	0
  3559     13AD  0A84               	incf	4,f
  3560     13AE  0823               	movf	?___flmul+3,w
  3561     13AF  0080               	movwf	0
  3562                           
  3563                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 217:         break;
  3564     13B0  2C28               	goto	l3586
  3565     13B1                     l3580:
  3566                           
  3567                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 220:         *num1 /= 
      +                          *num2;
  3568     13B1  0866               	movf	calculate@num2^(0+128),w
  3569     13B2  0084               	movwf	4
  3570     13B3  1783               	bsf	3,7	;select IRP bank2
  3571     13B4  0800               	movf	0,w
  3572     13B5  00F0               	movwf	___fldiv@a
  3573     13B6  0A84               	incf	4,f
  3574     13B7  0800               	movf	0,w
  3575     13B8  00F1               	movwf	___fldiv@a+1
  3576     13B9  0A84               	incf	4,f
  3577     13BA  0800               	movf	0,w
  3578     13BB  00F2               	movwf	___fldiv@a+2
  3579     13BC  0A84               	incf	4,f
  3580     13BD  0800               	movf	0,w
  3581     13BE  00F3               	movwf	___fldiv@a+3
  3582     13BF  0864               	movf	calculate@num1^(0+128),w
  3583     13C0  0084               	movwf	4
  3584     13C1  0800               	movf	0,w
  3585     13C2  00F4               	movwf	___fldiv@b
  3586     13C3  0A84               	incf	4,f
  3587     13C4  0800               	movf	0,w
  3588     13C5  00F5               	movwf	___fldiv@b+1
  3589     13C6  0A84               	incf	4,f
  3590     13C7  0800               	movf	0,w
  3591     13C8  00F6               	movwf	___fldiv@b+2
  3592     13C9  0A84               	incf	4,f
  3593     13CA  0800               	movf	0,w
  3594     13CB  00F7               	movwf	___fldiv@b+3
  3595     13CC  120A  158A  209E  160A  118A  	fcall	___fldiv
  3596     13D1  1683               	bsf	3,5	;RP0=1, select bank1
  3597     13D2  1303               	bcf	3,6	;RP1=0, select bank1
  3598     13D3  0864               	movf	calculate@num1^(0+128),w
  3599     13D4  0084               	movwf	4
  3600     13D5  0870               	movf	?___fldiv,w
  3601     13D6  1783               	bsf	3,7	;select IRP bank2
  3602     13D7  0080               	movwf	0
  3603     13D8  0A84               	incf	4,f
  3604     13D9  0871               	movf	?___fldiv+1,w
  3605     13DA  0080               	movwf	0
  3606     13DB  0A84               	incf	4,f
  3607     13DC  0872               	movf	?___fldiv+2,w
  3608     13DD  0080               	movwf	0
  3609     13DE  0A84               	incf	4,f
  3610     13DF  0873               	movf	?___fldiv+3,w
  3611     13E0  0080               	movwf	0
  3612                           
  3613                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 221:         break;
  3614     13E1  2C28               	goto	l3586
  3615     13E2                     l3582:
  3616                           
  3617                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 224:         *num1 += 
      +                          *num2;
  3618     13E2  0866               	movf	calculate@num2^(0+128),w
  3619     13E3  0084               	movwf	4
  3620     13E4  1783               	bsf	3,7	;select IRP bank2
  3621     13E5  0800               	movf	0,w
  3622     13E6  1283               	bcf	3,5	;RP0=0, select bank0
  3623     13E7  1303               	bcf	3,6	;RP1=0, select bank0
  3624     13E8  00B5               	movwf	___fladd@b
  3625     13E9  0A84               	incf	4,f
  3626     13EA  0800               	movf	0,w
  3627     13EB  00B6               	movwf	___fladd@b+1
  3628     13EC  0A84               	incf	4,f
  3629     13ED  0800               	movf	0,w
  3630     13EE  00B7               	movwf	___fladd@b+2
  3631     13EF  0A84               	incf	4,f
  3632     13F0  0800               	movf	0,w
  3633     13F1  00B8               	movwf	___fladd@b+3
  3634     13F2  1683               	bsf	3,5	;RP0=1, select bank1
  3635     13F3  1303               	bcf	3,6	;RP1=0, select bank1
  3636     13F4  0864               	movf	calculate@num1^(0+128),w
  3637     13F5  0084               	movwf	4
  3638     13F6  0800               	movf	0,w
  3639     13F7  1283               	bcf	3,5	;RP0=0, select bank0
  3640     13F8  1303               	bcf	3,6	;RP1=0, select bank0
  3641     13F9  00B9               	movwf	___fladd@a
  3642     13FA  0A84               	incf	4,f
  3643     13FB  0800               	movf	0,w
  3644     13FC  00BA               	movwf	___fladd@a+1
  3645     13FD  0A84               	incf	4,f
  3646     13FE  0800               	movf	0,w
  3647     13FF  00BB               	movwf	___fladd@a+2
  3648     1400  0A84               	incf	4,f
  3649     1401  0800               	movf	0,w
  3650     1402  00BC               	movwf	___fladd@a+3
  3651     1403  120A  158A  226E  160A  118A  	fcall	___fladd
  3652     1408  1683               	bsf	3,5	;RP0=1, select bank1
  3653     1409  1303               	bcf	3,6	;RP1=0, select bank1
  3654     140A  0864               	movf	calculate@num1^(0+128),w
  3655     140B  0084               	movwf	4
  3656     140C  1283               	bcf	3,5	;RP0=0, select bank0
  3657     140D  1303               	bcf	3,6	;RP1=0, select bank0
  3658     140E  0835               	movf	?___fladd,w
  3659     140F  1783               	bsf	3,7	;select IRP bank2
  3660     1410  0080               	movwf	0
  3661     1411  0A84               	incf	4,f
  3662     1412  0836               	movf	?___fladd+1,w
  3663     1413  0080               	movwf	0
  3664     1414  0A84               	incf	4,f
  3665     1415  0837               	movf	?___fladd+2,w
  3666     1416  0080               	movwf	0
  3667     1417  0A84               	incf	4,f
  3668     1418  0838               	movf	?___fladd+3,w
  3669     1419  0080               	movwf	0
  3670                           
  3671                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 225:     }
  3672     141A  2C28               	goto	l3586
  3673     141B                     l3584:
  3674     141B  1683               	bsf	3,5	;RP0=1, select bank1
  3675     141C  1303               	bcf	3,6	;RP1=0, select bank1
  3676     141D  0865               	movf	calculate@operator^(0+128),w
  3677                           
  3678                           ; Switch size 1, requested type "simple"
  3679                           ; Number of cases is 3, Range of values is 45 to 120
  3680                           ; switch strategies available:
  3681                           ; Name         Instructions Cycles
  3682                           ; simple_byte           10     6 (average)
  3683                           ; direct_byte          239    11 (fixed)
  3684                           ; jumptable            263     9 (fixed)
  3685                           ;	Chosen strategy is simple_byte
  3686     141E  3A2D               	xorlw	45	; case 45
  3687     141F  1903               	skipnz
  3688     1420  2B3F               	goto	l3576
  3689     1421  3A02               	xorlw	2	; case 47
  3690     1422  1903               	skipnz
  3691     1423  2BB1               	goto	l3580
  3692     1424  3A57               	xorlw	87	; case 120
  3693     1425  1903               	skipnz
  3694     1426  2B78               	goto	l3578
  3695     1427  2BE2               	goto	l3582
  3696     1428                     l3586:
  3697                           
  3698                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 226:     *num2 = 0;
  3699     1428  1683               	bsf	3,5	;RP0=1, select bank1
  3700     1429  1303               	bcf	3,6	;RP1=0, select bank1
  3701     142A  0866               	movf	calculate@num2^(0+128),w
  3702     142B  0084               	movwf	4
  3703     142C  3000               	movlw	0
  3704     142D  0080               	movwf	0
  3705     142E  0A84               	incf	4,f
  3706     142F  3000               	movlw	0
  3707     1430  0080               	movwf	0
  3708     1431  0A84               	incf	4,f
  3709     1432  3000               	movlw	0
  3710     1433  0080               	movwf	0
  3711     1434  0A84               	incf	4,f
  3712     1435  3000               	movlw	0
  3713     1436  0080               	movwf	0
  3714     1437                     l3588:
  3715                           
  3716                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 227:     snprintf(resu
      +                          lt, 16, "%f", *num1);
  3717     1437  30A6               	movlw	(low (calculate@result| (0+256)))& (0+255)
  3718     1438  00CC               	movwf	snprintf@s^(0+128)
  3719     1439  3010               	movlw	16
  3720     143A  00CD               	movwf	snprintf@n^(0+128)
  3721     143B  3000               	movlw	0
  3722     143C  00CE               	movwf	(snprintf@n^(0+128)+1)
  3723     143D  3009               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  3724     143E  00CF               	movwf	snprintf@fmt^(0+128)
  3725     143F  0864               	movf	calculate@num1^(0+128),w
  3726     1440  0084               	movwf	4
  3727     1441  0800               	movf	0,w
  3728     1442  00D0               	movwf	(?_snprintf^(0+128)+4)
  3729     1443  0A84               	incf	4,f
  3730     1444  0800               	movf	0,w
  3731     1445  00D1               	movwf	((?_snprintf+1)^(0+128)+4)
  3732     1446  0A84               	incf	4,f
  3733     1447  0800               	movf	0,w
  3734     1448  00D2               	movwf	((?_snprintf+2)^(0+128)+4)
  3735     1449  0A84               	incf	4,f
  3736     144A  0800               	movf	0,w
  3737     144B  00D3               	movwf	((?_snprintf+3)^(0+128)+4)
  3738     144C  120A  158A  2004  160A  118A  	fcall	_snprintf
  3739     1451                     l3590:
  3740                           
  3741                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 228:     for(uint16_t 
      +                          x = strlen(result) - 1; x >= 0; x--){
  3742     1451  30A6               	movlw	(low (calculate@result| (0+256)))& (0+255)
  3743     1452  00F0               	movwf	strlen@s
  3744     1453  3001               	movlw	1
  3745     1454  00F1               	movwf	strlen@s+1
  3746     1455  160A  158A  2379  160A  118A  	fcall	_strlen
  3747     145A  0870               	movf	?_strlen,w
  3748     145B  3EFF               	addlw	255
  3749     145C  1683               	bsf	3,5	;RP0=1, select bank1
  3750     145D  1303               	bcf	3,6	;RP1=0, select bank1
  3751     145E  00E7               	movwf	calculate@x^(0+128)
  3752     145F  0871               	movf	?_strlen+1,w
  3753     1460  1803               	skipnc
  3754     1461  3E01               	addlw	1
  3755     1462  3EFF               	addlw	255
  3756     1463  00E8               	movwf	(calculate@x+1)^(0+128)
  3757     1464                     l3594:
  3758                           
  3759                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 229:         if(result
      +                          [x] == '0'){
  3760     1464  0867               	movf	calculate@x^(0+128),w
  3761     1465  3EA6               	addlw	(low (calculate@result| (0+256)))& (0+255)
  3762     1466  0084               	movwf	4
  3763     1467  3030               	movlw	48
  3764     1468  1783               	bsf	3,7	;select IRP bank3
  3765     1469  0600               	xorwf	0,w
  3766     146A  1D03               	btfss	3,2
  3767     146B  2C6D               	goto	u5341
  3768     146C  2C6E               	goto	u5340
  3769     146D                     u5341:
  3770     146D  2C73               	goto	l3598
  3771     146E                     u5340:
  3772     146E                     l3596:
  3773                           
  3774                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 230:             resul
      +                          t[x] = '\0';
  3775     146E  0867               	movf	calculate@x^(0+128),w
  3776     146F  3EA6               	addlw	(low (calculate@result| (0+256)))& (0+255)
  3777     1470  0084               	movwf	4
  3778     1471  0180               	clrf	0
  3779                           
  3780                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 231:         }
  3781     1472  2C81               	goto	l3602
  3782     1473                     l3598:
  3783                           
  3784                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 233:             if(re
      +                          sult[x] == '.'){
  3785     1473  0867               	movf	calculate@x^(0+128),w
  3786     1474  3EA6               	addlw	(low (calculate@result| (0+256)))& (0+255)
  3787     1475  0084               	movwf	4
  3788     1476  302E               	movlw	46
  3789     1477  0600               	xorwf	0,w
  3790     1478  1D03               	btfss	3,2
  3791     1479  2C7B               	goto	u5351
  3792     147A  2C7C               	goto	u5350
  3793     147B                     u5351:
  3794     147B  2C88               	goto	l3604
  3795     147C                     u5350:
  3796     147C                     l3600:
  3797                           
  3798                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 234:                 r
      +                          esult[x] = '\0';
  3799     147C  0867               	movf	calculate@x^(0+128),w
  3800     147D  3EA6               	addlw	(low (calculate@result| (0+256)))& (0+255)
  3801     147E  0084               	movwf	4
  3802     147F  0180               	clrf	0
  3803     1480  2C88               	goto	l3604
  3804     1481                     l3602:
  3805                           
  3806                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 238:     }
  3807     1481  3001               	movlw	1
  3808     1482  02E7               	subwf	calculate@x^(0+128),f
  3809     1483  3000               	movlw	0
  3810     1484  1C03               	skipc
  3811     1485  03E8               	decf	(calculate@x+1)^(0+128),f
  3812     1486  02E8               	subwf	(calculate@x+1)^(0+128),f
  3813     1487  2C64               	goto	l3594
  3814     1488                     l3604:
  3815                           
  3816                           ;C:\Users\mehna\Documents\MPlab projects\PIC Calculator.X\main.c: 239:     return result
      +                          ;
  3817     1488  30A6               	movlw	(low (calculate@result| (0+256)))& (0+255)
  3818     1489                     l115:
  3819     1489  0008               	return
  3820     148A                     __end_of_calculate:
  3821                           
  3822                           	psect	text9
  3823     0804                     __ptext9:	
  3824 ;; *************** function _snprintf *****************
  3825 ;; Defined at:
  3826 ;;		line 13 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\nf_snprintf.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  s               1   44[BANK1 ] PTR unsigned char 
  3829 ;;		 -> calculate@result(16), 
  3830 ;;  n               2   45[BANK1 ] unsigned int 
  3831 ;;  fmt             1   47[BANK1 ] PTR const unsigned char 
  3832 ;;		 -> STR_18(3), 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  f              11   57[BANK1 ] struct _IO_FILE
  3835 ;;  cnt             2   55[BANK1 ] int 
  3836 ;;  ap              1   54[BANK1 ] PTR void [1]
  3837 ;;		 -> ?_snprintf(2), 
  3838 ;; Return value:  Size  Location     Type
  3839 ;;                  2   44[BANK1 ] int 
  3840 ;; Registers used:
  3841 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3842 ;; Tracked objects:
  3843 ;;		On entry : 0/0
  3844 ;;		On exit  : 0/0
  3845 ;;		Unchanged: 0/0
  3846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3847 ;;      Params:         0       0       8       0       0
  3848 ;;      Locals:         0       0      16       0       0
  3849 ;;      Temps:          0       3       0       0       0
  3850 ;;      Totals:         0       3      24       0       0
  3851 ;;Total ram usage:       27 bytes
  3852 ;; Hardware stack levels used: 1
  3853 ;; Hardware stack levels required when called: 7
  3854 ;; This function calls:
  3855 ;;		_vfprintf
  3856 ;; This function is called by:
  3857 ;;		_calculate
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861     0804                     _snprintf:	
  3862                           ;psect for function _snprintf
  3863                           
  3864     0804                     l3340:	
  3865                           ;incstack = 0
  3866 ;; hardware stack exceeded
  3867                           ; Regs used in _snprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3868                           
  3869     0804  3080               	movlw	128
  3870     0805  1683               	bsf	3,5	;RP0=1, select bank1
  3871     0806  1303               	bcf	3,6	;RP1=0, select bank1
  3872     0807  024E               	subwf	(snprintf@n+1)^(0+128),w
  3873     0808  3000               	movlw	0
  3874     0809  1903               	skipnz
  3875     080A  024D               	subwf	snprintf@n^(0+128),w
  3876     080B  1C03               	skipc
  3877     080C  280E               	goto	u4811
  3878     080D  280F               	goto	u4810
  3879     080E                     u4811:
  3880     080E  2816               	goto	l3346
  3881     080F                     u4810:
  3882     080F                     l3342:
  3883     080F  304B               	movlw	75
  3884     0810  1683               	bsf	3,5	;RP0=1, select bank3
  3885     0811  1703               	bsf	3,6	;RP1=1, select bank3
  3886     0812  00A4               	movwf	_errno^(0+384)
  3887     0813  3000               	movlw	0
  3888     0814  00A5               	movwf	(_errno^(0+384)+1)
  3889     0815  289D               	goto	l698
  3890     0816                     l3346:
  3891     0816  30D0               	movlw	(low ((?_snprintf| 0+4)))& (0+255)
  3892     0817  00D6               	movwf	snprintf@ap^(0+128)
  3893     0818                     l3348:
  3894     0818  084C               	movf	snprintf@s^(0+128),w
  3895     0819  00D9               	movwf	snprintf@f^(0+128)
  3896     081A  3001               	movlw	1
  3897     081B  00DA               	movwf	(snprintf@f+1)^(0+128)
  3898     081C                     l3350:
  3899     081C  3000               	movlw	0
  3900     081D  024E               	subwf	(snprintf@n+1)^(0+128),w
  3901     081E  3002               	movlw	2
  3902     081F  1903               	skipnz
  3903     0820  024D               	subwf	snprintf@n^(0+128),w
  3904     0821  1C03               	skipc
  3905     0822  2824               	goto	u4821
  3906     0823  2825               	goto	u4820
  3907     0824                     u4821:
  3908     0824  2830               	goto	l3356
  3909     0825                     u4820:
  3910     0825                     l3352:
  3911     0825  084D               	movf	snprintf@n^(0+128),w
  3912     0826  3EFF               	addlw	255
  3913     0827  00E2               	movwf	(snprintf@f^(0+128)+9)
  3914     0828  084E               	movf	(snprintf@n+1)^(0+128),w
  3915     0829  1803               	skipnc
  3916     082A  3E01               	addlw	1
  3917     082B  3EFF               	addlw	255
  3918     082C  00E3               	movwf	((snprintf@f+1)^(0+128)+9)
  3919     082D                     l3354:
  3920     082D  01DB               	clrf	(snprintf@f^(0+128)+2)
  3921     082E  01DC               	clrf	((snprintf@f+1)^(0+128)+2)
  3922     082F  2838               	goto	l3358
  3923     0830                     l3356:
  3924     0830  3001               	movlw	1
  3925     0831  00E2               	movwf	(snprintf@f^(0+128)+9)
  3926     0832  3000               	movlw	0
  3927     0833  00E3               	movwf	(snprintf@f^(0+128)+10)
  3928     0834  3001               	movlw	1
  3929     0835  00DB               	movwf	(snprintf@f^(0+128)+2)
  3930     0836  3000               	movlw	0
  3931     0837  00DC               	movwf	(snprintf@f^(0+128)+3)
  3932     0838                     l3358:
  3933     0838  30D9               	movlw	low snprintf@f
  3934     0839  1283               	bcf	3,5	;RP0=0, select bank0
  3935     083A  1303               	bcf	3,6	;RP1=0, select bank0
  3936     083B  00E8               	movwf	vfprintf@fp
  3937     083C  3000               	movlw	high snprintf@f
  3938     083D  00E9               	movwf	vfprintf@fp+1
  3939     083E  1683               	bsf	3,5	;RP0=1, select bank1
  3940     083F  1303               	bcf	3,6	;RP1=0, select bank1
  3941     0840  084F               	movf	snprintf@fmt^(0+128),w
  3942     0841  1283               	bcf	3,5	;RP0=0, select bank0
  3943     0842  1303               	bcf	3,6	;RP1=0, select bank0
  3944     0843  00EA               	movwf	vfprintf@fmt
  3945     0844  30D6               	movlw	(low (snprintf@ap| 0))& (0+255)
  3946     0845  00EB               	movwf	vfprintf@ap
  3947     0846  160A  158A  23FD  120A  158A  	fcall	_vfprintf
  3948     084B  1283               	bcf	3,5	;RP0=0, select bank0
  3949     084C  1303               	bcf	3,6	;RP1=0, select bank0
  3950     084D  0869               	movf	?_vfprintf+1,w
  3951     084E  1683               	bsf	3,5	;RP0=1, select bank1
  3952     084F  1303               	bcf	3,6	;RP1=0, select bank1
  3953     0850  00D8               	movwf	(snprintf@cnt+1)^(0+128)
  3954     0851  1283               	bcf	3,5	;RP0=0, select bank0
  3955     0852  1303               	bcf	3,6	;RP1=0, select bank0
  3956     0853  0868               	movf	?_vfprintf,w
  3957     0854  1683               	bsf	3,5	;RP0=1, select bank1
  3958     0855  1303               	bcf	3,6	;RP1=0, select bank1
  3959     0856  00D7               	movwf	snprintf@cnt^(0+128)
  3960     0857                     l3360:
  3961     0857  084D               	movf	snprintf@n^(0+128),w
  3962     0858  044E               	iorwf	(snprintf@n+1)^(0+128),w
  3963     0859  1903               	btfsc	3,2
  3964     085A  285C               	goto	u4831
  3965     085B  285D               	goto	u4830
  3966     085C                     u4831:
  3967     085C  289D               	goto	l698
  3968     085D                     u4830:
  3969     085D                     l3362:
  3970     085D  1BD8               	btfsc	(snprintf@cnt+1)^(0+128),7
  3971     085E  2860               	goto	u4841
  3972     085F  2861               	goto	u4840
  3973     0860                     u4841:
  3974     0860  289D               	goto	l698
  3975     0861                     u4840:
  3976     0861                     l3364:
  3977     0861  084D               	movf	snprintf@n^(0+128),w
  3978     0862  3EFF               	addlw	255
  3979     0863  1283               	bcf	3,5	;RP0=0, select bank0
  3980     0864  1303               	bcf	3,6	;RP1=0, select bank0
  3981     0865  00ED               	movwf	??_snprintf
  3982     0866  1683               	bsf	3,5	;RP0=1, select bank1
  3983     0867  1303               	bcf	3,6	;RP1=0, select bank1
  3984     0868  084E               	movf	(snprintf@n+1)^(0+128),w
  3985     0869  1803               	skipnc
  3986     086A  3E01               	addlw	1
  3987     086B  3EFF               	addlw	255
  3988     086C  1283               	bcf	3,5	;RP0=0, select bank0
  3989     086D  1303               	bcf	3,6	;RP1=0, select bank0
  3990     086E  00EE               	movwf	??_snprintf+1
  3991     086F  1683               	bsf	3,5	;RP0=1, select bank1
  3992     0870  1303               	bcf	3,6	;RP1=0, select bank1
  3993     0871  0858               	movf	(snprintf@cnt+1)^(0+128),w
  3994     0872  3A80               	xorlw	128
  3995     0873  1283               	bcf	3,5	;RP0=0, select bank0
  3996     0874  1303               	bcf	3,6	;RP1=0, select bank0
  3997     0875  00EF               	movwf	??_snprintf+2
  3998     0876  086E               	movf	??_snprintf+1,w
  3999     0877  3A80               	xorlw	128
  4000     0878  026F               	subwf	??_snprintf+2,w
  4001     0879  1D03               	skipz
  4002     087A  287F               	goto	u4855
  4003     087B  086D               	movf	??_snprintf,w
  4004     087C  1683               	bsf	3,5	;RP0=1, select bank1
  4005     087D  1303               	bcf	3,6	;RP1=0, select bank1
  4006     087E  0257               	subwf	snprintf@cnt^(0+128),w
  4007     087F                     u4855:
  4008     087F  1C03               	skipc
  4009     0880  2882               	goto	u4851
  4010     0881  2883               	goto	u4850
  4011     0882                     u4851:
  4012     0882  288E               	goto	l3368
  4013     0883                     u4850:
  4014     0883                     l3366:
  4015     0883  1683               	bsf	3,5	;RP0=1, select bank1
  4016     0884  1303               	bcf	3,6	;RP1=0, select bank1
  4017     0885  084D               	movf	snprintf@n^(0+128),w
  4018     0886  3EFF               	addlw	255
  4019     0887  00D4               	movwf	_snprintf$705^(0+128)
  4020     0888  084E               	movf	(snprintf@n+1)^(0+128),w
  4021     0889  1803               	skipnc
  4022     088A  3E01               	addlw	1
  4023     088B  3EFF               	addlw	255
  4024     088C  00D5               	movwf	(_snprintf$705+1)^(0+128)
  4025     088D  2894               	goto	l3370
  4026     088E                     l3368:
  4027     088E  1683               	bsf	3,5	;RP0=1, select bank1
  4028     088F  1303               	bcf	3,6	;RP1=0, select bank1
  4029     0890  0858               	movf	(snprintf@cnt+1)^(0+128),w
  4030     0891  00D5               	movwf	(_snprintf$705+1)^(0+128)
  4031     0892  0857               	movf	snprintf@cnt^(0+128),w
  4032     0893  00D4               	movwf	_snprintf$705^(0+128)
  4033     0894                     l3370:
  4034     0894  0854               	movf	_snprintf$705^(0+128),w
  4035     0895  074C               	addwf	snprintf@s^(0+128),w
  4036     0896  1283               	bcf	3,5	;RP0=0, select bank0
  4037     0897  1303               	bcf	3,6	;RP1=0, select bank0
  4038     0898  00ED               	movwf	??_snprintf
  4039     0899  086D               	movf	??_snprintf,w
  4040     089A  0084               	movwf	4
  4041     089B  1783               	bsf	3,7	;select IRP bank2
  4042     089C  0180               	clrf	0
  4043     089D                     l698:
  4044     089D  0008               	return
  4045     089E                     __end_of_snprintf:
  4046                           
  4047                           	psect	text10
  4048     1BFD                     __ptext10:	
  4049 ;; *************** function _vfprintf *****************
  4050 ;; Defined at:
  4051 ;;		line 1817 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  4054 ;;		 -> snprintf@f(11), 
  4055 ;;  fmt             1   74[BANK0 ] PTR const unsigned char 
  4056 ;;		 -> STR_18(3), 
  4057 ;;  ap              1   75[BANK0 ] PTR PTR void 
  4058 ;;		 -> snprintf@ap(1), 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;  cfmt            1   76[BANK0 ] PTR unsigned char 
  4061 ;;		 -> STR_18(3), 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  2   72[BANK0 ] int 
  4064 ;; Registers used:
  4065 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4071 ;;      Params:         0       4       0       0       0
  4072 ;;      Locals:         0       1       0       0       0
  4073 ;;      Temps:          0       0       0       0       0
  4074 ;;      Totals:         0       5       0       0       0
  4075 ;;Total ram usage:        5 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; Hardware stack levels required when called: 6
  4078 ;; This function calls:
  4079 ;;		_vfpfcnvrt
  4080 ;; This function is called by:
  4081 ;;		_snprintf
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085     1BFD                     _vfprintf:	
  4086                           ;psect for function _vfprintf
  4087                           
  4088     1BFD                     l3308:	
  4089                           ;incstack = 0
  4090 ;; hardware stack exceeded
  4091                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4092                           
  4093                           
  4094                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprintf(FILE
      +                           *fp, const char *fmt, va_list ap);c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1818: {;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1820:
      +                               char *cfmt;;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1822:  
      +                             cfmt = (char *)fmt;
  4095     1BFD  1283               	bcf	3,5	;RP0=0, select bank0
  4096     1BFE  1303               	bcf	3,6	;RP1=0, select bank0
  4097     1BFF  086A               	movf	vfprintf@fmt,w
  4098     1C00  00EC               	movwf	vfprintf@cfmt
  4099     1C01                     l3310:
  4100                           
  4101                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1824:     nout = 0;
  4102     1C01  1683               	bsf	3,5	;RP0=1, select bank3
  4103     1C02  1703               	bsf	3,6	;RP1=1, select bank3
  4104     1C03  01A0               	clrf	_nout^(0+384)
  4105     1C04  01A1               	clrf	(_nout+1)^(0+384)
  4106                           
  4107                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt)
      +                           {
  4108     1C05  2C21               	goto	l3314
  4109     1C06                     l3312:
  4110                           
  4111                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1828:         nout +=
  4112     1C06  0868               	movf	vfprintf@fp,w
  4113     1C07  00DC               	movwf	vfpfcnvrt@fp
  4114     1C08  0869               	movf	vfprintf@fp+1,w
  4115     1C09  00DD               	movwf	vfpfcnvrt@fp+1
  4116     1C0A  306C               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4117     1C0B  00DE               	movwf	vfpfcnvrt@fmt
  4118     1C0C  086B               	movf	vfprintf@ap,w
  4119     1C0D  00DF               	movwf	vfpfcnvrt@ap
  4120     1C0E  160A  118A  2036  160A  158A  	fcall	_vfpfcnvrt
  4121     1C13  1283               	bcf	3,5	;RP0=0, select bank0
  4122     1C14  1303               	bcf	3,6	;RP1=0, select bank0
  4123     1C15  085C               	movf	?_vfpfcnvrt,w
  4124     1C16  1683               	bsf	3,5	;RP0=1, select bank3
  4125     1C17  1703               	bsf	3,6	;RP1=1, select bank3
  4126     1C18  07A0               	addwf	_nout^(0+384),f
  4127     1C19  1803               	skipnc
  4128     1C1A  0AA1               	incf	(_nout+1)^(0+384),f
  4129     1C1B  1283               	bcf	3,5	;RP0=0, select bank0
  4130     1C1C  1303               	bcf	3,6	;RP1=0, select bank0
  4131     1C1D  085D               	movf	?_vfpfcnvrt+1,w
  4132     1C1E  1683               	bsf	3,5	;RP0=1, select bank3
  4133     1C1F  1703               	bsf	3,6	;RP1=1, select bank3
  4134     1C20  07A1               	addwf	(_nout+1)^(0+384),f
  4135     1C21                     l3314:
  4136                           
  4137                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (*cfmt)
      +                           {
  4138     1C21  1283               	bcf	3,5	;RP0=0, select bank0
  4139     1C22  1303               	bcf	3,6	;RP1=0, select bank0
  4140     1C23  086C               	movf	vfprintf@cfmt,w
  4141     1C24  0084               	movwf	4
  4142     1C25  160A  158A  200A  160A  158A  	fcall	stringdir
  4143     1C2A  3A00               	xorlw	0
  4144     1C2B  1D03               	skipz
  4145     1C2C  2C2E               	goto	u4791
  4146     1C2D  2C2F               	goto	u4790
  4147     1C2E                     u4791:
  4148     1C2E  2C06               	goto	l3312
  4149     1C2F                     u4790:
  4150     1C2F                     l3316:
  4151                           
  4152                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1833:     return nout;
  4153     1C2F  1683               	bsf	3,5	;RP0=1, select bank3
  4154     1C30  1703               	bsf	3,6	;RP1=1, select bank3
  4155     1C31  0821               	movf	(_nout+1)^(0+384),w
  4156     1C32  1283               	bcf	3,5	;RP0=0, select bank0
  4157     1C33  1303               	bcf	3,6	;RP1=0, select bank0
  4158     1C34  00E9               	movwf	?_vfprintf+1
  4159     1C35  1683               	bsf	3,5	;RP0=1, select bank3
  4160     1C36  1703               	bsf	3,6	;RP1=1, select bank3
  4161     1C37  0820               	movf	_nout^(0+384),w
  4162     1C38  1283               	bcf	3,5	;RP0=0, select bank0
  4163     1C39  1303               	bcf	3,6	;RP1=0, select bank0
  4164     1C3A  00E8               	movwf	?_vfprintf
  4165     1C3B                     l818:
  4166     1C3B  0008               	return
  4167     1C3C                     __end_of_vfprintf:
  4168                           
  4169                           	psect	text11
  4170     1036                     __ptext11:	
  4171 ;; *************** function _vfpfcnvrt *****************
  4172 ;; Defined at:
  4173 ;;		line 1177 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  fp              2   60[BANK0 ] PTR struct _IO_FILE
  4176 ;;		 -> snprintf@f(11), 
  4177 ;;  fmt             1   62[BANK0 ] PTR PTR unsigned char 
  4178 ;;		 -> vfprintf@cfmt(1), 
  4179 ;;  ap              1   63[BANK0 ] PTR PTR void 
  4180 ;;		 -> snprintf@ap(1), 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  convarg         4   66[BANK0 ] struct .
  4183 ;;  cp              1   71[BANK0 ] PTR unsigned char 
  4184 ;;		 -> STR_18(3), 
  4185 ;;  c               1   70[BANK0 ] unsigned char 
  4186 ;;  done            1    0        _Bool 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  2   60[BANK0 ] int 
  4189 ;; Registers used:
  4190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4196 ;;      Params:         0       4       0       0       0
  4197 ;;      Locals:         0       6       0       0       0
  4198 ;;      Temps:          0       2       0       0       0
  4199 ;;      Totals:         0      12       0       0       0
  4200 ;;Total ram usage:       12 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; Hardware stack levels required when called: 5
  4203 ;; This function calls:
  4204 ;;		_efgtoa
  4205 ;;		_fputc
  4206 ;; This function is called by:
  4207 ;;		_vfprintf
  4208 ;; This function uses a non-reentrant model
  4209 ;;
  4210                           
  4211     1036                     _vfpfcnvrt:	
  4212                           ;psect for function _vfpfcnvrt
  4213                           
  4214     1036                     l3248:	
  4215                           ;incstack = 0
  4216 ;; hardware stack exceeded
  4217                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4218                           
  4219                           
  4220                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(FILE *f
      +                          p, char *fmt[], va_list ap);c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt
      +                          .c: 1178: {;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1179:     ch
      +                          ar c, *cp;;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1180:     _Bo
      +                          ol done;;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1188:  } convar
      +                          g;;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1201:     if ((*fmt)[
      +                          0] == '%') {
  4221     1036  1283               	bcf	3,5	;RP0=0, select bank0
  4222     1037  1303               	bcf	3,6	;RP1=0, select bank0
  4223     1038  085E               	movf	vfpfcnvrt@fmt,w
  4224     1039  0084               	movwf	4
  4225     103A  1383               	bcf	3,7	;select IRP bank0
  4226     103B  0800               	movf	0,w
  4227     103C  0084               	movwf	4
  4228     103D  160A  158A  200A  160A  118A  	fcall	stringdir
  4229     1042  3A25               	xorlw	37
  4230     1043  1D03               	skipz
  4231     1044  2846               	goto	u4771
  4232     1045  2847               	goto	u4770
  4233     1046                     u4771:
  4234     1046  28EE               	goto	l3294
  4235     1047                     u4770:
  4236     1047                     l3250:
  4237                           
  4238                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*fmt;
  4239     1047  085E               	movf	vfpfcnvrt@fmt,w
  4240     1048  0084               	movwf	4
  4241     1049  3001               	movlw	1
  4242     104A  0780               	addwf	0,f
  4243     104B                     l3252:
  4244                           
  4245                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         flags = w
      +                          idth = 0;
  4246     104B  1683               	bsf	3,5	;RP0=1, select bank3
  4247     104C  1703               	bsf	3,6	;RP1=1, select bank3
  4248     104D  01A2               	clrf	_width^(0+384)
  4249     104E  01A3               	clrf	(_width+1)^(0+384)
  4250     104F  3000               	movlw	0
  4251     1050  1683               	bsf	3,5	;RP0=1, select bank1
  4252     1051  1303               	bcf	3,6	;RP1=0, select bank1
  4253     1052  00EE               	movwf	_flags^(0+128)
  4254     1053                     l3254:
  4255                           
  4256                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         prec = -1
      +                          ;
  4257     1053  30FF               	movlw	255
  4258     1054  00EC               	movwf	_prec^(0+128)
  4259     1055  30FF               	movlw	255
  4260     1056  00ED               	movwf	(_prec^(0+128)+1)
  4261     1057                     l3256:
  4262                           
  4263                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt;
  4264     1057  1283               	bcf	3,5	;RP0=0, select bank0
  4265     1058  1303               	bcf	3,6	;RP1=0, select bank0
  4266     1059  085E               	movf	vfpfcnvrt@fmt,w
  4267     105A  0084               	movwf	4
  4268     105B  0800               	movf	0,w
  4269     105C  00E7               	movwf	vfpfcnvrt@cp
  4270     105D                     l3258:
  4271                           
  4272                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  4273     105D  0867               	movf	vfpfcnvrt@cp,w
  4274     105E  0084               	movwf	4
  4275     105F  160A  158A  200A  160A  118A  	fcall	stringdir
  4276     1064  00E6               	movwf	vfpfcnvrt@c
  4277                           
  4278                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1691:   switch(c) {
  4279     1065  286E               	goto	l3266
  4280     1066                     l3260:
  4281                           
  4282                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  4283     1066  3001               	movlw	1
  4284     1067  07E7               	addwf	vfpfcnvrt@cp,f
  4285                           
  4286                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1696:     break;
  4287     1068  2879               	goto	l3268
  4288     1069                     l800:	
  4289                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1710:    case 'f':
  4290                           
  4291                           
  4292                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1721:     c = 'l';
  4293     1069  306C               	movlw	108
  4294     106A  00E6               	movwf	vfpfcnvrt@c
  4295                           
  4296                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1722:     break;
  4297     106B  2879               	goto	l3268
  4298     106C                     l3262:
  4299                           
  4300                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  4301     106C  01E6               	clrf	vfpfcnvrt@c
  4302                           
  4303                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1725:     break;
  4304     106D  2879               	goto	l3268
  4305     106E                     l3266:
  4306     106E  0866               	movf	vfpfcnvrt@c,w
  4307                           
  4308                           ; Switch size 1, requested type "simple"
  4309                           ; Number of cases is 3, Range of values is 76 to 108
  4310                           ; switch strategies available:
  4311                           ; Name         Instructions Cycles
  4312                           ; simple_byte           10     6 (average)
  4313                           ; direct_byte          110    11 (fixed)
  4314                           ; jumptable            263     9 (fixed)
  4315                           ;	Chosen strategy is simple_byte
  4316     106F  3A4C               	xorlw	76	; case 76
  4317     1070  1903               	skipnz
  4318     1071  2866               	goto	l3260
  4319     1072  3A2A               	xorlw	42	; case 102
  4320     1073  1903               	skipnz
  4321     1074  2869               	goto	l800
  4322     1075  3A0A               	xorlw	10	; case 108
  4323     1076  1903               	skipnz
  4324     1077  2866               	goto	l3260
  4325     1078  286C               	goto	l3262
  4326     1079                     l3268:
  4327     1079  0867               	movf	vfpfcnvrt@cp,w
  4328     107A  0084               	movwf	4
  4329     107B  160A  158A  200A  160A  118A  	fcall	stringdir
  4330     1080  3A66               	xorlw	102
  4331     1081  1D03               	skipz
  4332     1082  2884               	goto	u4781
  4333     1083  2885               	goto	u4780
  4334     1084                     u4781:
  4335     1084  28E7               	goto	l3288
  4336     1085                     u4780:
  4337     1085  28AE               	goto	l3276
  4338     1086                     l3270:
  4339                           
  4340                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1756:      convarg.f = 
      +                          (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4341     1086  085F               	movf	vfpfcnvrt@ap,w
  4342     1087  0084               	movwf	4
  4343     1088  0800               	movf	0,w
  4344     1089  00FF               	movwf	btemp+1
  4345     108A  3004               	movlw	4
  4346     108B  0780               	addwf	0,f
  4347     108C  087F               	movf	btemp+1,w
  4348     108D  0084               	movwf	4
  4349     108E  0800               	movf	0,w
  4350     108F  00E2               	movwf	vfpfcnvrt@convarg
  4351     1090  0A84               	incf	4,f
  4352     1091  0800               	movf	0,w
  4353     1092  00E3               	movwf	vfpfcnvrt@convarg+1
  4354     1093  0A84               	incf	4,f
  4355     1094  0800               	movf	0,w
  4356     1095  00E4               	movwf	vfpfcnvrt@convarg+2
  4357     1096  0A84               	incf	4,f
  4358     1097  0800               	movf	0,w
  4359     1098  00E5               	movwf	vfpfcnvrt@convarg+3
  4360                           
  4361                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1757:      break;
  4362     1099  28B6               	goto	l3278
  4363     109A                     l3272:
  4364                           
  4365                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1759:      convarg.f = 
      +                          (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4366     109A  085F               	movf	vfpfcnvrt@ap,w
  4367     109B  0084               	movwf	4
  4368     109C  0800               	movf	0,w
  4369     109D  00FF               	movwf	btemp+1
  4370     109E  3004               	movlw	4
  4371     109F  0780               	addwf	0,f
  4372     10A0  087F               	movf	btemp+1,w
  4373     10A1  0084               	movwf	4
  4374     10A2  0800               	movf	0,w
  4375     10A3  00E2               	movwf	vfpfcnvrt@convarg
  4376     10A4  0A84               	incf	4,f
  4377     10A5  0800               	movf	0,w
  4378     10A6  00E3               	movwf	vfpfcnvrt@convarg+1
  4379     10A7  0A84               	incf	4,f
  4380     10A8  0800               	movf	0,w
  4381     10A9  00E4               	movwf	vfpfcnvrt@convarg+2
  4382     10AA  0A84               	incf	4,f
  4383     10AB  0800               	movf	0,w
  4384     10AC  00E5               	movwf	vfpfcnvrt@convarg+3
  4385                           
  4386                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1760:      break;
  4387     10AD  28B6               	goto	l3278
  4388     10AE                     l3276:
  4389     10AE  0866               	movf	vfpfcnvrt@c,w
  4390                           
  4391                           ; Switch size 1, requested type "simple"
  4392                           ; Number of cases is 2, Range of values is 76 to 108
  4393                           ; switch strategies available:
  4394                           ; Name         Instructions Cycles
  4395                           ; simple_byte            7     4 (average)
  4396                           ; direct_byte          110    11 (fixed)
  4397                           ; jumptable            263     9 (fixed)
  4398                           ;	Chosen strategy is simple_byte
  4399     10AF  3A4C               	xorlw	76	; case 76
  4400     10B0  1903               	skipnz
  4401     10B1  289A               	goto	l3272
  4402     10B2  3A20               	xorlw	32	; case 108
  4403     10B3  1903               	skipnz
  4404     10B4  2886               	goto	l3270
  4405     10B5  28B6               	goto	l3278
  4406     10B6                     l3278:
  4407                           
  4408                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1762:    *fmt = cp+1;
  4409     10B6  085E               	movf	vfpfcnvrt@fmt,w
  4410     10B7  0084               	movwf	4
  4411     10B8  0867               	movf	vfpfcnvrt@cp,w
  4412     10B9  3E01               	addlw	1
  4413     10BA  0080               	movwf	0
  4414                           
  4415                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1763:    switch (*cp) {
  4416     10BB  28DC               	goto	l3286
  4417     10BC                     l3280:
  4418                           
  4419                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1790:      return (int)
      +                           efgtoa(fp, convarg.f, *cp);
  4420     10BC  085C               	movf	vfpfcnvrt@fp,w
  4421     10BD  00D1               	movwf	efgtoa@fp
  4422     10BE  085D               	movf	vfpfcnvrt@fp+1,w
  4423     10BF  00D2               	movwf	efgtoa@fp+1
  4424     10C0  0865               	movf	vfpfcnvrt@convarg+3,w
  4425     10C1  00D6               	movwf	efgtoa@f+3
  4426     10C2  0864               	movf	vfpfcnvrt@convarg+2,w
  4427     10C3  00D5               	movwf	efgtoa@f+2
  4428     10C4  0863               	movf	vfpfcnvrt@convarg+1,w
  4429     10C5  00D4               	movwf	efgtoa@f+1
  4430     10C6  0862               	movf	vfpfcnvrt@convarg,w
  4431     10C7  00D3               	movwf	efgtoa@f
  4432     10C8  0867               	movf	vfpfcnvrt@cp,w
  4433     10C9  0084               	movwf	4
  4434     10CA  160A  158A  200A  160A  118A  	fcall	stringdir
  4435     10CF  00D7               	movwf	efgtoa@c
  4436     10D0  160A  118A  2221  160A  118A  	fcall	_efgtoa
  4437     10D5  1283               	bcf	3,5	;RP0=0, select bank0
  4438     10D6  1303               	bcf	3,6	;RP1=0, select bank0
  4439     10D7  0852               	movf	?_efgtoa+1,w
  4440     10D8  00DD               	movwf	?_vfpfcnvrt+1
  4441     10D9  0851               	movf	?_efgtoa,w
  4442     10DA  00DC               	movwf	?_vfpfcnvrt
  4443     10DB  2911               	goto	l811
  4444     10DC                     l3286:
  4445     10DC  0867               	movf	vfpfcnvrt@cp,w
  4446     10DD  0084               	movwf	4
  4447     10DE  160A  158A  200A  160A  118A  	fcall	stringdir
  4448                           
  4449                           ; Switch size 1, requested type "simple"
  4450                           ; Number of cases is 1, Range of values is 102 to 102
  4451                           ; switch strategies available:
  4452                           ; Name         Instructions Cycles
  4453                           ; simple_byte            4     3 (average)
  4454                           ; direct_byte           14    11 (fixed)
  4455                           ; jumptable            263     9 (fixed)
  4456                           ;	Chosen strategy is simple_byte
  4457     10E3  3A66               	xorlw	102	; case 102
  4458     10E4  1903               	skipnz
  4459     10E5  28BC               	goto	l3280
  4460     10E6  28E7               	goto	l3288
  4461     10E7                     l3288:
  4462                           
  4463                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*fmt;
  4464     10E7  085E               	movf	vfpfcnvrt@fmt,w
  4465     10E8  0084               	movwf	4
  4466     10E9  3001               	movlw	1
  4467     10EA  0780               	addwf	0,f
  4468     10EB                     l3290:
  4469                           
  4470                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1807:         return (i
      +                          nt) 0;
  4471     10EB  01DC               	clrf	?_vfpfcnvrt
  4472     10EC  01DD               	clrf	?_vfpfcnvrt+1
  4473     10ED  2911               	goto	l811
  4474     10EE                     l3294:
  4475                           
  4476                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((int)(*
      +                          fmt)[0], fp);
  4477     10EE  085E               	movf	vfpfcnvrt@fmt,w
  4478     10EF  0084               	movwf	4
  4479     10F0  0800               	movf	0,w
  4480     10F1  0084               	movwf	4
  4481     10F2  160A  158A  200A  160A  118A  	fcall	stringdir
  4482     10F7  00E0               	movwf	??_vfpfcnvrt
  4483     10F8  01E1               	clrf	??_vfpfcnvrt+1
  4484     10F9  0860               	movf	??_vfpfcnvrt,w
  4485     10FA  00F0               	movwf	fputc@c
  4486     10FB  0861               	movf	??_vfpfcnvrt+1,w
  4487     10FC  00F1               	movwf	fputc@c+1
  4488     10FD  085C               	movf	vfpfcnvrt@fp,w
  4489     10FE  00F2               	movwf	fputc@fp
  4490     10FF  085D               	movf	vfpfcnvrt@fp+1,w
  4491     1100  00F3               	movwf	fputc@fp+1
  4492     1101  160A  158A  25DE  160A  118A  	fcall	_fputc
  4493     1106                     l3296:
  4494                           
  4495                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  4496     1106  1283               	bcf	3,5	;RP0=0, select bank0
  4497     1107  1303               	bcf	3,6	;RP1=0, select bank0
  4498     1108  085E               	movf	vfpfcnvrt@fmt,w
  4499     1109  0084               	movwf	4
  4500     110A  3001               	movlw	1
  4501     110B  1383               	bcf	3,7	;select IRP bank0
  4502     110C  0780               	addwf	0,f
  4503     110D                     l3298:
  4504                           
  4505                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1813:     return (int) 
      +                          1;
  4506     110D  3001               	movlw	1
  4507     110E  00DC               	movwf	?_vfpfcnvrt
  4508     110F  3000               	movlw	0
  4509     1110  00DD               	movwf	?_vfpfcnvrt+1
  4510     1111                     l811:
  4511     1111  0008               	return
  4512     1112                     __end_of_vfpfcnvrt:
  4513                           
  4514                           	psect	text12
  4515     1221                     __ptext12:	
  4516 ;; *************** function _efgtoa *****************
  4517 ;; Defined at:
  4518 ;;		line 587 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;  fp              2   49[BANK0 ] PTR struct _IO_FILE
  4521 ;;		 -> snprintf@f(11), 
  4522 ;;  f               4   51[BANK0 ] PTR struct _IO_FILE
  4523 ;;  c               1   55[BANK0 ] unsigned char 
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;  u               4   40[BANK1 ] struct flui
  4526 ;;  g               4   36[BANK1 ] struct flui
  4527 ;;  l               4   29[BANK1 ] struct flui
  4528 ;;  h               4   25[BANK1 ] struct flui
  4529 ;;  ou              4   19[BANK1 ] struct flui
  4530 ;;  n               2   34[BANK1 ] int 
  4531 ;;  i               2   23[BANK1 ] int 
  4532 ;;  w               2   17[BANK1 ] int 
  4533 ;;  e               2   15[BANK1 ] int 
  4534 ;;  m               2   13[BANK1 ] int 
  4535 ;;  d               2   11[BANK1 ] int 
  4536 ;;  t               2    4[BANK1 ] int 
  4537 ;;  p               2    2[BANK1 ] int 
  4538 ;;  ne              2    0[BANK1 ] int 
  4539 ;;  sign            1   33[BANK1 ] unsigned char 
  4540 ;;  nmode           1   10[BANK1 ] unsigned char 
  4541 ;;  mode            1    9[BANK1 ] unsigned char 
  4542 ;;  pp              1    8[BANK1 ] unsigned char 
  4543 ;;  esign           1    0        unsigned char 
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  2   49[BANK0 ] int 
  4546 ;; Registers used:
  4547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4553 ;;      Params:         0       7       0       0       0
  4554 ;;      Locals:         0       0      44       0       0
  4555 ;;      Temps:          0       4       0       0       0
  4556 ;;      Totals:         0      11      44       0       0
  4557 ;;Total ram usage:       55 bytes
  4558 ;; Hardware stack levels used: 1
  4559 ;; Hardware stack levels required when called: 4
  4560 ;; This function calls:
  4561 ;;		___fladd
  4562 ;;		___fldiv
  4563 ;;		___fleq
  4564 ;;		___flge
  4565 ;;		___flmul
  4566 ;;		___flneg
  4567 ;;		___flsub
  4568 ;;		___fltol
  4569 ;;		___fpclassifyf
  4570 ;;		_floorf
  4571 ;;		_labs
  4572 ;;		_memcpy
  4573 ;;		_pad
  4574 ;;		_strcpy
  4575 ;; This function is called by:
  4576 ;;		_vfpfcnvrt
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580     1221                     _efgtoa:	
  4581                           ;psect for function _efgtoa
  4582                           
  4583     1221                     l3038:	
  4584                           ;incstack = 0
  4585 ;; hardware stack exceeded
  4586                           ; Regs used in _efgtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4587                           
  4588                           
  4589                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 587: static int efgtoa(
      +                          FILE *fp, long double f, char c);c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\d
      +                          oprnt.c: 588: {;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 589:    
      +                           char mode, nmode, pp, sign, esign;;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\
      +                          sources\c99\common\doprnt.c: 591:     long double h, l;;c:\PROGRA~1\MICROC~1\xc8\v3.00\p
      +                          ic\sources\c99\common\doprnt.c: 592:  union flui g, u, ou;
  4590     1221  1683               	bsf	3,5	;RP0=1, select bank1
  4591     1222  1303               	bcf	3,6	;RP1=0, select bank1
  4592     1223  01C1               	clrf	efgtoa@sign^(0+128)
  4593     1224                     l3040:
  4594                           
  4595                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  4596     1224  1283               	bcf	3,5	;RP0=0, select bank0
  4597     1225  1303               	bcf	3,6	;RP1=0, select bank0
  4598     1226  0856               	movf	efgtoa@f+3,w
  4599     1227  1683               	bsf	3,5	;RP0=1, select bank1
  4600     1228  1303               	bcf	3,6	;RP1=0, select bank1
  4601     1229  00C7               	movwf	(efgtoa@g+3)^(0+128)
  4602     122A  1283               	bcf	3,5	;RP0=0, select bank0
  4603     122B  1303               	bcf	3,6	;RP1=0, select bank0
  4604     122C  0855               	movf	efgtoa@f+2,w
  4605     122D  1683               	bsf	3,5	;RP0=1, select bank1
  4606     122E  1303               	bcf	3,6	;RP1=0, select bank1
  4607     122F  00C6               	movwf	(efgtoa@g+2)^(0+128)
  4608     1230  1283               	bcf	3,5	;RP0=0, select bank0
  4609     1231  1303               	bcf	3,6	;RP1=0, select bank0
  4610     1232  0854               	movf	efgtoa@f+1,w
  4611     1233  1683               	bsf	3,5	;RP0=1, select bank1
  4612     1234  1303               	bcf	3,6	;RP1=0, select bank1
  4613     1235  00C5               	movwf	(efgtoa@g+1)^(0+128)
  4614     1236  1283               	bcf	3,5	;RP0=0, select bank0
  4615     1237  1303               	bcf	3,6	;RP1=0, select bank0
  4616     1238  0853               	movf	efgtoa@f,w
  4617     1239  1683               	bsf	3,5	;RP0=1, select bank1
  4618     123A  1303               	bcf	3,6	;RP1=0, select bank1
  4619     123B  00C4               	movwf	efgtoa@g^(0+128)
  4620     123C                     l3042:
  4621                           
  4622                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 597:     if (g.f < 0.0)
      +                           {
  4623     123C  0847               	movf	(efgtoa@g+3)^(0+128),w
  4624     123D  1283               	bcf	3,5	;RP0=0, select bank0
  4625     123E  1303               	bcf	3,6	;RP1=0, select bank0
  4626     123F  00B8               	movwf	___flge@ff1+3
  4627     1240  1683               	bsf	3,5	;RP0=1, select bank1
  4628     1241  1303               	bcf	3,6	;RP1=0, select bank1
  4629     1242  0846               	movf	(efgtoa@g+2)^(0+128),w
  4630     1243  1283               	bcf	3,5	;RP0=0, select bank0
  4631     1244  1303               	bcf	3,6	;RP1=0, select bank0
  4632     1245  00B7               	movwf	___flge@ff1+2
  4633     1246  1683               	bsf	3,5	;RP0=1, select bank1
  4634     1247  1303               	bcf	3,6	;RP1=0, select bank1
  4635     1248  0845               	movf	(efgtoa@g+1)^(0+128),w
  4636     1249  1283               	bcf	3,5	;RP0=0, select bank0
  4637     124A  1303               	bcf	3,6	;RP1=0, select bank0
  4638     124B  00B6               	movwf	___flge@ff1+1
  4639     124C  1683               	bsf	3,5	;RP0=1, select bank1
  4640     124D  1303               	bcf	3,6	;RP1=0, select bank1
  4641     124E  0844               	movf	efgtoa@g^(0+128),w
  4642     124F  1283               	bcf	3,5	;RP0=0, select bank0
  4643     1250  1303               	bcf	3,6	;RP1=0, select bank0
  4644     1251  00B5               	movwf	___flge@ff1
  4645     1252  3000               	movlw	0
  4646     1253  00BC               	movwf	___flge@ff2+3
  4647     1254  3000               	movlw	0
  4648     1255  00BB               	movwf	___flge@ff2+2
  4649     1256  3000               	movlw	0
  4650     1257  00BA               	movwf	___flge@ff2+1
  4651     1258  3000               	movlw	0
  4652     1259  00B9               	movwf	___flge@ff2
  4653     125A  120A  118A  2007  160A  118A  	fcall	___flge
  4654     125F  1803               	btfsc	3,0
  4655     1260  2A62               	goto	u4421
  4656     1261  2A63               	goto	u4420
  4657     1262                     u4421:
  4658     1262  2A7E               	goto	l3048
  4659     1263                     u4420:
  4660     1263                     l3044:
  4661                           
  4662                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 598:         sign = 1;
  4663     1263  3001               	movlw	1
  4664     1264  1683               	bsf	3,5	;RP0=1, select bank1
  4665     1265  1303               	bcf	3,6	;RP1=0, select bank1
  4666     1266  00C1               	movwf	efgtoa@sign^(0+128)
  4667     1267                     l3046:
  4668                           
  4669                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 599:         g.f = -g.f
      +                          ;
  4670     1267  0847               	movf	(efgtoa@g+3)^(0+128),w
  4671     1268  00F3               	movwf	___flneg@f1+3
  4672     1269  0846               	movf	(efgtoa@g+2)^(0+128),w
  4673     126A  00F2               	movwf	___flneg@f1+2
  4674     126B  0845               	movf	(efgtoa@g+1)^(0+128),w
  4675     126C  00F1               	movwf	___flneg@f1+1
  4676     126D  0844               	movf	efgtoa@g^(0+128),w
  4677     126E  00F0               	movwf	___flneg@f1
  4678     126F  160A  118A  2000  160A  118A  	fcall	___flneg
  4679     1274  0873               	movf	?___flneg+3,w
  4680     1275  1683               	bsf	3,5	;RP0=1, select bank1
  4681     1276  1303               	bcf	3,6	;RP1=0, select bank1
  4682     1277  00C7               	movwf	(efgtoa@g+3)^(0+128)
  4683     1278  0872               	movf	?___flneg+2,w
  4684     1279  00C6               	movwf	(efgtoa@g+2)^(0+128)
  4685     127A  0871               	movf	?___flneg+1,w
  4686     127B  00C5               	movwf	(efgtoa@g+1)^(0+128)
  4687     127C  0870               	movf	?___flneg,w
  4688     127D  00C4               	movwf	efgtoa@g^(0+128)
  4689     127E                     l3048:
  4690                           
  4691                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  4692     127E  1683               	bsf	3,5	;RP0=1, select bank1
  4693     127F  1303               	bcf	3,6	;RP1=0, select bank1
  4694     1280  01C2               	clrf	efgtoa@n^(0+128)
  4695     1281  01C3               	clrf	(efgtoa@n+1)^(0+128)
  4696     1282                     l3050:
  4697                           
  4698                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 604:     w = width;
  4699     1282  1683               	bsf	3,5	;RP0=1, select bank3
  4700     1283  1703               	bsf	3,6	;RP1=1, select bank3
  4701     1284  0823               	movf	(_width+1)^(0+384),w
  4702     1285  1683               	bsf	3,5	;RP0=1, select bank1
  4703     1286  1303               	bcf	3,6	;RP1=0, select bank1
  4704     1287  00B2               	movwf	(efgtoa@w+1)^(0+128)
  4705     1288  1683               	bsf	3,5	;RP0=1, select bank3
  4706     1289  1703               	bsf	3,6	;RP1=1, select bank3
  4707     128A  0822               	movf	_width^(0+384),w
  4708     128B  1683               	bsf	3,5	;RP0=1, select bank1
  4709     128C  1303               	bcf	3,6	;RP1=0, select bank1
  4710     128D  00B1               	movwf	efgtoa@w^(0+128)
  4711     128E                     l3052:
  4712                           
  4713                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 605:     if (sign
  4714     128E  0841               	movf	efgtoa@sign^(0+128),w
  4715     128F  1903               	btfsc	3,2
  4716     1290  2A92               	goto	u4431
  4717     1291  2A93               	goto	u4430
  4718     1292                     u4431:
  4719     1292  2AA3               	goto	l3060
  4720     1293                     u4430:
  4721     1293                     l3054:
  4722                           
  4723                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 609:    ) {;c:\PROGRA~1
      +                          \MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-' : '+';
  4724     1293  0841               	movf	efgtoa@sign^(0+128),w
  4725     1294  1D03               	btfss	3,2
  4726     1295  2A97               	goto	u4441
  4727     1296  2A98               	goto	u4440
  4728     1297                     u4441:
  4729     1297  2A9D               	goto	l3058
  4730     1298                     u4440:
  4731     1298                     l3056:
  4732     1298  302B               	movlw	43
  4733     1299  00A6               	movwf	_efgtoa$792^(0+128)
  4734     129A  3000               	movlw	0
  4735     129B  00A7               	movwf	(_efgtoa$792^(0+128)+1)
  4736     129C  2AA1               	goto	l748
  4737     129D                     l3058:
  4738     129D  302D               	movlw	45
  4739     129E  00A6               	movwf	_efgtoa$792^(0+128)
  4740     129F  3000               	movlw	0
  4741     12A0  00A7               	movwf	(_efgtoa$792^(0+128)+1)
  4742     12A1                     l748:
  4743     12A1  0826               	movf	_efgtoa$792^(0+128),w
  4744     12A2  00C1               	movwf	efgtoa@sign^(0+128)
  4745     12A3                     l3060:
  4746                           
  4747                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 619:     if (( __fpclas
      +                          sifyf(g.f) == 1 )) {
  4748     12A3  0847               	movf	(efgtoa@g+3)^(0+128),w
  4749     12A4  00F3               	movwf	___fpclassifyf@x+3
  4750     12A5  0846               	movf	(efgtoa@g+2)^(0+128),w
  4751     12A6  00F2               	movwf	___fpclassifyf@x+2
  4752     12A7  0845               	movf	(efgtoa@g+1)^(0+128),w
  4753     12A8  00F1               	movwf	___fpclassifyf@x+1
  4754     12A9  0844               	movf	efgtoa@g^(0+128),w
  4755     12AA  00F0               	movwf	___fpclassifyf@x
  4756     12AB  160A  158A  2551  160A  118A  	fcall	___fpclassifyf
  4757     12B0  0370               	decf	?___fpclassifyf,w
  4758     12B1  0471               	iorwf	?___fpclassifyf+1,w
  4759     12B2  1D03               	btfss	3,2
  4760     12B3  2AB5               	goto	u4451
  4761     12B4  2AB6               	goto	u4450
  4762     12B5                     u4451:
  4763     12B5  2B03               	goto	l3072
  4764     12B6                     u4450:
  4765     12B6                     l3062:
  4766                           
  4767                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 620:   if (sign) {
  4768     12B6  1683               	bsf	3,5	;RP0=1, select bank1
  4769     12B7  1303               	bcf	3,6	;RP1=0, select bank1
  4770     12B8  0841               	movf	efgtoa@sign^(0+128),w
  4771     12B9  1903               	btfsc	3,2
  4772     12BA  2ABC               	goto	u4461
  4773     12BB  2ABD               	goto	u4460
  4774     12BC                     u4461:
  4775     12BC  2ACD               	goto	l3066
  4776     12BD                     u4460:
  4777     12BD                     l3064:
  4778                           
  4779                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] = sign;
  4780     12BD  0841               	movf	efgtoa@sign^(0+128),w
  4781     12BE  1283               	bcf	3,5	;RP0=0, select bank2
  4782     12BF  1703               	bsf	3,6	;RP1=1, select bank2
  4783     12C0  0090               	movwf	_dbuf^(0+256)
  4784                           
  4785                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 622:    w--;
  4786     12C1  30FF               	movlw	255
  4787     12C2  1683               	bsf	3,5	;RP0=1, select bank1
  4788     12C3  1303               	bcf	3,6	;RP1=0, select bank1
  4789     12C4  07B1               	addwf	efgtoa@w^(0+128),f
  4790     12C5  1803               	skipnc
  4791     12C6  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  4792     12C7  30FF               	movlw	255
  4793     12C8  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  4794                           
  4795                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  4796     12C9  3001               	movlw	1
  4797     12CA  00C2               	movwf	efgtoa@n^(0+128)
  4798     12CB  3000               	movlw	0
  4799     12CC  00C3               	movwf	(efgtoa@n^(0+128)+1)
  4800     12CD                     l3066:
  4801                           
  4802                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 631:   {;c:\PROGRA~1\MI
      +                          CROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 632:             strcpy(&dbuf[n], "inf
      +                          ");
  4803     12CD  0842               	movf	efgtoa@n^(0+128),w
  4804     12CE  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4805     12CF  00F0               	movwf	strcpy@dest
  4806     12D0  3001               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  4807     12D1  00F1               	movwf	strcpy@src
  4808     12D2  3080               	movlw	128
  4809     12D3  00F2               	movwf	strcpy@src+1
  4810     12D4  160A  158A  2334  160A  118A  	fcall	_strcpy
  4811     12D9                     l3068:
  4812                           
  4813                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 633:         };c:\PROGR
      +                          A~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 634:         w -= ((sizeof("inf"
      +                          )/sizeof("inf"[0]))-1);
  4814     12D9  30FD               	movlw	253
  4815     12DA  1683               	bsf	3,5	;RP0=1, select bank1
  4816     12DB  1303               	bcf	3,6	;RP1=0, select bank1
  4817     12DC  07B1               	addwf	efgtoa@w^(0+128),f
  4818     12DD  1803               	skipnc
  4819     12DE  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  4820     12DF  30FF               	movlw	255
  4821     12E0  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  4822                           
  4823                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 635:         return (in
      +                          t) pad(fp, &dbuf[0], w);
  4824     12E1  1283               	bcf	3,5	;RP0=0, select bank0
  4825     12E2  1303               	bcf	3,6	;RP1=0, select bank0
  4826     12E3  0851               	movf	efgtoa@fp,w
  4827     12E4  00A8               	movwf	pad@fp
  4828     12E5  0852               	movf	efgtoa@fp+1,w
  4829     12E6  00A9               	movwf	pad@fp+1
  4830     12E7  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
  4831     12E8  00AA               	movwf	pad@buf
  4832     12E9  1683               	bsf	3,5	;RP0=1, select bank1
  4833     12EA  1303               	bcf	3,6	;RP1=0, select bank1
  4834     12EB  0832               	movf	(efgtoa@w+1)^(0+128),w
  4835     12EC  1283               	bcf	3,5	;RP0=0, select bank0
  4836     12ED  1303               	bcf	3,6	;RP1=0, select bank0
  4837     12EE  00AC               	movwf	pad@p+1
  4838     12EF  1683               	bsf	3,5	;RP0=1, select bank1
  4839     12F0  1303               	bcf	3,6	;RP1=0, select bank1
  4840     12F1  0831               	movf	efgtoa@w^(0+128),w
  4841     12F2  1283               	bcf	3,5	;RP0=0, select bank0
  4842     12F3  1303               	bcf	3,6	;RP1=0, select bank0
  4843     12F4  00AB               	movwf	pad@p
  4844     12F5  160A  158A  248A  160A  118A  	fcall	_pad
  4845     12FA  1283               	bcf	3,5	;RP0=0, select bank0
  4846     12FB  1303               	bcf	3,6	;RP1=0, select bank0
  4847     12FC  0829               	movf	?_pad+1,w
  4848     12FD  00D2               	movwf	?_efgtoa+1
  4849     12FE  0828               	movf	?_pad,w
  4850     12FF  00D1               	movwf	?_efgtoa
  4851     1300  120A  118A  2FE5   	goto	l751
  4852     1303                     l3072:
  4853                           
  4854                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 637:     if (( __fpclas
      +                          sifyf(g.f) == 0 )) {
  4855     1303  1683               	bsf	3,5	;RP0=1, select bank1
  4856     1304  1303               	bcf	3,6	;RP1=0, select bank1
  4857     1305  0847               	movf	(efgtoa@g+3)^(0+128),w
  4858     1306  00F3               	movwf	___fpclassifyf@x+3
  4859     1307  0846               	movf	(efgtoa@g+2)^(0+128),w
  4860     1308  00F2               	movwf	___fpclassifyf@x+2
  4861     1309  0845               	movf	(efgtoa@g+1)^(0+128),w
  4862     130A  00F1               	movwf	___fpclassifyf@x+1
  4863     130B  0844               	movf	efgtoa@g^(0+128),w
  4864     130C  00F0               	movwf	___fpclassifyf@x
  4865     130D  160A  158A  2551  160A  118A  	fcall	___fpclassifyf
  4866     1312  0870               	movf	?___fpclassifyf,w
  4867     1313  0471               	iorwf	?___fpclassifyf+1,w
  4868     1314  1D03               	btfss	3,2
  4869     1315  2B17               	goto	u4471
  4870     1316  2B1A               	goto	u4470
  4871     1317                     u4471:
  4872     1317  120A  118A  28AB   	goto	l3084
  4873     131A                     u4470:
  4874     131A                     l3074:
  4875                           
  4876                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 638:   if (sign) {
  4877     131A  1683               	bsf	3,5	;RP0=1, select bank1
  4878     131B  1303               	bcf	3,6	;RP1=0, select bank1
  4879     131C  0841               	movf	efgtoa@sign^(0+128),w
  4880     131D  1903               	btfsc	3,2
  4881     131E  2B20               	goto	u4481
  4882     131F  2B21               	goto	u4480
  4883     1320                     u4481:
  4884     1320  2B31               	goto	l3078
  4885     1321                     u4480:
  4886     1321                     l3076:
  4887                           
  4888                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] = sign;
  4889     1321  0841               	movf	efgtoa@sign^(0+128),w
  4890     1322  1283               	bcf	3,5	;RP0=0, select bank2
  4891     1323  1703               	bsf	3,6	;RP1=1, select bank2
  4892     1324  0090               	movwf	_dbuf^(0+256)
  4893                           
  4894                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 640:    w--;
  4895     1325  30FF               	movlw	255
  4896     1326  1683               	bsf	3,5	;RP0=1, select bank1
  4897     1327  1303               	bcf	3,6	;RP1=0, select bank1
  4898     1328  07B1               	addwf	efgtoa@w^(0+128),f
  4899     1329  1803               	skipnc
  4900     132A  0AB2               	incf	(efgtoa@w+1)^(0+128),f
  4901     132B  30FF               	movlw	255
  4902     132C  07B2               	addwf	(efgtoa@w+1)^(0+128),f
  4903                           
  4904                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  4905     132D  3001               	movlw	1
  4906     132E  00C2               	movwf	efgtoa@n^(0+128)
  4907     132F  3000               	movlw	0
  4908     1330  00C3               	movwf	(efgtoa@n^(0+128)+1)
  4909     1331                     l3078:
  4910                           
  4911                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 649:   {;c:\PROGRA~1\MI
      +                          CROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 650:             strcpy(&dbuf[n], "nan
      +                          ");
  4912     1331  0842               	movf	efgtoa@n^(0+128),w
  4913     1332  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
  4914     1333  00F0               	movwf	strcpy@dest
  4915     1334  3005               	movlw	(low ((STR_22-__stringbase)| (0+32768)))& (0+255)
  4916     1335  00F1               	movwf	strcpy@src
  4917     1336  3080               	movlw	128
  4918     1337  00F2               	movwf	strcpy@src+1
  4919     1338  160A  158A  2334  160A  118A  	fcall	_strcpy
  4920     133D  2AD9               	goto	l3068
  4921                           
  4922                           	psect	text13
  4923     1B34                     __ptext13:	
  4924 ;; *************** function _strcpy *****************
  4925 ;; Defined at:
  4926 ;;		line 3 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\strcpy.c"
  4927 ;; Parameters:    Size  Location     Type
  4928 ;;  dest            1    0[COMMON] PTR unsigned char 
  4929 ;;		 -> dbuf(80), main@output(16), 
  4930 ;;  src             2    1[COMMON] PTR const unsigned char 
  4931 ;;		 -> STR_22(4), STR_19(4), calculate@result(16), 
  4932 ;; Auto vars:     Size  Location     Type
  4933 ;;  d               1    5[COMMON] PTR unsigned char 
  4934 ;;		 -> dbuf(80), main@output(16), 
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  1    0[COMMON] PTR unsigned char 
  4937 ;; Registers used:
  4938 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4944 ;;      Params:         3       0       0       0       0
  4945 ;;      Locals:         1       0       0       0       0
  4946 ;;      Temps:          2       0       0       0       0
  4947 ;;      Totals:         6       0       0       0       0
  4948 ;;Total ram usage:        6 bytes
  4949 ;; Hardware stack levels used: 2
  4950 ;; This function calls:
  4951 ;;		Nothing
  4952 ;; This function is called by:
  4953 ;;		_main
  4954 ;;		_efgtoa
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958     1B34                     _strcpy:	
  4959                           ;psect for function _strcpy
  4960                           
  4961     1B34                     l2580:	
  4962                           ;incstack = 0
  4963                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  4964                           
  4965     1B34  0870               	movf	strcpy@dest,w
  4966     1B35  00F5               	movwf	strcpy@d
  4967     1B36                     l2582:
  4968     1B36  0872               	movf	strcpy@src+1,w
  4969     1B37  00F4               	movwf	??_strcpy+1
  4970     1B38  0871               	movf	strcpy@src,w
  4971     1B39  00F3               	movwf	??_strcpy
  4972     1B3A  0AF1               	incf	strcpy@src,f
  4973     1B3B  1903               	skipnz
  4974     1B3C  0AF2               	incf	strcpy@src+1,f
  4975     1B3D  0874               	movf	??_strcpy+1,w
  4976     1B3E  1283               	bcf	3,5	;RP0=0, select bank0
  4977     1B3F  1303               	bcf	3,6	;RP1=0, select bank0
  4978     1B40  00FF               	movwf	btemp+1
  4979     1B41  0873               	movf	??_strcpy,w
  4980     1B42  0084               	movwf	4
  4981     1B43  160A  158A  2000  160A  158A  	fcall	stringtab
  4982     1B48  00FF               	movwf	btemp+1
  4983     1B49  0875               	movf	strcpy@d,w
  4984     1B4A  0AF5               	incf	strcpy@d,f
  4985     1B4B  0084               	movwf	4
  4986     1B4C  087F               	movf	btemp+1,w
  4987     1B4D  1783               	bsf	3,7	;select IRP bank2
  4988     1B4E  0080               	movwf	0
  4989     1B4F  0800               	movf	0,w
  4990     1B50  1D03               	btfss	3,2
  4991     1B51  2B53               	goto	u3291
  4992     1B52  2B54               	goto	u3290
  4993     1B53                     u3291:
  4994     1B53  2B36               	goto	l2582
  4995     1B54                     u3290:
  4996     1B54                     l886:
  4997     1B54  0008               	return
  4998     1B55                     __end_of_strcpy:
  4999                           
  5000                           	psect	text14
  5001     1C8A                     __ptext14:	
  5002 ;; *************** function _pad *****************
  5003 ;; Defined at:
  5004 ;;		line 193 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;  fp              2    8[BANK0 ] PTR struct _IO_FILE
  5007 ;;		 -> snprintf@f(11), 
  5008 ;;  buf             1   10[BANK0 ] PTR unsigned char 
  5009 ;;		 -> dbuf(80), 
  5010 ;;  p               2   11[BANK0 ] int 
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;  i               2   13[BANK0 ] int 
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  2    8[BANK0 ] int 
  5015 ;; Registers used:
  5016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5022 ;;      Params:         0       5       0       0       0
  5023 ;;      Locals:         0       2       0       0       0
  5024 ;;      Temps:          1       0       0       0       0
  5025 ;;      Totals:         1       7       0       0       0
  5026 ;;Total ram usage:        8 bytes
  5027 ;; Hardware stack levels used: 1
  5028 ;; Hardware stack levels required when called: 3
  5029 ;; This function calls:
  5030 ;;		_fputc
  5031 ;;		_fputs
  5032 ;;		_strlen
  5033 ;; This function is called by:
  5034 ;;		_efgtoa
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038     1C8A                     _pad:	
  5039                           ;psect for function _pad
  5040                           
  5041     1C8A                     l2952:	
  5042                           ;incstack = 0
  5043 ;; hardware stack exceeded
  5044                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5045                           
  5046                           
  5047                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static int pad(FIL
      +                          E *fp, char *buf, int p);c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           194: {;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 195:     int i;;
      +                          c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) {
  5048     1C8A  1283               	bcf	3,5	;RP0=0, select bank0
  5049     1C8B  1303               	bcf	3,6	;RP1=0, select bank0
  5050     1C8C  1FAC               	btfss	pad@p+1,7
  5051     1C8D  2C8F               	goto	u4181
  5052     1C8E  2C90               	goto	u4180
  5053     1C8F                     u4181:
  5054     1C8F  2C92               	goto	l736
  5055     1C90                     u4180:
  5056     1C90                     l2954:
  5057                           
  5058                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  5059     1C90  01AB               	clrf	pad@p
  5060     1C91  01AC               	clrf	pad@p+1
  5061     1C92                     l736:	
  5062                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 207:  }
  5063                           
  5064                           
  5065                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  5066     1C92  01AD               	clrf	pad@i
  5067     1C93  01AE               	clrf	pad@i+1
  5068                           
  5069                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i < p) 
      +                          {
  5070     1C94  2CAC               	goto	l2960
  5071     1C95                     l2956:
  5072                           
  5073                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fputc(' ',
      +                           fp);
  5074     1C95  3020               	movlw	32
  5075     1C96  00F0               	movwf	fputc@c
  5076     1C97  3000               	movlw	0
  5077     1C98  00F1               	movwf	fputc@c+1
  5078     1C99  1283               	bcf	3,5	;RP0=0, select bank0
  5079     1C9A  1303               	bcf	3,6	;RP1=0, select bank0
  5080     1C9B  0828               	movf	pad@fp,w
  5081     1C9C  00F2               	movwf	fputc@fp
  5082     1C9D  0829               	movf	pad@fp+1,w
  5083     1C9E  00F3               	movwf	fputc@fp+1
  5084     1C9F  160A  158A  25DE  160A  158A  	fcall	_fputc
  5085     1CA4                     l2958:
  5086                           
  5087                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  5088     1CA4  3001               	movlw	1
  5089     1CA5  1283               	bcf	3,5	;RP0=0, select bank0
  5090     1CA6  1303               	bcf	3,6	;RP1=0, select bank0
  5091     1CA7  07AD               	addwf	pad@i,f
  5092     1CA8  1803               	skipnc
  5093     1CA9  0AAE               	incf	pad@i+1,f
  5094     1CAA  3000               	movlw	0
  5095     1CAB  07AE               	addwf	pad@i+1,f
  5096     1CAC                     l2960:
  5097                           
  5098                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i < p) 
      +                          {
  5099     1CAC  082E               	movf	pad@i+1,w
  5100     1CAD  3A80               	xorlw	128
  5101     1CAE  00FD               	movwf	??_pad
  5102     1CAF  082C               	movf	pad@p+1,w
  5103     1CB0  3A80               	xorlw	128
  5104     1CB1  027D               	subwf	??_pad,w
  5105     1CB2  1D03               	skipz
  5106     1CB3  2CB6               	goto	u4195
  5107     1CB4  082B               	movf	pad@p,w
  5108     1CB5  022D               	subwf	pad@i,w
  5109     1CB6                     u4195:
  5110     1CB6  1C03               	skipc
  5111     1CB7  2CB9               	goto	u4191
  5112     1CB8  2CBA               	goto	u4190
  5113     1CB9                     u4191:
  5114     1CB9  2C95               	goto	l2956
  5115     1CBA                     u4190:
  5116     1CBA                     l2962:
  5117                           
  5118                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fputs((con
      +                          st char *)buf, fp);
  5119     1CBA  1283               	bcf	3,5	;RP0=0, select bank0
  5120     1CBB  1303               	bcf	3,6	;RP1=0, select bank0
  5121     1CBC  082A               	movf	pad@buf,w
  5122     1CBD  00A0               	movwf	fputs@s
  5123     1CBE  0828               	movf	pad@fp,w
  5124     1CBF  00A1               	movwf	fputs@fp
  5125     1CC0  0829               	movf	pad@fp+1,w
  5126     1CC1  00A2               	movwf	fputs@fp+1
  5127     1CC2  160A  118A  200B  160A  158A  	fcall	_fputs
  5128     1CC7                     l2964:
  5129                           
  5130                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 224:     return (int)(s
      +                          trlen(buf) + (size_t)p);
  5131     1CC7  1283               	bcf	3,5	;RP0=0, select bank0
  5132     1CC8  1303               	bcf	3,6	;RP1=0, select bank0
  5133     1CC9  082A               	movf	pad@buf,w
  5134     1CCA  00F0               	movwf	strlen@s
  5135     1CCB  3001               	movlw	1
  5136     1CCC  00F1               	movwf	strlen@s+1
  5137     1CCD  160A  158A  2379  160A  158A  	fcall	_strlen
  5138     1CD2  1283               	bcf	3,5	;RP0=0, select bank0
  5139     1CD3  1303               	bcf	3,6	;RP1=0, select bank0
  5140     1CD4  082B               	movf	pad@p,w
  5141     1CD5  0770               	addwf	?_strlen,w
  5142     1CD6  00A8               	movwf	?_pad
  5143     1CD7  082C               	movf	pad@p+1,w
  5144     1CD8  1803               	skipnc
  5145     1CD9  0A2C               	incf	pad@p+1,w
  5146     1CDA  0771               	addwf	?_strlen+1,w
  5147     1CDB  00A9               	movwf	?_pad+1
  5148     1CDC                     l740:
  5149     1CDC  0008               	return
  5150     1CDD                     __end_of_pad:
  5151                           
  5152                           	psect	text15
  5153     1B79                     __ptext15:	
  5154 ;; *************** function _strlen *****************
  5155 ;; Defined at:
  5156 ;;		line 5 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\strlen.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;  s               2    0[COMMON] PTR const unsigned char 
  5159 ;;		 -> dbuf(80), main@output(16), calculate@result(16), STR_17(2), 
  5160 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
  5161 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
  5162 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  5163 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(1), 
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;  a               2    2[COMMON] PTR const unsigned char 
  5166 ;;		 -> dbuf(80), main@output(16), calculate@result(16), STR_17(2), 
  5167 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
  5168 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
  5169 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
  5170 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(1), 
  5171 ;; Return value:  Size  Location     Type
  5172 ;;                  2    0[COMMON] unsigned int 
  5173 ;; Registers used:
  5174 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5175 ;; Tracked objects:
  5176 ;;		On entry : 0/0
  5177 ;;		On exit  : 0/0
  5178 ;;		Unchanged: 0/0
  5179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5180 ;;      Params:         2       0       0       0       0
  5181 ;;      Locals:         2       0       0       0       0
  5182 ;;      Temps:          0       0       0       0       0
  5183 ;;      Totals:         4       0       0       0       0
  5184 ;;Total ram usage:        4 bytes
  5185 ;; Hardware stack levels used: 2
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		_LCDdisplay
  5190 ;;		_getInput
  5191 ;;		_calculate
  5192 ;;		_pad
  5193 ;; This function uses a non-reentrant model
  5194 ;;
  5195                           
  5196     1B79                     _strlen:	
  5197                           ;psect for function _strlen
  5198                           
  5199     1B79                     l2350:	
  5200                           ;incstack = 0
  5201                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5202                           
  5203     1B79  0870               	movf	strlen@s,w
  5204     1B7A  00F2               	movwf	strlen@a
  5205     1B7B  0871               	movf	strlen@s+1,w
  5206     1B7C  00F3               	movwf	strlen@a+1
  5207     1B7D  2B84               	goto	l2354
  5208     1B7E                     l2352:
  5209     1B7E  3001               	movlw	1
  5210     1B7F  07F0               	addwf	strlen@s,f
  5211     1B80  1803               	skipnc
  5212     1B81  0AF1               	incf	strlen@s+1,f
  5213     1B82  3000               	movlw	0
  5214     1B83  07F1               	addwf	strlen@s+1,f
  5215     1B84                     l2354:
  5216     1B84  0871               	movf	strlen@s+1,w
  5217     1B85  1283               	bcf	3,5	;RP0=0, select bank0
  5218     1B86  1303               	bcf	3,6	;RP1=0, select bank0
  5219     1B87  00FF               	movwf	btemp+1
  5220     1B88  0870               	movf	strlen@s,w
  5221     1B89  0084               	movwf	4
  5222     1B8A  160A  158A  2000  160A  158A  	fcall	stringtab
  5223     1B8F  3A00               	xorlw	0
  5224     1B90  1D03               	skipz
  5225     1B91  2B93               	goto	u2781
  5226     1B92  2B94               	goto	u2780
  5227     1B93                     u2781:
  5228     1B93  2B7E               	goto	l2352
  5229     1B94                     u2780:
  5230     1B94                     l2356:
  5231     1B94  0872               	movf	strlen@a,w
  5232     1B95  0270               	subwf	strlen@s,w
  5233     1B96  00F0               	movwf	?_strlen
  5234     1B97  0873               	movf	strlen@a+1,w
  5235     1B98  1C03               	skipc
  5236     1B99  0A73               	incf	strlen@a+1,w
  5237     1B9A  0271               	subwf	strlen@s+1,w
  5238     1B9B  00F1               	movwf	?_strlen+1
  5239     1B9C                     l892:
  5240     1B9C  0008               	return
  5241     1B9D                     __end_of_strlen:
  5242                           
  5243                           	psect	text16
  5244     100B                     __ptext16:	
  5245 ;; *************** function _fputs *****************
  5246 ;; Defined at:
  5247 ;;		line 8 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  5248 ;; Parameters:    Size  Location     Type
  5249 ;;  s               1    0[BANK0 ] PTR const unsigned char 
  5250 ;;		 -> dbuf(80), 
  5251 ;;  fp              2    1[BANK0 ] PTR struct _IO_FILE
  5252 ;;		 -> snprintf@f(11), 
  5253 ;; Auto vars:     Size  Location     Type
  5254 ;;  i               2    6[BANK0 ] int 
  5255 ;;  c               1    5[BANK0 ] unsigned char 
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  2    0[BANK0 ] int 
  5258 ;; Registers used:
  5259 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5265 ;;      Params:         0       3       0       0       0
  5266 ;;      Locals:         0       3       0       0       0
  5267 ;;      Temps:          0       2       0       0       0
  5268 ;;      Totals:         0       8       0       0       0
  5269 ;;Total ram usage:        8 bytes
  5270 ;; Hardware stack levels used: 1
  5271 ;; Hardware stack levels required when called: 2
  5272 ;; This function calls:
  5273 ;;		_fputc
  5274 ;; This function is called by:
  5275 ;;		_pad
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279     100B                     _fputs:	
  5280                           ;psect for function _fputs
  5281                           
  5282     100B                     l2572:	
  5283                           ;incstack = 0
  5284 ;; hardware stack exceeded
  5285                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5286                           
  5287     100B  1283               	bcf	3,5	;RP0=0, select bank0
  5288     100C  1303               	bcf	3,6	;RP1=0, select bank0
  5289     100D  01A6               	clrf	fputs@i
  5290     100E  01A7               	clrf	fputs@i+1
  5291     100F  2828               	goto	l2578
  5292     1010                     l2574:
  5293     1010  0825               	movf	fputs@c,w
  5294     1011  00A3               	movwf	??_fputs
  5295     1012  01A4               	clrf	??_fputs+1
  5296     1013  0823               	movf	??_fputs,w
  5297     1014  00F0               	movwf	fputc@c
  5298     1015  0824               	movf	??_fputs+1,w
  5299     1016  00F1               	movwf	fputc@c+1
  5300     1017  0821               	movf	fputs@fp,w
  5301     1018  00F2               	movwf	fputc@fp
  5302     1019  0822               	movf	fputs@fp+1,w
  5303     101A  00F3               	movwf	fputc@fp+1
  5304     101B  160A  158A  25DE  160A  118A  	fcall	_fputc
  5305     1020                     l2576:
  5306     1020  3001               	movlw	1
  5307     1021  1283               	bcf	3,5	;RP0=0, select bank0
  5308     1022  1303               	bcf	3,6	;RP1=0, select bank0
  5309     1023  07A6               	addwf	fputs@i,f
  5310     1024  1803               	skipnc
  5311     1025  0AA7               	incf	fputs@i+1,f
  5312     1026  3000               	movlw	0
  5313     1027  07A7               	addwf	fputs@i+1,f
  5314     1028                     l2578:
  5315     1028  0826               	movf	fputs@i,w
  5316     1029  0720               	addwf	fputs@s,w
  5317     102A  00A3               	movwf	??_fputs
  5318     102B  0823               	movf	??_fputs,w
  5319     102C  0084               	movwf	4
  5320     102D  1783               	bsf	3,7	;select IRP bank2
  5321     102E  0800               	movf	0,w
  5322     102F  00A5               	movwf	fputs@c
  5323     1030  0825               	movf	fputs@c,w
  5324     1031  1D03               	btfss	3,2
  5325     1032  2834               	goto	u3281
  5326     1033  2835               	goto	u3280
  5327     1034                     u3281:
  5328     1034  2810               	goto	l2574
  5329     1035                     u3280:
  5330     1035                     l877:
  5331     1035  0008               	return
  5332     1036                     __end_of_fputs:
  5333                           
  5334                           	psect	text17
  5335     1DDE                     __ptext17:	
  5336 ;; *************** function _fputc *****************
  5337 ;; Defined at:
  5338 ;;		line 8 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;  c               2    0[COMMON] int 
  5341 ;;  fp              2    2[COMMON] PTR struct _IO_FILE
  5342 ;;		 -> snprintf@f(11), 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  2    0[COMMON] int 
  5347 ;; Registers used:
  5348 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5354 ;;      Params:         4       0       0       0       0
  5355 ;;      Locals:         0       0       0       0       0
  5356 ;;      Temps:          9       0       0       0       0
  5357 ;;      Totals:        13       0       0       0       0
  5358 ;;Total ram usage:       13 bytes
  5359 ;; Hardware stack levels used: 1
  5360 ;; Hardware stack levels required when called: 1
  5361 ;; This function calls:
  5362 ;;		_putch
  5363 ;; This function is called by:
  5364 ;;		_pad
  5365 ;;		_vfpfcnvrt
  5366 ;;		_fputs
  5367 ;; This function uses a non-reentrant model
  5368 ;;
  5369                           
  5370     1DDE                     _fputc:	
  5371                           ;psect for function _fputc
  5372                           
  5373     1DDE                     l2336:	
  5374                           ;incstack = 0
  5375                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5376                           
  5377     1DDE  0872               	movf	fputc@fp,w
  5378     1DDF  0473               	iorwf	fputc@fp+1,w
  5379     1DE0  1903               	btfsc	3,2
  5380     1DE1  2DE3               	goto	u2731
  5381     1DE2  2DE4               	goto	u2730
  5382     1DE3                     u2731:
  5383     1DE3  2DEA               	goto	l2340
  5384     1DE4                     u2730:
  5385     1DE4                     l2338:
  5386     1DE4  0872               	movf	fputc@fp,w
  5387     1DE5  0473               	iorwf	fputc@fp+1,w
  5388     1DE6  1D03               	btfss	3,2
  5389     1DE7  2DE9               	goto	u2741
  5390     1DE8  2DEA               	goto	u2740
  5391     1DE9                     u2741:
  5392     1DE9  2DF1               	goto	l2342
  5393     1DEA                     u2740:
  5394     1DEA                     l2340:
  5395     1DEA  0870               	movf	fputc@c,w
  5396     1DEB  120A  118A  2006  160A  158A  	fcall	_putch
  5397     1DF0  2E77               	goto	l869
  5398     1DF1                     l2342:
  5399     1DF1  0872               	movf	fputc@fp,w
  5400     1DF2  3E09               	addlw	9
  5401     1DF3  00F4               	movwf	??_fputc
  5402     1DF4  0873               	movf	fputc@fp+1,w
  5403     1DF5  1803               	skipnc
  5404     1DF6  3E01               	addlw	1
  5405     1DF7  3E00               	addlw	0
  5406     1DF8  00F5               	movwf	??_fputc+1
  5407     1DF9  0874               	movf	??_fputc,w
  5408     1DFA  0084               	movwf	4
  5409     1DFB  1783               	bsf	3,7
  5410     1DFC  1C75               	btfss	??_fputc+1,0
  5411     1DFD  1383               	bcf	3,7
  5412     1DFE  0800               	movf	0,w
  5413     1DFF  00F6               	movwf	??_fputc+2
  5414     1E00  0A84               	incf	4,f
  5415     1E01  0800               	movf	0,w
  5416     1E02  00F7               	movwf	??_fputc+3
  5417     1E03  0876               	movf	??_fputc+2,w
  5418     1E04  0477               	iorwf	??_fputc+3,w
  5419     1E05  1903               	btfsc	3,2
  5420     1E06  2E08               	goto	u2751
  5421     1E07  2E09               	goto	u2750
  5422     1E08                     u2751:
  5423     1E08  2E3B               	goto	l2346
  5424     1E09                     u2750:
  5425     1E09                     l2344:
  5426     1E09  0872               	movf	fputc@fp,w
  5427     1E0A  3E09               	addlw	9
  5428     1E0B  00F4               	movwf	??_fputc
  5429     1E0C  0873               	movf	fputc@fp+1,w
  5430     1E0D  1803               	skipnc
  5431     1E0E  3E01               	addlw	1
  5432     1E0F  3E00               	addlw	0
  5433     1E10  00F5               	movwf	??_fputc+1
  5434     1E11  0874               	movf	??_fputc,w
  5435     1E12  0084               	movwf	4
  5436     1E13  1783               	bsf	3,7
  5437     1E14  1C75               	btfss	??_fputc+1,0
  5438     1E15  1383               	bcf	3,7
  5439     1E16  0800               	movf	0,w
  5440     1E17  00F6               	movwf	??_fputc+2
  5441     1E18  0A84               	incf	4,f
  5442     1E19  0800               	movf	0,w
  5443     1E1A  00F7               	movwf	??_fputc+3
  5444     1E1B  0872               	movf	fputc@fp,w
  5445     1E1C  3E02               	addlw	2
  5446     1E1D  00F8               	movwf	??_fputc+4
  5447     1E1E  0873               	movf	fputc@fp+1,w
  5448     1E1F  1803               	skipnc
  5449     1E20  3E01               	addlw	1
  5450     1E21  3E00               	addlw	0
  5451     1E22  00F9               	movwf	??_fputc+5
  5452     1E23  0878               	movf	??_fputc+4,w
  5453     1E24  0084               	movwf	4
  5454     1E25  1783               	bsf	3,7
  5455     1E26  1C79               	btfss	??_fputc+5,0
  5456     1E27  1383               	bcf	3,7
  5457     1E28  0800               	movf	0,w
  5458     1E29  00FA               	movwf	??_fputc+6
  5459     1E2A  0A84               	incf	4,f
  5460     1E2B  0800               	movf	0,w
  5461     1E2C  00FB               	movwf	??_fputc+7
  5462     1E2D  087B               	movf	??_fputc+7,w
  5463     1E2E  3A80               	xorlw	128
  5464     1E2F  00FC               	movwf	??_fputc+8
  5465     1E30  0877               	movf	??_fputc+3,w
  5466     1E31  3A80               	xorlw	128
  5467     1E32  027C               	subwf	??_fputc+8,w
  5468     1E33  1D03               	skipz
  5469     1E34  2E37               	goto	u2765
  5470     1E35  0876               	movf	??_fputc+2,w
  5471     1E36  027A               	subwf	??_fputc+6,w
  5472     1E37                     u2765:
  5473     1E37  1803               	skipnc
  5474     1E38  2E3A               	goto	u2761
  5475     1E39  2E3B               	goto	u2760
  5476     1E3A                     u2761:
  5477     1E3A  2E77               	goto	l869
  5478     1E3B                     u2760:
  5479     1E3B                     l2346:
  5480     1E3B  0872               	movf	fputc@fp,w
  5481     1E3C  0084               	movwf	4
  5482     1E3D  1783               	bsf	3,7
  5483     1E3E  1C73               	btfss	fputc@fp+1,0
  5484     1E3F  1383               	bcf	3,7
  5485     1E40  0800               	movf	0,w
  5486     1E41  00F4               	movwf	??_fputc
  5487     1E42  0A84               	incf	4,f
  5488     1E43  0800               	movf	0,w
  5489     1E44  00F5               	movwf	??_fputc+1
  5490     1E45  0872               	movf	fputc@fp,w
  5491     1E46  3E02               	addlw	2
  5492     1E47  00F6               	movwf	??_fputc+2
  5493     1E48  0873               	movf	fputc@fp+1,w
  5494     1E49  1803               	skipnc
  5495     1E4A  3E01               	addlw	1
  5496     1E4B  3E00               	addlw	0
  5497     1E4C  00F7               	movwf	??_fputc+3
  5498     1E4D  0876               	movf	??_fputc+2,w
  5499     1E4E  0084               	movwf	4
  5500     1E4F  1783               	bsf	3,7
  5501     1E50  1C77               	btfss	??_fputc+3,0
  5502     1E51  1383               	bcf	3,7
  5503     1E52  0800               	movf	0,w
  5504     1E53  0774               	addwf	??_fputc,w
  5505     1E54  00F9               	movwf	??_fputc+5
  5506     1E55  0875               	movf	??_fputc+1,w
  5507     1E56  00F8               	movwf	??_fputc+4
  5508     1E57  1803               	skipnc
  5509     1E58  0AF8               	incf	??_fputc+4,f
  5510     1E59  1F80               	btfss	0,7
  5511     1E5A  2E5C               	goto	u2770
  5512     1E5B  03F8               	decf	??_fputc+4,f
  5513     1E5C                     u2770:
  5514     1E5C  0878               	movf	??_fputc+4,w
  5515     1E5D  00FA               	movwf	??_fputc+6
  5516     1E5E  0879               	movf	??_fputc+5,w
  5517     1E5F  0084               	movwf	4
  5518     1E60  1783               	bsf	3,7
  5519     1E61  1C7A               	btfss	??_fputc+6,0
  5520     1E62  1383               	bcf	3,7
  5521     1E63  0870               	movf	fputc@c,w
  5522     1E64  0080               	movwf	0
  5523     1E65  0872               	movf	fputc@fp,w
  5524     1E66  3E02               	addlw	2
  5525     1E67  00F4               	movwf	??_fputc
  5526     1E68  0873               	movf	fputc@fp+1,w
  5527     1E69  1803               	skipnc
  5528     1E6A  3E01               	addlw	1
  5529     1E6B  3E00               	addlw	0
  5530     1E6C  00F5               	movwf	??_fputc+1
  5531     1E6D  0874               	movf	??_fputc,w
  5532     1E6E  0084               	movwf	4
  5533     1E6F  1783               	bsf	3,7
  5534     1E70  1C75               	btfss	??_fputc+1,0
  5535     1E71  1383               	bcf	3,7
  5536     1E72  3001               	movlw	1
  5537     1E73  0780               	addwf	0,f
  5538     1E74  0A84               	incf	4,f
  5539     1E75  1803               	skipnc
  5540     1E76  0A80               	incf	0,f
  5541     1E77                     l869:
  5542     1E77  0008               	return
  5543     1E78                     __end_of_fputc:
  5544                           
  5545                           	psect	text18
  5546     0006                     __ptext18:	
  5547 ;; *************** function _putch *****************
  5548 ;; Defined at:
  5549 ;;		line 7 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\putch.c"
  5550 ;; Parameters:    Size  Location     Type
  5551 ;;  c               1    wreg     unsigned char 
  5552 ;; Auto vars:     Size  Location     Type
  5553 ;;  c               1    0[COMMON] unsigned char 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  1    wreg      void 
  5556 ;; Registers used:
  5557 ;;		wreg
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5563 ;;      Params:         0       0       0       0       0
  5564 ;;      Locals:         0       0       0       0       0
  5565 ;;      Temps:          0       0       0       0       0
  5566 ;;      Totals:         0       0       0       0       0
  5567 ;;Total ram usage:        0 bytes
  5568 ;; Hardware stack levels used: 1
  5569 ;; This function calls:
  5570 ;;		Nothing
  5571 ;; This function is called by:
  5572 ;;		_fputc
  5573 ;; This function uses a non-reentrant model
  5574 ;;
  5575                           
  5576     0006                     _putch:	
  5577                           ;psect for function _putch
  5578                           
  5579     0006                     l880:	
  5580                           ;incstack = 0
  5581                           ; Regs used in _putch: [wreg]
  5582                           
  5583     0006  0008               	return
  5584     0007                     __end_of_putch:
  5585                           
  5586                           	psect	text19
  5587     1B13                     __ptext19:	
  5588 ;; *************** function _memcpy *****************
  5589 ;; Defined at:
  5590 ;;		line 4 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\memcpy.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;  d1              1    0[COMMON] PTR void 
  5593 ;;		 -> dbuf(80), 
  5594 ;;  s1              1    1[COMMON] PTR const void 
  5595 ;;		 -> dbuf(80), 
  5596 ;;  n               2    2[COMMON] unsigned int 
  5597 ;; Auto vars:     Size  Location     Type
  5598 ;;  s               1    6[COMMON] PTR const unsigned char 
  5599 ;;		 -> dbuf(80), 
  5600 ;;  d               1    5[COMMON] PTR unsigned char 
  5601 ;;		 -> dbuf(80), 
  5602 ;;  tmp             1    4[COMMON] unsigned char 
  5603 ;; Return value:  Size  Location     Type
  5604 ;;                  1    0[COMMON] PTR void 
  5605 ;; Registers used:
  5606 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5612 ;;      Params:         4       0       0       0       0
  5613 ;;      Locals:         3       0       0       0       0
  5614 ;;      Temps:          0       0       0       0       0
  5615 ;;      Totals:         7       0       0       0       0
  5616 ;;Total ram usage:        7 bytes
  5617 ;; Hardware stack levels used: 1
  5618 ;; This function calls:
  5619 ;;		Nothing
  5620 ;; This function is called by:
  5621 ;;		_efgtoa
  5622 ;; This function uses a non-reentrant model
  5623 ;;
  5624                           
  5625     1B13                     _memcpy:	
  5626                           ;psect for function _memcpy
  5627                           
  5628     1B13                     l3030:	
  5629                           ;incstack = 0
  5630                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0]
  5631                           
  5632     1B13  0871               	movf	memcpy@s1,w
  5633     1B14  00F6               	movwf	memcpy@s
  5634     1B15  0870               	movf	memcpy@d1,w
  5635     1B16  00F5               	movwf	memcpy@d
  5636     1B17  2B25               	goto	l854
  5637     1B18                     l3032:
  5638     1B18  0876               	movf	memcpy@s,w
  5639     1B19  0084               	movwf	4
  5640     1B1A  1783               	bsf	3,7	;select IRP bank2
  5641     1B1B  0800               	movf	0,w
  5642     1B1C  00F4               	movwf	memcpy@tmp
  5643     1B1D                     l3034:
  5644     1B1D  3001               	movlw	1
  5645     1B1E  07F6               	addwf	memcpy@s,f
  5646     1B1F                     l3036:
  5647     1B1F  0875               	movf	memcpy@d,w
  5648     1B20  0084               	movwf	4
  5649     1B21  0874               	movf	memcpy@tmp,w
  5650     1B22  0080               	movwf	0
  5651     1B23  3001               	movlw	1
  5652     1B24  07F5               	addwf	memcpy@d,f
  5653     1B25                     l854:
  5654     1B25  3001               	movlw	1
  5655     1B26  02F2               	subwf	memcpy@n,f
  5656     1B27  3000               	movlw	0
  5657     1B28  1C03               	skipc
  5658     1B29  03F3               	decf	memcpy@n+1,f
  5659     1B2A  02F3               	subwf	memcpy@n+1,f
  5660     1B2B  0A72               	incf	memcpy@n,w
  5661     1B2C  1D03               	skipz
  5662     1B2D  2B32               	goto	u4411
  5663     1B2E  0A73               	incf	memcpy@n+1,w
  5664     1B2F  1D03               	btfss	3,2
  5665     1B30  2B32               	goto	u4411
  5666     1B31  2B33               	goto	u4410
  5667     1B32                     u4411:
  5668     1B32  2B18               	goto	l3032
  5669     1B33                     u4410:
  5670     1B33                     l857:
  5671     1B33  0008               	return
  5672     1B34                     __end_of_memcpy:
  5673                           
  5674                           	psect	text20
  5675     1ACC                     __ptext20:	
  5676 ;; *************** function _labs *****************
  5677 ;; Defined at:
  5678 ;;		line 1 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\labs.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;  a               4    0[COMMON] long 
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;		None
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  4    0[COMMON] long 
  5685 ;; Registers used:
  5686 ;;		wreg, status,2, status,0
  5687 ;; Tracked objects:
  5688 ;;		On entry : 0/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5692 ;;      Params:         4       0       0       0       0
  5693 ;;      Locals:         0       0       0       0       0
  5694 ;;      Temps:          0       0       0       0       0
  5695 ;;      Totals:         4       0       0       0       0
  5696 ;;Total ram usage:        4 bytes
  5697 ;; Hardware stack levels used: 1
  5698 ;; This function calls:
  5699 ;;		Nothing
  5700 ;; This function is called by:
  5701 ;;		_efgtoa
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705     1ACC                     _labs:	
  5706                           ;psect for function _labs
  5707                           
  5708     1ACC                     l2992:	
  5709                           ;incstack = 0
  5710                           ; Regs used in _labs: [wreg+status,2+status,0]
  5711                           
  5712     1ACC  1BF3               	btfsc	labs@a+3,7
  5713     1ACD  2ACF               	goto	u4281
  5714     1ACE  2AD0               	goto	u4280
  5715     1ACF                     u4281:
  5716     1ACF  2AD1               	goto	l2996
  5717     1AD0                     u4280:
  5718     1AD0                     l2994:
  5719     1AD0  2AE0               	goto	l851
  5720     1AD1                     l2996:
  5721     1AD1  0970               	comf	labs@a,w
  5722     1AD2  00F0               	movwf	?_labs
  5723     1AD3  0971               	comf	labs@a+1,w
  5724     1AD4  00F1               	movwf	?_labs+1
  5725     1AD5  0972               	comf	labs@a+2,w
  5726     1AD6  00F2               	movwf	?_labs+2
  5727     1AD7  0973               	comf	labs@a+3,w
  5728     1AD8  00F3               	movwf	?_labs+3
  5729     1AD9  0AF0               	incf	?_labs,f
  5730     1ADA  1903               	skipnz
  5731     1ADB  0AF1               	incf	?_labs+1,f
  5732     1ADC  1903               	skipnz
  5733     1ADD  0AF2               	incf	?_labs+2,f
  5734     1ADE  1903               	skipnz
  5735     1ADF  0AF3               	incf	?_labs+3,f
  5736     1AE0                     l851:
  5737     1AE0  0008               	return
  5738     1AE1                     __end_of_labs:
  5739                           
  5740                           	psect	text21
  5741     1112                     __ptext21:	
  5742 ;; *************** function _floorf *****************
  5743 ;; Defined at:
  5744 ;;		line 3 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\floorf.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;  x               4   13[BANK0 ] float 
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;  u               4   29[BANK0 ] struct .
  5749 ;;  m               4   23[BANK0 ] unsigned long 
  5750 ;;  e               2   27[BANK0 ] int 
  5751 ;; Return value:  Size  Location     Type
  5752 ;;                  4   13[BANK0 ] float 
  5753 ;; Registers used:
  5754 ;;		wreg, status,2, status,0, btemp+1
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5760 ;;      Params:         0       4       0       0       0
  5761 ;;      Locals:         0      10       0       0       0
  5762 ;;      Temps:          0       6       0       0       0
  5763 ;;      Totals:         0      20       0       0       0
  5764 ;;Total ram usage:       20 bytes
  5765 ;; Hardware stack levels used: 1
  5766 ;; This function calls:
  5767 ;;		Nothing
  5768 ;; This function is called by:
  5769 ;;		_efgtoa
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           
  5773     1112                     _floorf:	
  5774                           ;psect for function _floorf
  5775                           
  5776     1112                     l3000:	
  5777                           ;incstack = 0
  5778                           ; Regs used in _floorf: [wreg+status,2+status,0+btemp+1]
  5779                           
  5780     1112  1683               	bsf	3,5	;RP0=1, select bank3
  5781     1113  1703               	bsf	3,6	;RP1=1, select bank3
  5782     1114  081B               	movf	(floorf@F521+3)^(0+384),w
  5783     1115  1283               	bcf	3,5	;RP0=0, select bank0
  5784     1116  1303               	bcf	3,6	;RP1=0, select bank0
  5785     1117  00C0               	movwf	floorf@u+3
  5786     1118  1683               	bsf	3,5	;RP0=1, select bank3
  5787     1119  1703               	bsf	3,6	;RP1=1, select bank3
  5788     111A  081A               	movf	(floorf@F521+2)^(0+384),w
  5789     111B  1283               	bcf	3,5	;RP0=0, select bank0
  5790     111C  1303               	bcf	3,6	;RP1=0, select bank0
  5791     111D  00BF               	movwf	floorf@u+2
  5792     111E  1683               	bsf	3,5	;RP0=1, select bank3
  5793     111F  1703               	bsf	3,6	;RP1=1, select bank3
  5794     1120  0819               	movf	(floorf@F521+1)^(0+384),w
  5795     1121  1283               	bcf	3,5	;RP0=0, select bank0
  5796     1122  1303               	bcf	3,6	;RP1=0, select bank0
  5797     1123  00BE               	movwf	floorf@u+1
  5798     1124  1683               	bsf	3,5	;RP0=1, select bank3
  5799     1125  1703               	bsf	3,6	;RP1=1, select bank3
  5800     1126  0818               	movf	floorf@F521^(0+384),w
  5801     1127  1283               	bcf	3,5	;RP0=0, select bank0
  5802     1128  1303               	bcf	3,6	;RP1=0, select bank0
  5803     1129  00BD               	movwf	floorf@u
  5804     112A  0830               	movf	floorf@x+3,w
  5805     112B  00C0               	movwf	floorf@u+3
  5806     112C  082F               	movf	floorf@x+2,w
  5807     112D  00BF               	movwf	floorf@u+2
  5808     112E  082E               	movf	floorf@x+1,w
  5809     112F  00BE               	movwf	floorf@u+1
  5810     1130  082D               	movf	floorf@x,w
  5811     1131  00BD               	movwf	floorf@u
  5812     1132                     l3002:
  5813     1132  083D               	movf	floorf@u,w
  5814     1133  00B1               	movwf	??_floorf
  5815     1134  083E               	movf	floorf@u+1,w
  5816     1135  00B2               	movwf	??_floorf+1
  5817     1136  083F               	movf	floorf@u+2,w
  5818     1137  00B3               	movwf	??_floorf+2
  5819     1138  0840               	movf	floorf@u+3,w
  5820     1139  00B4               	movwf	??_floorf+3
  5821     113A  3017               	movlw	23
  5822     113B                     u4295:
  5823     113B  1003               	clrc
  5824     113C  0CB4               	rrf	??_floorf+3,f
  5825     113D  0CB3               	rrf	??_floorf+2,f
  5826     113E  0CB2               	rrf	??_floorf+1,f
  5827     113F  0CB1               	rrf	??_floorf,f
  5828     1140                     u4290:
  5829     1140  3EFF               	addlw	-1
  5830     1141  1D03               	skipz
  5831     1142  293B               	goto	u4295
  5832     1143  30FF               	movlw	255
  5833     1144  0531               	andwf	??_floorf,w
  5834     1145  00B5               	movwf	??_floorf+4
  5835     1146  3000               	movlw	0
  5836     1147  0532               	andwf	??_floorf+1,w
  5837     1148  00B6               	movwf	??_floorf+5
  5838     1149  0835               	movf	??_floorf+4,w
  5839     114A  3E81               	addlw	129
  5840     114B  00BB               	movwf	floorf@e
  5841     114C  0836               	movf	??_floorf+5,w
  5842     114D  1803               	skipnc
  5843     114E  3E01               	addlw	1
  5844     114F  3EFF               	addlw	255
  5845     1150  00BC               	movwf	floorf@e+1
  5846     1151                     l3004:
  5847     1151  083C               	movf	floorf@e+1,w
  5848     1152  3A80               	xorlw	128
  5849     1153  00FF               	movwf	btemp+1
  5850     1154  3080               	movlw	128
  5851     1155  027F               	subwf	btemp+1,w
  5852     1156  1D03               	skipz
  5853     1157  295A               	goto	u4305
  5854     1158  3017               	movlw	23
  5855     1159  023B               	subwf	floorf@e,w
  5856     115A                     u4305:
  5857     115A  1C03               	skipc
  5858     115B  295D               	goto	u4301
  5859     115C  295E               	goto	u4300
  5860     115D                     u4301:
  5861     115D  295F               	goto	l836
  5862     115E                     u4300:
  5863     115E                     l3006:
  5864     115E  2A20               	goto	l837
  5865     115F                     l836:
  5866     115F  1283               	bcf	3,5	;RP0=0, select bank0
  5867     1160  1303               	bcf	3,6	;RP1=0, select bank0
  5868     1161  1BBC               	btfsc	floorf@e+1,7
  5869     1162  2964               	goto	u4311
  5870     1163  2965               	goto	u4310
  5871     1164                     u4311:
  5872     1164  29D5               	goto	l3020
  5873     1165                     u4310:
  5874     1165                     l3008:
  5875     1165  0A3B               	incf	floorf@e,w
  5876     1166  00FF               	movwf	btemp+1
  5877     1167  30FF               	movlw	255
  5878     1168  00B1               	movwf	??_floorf
  5879     1169  30FF               	movlw	255
  5880     116A  00B2               	movwf	??_floorf+1
  5881     116B  307F               	movlw	127
  5882     116C  00B3               	movwf	??_floorf+2
  5883     116D  3000               	movlw	0
  5884     116E  00B4               	movwf	??_floorf+3
  5885     116F  2975               	goto	u4320
  5886     1170                     u4325:
  5887     1170  0D34               	rlf	??_floorf+3,w
  5888     1171  0CB4               	rrf	??_floorf+3,f
  5889     1172  0CB3               	rrf	??_floorf+2,f
  5890     1173  0CB2               	rrf	??_floorf+1,f
  5891     1174  0CB1               	rrf	??_floorf,f
  5892     1175                     u4320:
  5893     1175  0BFF               	decfsz	btemp+1,f
  5894     1176  2970               	goto	u4325
  5895     1177  0834               	movf	??_floorf+3,w
  5896     1178  00BA               	movwf	floorf@m+3
  5897     1179  0833               	movf	??_floorf+2,w
  5898     117A  00B9               	movwf	floorf@m+2
  5899     117B  0832               	movf	??_floorf+1,w
  5900     117C  00B8               	movwf	floorf@m+1
  5901     117D  0831               	movf	??_floorf,w
  5902     117E  00B7               	movwf	floorf@m
  5903     117F                     l3010:
  5904     117F  0837               	movf	floorf@m,w
  5905     1180  053D               	andwf	floorf@u,w
  5906     1181  00B1               	movwf	??_floorf
  5907     1182  0838               	movf	floorf@m+1,w
  5908     1183  053E               	andwf	floorf@u+1,w
  5909     1184  00B2               	movwf	??_floorf+1
  5910     1185  0839               	movf	floorf@m+2,w
  5911     1186  053F               	andwf	floorf@u+2,w
  5912     1187  00B3               	movwf	??_floorf+2
  5913     1188  083A               	movf	floorf@m+3,w
  5914     1189  0540               	andwf	floorf@u+3,w
  5915     118A  00B4               	movwf	??_floorf+3
  5916     118B  0834               	movf	??_floorf+3,w
  5917     118C  0433               	iorwf	??_floorf+2,w
  5918     118D  0432               	iorwf	??_floorf+1,w
  5919     118E  0431               	iorwf	??_floorf,w
  5920     118F  1D03               	skipz
  5921     1190  2992               	goto	u4331
  5922     1191  2993               	goto	u4330
  5923     1192                     u4331:
  5924     1192  2994               	goto	l3014
  5925     1193                     u4330:
  5926     1193  295E               	goto	l3006
  5927     1194                     l3014:
  5928     1194  083D               	movf	floorf@u,w
  5929     1195  00B1               	movwf	??_floorf
  5930     1196  083E               	movf	floorf@u+1,w
  5931     1197  00B2               	movwf	??_floorf+1
  5932     1198  083F               	movf	floorf@u+2,w
  5933     1199  00B3               	movwf	??_floorf+2
  5934     119A  0840               	movf	floorf@u+3,w
  5935     119B  00B4               	movwf	??_floorf+3
  5936     119C  301F               	movlw	31
  5937     119D                     u4345:
  5938     119D  1003               	clrc
  5939     119E  0CB4               	rrf	??_floorf+3,f
  5940     119F  0CB3               	rrf	??_floorf+2,f
  5941     11A0  0CB2               	rrf	??_floorf+1,f
  5942     11A1  0CB1               	rrf	??_floorf,f
  5943     11A2                     u4340:
  5944     11A2  3EFF               	addlw	-1
  5945     11A3  1D03               	skipz
  5946     11A4  299D               	goto	u4345
  5947     11A5  0834               	movf	??_floorf+3,w
  5948     11A6  0433               	iorwf	??_floorf+2,w
  5949     11A7  0432               	iorwf	??_floorf+1,w
  5950     11A8  0431               	iorwf	??_floorf,w
  5951     11A9  1903               	skipnz
  5952     11AA  29AC               	goto	u4351
  5953     11AB  29AD               	goto	u4350
  5954     11AC                     u4351:
  5955     11AC  29C4               	goto	l3018
  5956     11AD                     u4350:
  5957     11AD                     l3016:
  5958     11AD  0837               	movf	floorf@m,w
  5959     11AE  07BD               	addwf	floorf@u,f
  5960     11AF  0838               	movf	floorf@m+1,w
  5961     11B0  1103               	clrz
  5962     11B1  1803               	skipnc
  5963     11B2  3E01               	addlw	1
  5964     11B3  1903               	skipnz
  5965     11B4  29B6               	goto	u4361
  5966     11B5  07BE               	addwf	floorf@u+1,f
  5967     11B6                     u4361:
  5968     11B6  0839               	movf	floorf@m+2,w
  5969     11B7  1103               	clrz
  5970     11B8  1803               	skipnc
  5971     11B9  3E01               	addlw	1
  5972     11BA  1903               	skipnz
  5973     11BB  29BD               	goto	u4362
  5974     11BC  07BF               	addwf	floorf@u+2,f
  5975     11BD                     u4362:
  5976     11BD  083A               	movf	floorf@m+3,w
  5977     11BE  1103               	clrz
  5978     11BF  1803               	skipnc
  5979     11C0  3E01               	addlw	1
  5980     11C1  1903               	skipnz
  5981     11C2  29C4               	goto	u4363
  5982     11C3  07C0               	addwf	floorf@u+3,f
  5983     11C4                     u4363:
  5984     11C4                     l3018:
  5985     11C4  0937               	comf	floorf@m,w
  5986     11C5  00B1               	movwf	??_floorf
  5987     11C6  0938               	comf	floorf@m+1,w
  5988     11C7  00B2               	movwf	??_floorf+1
  5989     11C8  0939               	comf	floorf@m+2,w
  5990     11C9  00B3               	movwf	??_floorf+2
  5991     11CA  093A               	comf	floorf@m+3,w
  5992     11CB  00B4               	movwf	??_floorf+3
  5993     11CC  0831               	movf	??_floorf,w
  5994     11CD  05BD               	andwf	floorf@u,f
  5995     11CE  0832               	movf	??_floorf+1,w
  5996     11CF  05BE               	andwf	floorf@u+1,f
  5997     11D0  0833               	movf	??_floorf+2,w
  5998     11D1  05BF               	andwf	floorf@u+2,f
  5999     11D2  0834               	movf	??_floorf+3,w
  6000     11D3  05C0               	andwf	floorf@u+3,f
  6001     11D4  2A18               	goto	l841
  6002     11D5                     l3020:
  6003     11D5  083D               	movf	floorf@u,w
  6004     11D6  00B1               	movwf	??_floorf
  6005     11D7  083E               	movf	floorf@u+1,w
  6006     11D8  00B2               	movwf	??_floorf+1
  6007     11D9  083F               	movf	floorf@u+2,w
  6008     11DA  00B3               	movwf	??_floorf+2
  6009     11DB  0840               	movf	floorf@u+3,w
  6010     11DC  00B4               	movwf	??_floorf+3
  6011     11DD  301F               	movlw	31
  6012     11DE                     u4375:
  6013     11DE  1003               	clrc
  6014     11DF  0CB4               	rrf	??_floorf+3,f
  6015     11E0  0CB3               	rrf	??_floorf+2,f
  6016     11E1  0CB2               	rrf	??_floorf+1,f
  6017     11E2  0CB1               	rrf	??_floorf,f
  6018     11E3                     u4370:
  6019     11E3  3EFF               	addlw	-1
  6020     11E4  1D03               	skipz
  6021     11E5  29DE               	goto	u4375
  6022     11E6  0834               	movf	??_floorf+3,w
  6023     11E7  0433               	iorwf	??_floorf+2,w
  6024     11E8  0432               	iorwf	??_floorf+1,w
  6025     11E9  0431               	iorwf	??_floorf,w
  6026     11EA  1D03               	skipz
  6027     11EB  29ED               	goto	u4381
  6028     11EC  29EE               	goto	u4380
  6029     11ED                     u4381:
  6030     11ED  29F7               	goto	l3024
  6031     11EE                     u4380:
  6032     11EE                     l3022:
  6033     11EE  3000               	movlw	0
  6034     11EF  00C0               	movwf	floorf@u+3
  6035     11F0  3000               	movlw	0
  6036     11F1  00BF               	movwf	floorf@u+2
  6037     11F2  3000               	movlw	0
  6038     11F3  00BE               	movwf	floorf@u+1
  6039     11F4  3000               	movlw	0
  6040     11F5  00BD               	movwf	floorf@u
  6041     11F6  2A18               	goto	l841
  6042     11F7                     l3024:
  6043     11F7  083D               	movf	floorf@u,w
  6044     11F8  00B1               	movwf	??_floorf
  6045     11F9  083E               	movf	floorf@u+1,w
  6046     11FA  00B2               	movwf	??_floorf+1
  6047     11FB  083F               	movf	floorf@u+2,w
  6048     11FC  00B3               	movwf	??_floorf+2
  6049     11FD  0840               	movf	floorf@u+3,w
  6050     11FE  00B4               	movwf	??_floorf+3
  6051     11FF  3001               	movlw	1
  6052     1200                     u4395:
  6053     1200  1003               	clrc
  6054     1201  0DB1               	rlf	??_floorf,f
  6055     1202  0DB2               	rlf	??_floorf+1,f
  6056     1203  0DB3               	rlf	??_floorf+2,f
  6057     1204  0DB4               	rlf	??_floorf+3,f
  6058     1205                     u4390:
  6059     1205  3EFF               	addlw	-1
  6060     1206  1D03               	skipz
  6061     1207  2A00               	goto	u4395
  6062     1208  0834               	movf	??_floorf+3,w
  6063     1209  0433               	iorwf	??_floorf+2,w
  6064     120A  0432               	iorwf	??_floorf+1,w
  6065     120B  0431               	iorwf	??_floorf,w
  6066     120C  1903               	skipnz
  6067     120D  2A0F               	goto	u4401
  6068     120E  2A10               	goto	u4400
  6069     120F                     u4401:
  6070     120F  2A18               	goto	l841
  6071     1210                     u4400:
  6072     1210                     l3026:
  6073     1210  30BF               	movlw	191
  6074     1211  00C0               	movwf	floorf@u+3
  6075     1212  3080               	movlw	128
  6076     1213  00BF               	movwf	floorf@u+2
  6077     1214  3000               	movlw	0
  6078     1215  00BE               	movwf	floorf@u+1
  6079     1216  3000               	movlw	0
  6080     1217  00BD               	movwf	floorf@u
  6081     1218                     l841:
  6082     1218  0840               	movf	floorf@u+3,w
  6083     1219  00B0               	movwf	?_floorf+3
  6084     121A  083F               	movf	floorf@u+2,w
  6085     121B  00AF               	movwf	?_floorf+2
  6086     121C  083E               	movf	floorf@u+1,w
  6087     121D  00AE               	movwf	?_floorf+1
  6088     121E  083D               	movf	floorf@u,w
  6089     121F  00AD               	movwf	?_floorf
  6090     1220                     l837:
  6091     1220  0008               	return
  6092     1221                     __end_of_floorf:
  6093                           
  6094                           	psect	text22
  6095     1D51                     __ptext22:	
  6096 ;; *************** function ___fpclassifyf *****************
  6097 ;; Defined at:
  6098 ;;		line 4 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\__fpclassifyf.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;  x               4    0[COMMON] float 
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;  u               4    2[BANK0 ] struct .
  6103 ;;  e               2    0[BANK0 ] int 
  6104 ;; Return value:  Size  Location     Type
  6105 ;;                  2    0[COMMON] int 
  6106 ;; Registers used:
  6107 ;;		wreg, status,2, status,0
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6113 ;;      Params:         4       0       0       0       0
  6114 ;;      Locals:         0       6       0       0       0
  6115 ;;      Temps:          6       0       0       0       0
  6116 ;;      Totals:        10       6       0       0       0
  6117 ;;Total ram usage:       16 bytes
  6118 ;; Hardware stack levels used: 1
  6119 ;; This function calls:
  6120 ;;		Nothing
  6121 ;; This function is called by:
  6122 ;;		_efgtoa
  6123 ;; This function uses a non-reentrant model
  6124 ;;
  6125                           
  6126     1D51                     ___fpclassifyf:	
  6127                           ;psect for function ___fpclassifyf
  6128                           
  6129     1D51                     l2968:	
  6130                           ;incstack = 0
  6131                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  6132                           
  6133     1D51  1683               	bsf	3,5	;RP0=1, select bank3
  6134     1D52  1703               	bsf	3,6	;RP1=1, select bank3
  6135     1D53  081F               	movf	(___fpclassifyf@F465+3)^(0+384),w
  6136     1D54  1283               	bcf	3,5	;RP0=0, select bank0
  6137     1D55  1303               	bcf	3,6	;RP1=0, select bank0
  6138     1D56  00A5               	movwf	___fpclassifyf@u+3
  6139     1D57  1683               	bsf	3,5	;RP0=1, select bank3
  6140     1D58  1703               	bsf	3,6	;RP1=1, select bank3
  6141     1D59  081E               	movf	(___fpclassifyf@F465+2)^(0+384),w
  6142     1D5A  1283               	bcf	3,5	;RP0=0, select bank0
  6143     1D5B  1303               	bcf	3,6	;RP1=0, select bank0
  6144     1D5C  00A4               	movwf	___fpclassifyf@u+2
  6145     1D5D  1683               	bsf	3,5	;RP0=1, select bank3
  6146     1D5E  1703               	bsf	3,6	;RP1=1, select bank3
  6147     1D5F  081D               	movf	(___fpclassifyf@F465+1)^(0+384),w
  6148     1D60  1283               	bcf	3,5	;RP0=0, select bank0
  6149     1D61  1303               	bcf	3,6	;RP1=0, select bank0
  6150     1D62  00A3               	movwf	___fpclassifyf@u+1
  6151     1D63  1683               	bsf	3,5	;RP0=1, select bank3
  6152     1D64  1703               	bsf	3,6	;RP1=1, select bank3
  6153     1D65  081C               	movf	___fpclassifyf@F465^(0+384),w
  6154     1D66  1283               	bcf	3,5	;RP0=0, select bank0
  6155     1D67  1303               	bcf	3,6	;RP1=0, select bank0
  6156     1D68  00A2               	movwf	___fpclassifyf@u
  6157     1D69  0873               	movf	___fpclassifyf@x+3,w
  6158     1D6A  00A5               	movwf	___fpclassifyf@u+3
  6159     1D6B  0872               	movf	___fpclassifyf@x+2,w
  6160     1D6C  00A4               	movwf	___fpclassifyf@u+2
  6161     1D6D  0871               	movf	___fpclassifyf@x+1,w
  6162     1D6E  00A3               	movwf	___fpclassifyf@u+1
  6163     1D6F  0870               	movf	___fpclassifyf@x,w
  6164     1D70  00A2               	movwf	___fpclassifyf@u
  6165     1D71                     l2970:
  6166     1D71  0822               	movf	___fpclassifyf@u,w
  6167     1D72  00F4               	movwf	??___fpclassifyf
  6168     1D73  0823               	movf	___fpclassifyf@u+1,w
  6169     1D74  00F5               	movwf	??___fpclassifyf+1
  6170     1D75  0824               	movf	___fpclassifyf@u+2,w
  6171     1D76  00F6               	movwf	??___fpclassifyf+2
  6172     1D77  0825               	movf	___fpclassifyf@u+3,w
  6173     1D78  00F7               	movwf	??___fpclassifyf+3
  6174     1D79  3017               	movlw	23
  6175     1D7A                     u4205:
  6176     1D7A  1003               	clrc
  6177     1D7B  0CF7               	rrf	??___fpclassifyf+3,f
  6178     1D7C  0CF6               	rrf	??___fpclassifyf+2,f
  6179     1D7D  0CF5               	rrf	??___fpclassifyf+1,f
  6180     1D7E  0CF4               	rrf	??___fpclassifyf,f
  6181     1D7F                     u4200:
  6182     1D7F  3EFF               	addlw	-1
  6183     1D80  1D03               	skipz
  6184     1D81  2D7A               	goto	u4205
  6185     1D82  30FF               	movlw	255
  6186     1D83  0574               	andwf	??___fpclassifyf,w
  6187     1D84  00A0               	movwf	___fpclassifyf@e
  6188     1D85  3000               	movlw	0
  6189     1D86  0575               	andwf	??___fpclassifyf+1,w
  6190     1D87  00A1               	movwf	___fpclassifyf@e+1
  6191     1D88                     l2972:
  6192     1D88  0820               	movf	___fpclassifyf@e,w
  6193     1D89  0421               	iorwf	___fpclassifyf@e+1,w
  6194     1D8A  1D03               	btfss	3,2
  6195     1D8B  2D8D               	goto	u4211
  6196     1D8C  2D8E               	goto	u4210
  6197     1D8D                     u4211:
  6198     1D8D  2DB1               	goto	l2982
  6199     1D8E                     u4210:
  6200     1D8E                     l2974:
  6201     1D8E  0822               	movf	___fpclassifyf@u,w
  6202     1D8F  00F4               	movwf	??___fpclassifyf
  6203     1D90  0823               	movf	___fpclassifyf@u+1,w
  6204     1D91  00F5               	movwf	??___fpclassifyf+1
  6205     1D92  0824               	movf	___fpclassifyf@u+2,w
  6206     1D93  00F6               	movwf	??___fpclassifyf+2
  6207     1D94  0825               	movf	___fpclassifyf@u+3,w
  6208     1D95  00F7               	movwf	??___fpclassifyf+3
  6209     1D96  3001               	movlw	1
  6210     1D97                     u4225:
  6211     1D97  1003               	clrc
  6212     1D98  0DF4               	rlf	??___fpclassifyf,f
  6213     1D99  0DF5               	rlf	??___fpclassifyf+1,f
  6214     1D9A  0DF6               	rlf	??___fpclassifyf+2,f
  6215     1D9B  0DF7               	rlf	??___fpclassifyf+3,f
  6216     1D9C                     u4220:
  6217     1D9C  3EFF               	addlw	-1
  6218     1D9D  1D03               	skipz
  6219     1D9E  2D97               	goto	u4225
  6220     1D9F  0877               	movf	??___fpclassifyf+3,w
  6221     1DA0  0476               	iorwf	??___fpclassifyf+2,w
  6222     1DA1  0475               	iorwf	??___fpclassifyf+1,w
  6223     1DA2  0474               	iorwf	??___fpclassifyf,w
  6224     1DA3  1D03               	skipz
  6225     1DA4  2DA6               	goto	u4231
  6226     1DA5  2DA7               	goto	u4230
  6227     1DA6                     u4231:
  6228     1DA6  2DAC               	goto	l2978
  6229     1DA7                     u4230:
  6230     1DA7                     l2976:
  6231     1DA7  3002               	movlw	2
  6232     1DA8  00F0               	movwf	?___fpclassifyf
  6233     1DA9  3000               	movlw	0
  6234     1DAA  00F1               	movwf	?___fpclassifyf+1
  6235     1DAB  2DDD               	goto	l828
  6236     1DAC                     l2978:
  6237     1DAC  3003               	movlw	3
  6238     1DAD  00F0               	movwf	?___fpclassifyf
  6239     1DAE  3000               	movlw	0
  6240     1DAF  00F1               	movwf	?___fpclassifyf+1
  6241     1DB0  2DDD               	goto	l828
  6242     1DB1                     l2982:
  6243     1DB1  0A20               	incf	___fpclassifyf@e,w
  6244     1DB2  0421               	iorwf	___fpclassifyf@e+1,w
  6245     1DB3  1D03               	btfss	3,2
  6246     1DB4  2DB6               	goto	u4241
  6247     1DB5  2DB7               	goto	u4240
  6248     1DB6                     u4241:
  6249     1DB6  2DD9               	goto	l2988
  6250     1DB7                     u4240:
  6251     1DB7                     l2984:
  6252     1DB7  0822               	movf	___fpclassifyf@u,w
  6253     1DB8  00F4               	movwf	??___fpclassifyf
  6254     1DB9  0823               	movf	___fpclassifyf@u+1,w
  6255     1DBA  00F5               	movwf	??___fpclassifyf+1
  6256     1DBB  0824               	movf	___fpclassifyf@u+2,w
  6257     1DBC  00F6               	movwf	??___fpclassifyf+2
  6258     1DBD  0825               	movf	___fpclassifyf@u+3,w
  6259     1DBE  00F7               	movwf	??___fpclassifyf+3
  6260     1DBF  3009               	movlw	9
  6261     1DC0                     u4255:
  6262     1DC0  1003               	clrc
  6263     1DC1  0DF4               	rlf	??___fpclassifyf,f
  6264     1DC2  0DF5               	rlf	??___fpclassifyf+1,f
  6265     1DC3  0DF6               	rlf	??___fpclassifyf+2,f
  6266     1DC4  0DF7               	rlf	??___fpclassifyf+3,f
  6267     1DC5                     u4250:
  6268     1DC5  3EFF               	addlw	-1
  6269     1DC6  1D03               	skipz
  6270     1DC7  2DC0               	goto	u4255
  6271     1DC8  0877               	movf	??___fpclassifyf+3,w
  6272     1DC9  0476               	iorwf	??___fpclassifyf+2,w
  6273     1DCA  0475               	iorwf	??___fpclassifyf+1,w
  6274     1DCB  0474               	iorwf	??___fpclassifyf,w
  6275     1DCC  1903               	skipnz
  6276     1DCD  2DCF               	goto	u4261
  6277     1DCE  2DD1               	goto	u4260
  6278     1DCF                     u4261:
  6279     1DCF  3001               	movlw	1
  6280     1DD0  2DD2               	goto	u4270
  6281     1DD1                     u4260:
  6282     1DD1  3000               	movlw	0
  6283     1DD2                     u4270:
  6284     1DD2  00F8               	movwf	??___fpclassifyf+4
  6285     1DD3  01F9               	clrf	??___fpclassifyf+5
  6286     1DD4  0878               	movf	??___fpclassifyf+4,w
  6287     1DD5  00F0               	movwf	?___fpclassifyf
  6288     1DD6  0879               	movf	??___fpclassifyf+5,w
  6289     1DD7  00F1               	movwf	?___fpclassifyf+1
  6290     1DD8  2DDD               	goto	l828
  6291     1DD9                     l2988:
  6292     1DD9  3004               	movlw	4
  6293     1DDA  00F0               	movwf	?___fpclassifyf
  6294     1DDB  3000               	movlw	0
  6295     1DDC  00F1               	movwf	?___fpclassifyf+1
  6296     1DDD                     l828:
  6297     1DDD  0008               	return
  6298     1DDE                     __end_of___fpclassifyf:
  6299                           
  6300                           	psect	text23
  6301     1CDD                     __ptext23:	
  6302 ;; *************** function ___fltol *****************
  6303 ;; Defined at:
  6304 ;;		line 43 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\fltol.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;  f1              4    0[COMMON] int 
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;  exp1            1    9[COMMON] unsigned char 
  6309 ;;  sign1           1    8[COMMON] unsigned char 
  6310 ;; Return value:  Size  Location     Type
  6311 ;;                  4    0[COMMON] long 
  6312 ;; Registers used:
  6313 ;;		wreg, status,2, status,0
  6314 ;; Tracked objects:
  6315 ;;		On entry : 0/0
  6316 ;;		On exit  : 0/0
  6317 ;;		Unchanged: 0/0
  6318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6319 ;;      Params:         4       0       0       0       0
  6320 ;;      Locals:         2       0       0       0       0
  6321 ;;      Temps:          4       0       0       0       0
  6322 ;;      Totals:        10       0       0       0       0
  6323 ;;Total ram usage:       10 bytes
  6324 ;; Hardware stack levels used: 1
  6325 ;; This function calls:
  6326 ;;		Nothing
  6327 ;; This function is called by:
  6328 ;;		_efgtoa
  6329 ;; This function uses a non-reentrant model
  6330 ;;
  6331                           
  6332     1CDD                     ___fltol:	
  6333                           ;psect for function ___fltol
  6334                           
  6335     1CDD                     l2624:	
  6336                           ;incstack = 0
  6337                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6338                           
  6339     1CDD  1003               	clrc
  6340     1CDE  0D72               	rlf	___fltol@f1+2,w
  6341     1CDF  0D73               	rlf	___fltol@f1+3,w
  6342     1CE0  00F9               	movwf	___fltol@exp1
  6343     1CE1  0879               	movf	___fltol@exp1,w
  6344     1CE2  1D03               	btfss	3,2
  6345     1CE3  2CE5               	goto	u3411
  6346     1CE4  2CE6               	goto	u3410
  6347     1CE5                     u3411:
  6348     1CE5  2CEF               	goto	l2630
  6349     1CE6                     u3410:
  6350     1CE6                     l2626:
  6351     1CE6  3000               	movlw	0
  6352     1CE7  00F3               	movwf	?___fltol+3
  6353     1CE8  3000               	movlw	0
  6354     1CE9  00F2               	movwf	?___fltol+2
  6355     1CEA  3000               	movlw	0
  6356     1CEB  00F1               	movwf	?___fltol+1
  6357     1CEC  3000               	movlw	0
  6358     1CED  00F0               	movwf	?___fltol
  6359     1CEE  2D50               	goto	l426
  6360     1CEF                     l2630:
  6361     1CEF  0870               	movf	___fltol@f1,w
  6362     1CF0  00F4               	movwf	??___fltol
  6363     1CF1  0871               	movf	___fltol@f1+1,w
  6364     1CF2  00F5               	movwf	??___fltol+1
  6365     1CF3  0872               	movf	___fltol@f1+2,w
  6366     1CF4  00F6               	movwf	??___fltol+2
  6367     1CF5  0873               	movf	___fltol@f1+3,w
  6368     1CF6  00F7               	movwf	??___fltol+3
  6369     1CF7  301F               	movlw	31
  6370     1CF8                     u3425:
  6371     1CF8  1003               	clrc
  6372     1CF9  0CF7               	rrf	??___fltol+3,f
  6373     1CFA  0CF6               	rrf	??___fltol+2,f
  6374     1CFB  0CF5               	rrf	??___fltol+1,f
  6375     1CFC  0CF4               	rrf	??___fltol,f
  6376     1CFD                     u3420:
  6377     1CFD  3EFF               	addlw	-1
  6378     1CFE  1D03               	skipz
  6379     1CFF  2CF8               	goto	u3425
  6380     1D00  0874               	movf	??___fltol,w
  6381     1D01  00F8               	movwf	___fltol@sign1
  6382     1D02                     l2632:
  6383     1D02  17F2               	bsf	___fltol@f1+2,7
  6384     1D03                     l2634:
  6385     1D03  30FF               	movlw	255
  6386     1D04  05F0               	andwf	___fltol@f1,f
  6387     1D05  30FF               	movlw	255
  6388     1D06  05F1               	andwf	___fltol@f1+1,f
  6389     1D07  30FF               	movlw	255
  6390     1D08  05F2               	andwf	___fltol@f1+2,f
  6391     1D09  3000               	movlw	0
  6392     1D0A  05F3               	andwf	___fltol@f1+3,f
  6393     1D0B                     l2636:
  6394     1D0B  3096               	movlw	150
  6395     1D0C  02F9               	subwf	___fltol@exp1,f
  6396     1D0D                     l2638:
  6397     1D0D  1FF9               	btfss	___fltol@exp1,7
  6398     1D0E  2D10               	goto	u3431
  6399     1D0F  2D11               	goto	u3430
  6400     1D10                     u3431:
  6401     1D10  2D29               	goto	l2648
  6402     1D11                     u3430:
  6403     1D11                     l2640:
  6404     1D11  0879               	movf	___fltol@exp1,w
  6405     1D12  3A80               	xorlw	128
  6406     1D13  3E97               	addlw	151
  6407     1D14  1803               	skipnc
  6408     1D15  2D17               	goto	u3441
  6409     1D16  2D18               	goto	u3440
  6410     1D17                     u3441:
  6411     1D17  2D19               	goto	l2646
  6412     1D18                     u3440:
  6413     1D18  2CE6               	goto	l2626
  6414     1D19                     l2646:
  6415     1D19  3001               	movlw	1
  6416     1D1A                     u3455:
  6417     1D1A  1003               	clrc
  6418     1D1B  0CF3               	rrf	___fltol@f1+3,f
  6419     1D1C  0CF2               	rrf	___fltol@f1+2,f
  6420     1D1D  0CF1               	rrf	___fltol@f1+1,f
  6421     1D1E  0CF0               	rrf	___fltol@f1,f
  6422     1D1F  3EFF               	addlw	-1
  6423     1D20  1D03               	skipz
  6424     1D21  2D1A               	goto	u3455
  6425     1D22  3001               	movlw	1
  6426     1D23  07F9               	addwf	___fltol@exp1,f
  6427     1D24  1D03               	btfss	3,2
  6428     1D25  2D27               	goto	u3461
  6429     1D26  2D28               	goto	u3460
  6430     1D27                     u3461:
  6431     1D27  2D19               	goto	l2646
  6432     1D28                     u3460:
  6433     1D28  2D40               	goto	l2656
  6434     1D29                     l2648:
  6435     1D29  3020               	movlw	32
  6436     1D2A  0279               	subwf	___fltol@exp1,w
  6437     1D2B  1C03               	skipc
  6438     1D2C  2D2E               	goto	u3471
  6439     1D2D  2D2F               	goto	u3470
  6440     1D2E                     u3471:
  6441     1D2E  2D3B               	goto	l433
  6442     1D2F                     u3470:
  6443     1D2F  2CE6               	goto	l2626
  6444     1D30                     l2654:
  6445     1D30  3001               	movlw	1
  6446     1D31  00F4               	movwf	??___fltol
  6447     1D32                     u3485:
  6448     1D32  1003               	clrc
  6449     1D33  0DF0               	rlf	___fltol@f1,f
  6450     1D34  0DF1               	rlf	___fltol@f1+1,f
  6451     1D35  0DF2               	rlf	___fltol@f1+2,f
  6452     1D36  0DF3               	rlf	___fltol@f1+3,f
  6453     1D37  0BF4               	decfsz	??___fltol,f
  6454     1D38  2D32               	goto	u3485
  6455     1D39  3001               	movlw	1
  6456     1D3A  02F9               	subwf	___fltol@exp1,f
  6457     1D3B                     l433:
  6458     1D3B  0879               	movf	___fltol@exp1,w
  6459     1D3C  1D03               	btfss	3,2
  6460     1D3D  2D3F               	goto	u3491
  6461     1D3E  2D40               	goto	u3490
  6462     1D3F                     u3491:
  6463     1D3F  2D30               	goto	l2654
  6464     1D40                     u3490:
  6465     1D40                     l2656:
  6466     1D40  0878               	movf	___fltol@sign1,w
  6467     1D41  1903               	btfsc	3,2
  6468     1D42  2D44               	goto	u3501
  6469     1D43  2D45               	goto	u3500
  6470     1D44                     u3501:
  6471     1D44  2D50               	goto	l436
  6472     1D45                     u3500:
  6473     1D45                     l2658:
  6474     1D45  09F0               	comf	___fltol@f1,f
  6475     1D46  09F1               	comf	___fltol@f1+1,f
  6476     1D47  09F2               	comf	___fltol@f1+2,f
  6477     1D48  09F3               	comf	___fltol@f1+3,f
  6478     1D49  0AF0               	incf	___fltol@f1,f
  6479     1D4A  1903               	skipnz
  6480     1D4B  0AF1               	incf	___fltol@f1+1,f
  6481     1D4C  1903               	skipnz
  6482     1D4D  0AF2               	incf	___fltol@f1+2,f
  6483     1D4E  1903               	skipnz
  6484     1D4F  0AF3               	incf	___fltol@f1+3,f
  6485     1D50                     l436:
  6486     1D50                     l426:
  6487     1D50  0008               	return
  6488     1D51                     __end_of___fltol:
  6489                           
  6490                           	psect	text24
  6491     1B55                     __ptext24:	
  6492 ;; *************** function ___flsub *****************
  6493 ;; Defined at:
  6494 ;;		line 242 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  6495 ;; Parameters:    Size  Location     Type
  6496 ;;  a               4   41[BANK0 ] long 
  6497 ;;  b               4   45[BANK0 ] long 
  6498 ;; Auto vars:     Size  Location     Type
  6499 ;;		None
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  4   41[BANK0 ] long 
  6502 ;; Registers used:
  6503 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6509 ;;      Params:         0       8       0       0       0
  6510 ;;      Locals:         0       0       0       0       0
  6511 ;;      Temps:          0       0       0       0       0
  6512 ;;      Totals:         0       8       0       0       0
  6513 ;;Total ram usage:        8 bytes
  6514 ;; Hardware stack levels used: 1
  6515 ;; Hardware stack levels required when called: 1
  6516 ;; This function calls:
  6517 ;;		___fladd
  6518 ;; This function is called by:
  6519 ;;		_setDigit
  6520 ;;		_calculate
  6521 ;;		_efgtoa
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525     1B55                     ___flsub:	
  6526                           ;psect for function ___flsub
  6527                           
  6528     1B55                     l2660:	
  6529                           ;incstack = 0
  6530                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6531                           
  6532     1B55  3080               	movlw	128
  6533     1B56  1283               	bcf	3,5	;RP0=0, select bank0
  6534     1B57  1303               	bcf	3,6	;RP1=0, select bank0
  6535     1B58  06CC               	xorwf	___flsub@a+3,f
  6536     1B59                     l2662:
  6537     1B59  0850               	movf	___flsub@b+3,w
  6538     1B5A  00B8               	movwf	___fladd@b+3
  6539     1B5B  084F               	movf	___flsub@b+2,w
  6540     1B5C  00B7               	movwf	___fladd@b+2
  6541     1B5D  084E               	movf	___flsub@b+1,w
  6542     1B5E  00B6               	movwf	___fladd@b+1
  6543     1B5F  084D               	movf	___flsub@b,w
  6544     1B60  00B5               	movwf	___fladd@b
  6545     1B61  084C               	movf	___flsub@a+3,w
  6546     1B62  00BC               	movwf	___fladd@a+3
  6547     1B63  084B               	movf	___flsub@a+2,w
  6548     1B64  00BB               	movwf	___fladd@a+2
  6549     1B65  084A               	movf	___flsub@a+1,w
  6550     1B66  00BA               	movwf	___fladd@a+1
  6551     1B67  0849               	movf	___flsub@a,w
  6552     1B68  00B9               	movwf	___fladd@a
  6553     1B69  120A  158A  226E  160A  158A  	fcall	___fladd
  6554     1B6E  1283               	bcf	3,5	;RP0=0, select bank0
  6555     1B6F  1303               	bcf	3,6	;RP1=0, select bank0
  6556     1B70  0838               	movf	?___fladd+3,w
  6557     1B71  00CC               	movwf	?___flsub+3
  6558     1B72  0837               	movf	?___fladd+2,w
  6559     1B73  00CB               	movwf	?___flsub+2
  6560     1B74  0836               	movf	?___fladd+1,w
  6561     1B75  00CA               	movwf	?___flsub+1
  6562     1B76  0835               	movf	?___fladd,w
  6563     1B77  00C9               	movwf	?___flsub
  6564     1B78                     l579:
  6565     1B78  0008               	return
  6566     1B79                     __end_of___flsub:
  6567                           
  6568                           	psect	text25
  6569     0A6E                     __ptext25:	
  6570 ;; *************** function ___fladd *****************
  6571 ;; Defined at:
  6572 ;;		line 10 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\sprcadd.c"
  6573 ;; Parameters:    Size  Location     Type
  6574 ;;  b               4   21[BANK0 ] long 
  6575 ;;  a               4   25[BANK0 ] long 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  grs             1   40[BANK0 ] unsigned char 
  6578 ;;  bexp            1   39[BANK0 ] unsigned char 
  6579 ;;  aexp            1   38[BANK0 ] unsigned char 
  6580 ;;  signs           1   37[BANK0 ] unsigned char 
  6581 ;; Return value:  Size  Location     Type
  6582 ;;                  4   21[BANK0 ] unsigned char 
  6583 ;; Registers used:
  6584 ;;		wreg, status,2, status,0, btemp+1
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6590 ;;      Params:         0       8       0       0       0
  6591 ;;      Locals:         0       4       0       0       0
  6592 ;;      Temps:          0       8       0       0       0
  6593 ;;      Totals:         0      20       0       0       0
  6594 ;;Total ram usage:       20 bytes
  6595 ;; Hardware stack levels used: 1
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		_setDigit
  6600 ;;		_calculate
  6601 ;;		___flsub
  6602 ;;		_efgtoa
  6603 ;; This function uses a non-reentrant model
  6604 ;;
  6605                           
  6606     0A6E                     ___fladd:	
  6607                           ;psect for function ___fladd
  6608                           
  6609     0A6E                     l2360:	
  6610                           ;incstack = 0
  6611                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6612                           
  6613     0A6E  1283               	bcf	3,5	;RP0=0, select bank0
  6614     0A6F  1303               	bcf	3,6	;RP1=0, select bank0
  6615     0A70  0838               	movf	___fladd@b+3,w
  6616     0A71  00C5               	movwf	___fladd@signs
  6617     0A72                     l2362:
  6618     0A72  3080               	movlw	128
  6619     0A73  05C5               	andwf	___fladd@signs,f
  6620     0A74                     l2364:
  6621     0A74  0838               	movf	___fladd@b+3,w
  6622     0A75  00BD               	movwf	??___fladd
  6623     0A76  073D               	addwf	??___fladd,w
  6624     0A77  00C7               	movwf	___fladd@bexp
  6625     0A78                     l2366:
  6626     0A78  1FB7               	btfss	___fladd@b+2,7
  6627     0A79  2A7B               	goto	u2791
  6628     0A7A  2A7C               	goto	u2790
  6629     0A7B                     u2791:
  6630     0A7B  2A7D               	goto	l2370
  6631     0A7C                     u2790:
  6632     0A7C                     l2368:
  6633     0A7C  1447               	bsf	___fladd@bexp,0
  6634     0A7D                     l2370:
  6635     0A7D  0847               	movf	___fladd@bexp,w
  6636     0A7E  1903               	btfsc	3,2
  6637     0A7F  2A81               	goto	u2801
  6638     0A80  2A82               	goto	u2800
  6639     0A81                     u2801:
  6640     0A81  2A92               	goto	l2380
  6641     0A82                     u2800:
  6642     0A82                     l2372:
  6643     0A82  0A47               	incf	___fladd@bexp,w
  6644     0A83  1D03               	btfss	3,2
  6645     0A84  2A86               	goto	u2811
  6646     0A85  2A87               	goto	u2810
  6647     0A86                     u2811:
  6648     0A86  2A8F               	goto	l2376
  6649     0A87                     u2810:
  6650     0A87                     l2374:
  6651     0A87  3000               	movlw	0
  6652     0A88  00B8               	movwf	___fladd@b+3
  6653     0A89  3000               	movlw	0
  6654     0A8A  00B7               	movwf	___fladd@b+2
  6655     0A8B  3000               	movlw	0
  6656     0A8C  00B6               	movwf	___fladd@b+1
  6657     0A8D  3000               	movlw	0
  6658     0A8E  00B5               	movwf	___fladd@b
  6659     0A8F                     l2376:
  6660     0A8F  17B7               	bsf	___fladd@b+2,7
  6661     0A90                     l2378:
  6662     0A90  01B8               	clrf	___fladd@b+3
  6663     0A91  2A9A               	goto	l528
  6664     0A92                     l2380:
  6665     0A92  3000               	movlw	0
  6666     0A93  00B8               	movwf	___fladd@b+3
  6667     0A94  3000               	movlw	0
  6668     0A95  00B7               	movwf	___fladd@b+2
  6669     0A96  3000               	movlw	0
  6670     0A97  00B6               	movwf	___fladd@b+1
  6671     0A98  3000               	movlw	0
  6672     0A99  00B5               	movwf	___fladd@b
  6673     0A9A                     l528:
  6674     0A9A  083C               	movf	___fladd@a+3,w
  6675     0A9B  00C6               	movwf	___fladd@aexp
  6676     0A9C                     l2382:
  6677     0A9C  3080               	movlw	128
  6678     0A9D  05C6               	andwf	___fladd@aexp,f
  6679     0A9E                     l2384:
  6680     0A9E  0846               	movf	___fladd@aexp,w
  6681     0A9F  0645               	xorwf	___fladd@signs,w
  6682     0AA0  1903               	skipnz
  6683     0AA1  2AA3               	goto	u2821
  6684     0AA2  2AA4               	goto	u2820
  6685     0AA3                     u2821:
  6686     0AA3  2AA5               	goto	l2388
  6687     0AA4                     u2820:
  6688     0AA4                     l2386:
  6689     0AA4  1745               	bsf	___fladd@signs,6
  6690     0AA5                     l2388:
  6691     0AA5  083C               	movf	___fladd@a+3,w
  6692     0AA6  00BD               	movwf	??___fladd
  6693     0AA7  073D               	addwf	??___fladd,w
  6694     0AA8  00C6               	movwf	___fladd@aexp
  6695     0AA9                     l2390:
  6696     0AA9  1FBB               	btfss	___fladd@a+2,7
  6697     0AAA  2AAC               	goto	u2831
  6698     0AAB  2AAD               	goto	u2830
  6699     0AAC                     u2831:
  6700     0AAC  2AAE               	goto	l2394
  6701     0AAD                     u2830:
  6702     0AAD                     l2392:
  6703     0AAD  1446               	bsf	___fladd@aexp,0
  6704     0AAE                     l2394:
  6705     0AAE  0846               	movf	___fladd@aexp,w
  6706     0AAF  1903               	btfsc	3,2
  6707     0AB0  2AB2               	goto	u2841
  6708     0AB1  2AB3               	goto	u2840
  6709     0AB2                     u2841:
  6710     0AB2  2AC3               	goto	l2404
  6711     0AB3                     u2840:
  6712     0AB3                     l2396:
  6713     0AB3  0A46               	incf	___fladd@aexp,w
  6714     0AB4  1D03               	btfss	3,2
  6715     0AB5  2AB7               	goto	u2851
  6716     0AB6  2AB8               	goto	u2850
  6717     0AB7                     u2851:
  6718     0AB7  2AC0               	goto	l2400
  6719     0AB8                     u2850:
  6720     0AB8                     l2398:
  6721     0AB8  3000               	movlw	0
  6722     0AB9  00BC               	movwf	___fladd@a+3
  6723     0ABA  3000               	movlw	0
  6724     0ABB  00BB               	movwf	___fladd@a+2
  6725     0ABC  3000               	movlw	0
  6726     0ABD  00BA               	movwf	___fladd@a+1
  6727     0ABE  3000               	movlw	0
  6728     0ABF  00B9               	movwf	___fladd@a
  6729     0AC0                     l2400:
  6730     0AC0  17BB               	bsf	___fladd@a+2,7
  6731     0AC1                     l2402:
  6732     0AC1  01BC               	clrf	___fladd@a+3
  6733     0AC2  2ACB               	goto	l533
  6734     0AC3                     l2404:
  6735     0AC3  3000               	movlw	0
  6736     0AC4  00BC               	movwf	___fladd@a+3
  6737     0AC5  3000               	movlw	0
  6738     0AC6  00BB               	movwf	___fladd@a+2
  6739     0AC7  3000               	movlw	0
  6740     0AC8  00BA               	movwf	___fladd@a+1
  6741     0AC9  3000               	movlw	0
  6742     0ACA  00B9               	movwf	___fladd@a
  6743     0ACB                     l533:
  6744     0ACB  0847               	movf	___fladd@bexp,w
  6745     0ACC  0246               	subwf	___fladd@aexp,w
  6746     0ACD  1803               	skipnc
  6747     0ACE  2AD0               	goto	u2861
  6748     0ACF  2AD1               	goto	u2860
  6749     0AD0                     u2861:
  6750     0AD0  2AF5               	goto	l2440
  6751     0AD1                     u2860:
  6752     0AD1                     l2406:
  6753     0AD1  1F45               	btfss	___fladd@signs,6
  6754     0AD2  2AD4               	goto	u2871
  6755     0AD3  2AD5               	goto	u2870
  6756     0AD4                     u2871:
  6757     0AD4  2AD7               	goto	l2410
  6758     0AD5                     u2870:
  6759     0AD5                     l2408:
  6760     0AD5  3080               	movlw	128
  6761     0AD6  06C5               	xorwf	___fladd@signs,f
  6762     0AD7                     l2410:
  6763     0AD7  0847               	movf	___fladd@bexp,w
  6764     0AD8  00C8               	movwf	___fladd@grs
  6765     0AD9                     l2412:
  6766     0AD9  0846               	movf	___fladd@aexp,w
  6767     0ADA  00C7               	movwf	___fladd@bexp
  6768     0ADB                     l2414:
  6769     0ADB  0848               	movf	___fladd@grs,w
  6770     0ADC  00C6               	movwf	___fladd@aexp
  6771     0ADD                     l2416:
  6772     0ADD  0835               	movf	___fladd@b,w
  6773     0ADE  00C8               	movwf	___fladd@grs
  6774     0ADF                     l2418:
  6775     0ADF  0839               	movf	___fladd@a,w
  6776     0AE0  00B5               	movwf	___fladd@b
  6777     0AE1                     l2420:
  6778     0AE1  0848               	movf	___fladd@grs,w
  6779     0AE2  00B9               	movwf	___fladd@a
  6780     0AE3                     l2422:
  6781     0AE3  0836               	movf	___fladd@b+1,w
  6782     0AE4  00C8               	movwf	___fladd@grs
  6783     0AE5                     l2424:
  6784     0AE5  083A               	movf	___fladd@a+1,w
  6785     0AE6  00B6               	movwf	___fladd@b+1
  6786     0AE7                     l2426:
  6787     0AE7  0848               	movf	___fladd@grs,w
  6788     0AE8  00BA               	movwf	___fladd@a+1
  6789     0AE9                     l2428:
  6790     0AE9  0837               	movf	___fladd@b+2,w
  6791     0AEA  00C8               	movwf	___fladd@grs
  6792     0AEB                     l2430:
  6793     0AEB  083B               	movf	___fladd@a+2,w
  6794     0AEC  00B7               	movwf	___fladd@b+2
  6795     0AED                     l2432:
  6796     0AED  0848               	movf	___fladd@grs,w
  6797     0AEE  00BB               	movwf	___fladd@a+2
  6798     0AEF                     l2434:
  6799     0AEF  0838               	movf	___fladd@b+3,w
  6800     0AF0  00C8               	movwf	___fladd@grs
  6801     0AF1                     l2436:
  6802     0AF1  083C               	movf	___fladd@a+3,w
  6803     0AF2  00B8               	movwf	___fladd@b+3
  6804     0AF3                     l2438:
  6805     0AF3  0848               	movf	___fladd@grs,w
  6806     0AF4  00BC               	movwf	___fladd@a+3
  6807     0AF5                     l2440:
  6808     0AF5  01C8               	clrf	___fladd@grs
  6809     0AF6                     l2442:
  6810     0AF6  0846               	movf	___fladd@aexp,w
  6811     0AF7  00BD               	movwf	??___fladd
  6812     0AF8  01BE               	clrf	??___fladd+1
  6813     0AF9  083E               	movf	??___fladd+1,w
  6814     0AFA  00C0               	movwf	??___fladd+3
  6815     0AFB  0847               	movf	___fladd@bexp,w
  6816     0AFC  023D               	subwf	??___fladd,w
  6817     0AFD  00BF               	movwf	??___fladd+2
  6818     0AFE  1C03               	skipc
  6819     0AFF  03C0               	decf	??___fladd+3,f
  6820     0B00  0840               	movf	??___fladd+3,w
  6821     0B01  3A80               	xorlw	128
  6822     0B02  00FF               	movwf	btemp+1
  6823     0B03  3080               	movlw	128
  6824     0B04  027F               	subwf	btemp+1,w
  6825     0B05  1D03               	skipz
  6826     0B06  2B09               	goto	u2885
  6827     0B07  301A               	movlw	26
  6828     0B08  023F               	subwf	??___fladd+2,w
  6829     0B09                     u2885:
  6830     0B09  1C03               	skipc
  6831     0B0A  2B0C               	goto	u2881
  6832     0B0B  2B0D               	goto	u2880
  6833     0B0C                     u2881:
  6834     0B0C  2B42               	goto	l2458
  6835     0B0D                     u2880:
  6836     0B0D                     l2444:
  6837     0B0D  1283               	bcf	3,5	;RP0=0, select bank0
  6838     0B0E  1303               	bcf	3,6	;RP1=0, select bank0
  6839     0B0F  0838               	movf	___fladd@b+3,w
  6840     0B10  0437               	iorwf	___fladd@b+2,w
  6841     0B11  0436               	iorwf	___fladd@b+1,w
  6842     0B12  0435               	iorwf	___fladd@b,w
  6843     0B13  1D03               	skipz
  6844     0B14  2B16               	goto	u2891
  6845     0B15  2B18               	goto	u2890
  6846     0B16                     u2891:
  6847     0B16  3001               	movlw	1
  6848     0B17  2B19               	goto	u2900
  6849     0B18                     u2890:
  6850     0B18  3000               	movlw	0
  6851     0B19                     u2900:
  6852     0B19  00C8               	movwf	___fladd@grs
  6853     0B1A  3000               	movlw	0
  6854     0B1B  00B8               	movwf	___fladd@b+3
  6855     0B1C  3000               	movlw	0
  6856     0B1D  00B7               	movwf	___fladd@b+2
  6857     0B1E  3000               	movlw	0
  6858     0B1F  00B6               	movwf	___fladd@b+1
  6859     0B20  3000               	movlw	0
  6860     0B21  00B5               	movwf	___fladd@b
  6861     0B22  0846               	movf	___fladd@aexp,w
  6862     0B23  00C7               	movwf	___fladd@bexp
  6863     0B24  2B4A               	goto	l537
  6864     0B25                     l539:
  6865     0B25  1C48               	btfss	___fladd@grs,0
  6866     0B26  2B28               	goto	u2911
  6867     0B27  2B29               	goto	u2910
  6868     0B28                     u2911:
  6869     0B28  2B30               	goto	l2448
  6870     0B29                     u2910:
  6871     0B29                     l2446:
  6872     0B29  0848               	movf	___fladd@grs,w
  6873     0B2A  00BD               	movwf	??___fladd
  6874     0B2B  1003               	clrc
  6875     0B2C  0C3D               	rrf	??___fladd,w
  6876     0B2D  3801               	iorlw	1
  6877     0B2E  00C8               	movwf	___fladd@grs
  6878     0B2F  2B32               	goto	l2450
  6879     0B30                     l2448:
  6880     0B30  1003               	clrc
  6881     0B31  0CC8               	rrf	___fladd@grs,f
  6882     0B32                     l2450:
  6883     0B32  1C35               	btfss	___fladd@b,0
  6884     0B33  2B35               	goto	u2921
  6885     0B34  2B36               	goto	u2920
  6886     0B35                     u2921:
  6887     0B35  2B37               	goto	l2454
  6888     0B36                     u2920:
  6889     0B36                     l2452:
  6890     0B36  17C8               	bsf	___fladd@grs,7
  6891     0B37                     l2454:
  6892     0B37  3001               	movlw	1
  6893     0B38  00BD               	movwf	??___fladd
  6894     0B39                     u2935:
  6895     0B39  0D38               	rlf	___fladd@b+3,w
  6896     0B3A  0CB8               	rrf	___fladd@b+3,f
  6897     0B3B  0CB7               	rrf	___fladd@b+2,f
  6898     0B3C  0CB6               	rrf	___fladd@b+1,f
  6899     0B3D  0CB5               	rrf	___fladd@b,f
  6900     0B3E  0BBD               	decfsz	??___fladd& (0+127),f
  6901     0B3F  2B39               	goto	u2935
  6902     0B40                     l2456:
  6903     0B40  3001               	movlw	1
  6904     0B41  07C7               	addwf	___fladd@bexp,f
  6905     0B42                     l2458:
  6906     0B42  1283               	bcf	3,5	;RP0=0, select bank0
  6907     0B43  1303               	bcf	3,6	;RP1=0, select bank0
  6908     0B44  0846               	movf	___fladd@aexp,w
  6909     0B45  0247               	subwf	___fladd@bexp,w
  6910     0B46  1C03               	skipc
  6911     0B47  2B49               	goto	u2941
  6912     0B48  2B4A               	goto	u2940
  6913     0B49                     u2941:
  6914     0B49  2B25               	goto	l539
  6915     0B4A                     u2940:
  6916     0B4A                     l537:
  6917     0B4A  1B45               	btfsc	___fladd@signs,6
  6918     0B4B  2B4D               	goto	u2951
  6919     0B4C  2B4E               	goto	u2950
  6920     0B4D                     u2951:
  6921     0B4D  2B95               	goto	l2484
  6922     0B4E                     u2950:
  6923     0B4E                     l2460:
  6924     0B4E  0847               	movf	___fladd@bexp,w
  6925     0B4F  1D03               	btfss	3,2
  6926     0B50  2B52               	goto	u2961
  6927     0B51  2B53               	goto	u2960
  6928     0B52                     u2961:
  6929     0B52  2B5C               	goto	l2466
  6930     0B53                     u2960:
  6931     0B53                     l2462:
  6932     0B53  3000               	movlw	0
  6933     0B54  00B8               	movwf	?___fladd+3
  6934     0B55  3000               	movlw	0
  6935     0B56  00B7               	movwf	?___fladd+2
  6936     0B57  3000               	movlw	0
  6937     0B58  00B6               	movwf	?___fladd+1
  6938     0B59  3000               	movlw	0
  6939     0B5A  00B5               	movwf	?___fladd
  6940     0B5B  2CBD               	goto	l546
  6941     0B5C                     l2466:
  6942     0B5C  0839               	movf	___fladd@a,w
  6943     0B5D  07B5               	addwf	___fladd@b,f
  6944     0B5E  083A               	movf	___fladd@a+1,w
  6945     0B5F  1103               	clrz
  6946     0B60  1803               	skipnc
  6947     0B61  3E01               	addlw	1
  6948     0B62  1903               	skipnz
  6949     0B63  2B65               	goto	u2971
  6950     0B64  07B6               	addwf	___fladd@b+1,f
  6951     0B65                     u2971:
  6952     0B65  083B               	movf	___fladd@a+2,w
  6953     0B66  1103               	clrz
  6954     0B67  1803               	skipnc
  6955     0B68  3E01               	addlw	1
  6956     0B69  1903               	skipnz
  6957     0B6A  2B6C               	goto	u2972
  6958     0B6B  07B7               	addwf	___fladd@b+2,f
  6959     0B6C                     u2972:
  6960     0B6C  083C               	movf	___fladd@a+3,w
  6961     0B6D  1103               	clrz
  6962     0B6E  1803               	skipnc
  6963     0B6F  3E01               	addlw	1
  6964     0B70  1903               	skipnz
  6965     0B71  2B73               	goto	u2973
  6966     0B72  07B8               	addwf	___fladd@b+3,f
  6967     0B73                     u2973:
  6968     0B73                     l2468:
  6969     0B73  1C38               	btfss	___fladd@b+3,0
  6970     0B74  2B76               	goto	u2981
  6971     0B75  2B77               	goto	u2980
  6972     0B76                     u2981:
  6973     0B76  2C49               	goto	l2520
  6974     0B77                     u2980:
  6975     0B77                     l2470:
  6976     0B77  1C48               	btfss	___fladd@grs,0
  6977     0B78  2B7A               	goto	u2991
  6978     0B79  2B7B               	goto	u2990
  6979     0B7A                     u2991:
  6980     0B7A  2B82               	goto	l2474
  6981     0B7B                     u2990:
  6982     0B7B                     l2472:
  6983     0B7B  0848               	movf	___fladd@grs,w
  6984     0B7C  00BD               	movwf	??___fladd
  6985     0B7D  1003               	clrc
  6986     0B7E  0C3D               	rrf	??___fladd,w
  6987     0B7F  3801               	iorlw	1
  6988     0B80  00C8               	movwf	___fladd@grs
  6989     0B81  2B84               	goto	l2476
  6990     0B82                     l2474:
  6991     0B82  1003               	clrc
  6992     0B83  0CC8               	rrf	___fladd@grs,f
  6993     0B84                     l2476:
  6994     0B84  1C35               	btfss	___fladd@b,0
  6995     0B85  2B87               	goto	u3001
  6996     0B86  2B88               	goto	u3000
  6997     0B87                     u3001:
  6998     0B87  2B89               	goto	l2480
  6999     0B88                     u3000:
  7000     0B88                     l2478:
  7001     0B88  17C8               	bsf	___fladd@grs,7
  7002     0B89                     l2480:
  7003     0B89  3001               	movlw	1
  7004     0B8A  00BD               	movwf	??___fladd
  7005     0B8B                     u3015:
  7006     0B8B  0D38               	rlf	___fladd@b+3,w
  7007     0B8C  0CB8               	rrf	___fladd@b+3,f
  7008     0B8D  0CB7               	rrf	___fladd@b+2,f
  7009     0B8E  0CB6               	rrf	___fladd@b+1,f
  7010     0B8F  0CB5               	rrf	___fladd@b,f
  7011     0B90  0BBD               	decfsz	??___fladd& (0+127),f
  7012     0B91  2B8B               	goto	u3015
  7013     0B92                     l2482:
  7014     0B92  3001               	movlw	1
  7015     0B93  07C7               	addwf	___fladd@bexp,f
  7016     0B94  2C49               	goto	l2520
  7017     0B95                     l2484:
  7018     0B95  0838               	movf	___fladd@b+3,w
  7019     0B96  3A80               	xorlw	128
  7020     0B97  00FF               	movwf	btemp+1
  7021     0B98  083C               	movf	___fladd@a+3,w
  7022     0B99  3A80               	xorlw	128
  7023     0B9A  027F               	subwf	btemp+1,w
  7024     0B9B  1D03               	skipz
  7025     0B9C  2BA7               	goto	u3023
  7026     0B9D  083B               	movf	___fladd@a+2,w
  7027     0B9E  0237               	subwf	___fladd@b+2,w
  7028     0B9F  1D03               	skipz
  7029     0BA0  2BA7               	goto	u3023
  7030     0BA1  083A               	movf	___fladd@a+1,w
  7031     0BA2  0236               	subwf	___fladd@b+1,w
  7032     0BA3  1D03               	skipz
  7033     0BA4  2BA7               	goto	u3023
  7034     0BA5  0839               	movf	___fladd@a,w
  7035     0BA6  0235               	subwf	___fladd@b,w
  7036     0BA7                     u3023:
  7037     0BA7  1803               	skipnc
  7038     0BA8  2BAA               	goto	u3021
  7039     0BA9  2BAB               	goto	u3020
  7040     0BAA                     u3021:
  7041     0BAA  2C02               	goto	l2496
  7042     0BAB                     u3020:
  7043     0BAB                     l2486:
  7044     0BAB  30FF               	movlw	255
  7045     0BAC  00BD               	movwf	??___fladd
  7046     0BAD  30FF               	movlw	255
  7047     0BAE  00BE               	movwf	??___fladd+1
  7048     0BAF  30FF               	movlw	255
  7049     0BB0  00BF               	movwf	??___fladd+2
  7050     0BB1  30FF               	movlw	255
  7051     0BB2  00C0               	movwf	??___fladd+3
  7052     0BB3  0839               	movf	___fladd@a,w
  7053     0BB4  00C1               	movwf	??___fladd+4
  7054     0BB5  083A               	movf	___fladd@a+1,w
  7055     0BB6  00C2               	movwf	??___fladd+5
  7056     0BB7  083B               	movf	___fladd@a+2,w
  7057     0BB8  00C3               	movwf	??___fladd+6
  7058     0BB9  083C               	movf	___fladd@a+3,w
  7059     0BBA  00C4               	movwf	??___fladd+7
  7060     0BBB  0835               	movf	___fladd@b,w
  7061     0BBC  02C1               	subwf	??___fladd+4,f
  7062     0BBD  0836               	movf	___fladd@b+1,w
  7063     0BBE  1C03               	skipc
  7064     0BBF  0F36               	incfsz	___fladd@b+1,w
  7065     0BC0  2BC2               	goto	u3031
  7066     0BC1  2BC3               	goto	u3032
  7067     0BC2                     u3031:
  7068     0BC2  02C2               	subwf	??___fladd+5,f
  7069     0BC3                     u3032:
  7070     0BC3  0837               	movf	___fladd@b+2,w
  7071     0BC4  1C03               	skipc
  7072     0BC5  0F37               	incfsz	___fladd@b+2,w
  7073     0BC6  2BC8               	goto	u3033
  7074     0BC7  2BC9               	goto	u3034
  7075     0BC8                     u3033:
  7076     0BC8  02C3               	subwf	??___fladd+6,f
  7077     0BC9                     u3034:
  7078     0BC9  0838               	movf	___fladd@b+3,w
  7079     0BCA  1C03               	skipc
  7080     0BCB  0F38               	incfsz	___fladd@b+3,w
  7081     0BCC  2BCE               	goto	u3035
  7082     0BCD  2BCF               	goto	u3036
  7083     0BCE                     u3035:
  7084     0BCE  02C4               	subwf	??___fladd+7,f
  7085     0BCF                     u3036:
  7086     0BCF  0841               	movf	??___fladd+4,w
  7087     0BD0  07BD               	addwf	??___fladd,f
  7088     0BD1  0842               	movf	??___fladd+5,w
  7089     0BD2  1803               	skipnc
  7090     0BD3  0F42               	incfsz	??___fladd+5,w
  7091     0BD4  2BD6               	goto	u3040
  7092     0BD5  2BD7               	goto	u3041
  7093     0BD6                     u3040:
  7094     0BD6  07BE               	addwf	??___fladd+1,f
  7095     0BD7                     u3041:
  7096     0BD7  0843               	movf	??___fladd+6,w
  7097     0BD8  1803               	skipnc
  7098     0BD9  0F43               	incfsz	??___fladd+6,w
  7099     0BDA  2BDC               	goto	u3042
  7100     0BDB  2BDD               	goto	u3043
  7101     0BDC                     u3042:
  7102     0BDC  07BF               	addwf	??___fladd+2,f
  7103     0BDD                     u3043:
  7104     0BDD  0844               	movf	??___fladd+7,w
  7105     0BDE  1803               	skipnc
  7106     0BDF  0A44               	incf	??___fladd+7,w
  7107     0BE0  07C0               	addwf	??___fladd+3,f
  7108     0BE1  0840               	movf	??___fladd+3,w
  7109     0BE2  00B8               	movwf	___fladd@b+3
  7110     0BE3  083F               	movf	??___fladd+2,w
  7111     0BE4  00B7               	movwf	___fladd@b+2
  7112     0BE5  083E               	movf	??___fladd+1,w
  7113     0BE6  00B6               	movwf	___fladd@b+1
  7114     0BE7  083D               	movf	??___fladd,w
  7115     0BE8  00B5               	movwf	___fladd@b
  7116     0BE9                     l2488:
  7117     0BE9  3080               	movlw	128
  7118     0BEA  06C5               	xorwf	___fladd@signs,f
  7119     0BEB                     l2490:
  7120     0BEB  0348               	decf	___fladd@grs,w
  7121     0BEC  3AFF               	xorlw	255
  7122     0BED  00C8               	movwf	___fladd@grs
  7123     0BEE                     l2492:
  7124     0BEE  0848               	movf	___fladd@grs,w
  7125     0BEF  1D03               	btfss	3,2
  7126     0BF0  2BF2               	goto	u3051
  7127     0BF1  2BF3               	goto	u3050
  7128     0BF2                     u3051:
  7129     0BF2  2C10               	goto	l554
  7130     0BF3                     u3050:
  7131     0BF3                     l2494:
  7132     0BF3  3001               	movlw	1
  7133     0BF4  07B5               	addwf	___fladd@b,f
  7134     0BF5  3000               	movlw	0
  7135     0BF6  1803               	skipnc
  7136     0BF7  3001               	movlw	1
  7137     0BF8  07B6               	addwf	___fladd@b+1,f
  7138     0BF9  3000               	movlw	0
  7139     0BFA  1803               	skipnc
  7140     0BFB  3001               	movlw	1
  7141     0BFC  07B7               	addwf	___fladd@b+2,f
  7142     0BFD  3000               	movlw	0
  7143     0BFE  1803               	skipnc
  7144     0BFF  3001               	movlw	1
  7145     0C00  07B8               	addwf	___fladd@b+3,f
  7146     0C01  2C10               	goto	l554
  7147     0C02                     l2496:
  7148     0C02  0839               	movf	___fladd@a,w
  7149     0C03  02B5               	subwf	___fladd@b,f
  7150     0C04  083A               	movf	___fladd@a+1,w
  7151     0C05  1C03               	skipc
  7152     0C06  0F3A               	incfsz	___fladd@a+1,w
  7153     0C07  02B6               	subwf	___fladd@b+1,f
  7154     0C08  083B               	movf	___fladd@a+2,w
  7155     0C09  1C03               	skipc
  7156     0C0A  0F3B               	incfsz	___fladd@a+2,w
  7157     0C0B  02B7               	subwf	___fladd@b+2,f
  7158     0C0C  083C               	movf	___fladd@a+3,w
  7159     0C0D  1C03               	skipc
  7160     0C0E  0F3C               	incfsz	___fladd@a+3,w
  7161     0C0F  02B8               	subwf	___fladd@b+3,f
  7162     0C10                     l554:
  7163     0C10  0838               	movf	___fladd@b+3,w
  7164     0C11  0437               	iorwf	___fladd@b+2,w
  7165     0C12  0436               	iorwf	___fladd@b+1,w
  7166     0C13  0435               	iorwf	___fladd@b,w
  7167     0C14  1D03               	skipz
  7168     0C15  2C17               	goto	u3061
  7169     0C16  2C18               	goto	u3060
  7170     0C17                     u3061:
  7171     0C17  2C45               	goto	l2518
  7172     0C18                     u3060:
  7173     0C18                     l2498:
  7174     0C18  0848               	movf	___fladd@grs,w
  7175     0C19  1D03               	btfss	3,2
  7176     0C1A  2C1C               	goto	u3071
  7177     0C1B  2C1D               	goto	u3070
  7178     0C1C                     u3071:
  7179     0C1C  2C45               	goto	l2518
  7180     0C1D                     u3070:
  7181     0C1D                     l2500:
  7182     0C1D  3000               	movlw	0
  7183     0C1E  00B8               	movwf	?___fladd+3
  7184     0C1F  3000               	movlw	0
  7185     0C20  00B7               	movwf	?___fladd+2
  7186     0C21  3000               	movlw	0
  7187     0C22  00B6               	movwf	?___fladd+1
  7188     0C23  3000               	movlw	0
  7189     0C24  00B5               	movwf	?___fladd
  7190     0C25  2CBD               	goto	l546
  7191     0C26                     l2504:
  7192     0C26  3001               	movlw	1
  7193     0C27  00BD               	movwf	??___fladd
  7194     0C28                     u3085:
  7195     0C28  1003               	clrc
  7196     0C29  0DB5               	rlf	___fladd@b,f
  7197     0C2A  0DB6               	rlf	___fladd@b+1,f
  7198     0C2B  0DB7               	rlf	___fladd@b+2,f
  7199     0C2C  0DB8               	rlf	___fladd@b+3,f
  7200     0C2D  0BBD               	decfsz	??___fladd,f
  7201     0C2E  2C28               	goto	u3085
  7202     0C2F                     l2506:
  7203     0C2F  1FC8               	btfss	___fladd@grs,7
  7204     0C30  2C32               	goto	u3091
  7205     0C31  2C33               	goto	u3090
  7206     0C32                     u3091:
  7207     0C32  2C34               	goto	l558
  7208     0C33                     u3090:
  7209     0C33                     l2508:
  7210     0C33  1435               	bsf	___fladd@b,0
  7211     0C34                     l558:
  7212     0C34  1C48               	btfss	___fladd@grs,0
  7213     0C35  2C37               	goto	u3101
  7214     0C36  2C38               	goto	u3100
  7215     0C37                     u3101:
  7216     0C37  2C3C               	goto	l2512
  7217     0C38                     u3100:
  7218     0C38                     l2510:
  7219     0C38  1403               	setc
  7220     0C39  0D48               	rlf	___fladd@grs,w
  7221     0C3A  00C8               	movwf	___fladd@grs
  7222     0C3B  2C3E               	goto	l2514
  7223     0C3C                     l2512:
  7224     0C3C  1003               	clrc
  7225     0C3D  0DC8               	rlf	___fladd@grs,f
  7226     0C3E                     l2514:
  7227     0C3E  0847               	movf	___fladd@bexp,w
  7228     0C3F  1903               	btfsc	3,2
  7229     0C40  2C42               	goto	u3111
  7230     0C41  2C43               	goto	u3110
  7231     0C42                     u3111:
  7232     0C42  2C45               	goto	l2518
  7233     0C43                     u3110:
  7234     0C43                     l2516:
  7235     0C43  3001               	movlw	1
  7236     0C44  02C7               	subwf	___fladd@bexp,f
  7237     0C45                     l2518:
  7238     0C45  1FB7               	btfss	___fladd@b+2,7
  7239     0C46  2C48               	goto	u3121
  7240     0C47  2C49               	goto	u3120
  7241     0C48                     u3121:
  7242     0C48  2C26               	goto	l2504
  7243     0C49                     u3120:
  7244     0C49                     l2520:
  7245     0C49  01C6               	clrf	___fladd@aexp
  7246     0C4A                     l2522:
  7247     0C4A  1FC8               	btfss	___fladd@grs,7
  7248     0C4B  2C4D               	goto	u3131
  7249     0C4C  2C4E               	goto	u3130
  7250     0C4D                     u3131:
  7251     0C4D  2C5C               	goto	l2530
  7252     0C4E                     u3130:
  7253     0C4E                     l2524:
  7254     0C4E  0848               	movf	___fladd@grs,w
  7255     0C4F  397F               	andlw	127
  7256     0C50  1903               	btfsc	3,2
  7257     0C51  2C53               	goto	u3141
  7258     0C52  2C54               	goto	u3140
  7259     0C53                     u3141:
  7260     0C53  2C57               	goto	l564
  7261     0C54                     u3140:
  7262     0C54                     l2526:
  7263     0C54  3001               	movlw	1
  7264     0C55  00C6               	movwf	___fladd@aexp
  7265     0C56  2C5C               	goto	l2530
  7266     0C57                     l564:
  7267     0C57  1C35               	btfss	___fladd@b,0
  7268     0C58  2C5A               	goto	u3151
  7269     0C59  2C5B               	goto	u3150
  7270     0C5A                     u3151:
  7271     0C5A  2C5C               	goto	l2530
  7272     0C5B                     u3150:
  7273     0C5B  2C54               	goto	l2526
  7274     0C5C                     l2530:
  7275     0C5C  0846               	movf	___fladd@aexp,w
  7276     0C5D  1903               	btfsc	3,2
  7277     0C5E  2C60               	goto	u3161
  7278     0C5F  2C61               	goto	u3160
  7279     0C60                     u3161:
  7280     0C60  2C93               	goto	l567
  7281     0C61                     u3160:
  7282     0C61                     l2532:
  7283     0C61  3001               	movlw	1
  7284     0C62  07B5               	addwf	___fladd@b,f
  7285     0C63  3000               	movlw	0
  7286     0C64  1803               	skipnc
  7287     0C65  3001               	movlw	1
  7288     0C66  07B6               	addwf	___fladd@b+1,f
  7289     0C67  3000               	movlw	0
  7290     0C68  1803               	skipnc
  7291     0C69  3001               	movlw	1
  7292     0C6A  07B7               	addwf	___fladd@b+2,f
  7293     0C6B  3000               	movlw	0
  7294     0C6C  1803               	skipnc
  7295     0C6D  3001               	movlw	1
  7296     0C6E  07B8               	addwf	___fladd@b+3,f
  7297     0C6F                     l2534:
  7298     0C6F  1C38               	btfss	___fladd@b+3,0
  7299     0C70  2C72               	goto	u3171
  7300     0C71  2C73               	goto	u3170
  7301     0C72                     u3171:
  7302     0C72  2C93               	goto	l567
  7303     0C73                     u3170:
  7304     0C73                     l2536:
  7305     0C73  0835               	movf	___fladd@b,w
  7306     0C74  00BD               	movwf	??___fladd
  7307     0C75  0836               	movf	___fladd@b+1,w
  7308     0C76  00BE               	movwf	??___fladd+1
  7309     0C77  0837               	movf	___fladd@b+2,w
  7310     0C78  00BF               	movwf	??___fladd+2
  7311     0C79  0838               	movf	___fladd@b+3,w
  7312     0C7A  00C0               	movwf	??___fladd+3
  7313     0C7B  3001               	movlw	1
  7314     0C7C  00C1               	movwf	??___fladd+4
  7315     0C7D                     u3185:
  7316     0C7D  0D40               	rlf	??___fladd+3,w
  7317     0C7E  0CC0               	rrf	??___fladd+3,f
  7318     0C7F  0CBF               	rrf	??___fladd+2,f
  7319     0C80  0CBE               	rrf	??___fladd+1,f
  7320     0C81  0CBD               	rrf	??___fladd,f
  7321     0C82                     u3180:
  7322     0C82  0BC1               	decfsz	??___fladd+4,f
  7323     0C83  2C7D               	goto	u3185
  7324     0C84  0840               	movf	??___fladd+3,w
  7325     0C85  00B8               	movwf	___fladd@b+3
  7326     0C86  083F               	movf	??___fladd+2,w
  7327     0C87  00B7               	movwf	___fladd@b+2
  7328     0C88  083E               	movf	??___fladd+1,w
  7329     0C89  00B6               	movwf	___fladd@b+1
  7330     0C8A  083D               	movf	??___fladd,w
  7331     0C8B  00B5               	movwf	___fladd@b
  7332     0C8C  0A47               	incf	___fladd@bexp,w
  7333     0C8D  1903               	btfsc	3,2
  7334     0C8E  2C90               	goto	u3191
  7335     0C8F  2C91               	goto	u3190
  7336     0C90                     u3191:
  7337     0C90  2C93               	goto	l567
  7338     0C91                     u3190:
  7339     0C91                     l2538:
  7340     0C91  3001               	movlw	1
  7341     0C92  07C7               	addwf	___fladd@bexp,f
  7342     0C93                     l567:
  7343     0C93  0A47               	incf	___fladd@bexp,w
  7344     0C94  1903               	btfsc	3,2
  7345     0C95  2C97               	goto	u3201
  7346     0C96  2C98               	goto	u3200
  7347     0C97                     u3201:
  7348     0C97  2C9D               	goto	l2542
  7349     0C98                     u3200:
  7350     0C98                     l2540:
  7351     0C98  0847               	movf	___fladd@bexp,w
  7352     0C99  1D03               	btfss	3,2
  7353     0C9A  2C9C               	goto	u3211
  7354     0C9B  2C9D               	goto	u3210
  7355     0C9C                     u3211:
  7356     0C9C  2CAB               	goto	l2548
  7357     0C9D                     u3210:
  7358     0C9D                     l2542:
  7359     0C9D  3000               	movlw	0
  7360     0C9E  00B8               	movwf	___fladd@b+3
  7361     0C9F  3000               	movlw	0
  7362     0CA0  00B7               	movwf	___fladd@b+2
  7363     0CA1  3000               	movlw	0
  7364     0CA2  00B6               	movwf	___fladd@b+1
  7365     0CA3  3000               	movlw	0
  7366     0CA4  00B5               	movwf	___fladd@b
  7367     0CA5                     l2544:
  7368     0CA5  0847               	movf	___fladd@bexp,w
  7369     0CA6  1D03               	btfss	3,2
  7370     0CA7  2CA9               	goto	u3221
  7371     0CA8  2CAA               	goto	u3220
  7372     0CA9                     u3221:
  7373     0CA9  2CAB               	goto	l2548
  7374     0CAA                     u3220:
  7375     0CAA                     l2546:
  7376     0CAA  01C5               	clrf	___fladd@signs
  7377     0CAB                     l2548:
  7378     0CAB  1C47               	btfss	___fladd@bexp,0
  7379     0CAC  2CAE               	goto	u3231
  7380     0CAD  2CAF               	goto	u3230
  7381     0CAE                     u3231:
  7382     0CAE  2CB1               	goto	l2552
  7383     0CAF                     u3230:
  7384     0CAF                     l2550:
  7385     0CAF  17B7               	bsf	___fladd@b+2,7
  7386     0CB0  2CB3               	goto	l575
  7387     0CB1                     l2552:
  7388     0CB1  307F               	movlw	127
  7389     0CB2  05B7               	andwf	___fladd@b+2,f
  7390     0CB3                     l575:
  7391     0CB3  0847               	movf	___fladd@bexp,w
  7392     0CB4  00BD               	movwf	??___fladd
  7393     0CB5  1003               	clrc
  7394     0CB6  0C3D               	rrf	??___fladd,w
  7395     0CB7  00B8               	movwf	___fladd@b+3
  7396     0CB8                     l2554:
  7397     0CB8  1FC5               	btfss	___fladd@signs,7
  7398     0CB9  2CBB               	goto	u3241
  7399     0CBA  2CBC               	goto	u3240
  7400     0CBB                     u3241:
  7401     0CBB  2CBD               	goto	l576
  7402     0CBC                     u3240:
  7403     0CBC                     l2556:
  7404     0CBC  17B8               	bsf	___fladd@b+3,7
  7405     0CBD                     l576:
  7406     0CBD                     l546:
  7407     0CBD  0008               	return
  7408     0CBE                     __end_of___fladd:
  7409                           
  7410                           	psect	text26
  7411     1000                     __ptext26:	
  7412 ;; *************** function ___flneg *****************
  7413 ;; Defined at:
  7414 ;;		line 15 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\flneg.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  f1              4    0[COMMON] unsigned char 
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;		None
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  4    0[COMMON] unsigned char 
  7421 ;; Registers used:
  7422 ;;		wreg
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7428 ;;      Params:         4       0       0       0       0
  7429 ;;      Locals:         0       0       0       0       0
  7430 ;;      Temps:          0       0       0       0       0
  7431 ;;      Totals:         4       0       0       0       0
  7432 ;;Total ram usage:        4 bytes
  7433 ;; Hardware stack levels used: 1
  7434 ;; This function calls:
  7435 ;;		Nothing
  7436 ;; This function is called by:
  7437 ;;		_efgtoa
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441     1000                     ___flneg:	
  7442                           ;psect for function ___flneg
  7443                           
  7444     1000                     l2616:	
  7445                           ;incstack = 0
  7446                           ; Regs used in ___flneg: [wreg]
  7447                           
  7448     1000  0873               	movf	___flneg@f1+3,w
  7449     1001  0472               	iorwf	___flneg@f1+2,w
  7450     1002  0471               	iorwf	___flneg@f1+1,w
  7451     1003  0470               	iorwf	___flneg@f1,w
  7452     1004  1903               	skipnz
  7453     1005  2807               	goto	u3401
  7454     1006  2808               	goto	u3400
  7455     1007                     u3401:
  7456     1007  280A               	goto	l2620
  7457     1008                     u3400:
  7458     1008                     l2618:
  7459     1008  3080               	movlw	128
  7460     1009  06F3               	xorwf	___flneg@f1+3,f
  7461     100A                     l2620:
  7462     100A                     l422:
  7463     100A  0008               	return
  7464     100B                     __end_of___flneg:
  7465                           
  7466                           	psect	text27
  7467     0CBE                     __ptext27:	
  7468 ;; *************** function ___flmul *****************
  7469 ;; Defined at:
  7470 ;;		line 8 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\sprcmul.c"
  7471 ;; Parameters:    Size  Location     Type
  7472 ;;  b               4    0[BANK0 ] unsigned char 
  7473 ;;  a               4    4[BANK0 ] unsigned char 
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;  prod            4   15[BANK0 ] struct .
  7476 ;;  grs             4    9[BANK0 ] unsigned long 
  7477 ;;  temp            2   19[BANK0 ] struct .
  7478 ;;  bexp            1   14[BANK0 ] unsigned char 
  7479 ;;  aexp            1   13[BANK0 ] unsigned char 
  7480 ;;  sign            1    8[BANK0 ] unsigned char 
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  4    0[BANK0 ] unsigned char 
  7483 ;; Registers used:
  7484 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7490 ;;      Params:         0       8       0       0       0
  7491 ;;      Locals:         0      13       0       0       0
  7492 ;;      Temps:          5       0       0       0       0
  7493 ;;      Totals:         5      21       0       0       0
  7494 ;;Total ram usage:       26 bytes
  7495 ;; Hardware stack levels used: 1
  7496 ;; Hardware stack levels required when called: 1
  7497 ;; This function calls:
  7498 ;;		__Umul8_16
  7499 ;; This function is called by:
  7500 ;;		_setDigit
  7501 ;;		_calculate
  7502 ;;		_efgtoa
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           
  7506     0CBE                     ___flmul:	
  7507                           ;psect for function ___flmul
  7508                           
  7509     0CBE                     l2810:	
  7510                           ;incstack = 0
  7511                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7512                           
  7513     0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  7514     0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  7515     0CC0  0823               	movf	___flmul@b+3,w
  7516     0CC1  00A8               	movwf	___flmul@sign
  7517     0CC2                     l2812:
  7518     0CC2  3080               	movlw	128
  7519     0CC3  05A8               	andwf	___flmul@sign,f
  7520     0CC4                     l2814:
  7521     0CC4  0823               	movf	___flmul@b+3,w
  7522     0CC5  00F9               	movwf	??___flmul
  7523     0CC6  0779               	addwf	??___flmul,w
  7524     0CC7  00AE               	movwf	___flmul@bexp
  7525     0CC8                     l2816:
  7526     0CC8  1FA2               	btfss	___flmul@b+2,7
  7527     0CC9  2CCB               	goto	u3811
  7528     0CCA  2CCC               	goto	u3810
  7529     0CCB                     u3811:
  7530     0CCB  2CCD               	goto	l2820
  7531     0CCC                     u3810:
  7532     0CCC                     l2818:
  7533     0CCC  142E               	bsf	___flmul@bexp,0
  7534     0CCD                     l2820:
  7535     0CCD  082E               	movf	___flmul@bexp,w
  7536     0CCE  1903               	btfsc	3,2
  7537     0CCF  2CD1               	goto	u3821
  7538     0CD0  2CD2               	goto	u3820
  7539     0CD1                     u3821:
  7540     0CD1  2CE1               	goto	l2828
  7541     0CD2                     u3820:
  7542     0CD2                     l2822:
  7543     0CD2  0A2E               	incf	___flmul@bexp,w
  7544     0CD3  1D03               	btfss	3,2
  7545     0CD4  2CD6               	goto	u3831
  7546     0CD5  2CD7               	goto	u3830
  7547     0CD6                     u3831:
  7548     0CD6  2CDF               	goto	l2826
  7549     0CD7                     u3830:
  7550     0CD7                     l2824:
  7551     0CD7  3000               	movlw	0
  7552     0CD8  00A3               	movwf	___flmul@b+3
  7553     0CD9  3000               	movlw	0
  7554     0CDA  00A2               	movwf	___flmul@b+2
  7555     0CDB  3000               	movlw	0
  7556     0CDC  00A1               	movwf	___flmul@b+1
  7557     0CDD  3000               	movlw	0
  7558     0CDE  00A0               	movwf	___flmul@b
  7559     0CDF                     l2826:
  7560     0CDF  17A2               	bsf	___flmul@b+2,7
  7561     0CE0  2CE9               	goto	l2830
  7562     0CE1                     l2828:
  7563     0CE1  3000               	movlw	0
  7564     0CE2  00A3               	movwf	___flmul@b+3
  7565     0CE3  3000               	movlw	0
  7566     0CE4  00A2               	movwf	___flmul@b+2
  7567     0CE5  3000               	movlw	0
  7568     0CE6  00A1               	movwf	___flmul@b+1
  7569     0CE7  3000               	movlw	0
  7570     0CE8  00A0               	movwf	___flmul@b
  7571     0CE9                     l2830:
  7572     0CE9  0827               	movf	___flmul@a+3,w
  7573     0CEA  3980               	andlw	128
  7574     0CEB  06A8               	xorwf	___flmul@sign,f
  7575     0CEC                     l2832:
  7576     0CEC  0827               	movf	___flmul@a+3,w
  7577     0CED  00F9               	movwf	??___flmul
  7578     0CEE  0779               	addwf	??___flmul,w
  7579     0CEF  00AD               	movwf	___flmul@aexp
  7580     0CF0                     l2834:
  7581     0CF0  1FA6               	btfss	___flmul@a+2,7
  7582     0CF1  2CF3               	goto	u3841
  7583     0CF2  2CF4               	goto	u3840
  7584     0CF3                     u3841:
  7585     0CF3  2CF5               	goto	l2838
  7586     0CF4                     u3840:
  7587     0CF4                     l2836:
  7588     0CF4  142D               	bsf	___flmul@aexp,0
  7589     0CF5                     l2838:
  7590     0CF5  082D               	movf	___flmul@aexp,w
  7591     0CF6  1903               	btfsc	3,2
  7592     0CF7  2CF9               	goto	u3851
  7593     0CF8  2CFA               	goto	u3850
  7594     0CF9                     u3851:
  7595     0CF9  2D09               	goto	l2846
  7596     0CFA                     u3850:
  7597     0CFA                     l2840:
  7598     0CFA  0A2D               	incf	___flmul@aexp,w
  7599     0CFB  1D03               	btfss	3,2
  7600     0CFC  2CFE               	goto	u3861
  7601     0CFD  2CFF               	goto	u3860
  7602     0CFE                     u3861:
  7603     0CFE  2D07               	goto	l2844
  7604     0CFF                     u3860:
  7605     0CFF                     l2842:
  7606     0CFF  3000               	movlw	0
  7607     0D00  00A7               	movwf	___flmul@a+3
  7608     0D01  3000               	movlw	0
  7609     0D02  00A6               	movwf	___flmul@a+2
  7610     0D03  3000               	movlw	0
  7611     0D04  00A5               	movwf	___flmul@a+1
  7612     0D05  3000               	movlw	0
  7613     0D06  00A4               	movwf	___flmul@a
  7614     0D07                     l2844:
  7615     0D07  17A6               	bsf	___flmul@a+2,7
  7616     0D08  2D11               	goto	l2848
  7617     0D09                     l2846:
  7618     0D09  3000               	movlw	0
  7619     0D0A  00A7               	movwf	___flmul@a+3
  7620     0D0B  3000               	movlw	0
  7621     0D0C  00A6               	movwf	___flmul@a+2
  7622     0D0D  3000               	movlw	0
  7623     0D0E  00A5               	movwf	___flmul@a+1
  7624     0D0F  3000               	movlw	0
  7625     0D10  00A4               	movwf	___flmul@a
  7626     0D11                     l2848:
  7627     0D11  082D               	movf	___flmul@aexp,w
  7628     0D12  1903               	btfsc	3,2
  7629     0D13  2D15               	goto	u3871
  7630     0D14  2D16               	goto	u3870
  7631     0D15                     u3871:
  7632     0D15  2D1B               	goto	l2852
  7633     0D16                     u3870:
  7634     0D16                     l2850:
  7635     0D16  082E               	movf	___flmul@bexp,w
  7636     0D17  1D03               	btfss	3,2
  7637     0D18  2D1A               	goto	u3881
  7638     0D19  2D1B               	goto	u3880
  7639     0D1A                     u3881:
  7640     0D1A  2D24               	goto	l2856
  7641     0D1B                     u3880:
  7642     0D1B                     l2852:
  7643     0D1B  3000               	movlw	0
  7644     0D1C  00A3               	movwf	?___flmul+3
  7645     0D1D  3000               	movlw	0
  7646     0D1E  00A2               	movwf	?___flmul+2
  7647     0D1F  3000               	movlw	0
  7648     0D20  00A1               	movwf	?___flmul+1
  7649     0D21  3000               	movlw	0
  7650     0D22  00A0               	movwf	?___flmul
  7651     0D23  2FFF               	goto	l629
  7652     0D24                     l2856:
  7653     0D24  0820               	movf	___flmul@b,w
  7654     0D25  00F0               	movwf	__Umul8_16@multiplicand
  7655     0D26  0826               	movf	___flmul@a+2,w
  7656     0D27  160A  158A  239D  120A  158A  	fcall	__Umul8_16
  7657     0D2C  0871               	movf	?__Umul8_16+1,w
  7658     0D2D  1283               	bcf	3,5	;RP0=0, select bank0
  7659     0D2E  1303               	bcf	3,6	;RP1=0, select bank0
  7660     0D2F  00B4               	movwf	___flmul@temp+1
  7661     0D30  0870               	movf	?__Umul8_16,w
  7662     0D31  00B3               	movwf	___flmul@temp
  7663     0D32                     l2858:
  7664     0D32  0833               	movf	___flmul@temp,w
  7665     0D33  00F9               	movwf	??___flmul
  7666     0D34  01FA               	clrf	??___flmul+1
  7667     0D35  01FB               	clrf	??___flmul+2
  7668     0D36  01FC               	clrf	??___flmul+3
  7669     0D37  087C               	movf	??___flmul+3,w
  7670     0D38  00AC               	movwf	___flmul@grs+3
  7671     0D39  087B               	movf	??___flmul+2,w
  7672     0D3A  00AB               	movwf	___flmul@grs+2
  7673     0D3B  087A               	movf	??___flmul+1,w
  7674     0D3C  00AA               	movwf	___flmul@grs+1
  7675     0D3D  0879               	movf	??___flmul,w
  7676     0D3E  00A9               	movwf	___flmul@grs
  7677     0D3F                     l2860:
  7678     0D3F  0834               	movf	___flmul@temp+1,w
  7679     0D40  00F9               	movwf	??___flmul
  7680     0D41  01FA               	clrf	??___flmul+1
  7681     0D42  01FB               	clrf	??___flmul+2
  7682     0D43  01FC               	clrf	??___flmul+3
  7683     0D44  087C               	movf	??___flmul+3,w
  7684     0D45  00B2               	movwf	___flmul@prod+3
  7685     0D46  087B               	movf	??___flmul+2,w
  7686     0D47  00B1               	movwf	___flmul@prod+2
  7687     0D48  087A               	movf	??___flmul+1,w
  7688     0D49  00B0               	movwf	___flmul@prod+1
  7689     0D4A  0879               	movf	??___flmul,w
  7690     0D4B  00AF               	movwf	___flmul@prod
  7691     0D4C  0821               	movf	___flmul@b+1,w
  7692     0D4D  00F0               	movwf	__Umul8_16@multiplicand
  7693     0D4E  0825               	movf	___flmul@a+1,w
  7694     0D4F  160A  158A  239D  120A  158A  	fcall	__Umul8_16
  7695     0D54  0871               	movf	?__Umul8_16+1,w
  7696     0D55  1283               	bcf	3,5	;RP0=0, select bank0
  7697     0D56  1303               	bcf	3,6	;RP1=0, select bank0
  7698     0D57  00B4               	movwf	___flmul@temp+1
  7699     0D58  0870               	movf	?__Umul8_16,w
  7700     0D59  00B3               	movwf	___flmul@temp
  7701     0D5A                     l2862:
  7702     0D5A  0833               	movf	___flmul@temp,w
  7703     0D5B  00F9               	movwf	??___flmul
  7704     0D5C  01FA               	clrf	??___flmul+1
  7705     0D5D  01FB               	clrf	??___flmul+2
  7706     0D5E  01FC               	clrf	??___flmul+3
  7707     0D5F  0879               	movf	??___flmul,w
  7708     0D60  07A9               	addwf	___flmul@grs,f
  7709     0D61  087A               	movf	??___flmul+1,w
  7710     0D62  1103               	clrz
  7711     0D63  1803               	skipnc
  7712     0D64  3E01               	addlw	1
  7713     0D65  1903               	skipnz
  7714     0D66  2D68               	goto	u3891
  7715     0D67  07AA               	addwf	___flmul@grs+1,f
  7716     0D68                     u3891:
  7717     0D68  087B               	movf	??___flmul+2,w
  7718     0D69  1103               	clrz
  7719     0D6A  1803               	skipnc
  7720     0D6B  3E01               	addlw	1
  7721     0D6C  1903               	skipnz
  7722     0D6D  2D6F               	goto	u3892
  7723     0D6E  07AB               	addwf	___flmul@grs+2,f
  7724     0D6F                     u3892:
  7725     0D6F  087C               	movf	??___flmul+3,w
  7726     0D70  1103               	clrz
  7727     0D71  1803               	skipnc
  7728     0D72  3E01               	addlw	1
  7729     0D73  1903               	skipnz
  7730     0D74  2D76               	goto	u3893
  7731     0D75  07AC               	addwf	___flmul@grs+3,f
  7732     0D76                     u3893:
  7733     0D76                     l2864:
  7734     0D76  0834               	movf	___flmul@temp+1,w
  7735     0D77  00F9               	movwf	??___flmul
  7736     0D78  01FA               	clrf	??___flmul+1
  7737     0D79  01FB               	clrf	??___flmul+2
  7738     0D7A  01FC               	clrf	??___flmul+3
  7739     0D7B  0879               	movf	??___flmul,w
  7740     0D7C  07AF               	addwf	___flmul@prod,f
  7741     0D7D  087A               	movf	??___flmul+1,w
  7742     0D7E  1103               	clrz
  7743     0D7F  1803               	skipnc
  7744     0D80  3E01               	addlw	1
  7745     0D81  1903               	skipnz
  7746     0D82  2D84               	goto	u3901
  7747     0D83  07B0               	addwf	___flmul@prod+1,f
  7748     0D84                     u3901:
  7749     0D84  087B               	movf	??___flmul+2,w
  7750     0D85  1103               	clrz
  7751     0D86  1803               	skipnc
  7752     0D87  3E01               	addlw	1
  7753     0D88  1903               	skipnz
  7754     0D89  2D8B               	goto	u3902
  7755     0D8A  07B1               	addwf	___flmul@prod+2,f
  7756     0D8B                     u3902:
  7757     0D8B  087C               	movf	??___flmul+3,w
  7758     0D8C  1103               	clrz
  7759     0D8D  1803               	skipnc
  7760     0D8E  3E01               	addlw	1
  7761     0D8F  1903               	skipnz
  7762     0D90  2D92               	goto	u3903
  7763     0D91  07B2               	addwf	___flmul@prod+3,f
  7764     0D92                     u3903:
  7765     0D92  0822               	movf	___flmul@b+2,w
  7766     0D93  00F0               	movwf	__Umul8_16@multiplicand
  7767     0D94  0824               	movf	___flmul@a,w
  7768     0D95  160A  158A  239D  120A  158A  	fcall	__Umul8_16
  7769     0D9A  0871               	movf	?__Umul8_16+1,w
  7770     0D9B  1283               	bcf	3,5	;RP0=0, select bank0
  7771     0D9C  1303               	bcf	3,6	;RP1=0, select bank0
  7772     0D9D  00B4               	movwf	___flmul@temp+1
  7773     0D9E  0870               	movf	?__Umul8_16,w
  7774     0D9F  00B3               	movwf	___flmul@temp
  7775     0DA0                     l2866:
  7776     0DA0  0833               	movf	___flmul@temp,w
  7777     0DA1  00F9               	movwf	??___flmul
  7778     0DA2  01FA               	clrf	??___flmul+1
  7779     0DA3  01FB               	clrf	??___flmul+2
  7780     0DA4  01FC               	clrf	??___flmul+3
  7781     0DA5  0879               	movf	??___flmul,w
  7782     0DA6  07A9               	addwf	___flmul@grs,f
  7783     0DA7  087A               	movf	??___flmul+1,w
  7784     0DA8  1103               	clrz
  7785     0DA9  1803               	skipnc
  7786     0DAA  3E01               	addlw	1
  7787     0DAB  1903               	skipnz
  7788     0DAC  2DAE               	goto	u3911
  7789     0DAD  07AA               	addwf	___flmul@grs+1,f
  7790     0DAE                     u3911:
  7791     0DAE  087B               	movf	??___flmul+2,w
  7792     0DAF  1103               	clrz
  7793     0DB0  1803               	skipnc
  7794     0DB1  3E01               	addlw	1
  7795     0DB2  1903               	skipnz
  7796     0DB3  2DB5               	goto	u3912
  7797     0DB4  07AB               	addwf	___flmul@grs+2,f
  7798     0DB5                     u3912:
  7799     0DB5  087C               	movf	??___flmul+3,w
  7800     0DB6  1103               	clrz
  7801     0DB7  1803               	skipnc
  7802     0DB8  3E01               	addlw	1
  7803     0DB9  1903               	skipnz
  7804     0DBA  2DBC               	goto	u3913
  7805     0DBB  07AC               	addwf	___flmul@grs+3,f
  7806     0DBC                     u3913:
  7807     0DBC                     l2868:
  7808     0DBC  0834               	movf	___flmul@temp+1,w
  7809     0DBD  00F9               	movwf	??___flmul
  7810     0DBE  01FA               	clrf	??___flmul+1
  7811     0DBF  01FB               	clrf	??___flmul+2
  7812     0DC0  01FC               	clrf	??___flmul+3
  7813     0DC1  0879               	movf	??___flmul,w
  7814     0DC2  07AF               	addwf	___flmul@prod,f
  7815     0DC3  087A               	movf	??___flmul+1,w
  7816     0DC4  1103               	clrz
  7817     0DC5  1803               	skipnc
  7818     0DC6  3E01               	addlw	1
  7819     0DC7  1903               	skipnz
  7820     0DC8  2DCA               	goto	u3921
  7821     0DC9  07B0               	addwf	___flmul@prod+1,f
  7822     0DCA                     u3921:
  7823     0DCA  087B               	movf	??___flmul+2,w
  7824     0DCB  1103               	clrz
  7825     0DCC  1803               	skipnc
  7826     0DCD  3E01               	addlw	1
  7827     0DCE  1903               	skipnz
  7828     0DCF  2DD1               	goto	u3922
  7829     0DD0  07B1               	addwf	___flmul@prod+2,f
  7830     0DD1                     u3922:
  7831     0DD1  087C               	movf	??___flmul+3,w
  7832     0DD2  1103               	clrz
  7833     0DD3  1803               	skipnc
  7834     0DD4  3E01               	addlw	1
  7835     0DD5  1903               	skipnz
  7836     0DD6  2DD8               	goto	u3923
  7837     0DD7  07B2               	addwf	___flmul@prod+3,f
  7838     0DD8                     u3923:
  7839     0DD8                     l2870:
  7840     0DD8  3008               	movlw	8
  7841     0DD9  00F9               	movwf	??___flmul
  7842     0DDA                     u3935:
  7843     0DDA  1003               	clrc
  7844     0DDB  0DA9               	rlf	___flmul@grs,f
  7845     0DDC  0DAA               	rlf	___flmul@grs+1,f
  7846     0DDD  0DAB               	rlf	___flmul@grs+2,f
  7847     0DDE  0DAC               	rlf	___flmul@grs+3,f
  7848     0DDF  0BF9               	decfsz	??___flmul,f
  7849     0DE0  2DDA               	goto	u3935
  7850     0DE1                     l2872:
  7851     0DE1  0821               	movf	___flmul@b+1,w
  7852     0DE2  00F0               	movwf	__Umul8_16@multiplicand
  7853     0DE3  0824               	movf	___flmul@a,w
  7854     0DE4  160A  158A  239D  120A  158A  	fcall	__Umul8_16
  7855     0DE9  0871               	movf	?__Umul8_16+1,w
  7856     0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  7857     0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  7858     0DEC  00B4               	movwf	___flmul@temp+1
  7859     0DED  0870               	movf	?__Umul8_16,w
  7860     0DEE  00B3               	movwf	___flmul@temp
  7861     0DEF                     l2874:
  7862     0DEF  0833               	movf	___flmul@temp,w
  7863     0DF0  00F9               	movwf	??___flmul
  7864     0DF1  0834               	movf	___flmul@temp+1,w
  7865     0DF2  00FA               	movwf	??___flmul+1
  7866     0DF3  01FB               	clrf	??___flmul+2
  7867     0DF4  01FC               	clrf	??___flmul+3
  7868     0DF5  0879               	movf	??___flmul,w
  7869     0DF6  07A9               	addwf	___flmul@grs,f
  7870     0DF7  087A               	movf	??___flmul+1,w
  7871     0DF8  1103               	clrz
  7872     0DF9  1803               	skipnc
  7873     0DFA  3E01               	addlw	1
  7874     0DFB  1903               	skipnz
  7875     0DFC  2DFE               	goto	u3941
  7876     0DFD  07AA               	addwf	___flmul@grs+1,f
  7877     0DFE                     u3941:
  7878     0DFE  087B               	movf	??___flmul+2,w
  7879     0DFF  1103               	clrz
  7880     0E00  1803               	skipnc
  7881     0E01  3E01               	addlw	1
  7882     0E02  1903               	skipnz
  7883     0E03  2E05               	goto	u3942
  7884     0E04  07AB               	addwf	___flmul@grs+2,f
  7885     0E05                     u3942:
  7886     0E05  087C               	movf	??___flmul+3,w
  7887     0E06  1103               	clrz
  7888     0E07  1803               	skipnc
  7889     0E08  3E01               	addlw	1
  7890     0E09  1903               	skipnz
  7891     0E0A  2E0C               	goto	u3943
  7892     0E0B  07AC               	addwf	___flmul@grs+3,f
  7893     0E0C                     u3943:
  7894     0E0C                     l2876:
  7895     0E0C  0820               	movf	___flmul@b,w
  7896     0E0D  00F0               	movwf	__Umul8_16@multiplicand
  7897     0E0E  0825               	movf	___flmul@a+1,w
  7898     0E0F  160A  158A  239D  120A  158A  	fcall	__Umul8_16
  7899     0E14  0871               	movf	?__Umul8_16+1,w
  7900     0E15  1283               	bcf	3,5	;RP0=0, select bank0
  7901     0E16  1303               	bcf	3,6	;RP1=0, select bank0
  7902     0E17  00B4               	movwf	___flmul@temp+1
  7903     0E18  0870               	movf	?__Umul8_16,w
  7904     0E19  00B3               	movwf	___flmul@temp
  7905     0E1A                     l2878:
  7906     0E1A  0833               	movf	___flmul@temp,w
  7907     0E1B  00F9               	movwf	??___flmul
  7908     0E1C  0834               	movf	___flmul@temp+1,w
  7909     0E1D  00FA               	movwf	??___flmul+1
  7910     0E1E  01FB               	clrf	??___flmul+2
  7911     0E1F  01FC               	clrf	??___flmul+3
  7912     0E20  0879               	movf	??___flmul,w
  7913     0E21  07A9               	addwf	___flmul@grs,f
  7914     0E22  087A               	movf	??___flmul+1,w
  7915     0E23  1103               	clrz
  7916     0E24  1803               	skipnc
  7917     0E25  3E01               	addlw	1
  7918     0E26  1903               	skipnz
  7919     0E27  2E29               	goto	u3951
  7920     0E28  07AA               	addwf	___flmul@grs+1,f
  7921     0E29                     u3951:
  7922     0E29  087B               	movf	??___flmul+2,w
  7923     0E2A  1103               	clrz
  7924     0E2B  1803               	skipnc
  7925     0E2C  3E01               	addlw	1
  7926     0E2D  1903               	skipnz
  7927     0E2E  2E30               	goto	u3952
  7928     0E2F  07AB               	addwf	___flmul@grs+2,f
  7929     0E30                     u3952:
  7930     0E30  087C               	movf	??___flmul+3,w
  7931     0E31  1103               	clrz
  7932     0E32  1803               	skipnc
  7933     0E33  3E01               	addlw	1
  7934     0E34  1903               	skipnz
  7935     0E35  2E37               	goto	u3953
  7936     0E36  07AC               	addwf	___flmul@grs+3,f
  7937     0E37                     u3953:
  7938     0E37                     l2880:
  7939     0E37  3008               	movlw	8
  7940     0E38  00F9               	movwf	??___flmul
  7941     0E39                     u3965:
  7942     0E39  1003               	clrc
  7943     0E3A  0DA9               	rlf	___flmul@grs,f
  7944     0E3B  0DAA               	rlf	___flmul@grs+1,f
  7945     0E3C  0DAB               	rlf	___flmul@grs+2,f
  7946     0E3D  0DAC               	rlf	___flmul@grs+3,f
  7947     0E3E  0BF9               	decfsz	??___flmul,f
  7948     0E3F  2E39               	goto	u3965
  7949     0E40  0820               	movf	___flmul@b,w
  7950     0E41  00F0               	movwf	__Umul8_16@multiplicand
  7951     0E42  0824               	movf	___flmul@a,w
  7952     0E43  160A  158A  239D  120A  158A  	fcall	__Umul8_16
  7953     0E48  0871               	movf	?__Umul8_16+1,w
  7954     0E49  1283               	bcf	3,5	;RP0=0, select bank0
  7955     0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  7956     0E4B  00B4               	movwf	___flmul@temp+1
  7957     0E4C  0870               	movf	?__Umul8_16,w
  7958     0E4D  00B3               	movwf	___flmul@temp
  7959     0E4E                     l2882:
  7960     0E4E  0833               	movf	___flmul@temp,w
  7961     0E4F  00F9               	movwf	??___flmul
  7962     0E50  0834               	movf	___flmul@temp+1,w
  7963     0E51  00FA               	movwf	??___flmul+1
  7964     0E52  01FB               	clrf	??___flmul+2
  7965     0E53  01FC               	clrf	??___flmul+3
  7966     0E54  0879               	movf	??___flmul,w
  7967     0E55  07A9               	addwf	___flmul@grs,f
  7968     0E56  087A               	movf	??___flmul+1,w
  7969     0E57  1103               	clrz
  7970     0E58  1803               	skipnc
  7971     0E59  3E01               	addlw	1
  7972     0E5A  1903               	skipnz
  7973     0E5B  2E5D               	goto	u3971
  7974     0E5C  07AA               	addwf	___flmul@grs+1,f
  7975     0E5D                     u3971:
  7976     0E5D  087B               	movf	??___flmul+2,w
  7977     0E5E  1103               	clrz
  7978     0E5F  1803               	skipnc
  7979     0E60  3E01               	addlw	1
  7980     0E61  1903               	skipnz
  7981     0E62  2E64               	goto	u3972
  7982     0E63  07AB               	addwf	___flmul@grs+2,f
  7983     0E64                     u3972:
  7984     0E64  087C               	movf	??___flmul+3,w
  7985     0E65  1103               	clrz
  7986     0E66  1803               	skipnc
  7987     0E67  3E01               	addlw	1
  7988     0E68  1903               	skipnz
  7989     0E69  2E6B               	goto	u3973
  7990     0E6A  07AC               	addwf	___flmul@grs+3,f
  7991     0E6B                     u3973:
  7992     0E6B                     l2884:
  7993     0E6B  0821               	movf	___flmul@b+1,w
  7994     0E6C  00F0               	movwf	__Umul8_16@multiplicand
  7995     0E6D  0826               	movf	___flmul@a+2,w
  7996     0E6E  160A  158A  239D  120A  158A  	fcall	__Umul8_16
  7997     0E73  0871               	movf	?__Umul8_16+1,w
  7998     0E74  1283               	bcf	3,5	;RP0=0, select bank0
  7999     0E75  1303               	bcf	3,6	;RP1=0, select bank0
  8000     0E76  00B4               	movwf	___flmul@temp+1
  8001     0E77  0870               	movf	?__Umul8_16,w
  8002     0E78  00B3               	movwf	___flmul@temp
  8003     0E79  0833               	movf	___flmul@temp,w
  8004     0E7A  00F9               	movwf	??___flmul
  8005     0E7B  0834               	movf	___flmul@temp+1,w
  8006     0E7C  00FA               	movwf	??___flmul+1
  8007     0E7D  01FB               	clrf	??___flmul+2
  8008     0E7E  01FC               	clrf	??___flmul+3
  8009     0E7F  0879               	movf	??___flmul,w
  8010     0E80  07AF               	addwf	___flmul@prod,f
  8011     0E81  087A               	movf	??___flmul+1,w
  8012     0E82  1103               	clrz
  8013     0E83  1803               	skipnc
  8014     0E84  3E01               	addlw	1
  8015     0E85  1903               	skipnz
  8016     0E86  2E88               	goto	u3981
  8017     0E87  07B0               	addwf	___flmul@prod+1,f
  8018     0E88                     u3981:
  8019     0E88  087B               	movf	??___flmul+2,w
  8020     0E89  1103               	clrz
  8021     0E8A  1803               	skipnc
  8022     0E8B  3E01               	addlw	1
  8023     0E8C  1903               	skipnz
  8024     0E8D  2E8F               	goto	u3982
  8025     0E8E  07B1               	addwf	___flmul@prod+2,f
  8026     0E8F                     u3982:
  8027     0E8F  087C               	movf	??___flmul+3,w
  8028     0E90  1103               	clrz
  8029     0E91  1803               	skipnc
  8030     0E92  3E01               	addlw	1
  8031     0E93  1903               	skipnz
  8032     0E94  2E96               	goto	u3983
  8033     0E95  07B2               	addwf	___flmul@prod+3,f
  8034     0E96                     u3983:
  8035     0E96                     l2886:
  8036     0E96  0822               	movf	___flmul@b+2,w
  8037     0E97  00F0               	movwf	__Umul8_16@multiplicand
  8038     0E98  0825               	movf	___flmul@a+1,w
  8039     0E99  160A  158A  239D  120A  158A  	fcall	__Umul8_16
  8040     0E9E  0871               	movf	?__Umul8_16+1,w
  8041     0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  8042     0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  8043     0EA1  00B4               	movwf	___flmul@temp+1
  8044     0EA2  0870               	movf	?__Umul8_16,w
  8045     0EA3  00B3               	movwf	___flmul@temp
  8046     0EA4                     l2888:
  8047     0EA4  0833               	movf	___flmul@temp,w
  8048     0EA5  00F9               	movwf	??___flmul
  8049     0EA6  0834               	movf	___flmul@temp+1,w
  8050     0EA7  00FA               	movwf	??___flmul+1
  8051     0EA8  01FB               	clrf	??___flmul+2
  8052     0EA9  01FC               	clrf	??___flmul+3
  8053     0EAA  0879               	movf	??___flmul,w
  8054     0EAB  07AF               	addwf	___flmul@prod,f
  8055     0EAC  087A               	movf	??___flmul+1,w
  8056     0EAD  1103               	clrz
  8057     0EAE  1803               	skipnc
  8058     0EAF  3E01               	addlw	1
  8059     0EB0  1903               	skipnz
  8060     0EB1  2EB3               	goto	u3991
  8061     0EB2  07B0               	addwf	___flmul@prod+1,f
  8062     0EB3                     u3991:
  8063     0EB3  087B               	movf	??___flmul+2,w
  8064     0EB4  1103               	clrz
  8065     0EB5  1803               	skipnc
  8066     0EB6  3E01               	addlw	1
  8067     0EB7  1903               	skipnz
  8068     0EB8  2EBA               	goto	u3992
  8069     0EB9  07B1               	addwf	___flmul@prod+2,f
  8070     0EBA                     u3992:
  8071     0EBA  087C               	movf	??___flmul+3,w
  8072     0EBB  1103               	clrz
  8073     0EBC  1803               	skipnc
  8074     0EBD  3E01               	addlw	1
  8075     0EBE  1903               	skipnz
  8076     0EBF  2EC1               	goto	u3993
  8077     0EC0  07B2               	addwf	___flmul@prod+3,f
  8078     0EC1                     u3993:
  8079     0EC1  0822               	movf	___flmul@b+2,w
  8080     0EC2  00F0               	movwf	__Umul8_16@multiplicand
  8081     0EC3  0826               	movf	___flmul@a+2,w
  8082     0EC4  160A  158A  239D  120A  158A  	fcall	__Umul8_16
  8083     0EC9  0871               	movf	?__Umul8_16+1,w
  8084     0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  8085     0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  8086     0ECC  00B4               	movwf	___flmul@temp+1
  8087     0ECD  0870               	movf	?__Umul8_16,w
  8088     0ECE  00B3               	movwf	___flmul@temp
  8089     0ECF                     l2890:
  8090     0ECF  0833               	movf	___flmul@temp,w
  8091     0ED0  00F9               	movwf	??___flmul
  8092     0ED1  0834               	movf	___flmul@temp+1,w
  8093     0ED2  00FA               	movwf	??___flmul+1
  8094     0ED3  01FB               	clrf	??___flmul+2
  8095     0ED4  01FC               	clrf	??___flmul+3
  8096     0ED5  3008               	movlw	8
  8097     0ED6                     u4005:
  8098     0ED6  1003               	clrc
  8099     0ED7  0DF9               	rlf	??___flmul,f
  8100     0ED8  0DFA               	rlf	??___flmul+1,f
  8101     0ED9  0DFB               	rlf	??___flmul+2,f
  8102     0EDA  0DFC               	rlf	??___flmul+3,f
  8103     0EDB                     u4000:
  8104     0EDB  3EFF               	addlw	-1
  8105     0EDC  1D03               	skipz
  8106     0EDD  2ED6               	goto	u4005
  8107     0EDE  0879               	movf	??___flmul,w
  8108     0EDF  07AF               	addwf	___flmul@prod,f
  8109     0EE0  087A               	movf	??___flmul+1,w
  8110     0EE1  1103               	clrz
  8111     0EE2  1803               	skipnc
  8112     0EE3  3E01               	addlw	1
  8113     0EE4  1903               	skipnz
  8114     0EE5  2EE7               	goto	u4011
  8115     0EE6  07B0               	addwf	___flmul@prod+1,f
  8116     0EE7                     u4011:
  8117     0EE7  087B               	movf	??___flmul+2,w
  8118     0EE8  1103               	clrz
  8119     0EE9  1803               	skipnc
  8120     0EEA  3E01               	addlw	1
  8121     0EEB  1903               	skipnz
  8122     0EEC  2EEE               	goto	u4012
  8123     0EED  07B1               	addwf	___flmul@prod+2,f
  8124     0EEE                     u4012:
  8125     0EEE  087C               	movf	??___flmul+3,w
  8126     0EEF  1103               	clrz
  8127     0EF0  1803               	skipnc
  8128     0EF1  3E01               	addlw	1
  8129     0EF2  1903               	skipnz
  8130     0EF3  2EF5               	goto	u4013
  8131     0EF4  07B2               	addwf	___flmul@prod+3,f
  8132     0EF5                     u4013:
  8133     0EF5                     l2892:
  8134     0EF5  0829               	movf	___flmul@grs,w
  8135     0EF6  00F9               	movwf	??___flmul
  8136     0EF7  082A               	movf	___flmul@grs+1,w
  8137     0EF8  00FA               	movwf	??___flmul+1
  8138     0EF9  082B               	movf	___flmul@grs+2,w
  8139     0EFA  00FB               	movwf	??___flmul+2
  8140     0EFB  082C               	movf	___flmul@grs+3,w
  8141     0EFC  00FC               	movwf	??___flmul+3
  8142     0EFD  3018               	movlw	24
  8143     0EFE                     u4025:
  8144     0EFE  1003               	clrc
  8145     0EFF  0CFC               	rrf	??___flmul+3,f
  8146     0F00  0CFB               	rrf	??___flmul+2,f
  8147     0F01  0CFA               	rrf	??___flmul+1,f
  8148     0F02  0CF9               	rrf	??___flmul,f
  8149     0F03                     u4020:
  8150     0F03  3EFF               	addlw	-1
  8151     0F04  1D03               	skipz
  8152     0F05  2EFE               	goto	u4025
  8153     0F06  0879               	movf	??___flmul,w
  8154     0F07  07AF               	addwf	___flmul@prod,f
  8155     0F08  087A               	movf	??___flmul+1,w
  8156     0F09  1103               	clrz
  8157     0F0A  1803               	skipnc
  8158     0F0B  3E01               	addlw	1
  8159     0F0C  1903               	skipnz
  8160     0F0D  2F0F               	goto	u4031
  8161     0F0E  07B0               	addwf	___flmul@prod+1,f
  8162     0F0F                     u4031:
  8163     0F0F  087B               	movf	??___flmul+2,w
  8164     0F10  1103               	clrz
  8165     0F11  1803               	skipnc
  8166     0F12  3E01               	addlw	1
  8167     0F13  1903               	skipnz
  8168     0F14  2F16               	goto	u4032
  8169     0F15  07B1               	addwf	___flmul@prod+2,f
  8170     0F16                     u4032:
  8171     0F16  087C               	movf	??___flmul+3,w
  8172     0F17  1103               	clrz
  8173     0F18  1803               	skipnc
  8174     0F19  3E01               	addlw	1
  8175     0F1A  1903               	skipnz
  8176     0F1B  2F1D               	goto	u4033
  8177     0F1C  07B2               	addwf	___flmul@prod+3,f
  8178     0F1D                     u4033:
  8179     0F1D                     l2894:
  8180     0F1D  3008               	movlw	8
  8181     0F1E  00F9               	movwf	??___flmul
  8182     0F1F                     u4045:
  8183     0F1F  1003               	clrc
  8184     0F20  0DA9               	rlf	___flmul@grs,f
  8185     0F21  0DAA               	rlf	___flmul@grs+1,f
  8186     0F22  0DAB               	rlf	___flmul@grs+2,f
  8187     0F23  0DAC               	rlf	___flmul@grs+3,f
  8188     0F24  0BF9               	decfsz	??___flmul,f
  8189     0F25  2F1F               	goto	u4045
  8190     0F26                     l2896:
  8191     0F26  082E               	movf	___flmul@bexp,w
  8192     0F27  072D               	addwf	___flmul@aexp,w
  8193     0F28  00F9               	movwf	??___flmul
  8194     0F29  01FA               	clrf	??___flmul+1
  8195     0F2A  0DFA               	rlf	??___flmul+1,f
  8196     0F2B  0879               	movf	??___flmul,w
  8197     0F2C  3E82               	addlw	130
  8198     0F2D  00B3               	movwf	___flmul@temp
  8199     0F2E  087A               	movf	??___flmul+1,w
  8200     0F2F  1803               	skipnc
  8201     0F30  3E01               	addlw	1
  8202     0F31  3EFF               	addlw	255
  8203     0F32  00B4               	movwf	___flmul@temp+1
  8204     0F33  2F51               	goto	l2908
  8205     0F34                     l2898:
  8206     0F34  3001               	movlw	1
  8207     0F35  00F9               	movwf	??___flmul
  8208     0F36                     u4055:
  8209     0F36  1003               	clrc
  8210     0F37  0DAF               	rlf	___flmul@prod,f
  8211     0F38  0DB0               	rlf	___flmul@prod+1,f
  8212     0F39  0DB1               	rlf	___flmul@prod+2,f
  8213     0F3A  0DB2               	rlf	___flmul@prod+3,f
  8214     0F3B  0BF9               	decfsz	??___flmul,f
  8215     0F3C  2F36               	goto	u4055
  8216     0F3D                     l2900:
  8217     0F3D  1FAC               	btfss	___flmul@grs+3,7
  8218     0F3E  2F40               	goto	u4061
  8219     0F3F  2F41               	goto	u4060
  8220     0F40                     u4061:
  8221     0F40  2F42               	goto	l2904
  8222     0F41                     u4060:
  8223     0F41                     l2902:
  8224     0F41  142F               	bsf	___flmul@prod,0
  8225     0F42                     l2904:
  8226     0F42  3001               	movlw	1
  8227     0F43  00F9               	movwf	??___flmul
  8228     0F44                     u4075:
  8229     0F44  1003               	clrc
  8230     0F45  0DA9               	rlf	___flmul@grs,f
  8231     0F46  0DAA               	rlf	___flmul@grs+1,f
  8232     0F47  0DAB               	rlf	___flmul@grs+2,f
  8233     0F48  0DAC               	rlf	___flmul@grs+3,f
  8234     0F49  0BF9               	decfsz	??___flmul,f
  8235     0F4A  2F44               	goto	u4075
  8236     0F4B                     l2906:
  8237     0F4B  30FF               	movlw	255
  8238     0F4C  07B3               	addwf	___flmul@temp,f
  8239     0F4D  1803               	skipnc
  8240     0F4E  0AB4               	incf	___flmul@temp+1,f
  8241     0F4F  30FF               	movlw	255
  8242     0F50  07B4               	addwf	___flmul@temp+1,f
  8243     0F51                     l2908:
  8244     0F51  1FB1               	btfss	___flmul@prod+2,7
  8245     0F52  2F54               	goto	u4081
  8246     0F53  2F55               	goto	u4080
  8247     0F54                     u4081:
  8248     0F54  2F34               	goto	l2898
  8249     0F55                     u4080:
  8250     0F55                     l2910:
  8251     0F55  01AD               	clrf	___flmul@aexp
  8252     0F56                     l2912:
  8253     0F56  1FAC               	btfss	___flmul@grs+3,7
  8254     0F57  2F59               	goto	u4091
  8255     0F58  2F5A               	goto	u4090
  8256     0F59                     u4091:
  8257     0F59  2F76               	goto	l2920
  8258     0F5A                     u4090:
  8259     0F5A                     l2914:
  8260     0F5A  30FF               	movlw	255
  8261     0F5B  0529               	andwf	___flmul@grs,w
  8262     0F5C  00F9               	movwf	??___flmul
  8263     0F5D  30FF               	movlw	255
  8264     0F5E  052A               	andwf	___flmul@grs+1,w
  8265     0F5F  00FA               	movwf	??___flmul+1
  8266     0F60  30FF               	movlw	255
  8267     0F61  052B               	andwf	___flmul@grs+2,w
  8268     0F62  00FB               	movwf	??___flmul+2
  8269     0F63  307F               	movlw	127
  8270     0F64  052C               	andwf	___flmul@grs+3,w
  8271     0F65  00FC               	movwf	??___flmul+3
  8272     0F66  087C               	movf	??___flmul+3,w
  8273     0F67  047B               	iorwf	??___flmul+2,w
  8274     0F68  047A               	iorwf	??___flmul+1,w
  8275     0F69  0479               	iorwf	??___flmul,w
  8276     0F6A  1903               	skipnz
  8277     0F6B  2F6D               	goto	u4101
  8278     0F6C  2F6E               	goto	u4100
  8279     0F6D                     u4101:
  8280     0F6D  2F71               	goto	l635
  8281     0F6E                     u4100:
  8282     0F6E                     l2916:
  8283     0F6E  3001               	movlw	1
  8284     0F6F  00AD               	movwf	___flmul@aexp
  8285     0F70  2F76               	goto	l2920
  8286     0F71                     l635:
  8287     0F71  1C2F               	btfss	___flmul@prod,0
  8288     0F72  2F74               	goto	u4111
  8289     0F73  2F75               	goto	u4110
  8290     0F74                     u4111:
  8291     0F74  2F76               	goto	l2920
  8292     0F75                     u4110:
  8293     0F75  2F6E               	goto	l2916
  8294     0F76                     l2920:
  8295     0F76  082D               	movf	___flmul@aexp,w
  8296     0F77  1903               	btfsc	3,2
  8297     0F78  2F7A               	goto	u4121
  8298     0F79  2F7B               	goto	u4120
  8299     0F7A                     u4121:
  8300     0F7A  2FAC               	goto	l2930
  8301     0F7B                     u4120:
  8302     0F7B                     l2922:
  8303     0F7B  3001               	movlw	1
  8304     0F7C  07AF               	addwf	___flmul@prod,f
  8305     0F7D  3000               	movlw	0
  8306     0F7E  1803               	skipnc
  8307     0F7F  3001               	movlw	1
  8308     0F80  07B0               	addwf	___flmul@prod+1,f
  8309     0F81  3000               	movlw	0
  8310     0F82  1803               	skipnc
  8311     0F83  3001               	movlw	1
  8312     0F84  07B1               	addwf	___flmul@prod+2,f
  8313     0F85  3000               	movlw	0
  8314     0F86  1803               	skipnc
  8315     0F87  3001               	movlw	1
  8316     0F88  07B2               	addwf	___flmul@prod+3,f
  8317     0F89                     l2924:
  8318     0F89  1C32               	btfss	___flmul@prod+3,0
  8319     0F8A  2F8C               	goto	u4131
  8320     0F8B  2F8D               	goto	u4130
  8321     0F8C                     u4131:
  8322     0F8C  2FAC               	goto	l2930
  8323     0F8D                     u4130:
  8324     0F8D                     l2926:
  8325     0F8D  082F               	movf	___flmul@prod,w
  8326     0F8E  00F9               	movwf	??___flmul
  8327     0F8F  0830               	movf	___flmul@prod+1,w
  8328     0F90  00FA               	movwf	??___flmul+1
  8329     0F91  0831               	movf	___flmul@prod+2,w
  8330     0F92  00FB               	movwf	??___flmul+2
  8331     0F93  0832               	movf	___flmul@prod+3,w
  8332     0F94  00FC               	movwf	??___flmul+3
  8333     0F95  3001               	movlw	1
  8334     0F96  00FD               	movwf	??___flmul+4
  8335     0F97                     u4145:
  8336     0F97  0D7C               	rlf	??___flmul+3,w
  8337     0F98  0CFC               	rrf	??___flmul+3,f
  8338     0F99  0CFB               	rrf	??___flmul+2,f
  8339     0F9A  0CFA               	rrf	??___flmul+1,f
  8340     0F9B  0CF9               	rrf	??___flmul,f
  8341     0F9C                     u4140:
  8342     0F9C  0BFD               	decfsz	??___flmul+4,f
  8343     0F9D  2F97               	goto	u4145
  8344     0F9E  087C               	movf	??___flmul+3,w
  8345     0F9F  00B2               	movwf	___flmul@prod+3
  8346     0FA0  087B               	movf	??___flmul+2,w
  8347     0FA1  00B1               	movwf	___flmul@prod+2
  8348     0FA2  087A               	movf	??___flmul+1,w
  8349     0FA3  00B0               	movwf	___flmul@prod+1
  8350     0FA4  0879               	movf	??___flmul,w
  8351     0FA5  00AF               	movwf	___flmul@prod
  8352     0FA6                     l2928:
  8353     0FA6  3001               	movlw	1
  8354     0FA7  07B3               	addwf	___flmul@temp,f
  8355     0FA8  1803               	skipnc
  8356     0FA9  0AB4               	incf	___flmul@temp+1,f
  8357     0FAA  3000               	movlw	0
  8358     0FAB  07B4               	addwf	___flmul@temp+1,f
  8359     0FAC                     l2930:
  8360     0FAC  0834               	movf	___flmul@temp+1,w
  8361     0FAD  3A80               	xorlw	128
  8362     0FAE  00FF               	movwf	btemp+1
  8363     0FAF  3080               	movlw	128
  8364     0FB0  027F               	subwf	btemp+1,w
  8365     0FB1  1D03               	skipz
  8366     0FB2  2FB5               	goto	u4155
  8367     0FB3  30FF               	movlw	255
  8368     0FB4  0233               	subwf	___flmul@temp,w
  8369     0FB5                     u4155:
  8370     0FB5  1C03               	skipc
  8371     0FB6  2FB8               	goto	u4151
  8372     0FB7  2FB9               	goto	u4150
  8373     0FB8                     u4151:
  8374     0FB8  2FC4               	goto	l2934
  8375     0FB9                     u4150:
  8376     0FB9                     l2932:
  8377     0FB9  307F               	movlw	127
  8378     0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  8379     0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  8380     0FBC  00B2               	movwf	___flmul@prod+3
  8381     0FBD  3080               	movlw	128
  8382     0FBE  00B1               	movwf	___flmul@prod+2
  8383     0FBF  3000               	movlw	0
  8384     0FC0  00B0               	movwf	___flmul@prod+1
  8385     0FC1  3000               	movlw	0
  8386     0FC2  00AF               	movwf	___flmul@prod
  8387     0FC3  2FF5               	goto	l641
  8388     0FC4                     l2934:
  8389     0FC4  1283               	bcf	3,5	;RP0=0, select bank0
  8390     0FC5  1303               	bcf	3,6	;RP1=0, select bank0
  8391     0FC6  0834               	movf	___flmul@temp+1,w
  8392     0FC7  3A80               	xorlw	128
  8393     0FC8  00FF               	movwf	btemp+1
  8394     0FC9  3080               	movlw	128
  8395     0FCA  027F               	subwf	btemp+1,w
  8396     0FCB  1D03               	skipz
  8397     0FCC  2FCF               	goto	u4165
  8398     0FCD  3001               	movlw	1
  8399     0FCE  0233               	subwf	___flmul@temp,w
  8400     0FCF                     u4165:
  8401     0FCF  1803               	skipnc
  8402     0FD0  2FD2               	goto	u4161
  8403     0FD1  2FD3               	goto	u4160
  8404     0FD2                     u4161:
  8405     0FD2  2FDF               	goto	l2940
  8406     0FD3                     u4160:
  8407     0FD3                     l2936:
  8408     0FD3  3000               	movlw	0
  8409     0FD4  1283               	bcf	3,5	;RP0=0, select bank0
  8410     0FD5  1303               	bcf	3,6	;RP1=0, select bank0
  8411     0FD6  00B2               	movwf	___flmul@prod+3
  8412     0FD7  3000               	movlw	0
  8413     0FD8  00B1               	movwf	___flmul@prod+2
  8414     0FD9  3000               	movlw	0
  8415     0FDA  00B0               	movwf	___flmul@prod+1
  8416     0FDB  3000               	movlw	0
  8417     0FDC  00AF               	movwf	___flmul@prod
  8418     0FDD                     l2938:
  8419     0FDD  01A8               	clrf	___flmul@sign
  8420     0FDE  2FF5               	goto	l641
  8421     0FDF                     l2940:
  8422     0FDF  1283               	bcf	3,5	;RP0=0, select bank0
  8423     0FE0  1303               	bcf	3,6	;RP1=0, select bank0
  8424     0FE1  0833               	movf	___flmul@temp,w
  8425     0FE2  00AE               	movwf	___flmul@bexp
  8426     0FE3  30FF               	movlw	255
  8427     0FE4  05AF               	andwf	___flmul@prod,f
  8428     0FE5  30FF               	movlw	255
  8429     0FE6  05B0               	andwf	___flmul@prod+1,f
  8430     0FE7  307F               	movlw	127
  8431     0FE8  05B1               	andwf	___flmul@prod+2,f
  8432     0FE9  3000               	movlw	0
  8433     0FEA  05B2               	andwf	___flmul@prod+3,f
  8434     0FEB                     l2942:
  8435     0FEB  1C2E               	btfss	___flmul@bexp,0
  8436     0FEC  2FEE               	goto	u4171
  8437     0FED  2FEF               	goto	u4170
  8438     0FEE                     u4171:
  8439     0FEE  2FF0               	goto	l2946
  8440     0FEF                     u4170:
  8441     0FEF                     l2944:
  8442     0FEF  17B1               	bsf	___flmul@prod+2,7
  8443     0FF0                     l2946:
  8444     0FF0  082E               	movf	___flmul@bexp,w
  8445     0FF1  00F9               	movwf	??___flmul
  8446     0FF2  1003               	clrc
  8447     0FF3  0C79               	rrf	??___flmul,w
  8448     0FF4  00B2               	movwf	___flmul@prod+3
  8449     0FF5                     l641:
  8450     0FF5  0828               	movf	___flmul@sign,w
  8451     0FF6  04B2               	iorwf	___flmul@prod+3,f
  8452     0FF7                     l2948:
  8453     0FF7  0832               	movf	___flmul@prod+3,w
  8454     0FF8  00A3               	movwf	?___flmul+3
  8455     0FF9  0831               	movf	___flmul@prod+2,w
  8456     0FFA  00A2               	movwf	?___flmul+2
  8457     0FFB  0830               	movf	___flmul@prod+1,w
  8458     0FFC  00A1               	movwf	?___flmul+1
  8459     0FFD  082F               	movf	___flmul@prod,w
  8460     0FFE  00A0               	movwf	?___flmul
  8461     0FFF                     l629:
  8462     0FFF  0008               	return
  8463     1000                     __end_of___flmul:
  8464                           
  8465                           	psect	text28
  8466     1B9D                     __ptext28:	
  8467 ;; *************** function __Umul8_16 *****************
  8468 ;; Defined at:
  8469 ;;		line 4 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\Umul8_16.c"
  8470 ;; Parameters:    Size  Location     Type
  8471 ;;  multiplier      1    wreg     unsigned char 
  8472 ;;  multiplicand    1    0[COMMON] unsigned char 
  8473 ;; Auto vars:     Size  Location     Type
  8474 ;;  multiplier      1    8[COMMON] unsigned char 
  8475 ;;  word_mpld       2    6[COMMON] unsigned short 
  8476 ;;  product         2    4[COMMON] unsigned short 
  8477 ;; Return value:  Size  Location     Type
  8478 ;;                  2    0[COMMON] unsigned int 
  8479 ;; Registers used:
  8480 ;;		wreg, status,2, status,0
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 0/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8486 ;;      Params:         2       0       0       0       0
  8487 ;;      Locals:         5       0       0       0       0
  8488 ;;      Temps:          2       0       0       0       0
  8489 ;;      Totals:         9       0       0       0       0
  8490 ;;Total ram usage:        9 bytes
  8491 ;; Hardware stack levels used: 1
  8492 ;; This function calls:
  8493 ;;		Nothing
  8494 ;; This function is called by:
  8495 ;;		___flmul
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499     1B9D                     __Umul8_16:	
  8500                           ;psect for function __Umul8_16
  8501                           
  8502                           
  8503                           ;incstack = 0
  8504                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8505                           ;__Umul8_16@multiplier stored from wreg
  8506     1B9D  00F8               	movwf	__Umul8_16@multiplier
  8507     1B9E                     l2558:
  8508     1B9E  01F4               	clrf	__Umul8_16@product
  8509     1B9F  01F5               	clrf	__Umul8_16@product+1
  8510     1BA0                     l2560:
  8511     1BA0  0870               	movf	__Umul8_16@multiplicand,w
  8512     1BA1  00F2               	movwf	??__Umul8_16
  8513     1BA2  01F3               	clrf	??__Umul8_16+1
  8514     1BA3  0872               	movf	??__Umul8_16,w
  8515     1BA4  00F6               	movwf	__Umul8_16@word_mpld
  8516     1BA5  0873               	movf	??__Umul8_16+1,w
  8517     1BA6  00F7               	movwf	__Umul8_16@word_mpld+1
  8518     1BA7                     l2562:
  8519     1BA7  1C78               	btfss	__Umul8_16@multiplier,0
  8520     1BA8  2BAA               	goto	u3251
  8521     1BA9  2BAB               	goto	u3250
  8522     1BAA                     u3251:
  8523     1BAA  2BB1               	goto	l648
  8524     1BAB                     u3250:
  8525     1BAB                     l2564:
  8526     1BAB  0876               	movf	__Umul8_16@word_mpld,w
  8527     1BAC  07F4               	addwf	__Umul8_16@product,f
  8528     1BAD  1803               	skipnc
  8529     1BAE  0AF5               	incf	__Umul8_16@product+1,f
  8530     1BAF  0877               	movf	__Umul8_16@word_mpld+1,w
  8531     1BB0  07F5               	addwf	__Umul8_16@product+1,f
  8532     1BB1                     l648:
  8533     1BB1  3001               	movlw	1
  8534     1BB2                     u3265:
  8535     1BB2  1003               	clrc
  8536     1BB3  0DF6               	rlf	__Umul8_16@word_mpld,f
  8537     1BB4  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  8538     1BB5  3EFF               	addlw	-1
  8539     1BB6  1D03               	skipz
  8540     1BB7  2BB2               	goto	u3265
  8541     1BB8  1003               	clrc
  8542     1BB9  0CF8               	rrf	__Umul8_16@multiplier,f
  8543     1BBA                     l2566:
  8544     1BBA  0878               	movf	__Umul8_16@multiplier,w
  8545     1BBB  1D03               	btfss	3,2
  8546     1BBC  2BBE               	goto	u3271
  8547     1BBD  2BBF               	goto	u3270
  8548     1BBE                     u3271:
  8549     1BBE  2BA7               	goto	l2562
  8550     1BBF                     u3270:
  8551     1BBF                     l2568:
  8552     1BBF  0875               	movf	__Umul8_16@product+1,w
  8553     1BC0  00F1               	movwf	?__Umul8_16+1
  8554     1BC1  0874               	movf	__Umul8_16@product,w
  8555     1BC2  00F0               	movwf	?__Umul8_16
  8556     1BC3                     l650:
  8557     1BC3  0008               	return
  8558     1BC4                     __end_of__Umul8_16:
  8559                           
  8560                           	psect	text29
  8561     0007                     __ptext29:	
  8562 ;; *************** function ___flge *****************
  8563 ;; Defined at:
  8564 ;;		line 4 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\flge.c"
  8565 ;; Parameters:    Size  Location     Type
  8566 ;;  ff1             4   21[BANK0 ] unsigned int 
  8567 ;;  ff2             4   25[BANK0 ] unsigned int 
  8568 ;; Auto vars:     Size  Location     Type
  8569 ;;		None
  8570 ;; Return value:  Size  Location     Type
  8571 ;;		None               void
  8572 ;; Registers used:
  8573 ;;		wreg, status,2, status,0
  8574 ;; Tracked objects:
  8575 ;;		On entry : 0/0
  8576 ;;		On exit  : 0/0
  8577 ;;		Unchanged: 0/0
  8578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8579 ;;      Params:         0       8       0       0       0
  8580 ;;      Locals:         0       0       0       0       0
  8581 ;;      Temps:          0       4       0       0       0
  8582 ;;      Totals:         0      12       0       0       0
  8583 ;;Total ram usage:       12 bytes
  8584 ;; Hardware stack levels used: 1
  8585 ;; This function calls:
  8586 ;;		Nothing
  8587 ;; This function is called by:
  8588 ;;		_efgtoa
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592     0007                     ___flge:	
  8593                           ;psect for function ___flge
  8594                           
  8595     0007                     l2596:	
  8596                           ;incstack = 0
  8597                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8598                           
  8599     0007  3000               	movlw	0
  8600     0008  1283               	bcf	3,5	;RP0=0, select bank0
  8601     0009  1303               	bcf	3,6	;RP1=0, select bank0
  8602     000A  0535               	andwf	___flge@ff1,w
  8603     000B  00BD               	movwf	??___flge
  8604     000C  3000               	movlw	0
  8605     000D  0536               	andwf	___flge@ff1+1,w
  8606     000E  00BE               	movwf	??___flge+1
  8607     000F  3080               	movlw	128
  8608     0010  0537               	andwf	___flge@ff1+2,w
  8609     0011  00BF               	movwf	??___flge+2
  8610     0012  307F               	movlw	127
  8611     0013  0538               	andwf	___flge@ff1+3,w
  8612     0014  00C0               	movwf	??___flge+3
  8613     0015  0840               	movf	??___flge+3,w
  8614     0016  043F               	iorwf	??___flge+2,w
  8615     0017  043E               	iorwf	??___flge+1,w
  8616     0018  043D               	iorwf	??___flge,w
  8617     0019  1D03               	skipz
  8618     001A  281C               	goto	u3331
  8619     001B  281D               	goto	u3330
  8620     001C                     u3331:
  8621     001C  2825               	goto	l410
  8622     001D                     u3330:
  8623     001D                     l2598:
  8624     001D  3000               	movlw	0
  8625     001E  00B8               	movwf	___flge@ff1+3
  8626     001F  3000               	movlw	0
  8627     0020  00B7               	movwf	___flge@ff1+2
  8628     0021  3000               	movlw	0
  8629     0022  00B6               	movwf	___flge@ff1+1
  8630     0023  3000               	movlw	0
  8631     0024  00B5               	movwf	___flge@ff1
  8632     0025                     l410:
  8633     0025  3000               	movlw	0
  8634     0026  0539               	andwf	___flge@ff2,w
  8635     0027  00BD               	movwf	??___flge
  8636     0028  3000               	movlw	0
  8637     0029  053A               	andwf	___flge@ff2+1,w
  8638     002A  00BE               	movwf	??___flge+1
  8639     002B  3080               	movlw	128
  8640     002C  053B               	andwf	___flge@ff2+2,w
  8641     002D  00BF               	movwf	??___flge+2
  8642     002E  307F               	movlw	127
  8643     002F  053C               	andwf	___flge@ff2+3,w
  8644     0030  00C0               	movwf	??___flge+3
  8645     0031  0840               	movf	??___flge+3,w
  8646     0032  043F               	iorwf	??___flge+2,w
  8647     0033  043E               	iorwf	??___flge+1,w
  8648     0034  043D               	iorwf	??___flge,w
  8649     0035  1D03               	skipz
  8650     0036  2838               	goto	u3341
  8651     0037  2839               	goto	u3340
  8652     0038                     u3341:
  8653     0038  2841               	goto	l2602
  8654     0039                     u3340:
  8655     0039                     l2600:
  8656     0039  3000               	movlw	0
  8657     003A  00BC               	movwf	___flge@ff2+3
  8658     003B  3000               	movlw	0
  8659     003C  00BB               	movwf	___flge@ff2+2
  8660     003D  3000               	movlw	0
  8661     003E  00BA               	movwf	___flge@ff2+1
  8662     003F  3000               	movlw	0
  8663     0040  00B9               	movwf	___flge@ff2
  8664     0041                     l2602:
  8665     0041  1FB8               	btfss	___flge@ff1+3,7
  8666     0042  2844               	goto	u3351
  8667     0043  2845               	goto	u3350
  8668     0044                     u3351:
  8669     0044  2869               	goto	l2606
  8670     0045                     u3350:
  8671     0045                     l2604:
  8672     0045  3000               	movlw	0
  8673     0046  00BD               	movwf	??___flge
  8674     0047  3000               	movlw	0
  8675     0048  00BE               	movwf	??___flge+1
  8676     0049  3000               	movlw	0
  8677     004A  00BF               	movwf	??___flge+2
  8678     004B  3080               	movlw	128
  8679     004C  00C0               	movwf	??___flge+3
  8680     004D  0835               	movf	___flge@ff1,w
  8681     004E  02BD               	subwf	??___flge,f
  8682     004F  0836               	movf	___flge@ff1+1,w
  8683     0050  1C03               	skipc
  8684     0051  0F36               	incfsz	___flge@ff1+1,w
  8685     0052  2854               	goto	u3361
  8686     0053  2855               	goto	u3362
  8687     0054                     u3361:
  8688     0054  02BE               	subwf	??___flge+1,f
  8689     0055                     u3362:
  8690     0055  0837               	movf	___flge@ff1+2,w
  8691     0056  1C03               	skipc
  8692     0057  0F37               	incfsz	___flge@ff1+2,w
  8693     0058  285A               	goto	u3363
  8694     0059  285B               	goto	u3364
  8695     005A                     u3363:
  8696     005A  02BF               	subwf	??___flge+2,f
  8697     005B                     u3364:
  8698     005B  0838               	movf	___flge@ff1+3,w
  8699     005C  1C03               	skipc
  8700     005D  0F38               	incfsz	___flge@ff1+3,w
  8701     005E  2860               	goto	u3365
  8702     005F  2861               	goto	u3366
  8703     0060                     u3365:
  8704     0060  02C0               	subwf	??___flge+3,f
  8705     0061                     u3366:
  8706     0061  0840               	movf	??___flge+3,w
  8707     0062  00B8               	movwf	___flge@ff1+3
  8708     0063  083F               	movf	??___flge+2,w
  8709     0064  00B7               	movwf	___flge@ff1+2
  8710     0065  083E               	movf	??___flge+1,w
  8711     0066  00B6               	movwf	___flge@ff1+1
  8712     0067  083D               	movf	??___flge,w
  8713     0068  00B5               	movwf	___flge@ff1
  8714     0069                     l2606:
  8715     0069  1FBC               	btfss	___flge@ff2+3,7
  8716     006A  286C               	goto	u3371
  8717     006B  286D               	goto	u3370
  8718     006C                     u3371:
  8719     006C  2891               	goto	l413
  8720     006D                     u3370:
  8721     006D                     l2608:
  8722     006D  3000               	movlw	0
  8723     006E  00BD               	movwf	??___flge
  8724     006F  3000               	movlw	0
  8725     0070  00BE               	movwf	??___flge+1
  8726     0071  3000               	movlw	0
  8727     0072  00BF               	movwf	??___flge+2
  8728     0073  3080               	movlw	128
  8729     0074  00C0               	movwf	??___flge+3
  8730     0075  0839               	movf	___flge@ff2,w
  8731     0076  02BD               	subwf	??___flge,f
  8732     0077  083A               	movf	___flge@ff2+1,w
  8733     0078  1C03               	skipc
  8734     0079  0F3A               	incfsz	___flge@ff2+1,w
  8735     007A  287C               	goto	u3381
  8736     007B  287D               	goto	u3382
  8737     007C                     u3381:
  8738     007C  02BE               	subwf	??___flge+1,f
  8739     007D                     u3382:
  8740     007D  083B               	movf	___flge@ff2+2,w
  8741     007E  1C03               	skipc
  8742     007F  0F3B               	incfsz	___flge@ff2+2,w
  8743     0080  2882               	goto	u3383
  8744     0081  2883               	goto	u3384
  8745     0082                     u3383:
  8746     0082  02BF               	subwf	??___flge+2,f
  8747     0083                     u3384:
  8748     0083  083C               	movf	___flge@ff2+3,w
  8749     0084  1C03               	skipc
  8750     0085  0F3C               	incfsz	___flge@ff2+3,w
  8751     0086  2888               	goto	u3385
  8752     0087  2889               	goto	u3386
  8753     0088                     u3385:
  8754     0088  02C0               	subwf	??___flge+3,f
  8755     0089                     u3386:
  8756     0089  0840               	movf	??___flge+3,w
  8757     008A  00BC               	movwf	___flge@ff2+3
  8758     008B  083F               	movf	??___flge+2,w
  8759     008C  00BB               	movwf	___flge@ff2+2
  8760     008D  083E               	movf	??___flge+1,w
  8761     008E  00BA               	movwf	___flge@ff2+1
  8762     008F  083D               	movf	??___flge,w
  8763     0090  00B9               	movwf	___flge@ff2
  8764     0091                     l413:
  8765     0091  3080               	movlw	128
  8766     0092  06B8               	xorwf	___flge@ff1+3,f
  8767     0093  3080               	movlw	128
  8768     0094  06BC               	xorwf	___flge@ff2+3,f
  8769     0095  083C               	movf	___flge@ff2+3,w
  8770     0096  0238               	subwf	___flge@ff1+3,w
  8771     0097  1D03               	skipz
  8772     0098  28A3               	goto	u3395
  8773     0099  083B               	movf	___flge@ff2+2,w
  8774     009A  0237               	subwf	___flge@ff1+2,w
  8775     009B  1D03               	skipz
  8776     009C  28A3               	goto	u3395
  8777     009D  083A               	movf	___flge@ff2+1,w
  8778     009E  0236               	subwf	___flge@ff1+1,w
  8779     009F  1D03               	skipz
  8780     00A0  28A3               	goto	u3395
  8781     00A1  0839               	movf	___flge@ff2,w
  8782     00A2  0235               	subwf	___flge@ff1,w
  8783     00A3                     u3395:
  8784     00A3  1803               	skipnc
  8785     00A4  28A6               	goto	u3391
  8786     00A5  28A7               	goto	u3390
  8787     00A6                     u3391:
  8788     00A6  28A9               	goto	l2612
  8789     00A7                     u3390:
  8790     00A7                     l2610:
  8791     00A7  1003               	clrc
  8792     00A8  28AA               	goto	l418
  8793     00A9                     l2612:
  8794     00A9  1403               	setc
  8795     00AA                     l418:
  8796     00AA  0008               	return
  8797     00AB                     __end_of___flge:
  8798                           
  8799                           	psect	text30
  8800     1C3C                     __ptext30:	
  8801 ;; *************** function ___fleq *****************
  8802 ;; Defined at:
  8803 ;;		line 4 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\fleq.c"
  8804 ;; Parameters:    Size  Location     Type
  8805 ;;  ff1             4    0[COMMON] unsigned int 
  8806 ;;  ff2             4    4[COMMON] unsigned int 
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;		None
  8809 ;; Return value:  Size  Location     Type
  8810 ;;		None               void
  8811 ;; Registers used:
  8812 ;;		wreg, status,2, status,0
  8813 ;; Tracked objects:
  8814 ;;		On entry : 0/0
  8815 ;;		On exit  : 0/0
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8818 ;;      Params:         8       0       0       0       0
  8819 ;;      Locals:         0       0       0       0       0
  8820 ;;      Temps:          4       0       0       0       0
  8821 ;;      Totals:        12       0       0       0       0
  8822 ;;Total ram usage:       12 bytes
  8823 ;; Hardware stack levels used: 1
  8824 ;; This function calls:
  8825 ;;		Nothing
  8826 ;; This function is called by:
  8827 ;;		_efgtoa
  8828 ;; This function uses a non-reentrant model
  8829 ;;
  8830                           
  8831     1C3C                     ___fleq:	
  8832                           ;psect for function ___fleq
  8833                           
  8834     1C3C                     l2584:	
  8835                           ;incstack = 0
  8836                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8837                           
  8838     1C3C  3000               	movlw	0
  8839     1C3D  0570               	andwf	___fleq@ff1,w
  8840     1C3E  00F8               	movwf	??___fleq
  8841     1C3F  3000               	movlw	0
  8842     1C40  0571               	andwf	___fleq@ff1+1,w
  8843     1C41  00F9               	movwf	??___fleq+1
  8844     1C42  3080               	movlw	128
  8845     1C43  0572               	andwf	___fleq@ff1+2,w
  8846     1C44  00FA               	movwf	??___fleq+2
  8847     1C45  307F               	movlw	127
  8848     1C46  0573               	andwf	___fleq@ff1+3,w
  8849     1C47  00FB               	movwf	??___fleq+3
  8850     1C48  087B               	movf	??___fleq+3,w
  8851     1C49  047A               	iorwf	??___fleq+2,w
  8852     1C4A  0479               	iorwf	??___fleq+1,w
  8853     1C4B  0478               	iorwf	??___fleq,w
  8854     1C4C  1D03               	skipz
  8855     1C4D  2C4F               	goto	u3301
  8856     1C4E  2C50               	goto	u3300
  8857     1C4F                     u3301:
  8858     1C4F  2C58               	goto	l401
  8859     1C50                     u3300:
  8860     1C50                     l2586:
  8861     1C50  3000               	movlw	0
  8862     1C51  00F3               	movwf	___fleq@ff1+3
  8863     1C52  3000               	movlw	0
  8864     1C53  00F2               	movwf	___fleq@ff1+2
  8865     1C54  3000               	movlw	0
  8866     1C55  00F1               	movwf	___fleq@ff1+1
  8867     1C56  3000               	movlw	0
  8868     1C57  00F0               	movwf	___fleq@ff1
  8869     1C58                     l401:
  8870     1C58  3000               	movlw	0
  8871     1C59  0574               	andwf	___fleq@ff2,w
  8872     1C5A  00F8               	movwf	??___fleq
  8873     1C5B  3000               	movlw	0
  8874     1C5C  0575               	andwf	___fleq@ff2+1,w
  8875     1C5D  00F9               	movwf	??___fleq+1
  8876     1C5E  3080               	movlw	128
  8877     1C5F  0576               	andwf	___fleq@ff2+2,w
  8878     1C60  00FA               	movwf	??___fleq+2
  8879     1C61  307F               	movlw	127
  8880     1C62  0577               	andwf	___fleq@ff2+3,w
  8881     1C63  00FB               	movwf	??___fleq+3
  8882     1C64  087B               	movf	??___fleq+3,w
  8883     1C65  047A               	iorwf	??___fleq+2,w
  8884     1C66  0479               	iorwf	??___fleq+1,w
  8885     1C67  0478               	iorwf	??___fleq,w
  8886     1C68  1D03               	skipz
  8887     1C69  2C6B               	goto	u3311
  8888     1C6A  2C6C               	goto	u3310
  8889     1C6B                     u3311:
  8890     1C6B  2C74               	goto	l402
  8891     1C6C                     u3310:
  8892     1C6C                     l2588:
  8893     1C6C  3000               	movlw	0
  8894     1C6D  00F7               	movwf	___fleq@ff2+3
  8895     1C6E  3000               	movlw	0
  8896     1C6F  00F6               	movwf	___fleq@ff2+2
  8897     1C70  3000               	movlw	0
  8898     1C71  00F5               	movwf	___fleq@ff2+1
  8899     1C72  3000               	movlw	0
  8900     1C73  00F4               	movwf	___fleq@ff2
  8901     1C74                     l402:
  8902     1C74  0877               	movf	___fleq@ff2+3,w
  8903     1C75  0673               	xorwf	___fleq@ff1+3,w
  8904     1C76  1D03               	skipz
  8905     1C77  2C82               	goto	u3325
  8906     1C78  0876               	movf	___fleq@ff2+2,w
  8907     1C79  0672               	xorwf	___fleq@ff1+2,w
  8908     1C7A  1D03               	skipz
  8909     1C7B  2C82               	goto	u3325
  8910     1C7C  0875               	movf	___fleq@ff2+1,w
  8911     1C7D  0671               	xorwf	___fleq@ff1+1,w
  8912     1C7E  1D03               	skipz
  8913     1C7F  2C82               	goto	u3325
  8914     1C80  0874               	movf	___fleq@ff2,w
  8915     1C81  0670               	xorwf	___fleq@ff1,w
  8916     1C82                     u3325:
  8917     1C82  1903               	skipnz
  8918     1C83  2C85               	goto	u3321
  8919     1C84  2C86               	goto	u3320
  8920     1C85                     u3321:
  8921     1C85  2C88               	goto	l2592
  8922     1C86                     u3320:
  8923     1C86                     l2590:
  8924     1C86  1003               	clrc
  8925     1C87  2C89               	goto	l407
  8926     1C88                     l2592:
  8927     1C88  1403               	setc
  8928     1C89                     l407:
  8929     1C89  0008               	return
  8930     1C8A                     __end_of___fleq:
  8931                           
  8932                           	psect	text31
  8933     089E                     __ptext31:	
  8934 ;; *************** function ___fldiv *****************
  8935 ;; Defined at:
  8936 ;;		line 8 in file "c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\sprcdiv.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;  a               4    0[COMMON] unsigned int 
  8939 ;;  b               4    4[COMMON] unsigned int 
  8940 ;; Auto vars:     Size  Location     Type
  8941 ;;  grs             4    7[BANK0 ] unsigned long 
  8942 ;;  rem             4    0[BANK0 ] unsigned long 
  8943 ;;  new_exp         2    5[BANK0 ] short 
  8944 ;;  aexp            1   12[BANK0 ] unsigned char 
  8945 ;;  bexp            1   11[BANK0 ] unsigned char 
  8946 ;;  sign            1    4[BANK0 ] unsigned char 
  8947 ;; Return value:  Size  Location     Type
  8948 ;;                  4    0[COMMON] unsigned char 
  8949 ;; Registers used:
  8950 ;;		wreg, status,2, status,0, btemp+1
  8951 ;; Tracked objects:
  8952 ;;		On entry : 0/0
  8953 ;;		On exit  : 0/0
  8954 ;;		Unchanged: 0/0
  8955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8956 ;;      Params:         8       0       0       0       0
  8957 ;;      Locals:         0      13       0       0       0
  8958 ;;      Temps:          5       0       0       0       0
  8959 ;;      Totals:        13      13       0       0       0
  8960 ;;Total ram usage:       26 bytes
  8961 ;; Hardware stack levels used: 1
  8962 ;; This function calls:
  8963 ;;		Nothing
  8964 ;; This function is called by:
  8965 ;;		_calculate
  8966 ;;		_efgtoa
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           
  8970     089E                     ___fldiv:	
  8971                           ;psect for function ___fldiv
  8972                           
  8973     089E                     l2666:	
  8974                           ;incstack = 0
  8975                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8976                           
  8977     089E  0877               	movf	___fldiv@b+3,w
  8978     089F  1283               	bcf	3,5	;RP0=0, select bank0
  8979     08A0  1303               	bcf	3,6	;RP1=0, select bank0
  8980     08A1  00A4               	movwf	___fldiv@sign
  8981     08A2                     l2668:
  8982     08A2  3080               	movlw	128
  8983     08A3  05A4               	andwf	___fldiv@sign,f
  8984     08A4                     l2670:
  8985     08A4  0877               	movf	___fldiv@b+3,w
  8986     08A5  00F8               	movwf	??___fldiv
  8987     08A6  0778               	addwf	??___fldiv,w
  8988     08A7  00AB               	movwf	___fldiv@bexp
  8989     08A8                     l2672:
  8990     08A8  1FF6               	btfss	___fldiv@b+2,7
  8991     08A9  28AB               	goto	u3511
  8992     08AA  28AC               	goto	u3510
  8993     08AB                     u3511:
  8994     08AB  28AD               	goto	l2676
  8995     08AC                     u3510:
  8996     08AC                     l2674:
  8997     08AC  142B               	bsf	___fldiv@bexp,0
  8998     08AD                     l2676:
  8999     08AD  082B               	movf	___fldiv@bexp,w
  9000     08AE  1903               	btfsc	3,2
  9001     08AF  28B1               	goto	u3521
  9002     08B0  28B2               	goto	u3520
  9003     08B1                     u3521:
  9004     08B1  28C2               	goto	l2686
  9005     08B2                     u3520:
  9006     08B2                     l2678:
  9007     08B2  0A2B               	incf	___fldiv@bexp,w
  9008     08B3  1D03               	btfss	3,2
  9009     08B4  28B6               	goto	u3531
  9010     08B5  28B7               	goto	u3530
  9011     08B6                     u3531:
  9012     08B6  28BF               	goto	l2682
  9013     08B7                     u3530:
  9014     08B7                     l2680:
  9015     08B7  3000               	movlw	0
  9016     08B8  00F7               	movwf	___fldiv@b+3
  9017     08B9  3000               	movlw	0
  9018     08BA  00F6               	movwf	___fldiv@b+2
  9019     08BB  3000               	movlw	0
  9020     08BC  00F5               	movwf	___fldiv@b+1
  9021     08BD  3000               	movlw	0
  9022     08BE  00F4               	movwf	___fldiv@b
  9023     08BF                     l2682:
  9024     08BF  17F6               	bsf	___fldiv@b+2,7
  9025     08C0                     l2684:
  9026     08C0  01F7               	clrf	___fldiv@b+3
  9027     08C1  28CA               	goto	l2688
  9028     08C2                     l2686:
  9029     08C2  3000               	movlw	0
  9030     08C3  00F7               	movwf	___fldiv@b+3
  9031     08C4  3000               	movlw	0
  9032     08C5  00F6               	movwf	___fldiv@b+2
  9033     08C6  3000               	movlw	0
  9034     08C7  00F5               	movwf	___fldiv@b+1
  9035     08C8  3000               	movlw	0
  9036     08C9  00F4               	movwf	___fldiv@b
  9037     08CA                     l2688:
  9038     08CA  0873               	movf	___fldiv@a+3,w
  9039     08CB  3980               	andlw	128
  9040     08CC  06A4               	xorwf	___fldiv@sign,f
  9041     08CD                     l2690:
  9042     08CD  0873               	movf	___fldiv@a+3,w
  9043     08CE  00F8               	movwf	??___fldiv
  9044     08CF  0778               	addwf	??___fldiv,w
  9045     08D0  00AC               	movwf	___fldiv@aexp
  9046     08D1                     l2692:
  9047     08D1  1FF2               	btfss	___fldiv@a+2,7
  9048     08D2  28D4               	goto	u3541
  9049     08D3  28D5               	goto	u3540
  9050     08D4                     u3541:
  9051     08D4  28D6               	goto	l2696
  9052     08D5                     u3540:
  9053     08D5                     l2694:
  9054     08D5  142C               	bsf	___fldiv@aexp,0
  9055     08D6                     l2696:
  9056     08D6  082C               	movf	___fldiv@aexp,w
  9057     08D7  1903               	btfsc	3,2
  9058     08D8  28DA               	goto	u3551
  9059     08D9  28DB               	goto	u3550
  9060     08DA                     u3551:
  9061     08DA  28EB               	goto	l2706
  9062     08DB                     u3550:
  9063     08DB                     l2698:
  9064     08DB  0A2C               	incf	___fldiv@aexp,w
  9065     08DC  1D03               	btfss	3,2
  9066     08DD  28DF               	goto	u3561
  9067     08DE  28E0               	goto	u3560
  9068     08DF                     u3561:
  9069     08DF  28E8               	goto	l2702
  9070     08E0                     u3560:
  9071     08E0                     l2700:
  9072     08E0  3000               	movlw	0
  9073     08E1  00F3               	movwf	___fldiv@a+3
  9074     08E2  3000               	movlw	0
  9075     08E3  00F2               	movwf	___fldiv@a+2
  9076     08E4  3000               	movlw	0
  9077     08E5  00F1               	movwf	___fldiv@a+1
  9078     08E6  3000               	movlw	0
  9079     08E7  00F0               	movwf	___fldiv@a
  9080     08E8                     l2702:
  9081     08E8  17F2               	bsf	___fldiv@a+2,7
  9082     08E9                     l2704:
  9083     08E9  01F3               	clrf	___fldiv@a+3
  9084     08EA  28F3               	goto	l589
  9085     08EB                     l2706:
  9086     08EB  3000               	movlw	0
  9087     08EC  00F3               	movwf	___fldiv@a+3
  9088     08ED  3000               	movlw	0
  9089     08EE  00F2               	movwf	___fldiv@a+2
  9090     08EF  3000               	movlw	0
  9091     08F0  00F1               	movwf	___fldiv@a+1
  9092     08F1  3000               	movlw	0
  9093     08F2  00F0               	movwf	___fldiv@a
  9094     08F3                     l589:
  9095     08F3  0873               	movf	___fldiv@a+3,w
  9096     08F4  0472               	iorwf	___fldiv@a+2,w
  9097     08F5  0471               	iorwf	___fldiv@a+1,w
  9098     08F6  0470               	iorwf	___fldiv@a,w
  9099     08F7  1D03               	skipz
  9100     08F8  28FA               	goto	u3571
  9101     08F9  28FB               	goto	u3570
  9102     08FA                     u3571:
  9103     08FA  2912               	goto	l2716
  9104     08FB                     u3570:
  9105     08FB                     l2708:
  9106     08FB  3000               	movlw	0
  9107     08FC  00F7               	movwf	___fldiv@b+3
  9108     08FD  3000               	movlw	0
  9109     08FE  00F6               	movwf	___fldiv@b+2
  9110     08FF  3000               	movlw	0
  9111     0900  00F5               	movwf	___fldiv@b+1
  9112     0901  3000               	movlw	0
  9113     0902  00F4               	movwf	___fldiv@b
  9114     0903  3080               	movlw	128
  9115     0904  04F6               	iorwf	___fldiv@b+2,f
  9116     0905  307F               	movlw	127
  9117     0906  04F7               	iorwf	___fldiv@b+3,f
  9118     0907                     l2710:
  9119     0907  0824               	movf	___fldiv@sign,w
  9120     0908  04F7               	iorwf	___fldiv@b+3,f
  9121     0909                     l2712:
  9122     0909  0877               	movf	___fldiv@b+3,w
  9123     090A  00F3               	movwf	?___fldiv+3
  9124     090B  0876               	movf	___fldiv@b+2,w
  9125     090C  00F2               	movwf	?___fldiv+2
  9126     090D  0875               	movf	___fldiv@b+1,w
  9127     090E  00F1               	movwf	?___fldiv+1
  9128     090F  0874               	movf	___fldiv@b,w
  9129     0910  00F0               	movwf	?___fldiv
  9130     0911  2A6D               	goto	l591
  9131     0912                     l2716:
  9132     0912  082B               	movf	___fldiv@bexp,w
  9133     0913  1D03               	btfss	3,2
  9134     0914  2916               	goto	u3581
  9135     0915  2917               	goto	u3580
  9136     0916                     u3581:
  9137     0916  2920               	goto	l2722
  9138     0917                     u3580:
  9139     0917                     l2718:
  9140     0917  3000               	movlw	0
  9141     0918  00F3               	movwf	?___fldiv+3
  9142     0919  3000               	movlw	0
  9143     091A  00F2               	movwf	?___fldiv+2
  9144     091B  3000               	movlw	0
  9145     091C  00F1               	movwf	?___fldiv+1
  9146     091D  3000               	movlw	0
  9147     091E  00F0               	movwf	?___fldiv
  9148     091F  2A6D               	goto	l591
  9149     0920                     l2722:
  9150     0920  082B               	movf	___fldiv@bexp,w
  9151     0921  00F8               	movwf	??___fldiv
  9152     0922  01F9               	clrf	??___fldiv+1
  9153     0923  0879               	movf	??___fldiv+1,w
  9154     0924  00FB               	movwf	??___fldiv+3
  9155     0925  082C               	movf	___fldiv@aexp,w
  9156     0926  0278               	subwf	??___fldiv,w
  9157     0927  00FA               	movwf	??___fldiv+2
  9158     0928  1C03               	skipc
  9159     0929  03FB               	decf	??___fldiv+3,f
  9160     092A  087A               	movf	??___fldiv+2,w
  9161     092B  3E7F               	addlw	127
  9162     092C  00A5               	movwf	___fldiv@new_exp
  9163     092D  087B               	movf	??___fldiv+3,w
  9164     092E  1803               	skipnc
  9165     092F  3E01               	addlw	1
  9166     0930  3E00               	addlw	0
  9167     0931  00A6               	movwf	___fldiv@new_exp+1
  9168     0932                     l2724:
  9169     0932  0877               	movf	___fldiv@b+3,w
  9170     0933  00A3               	movwf	___fldiv@rem+3
  9171     0934  0876               	movf	___fldiv@b+2,w
  9172     0935  00A2               	movwf	___fldiv@rem+2
  9173     0936  0875               	movf	___fldiv@b+1,w
  9174     0937  00A1               	movwf	___fldiv@rem+1
  9175     0938  0874               	movf	___fldiv@b,w
  9176     0939  00A0               	movwf	___fldiv@rem
  9177     093A                     l2726:
  9178     093A  3000               	movlw	0
  9179     093B  00F7               	movwf	___fldiv@b+3
  9180     093C  3000               	movlw	0
  9181     093D  00F6               	movwf	___fldiv@b+2
  9182     093E  3000               	movlw	0
  9183     093F  00F5               	movwf	___fldiv@b+1
  9184     0940  3000               	movlw	0
  9185     0941  00F4               	movwf	___fldiv@b
  9186     0942                     l2728:
  9187     0942  3000               	movlw	0
  9188     0943  00AA               	movwf	___fldiv@grs+3
  9189     0944  3000               	movlw	0
  9190     0945  00A9               	movwf	___fldiv@grs+2
  9191     0946  3000               	movlw	0
  9192     0947  00A8               	movwf	___fldiv@grs+1
  9193     0948  3000               	movlw	0
  9194     0949  00A7               	movwf	___fldiv@grs
  9195     094A                     l2730:
  9196     094A  01AC               	clrf	___fldiv@aexp
  9197     094B  299A               	goto	l2750
  9198     094C                     l2732:
  9199     094C  082C               	movf	___fldiv@aexp,w
  9200     094D  1903               	btfsc	3,2
  9201     094E  2950               	goto	u3591
  9202     094F  2951               	goto	u3590
  9203     0950                     u3591:
  9204     0950  2971               	goto	l2742
  9205     0951                     u3590:
  9206     0951                     l2734:
  9207     0951  3001               	movlw	1
  9208     0952  00F8               	movwf	??___fldiv
  9209     0953                     u3605:
  9210     0953  1003               	clrc
  9211     0954  0DA0               	rlf	___fldiv@rem,f
  9212     0955  0DA1               	rlf	___fldiv@rem+1,f
  9213     0956  0DA2               	rlf	___fldiv@rem+2,f
  9214     0957  0DA3               	rlf	___fldiv@rem+3,f
  9215     0958  0BF8               	decfsz	??___fldiv,f
  9216     0959  2953               	goto	u3605
  9217     095A  3001               	movlw	1
  9218     095B  00F8               	movwf	??___fldiv
  9219     095C                     u3615:
  9220     095C  1003               	clrc
  9221     095D  0DF4               	rlf	___fldiv@b,f
  9222     095E  0DF5               	rlf	___fldiv@b+1,f
  9223     095F  0DF6               	rlf	___fldiv@b+2,f
  9224     0960  0DF7               	rlf	___fldiv@b+3,f
  9225     0961  0BF8               	decfsz	??___fldiv,f
  9226     0962  295C               	goto	u3615
  9227     0963                     l2736:
  9228     0963  1FAA               	btfss	___fldiv@grs+3,7
  9229     0964  2966               	goto	u3621
  9230     0965  2967               	goto	u3620
  9231     0966                     u3621:
  9232     0966  2968               	goto	l2740
  9233     0967                     u3620:
  9234     0967                     l2738:
  9235     0967  1474               	bsf	___fldiv@b,0
  9236     0968                     l2740:
  9237     0968  3001               	movlw	1
  9238     0969  00F8               	movwf	??___fldiv
  9239     096A                     u3635:
  9240     096A  1003               	clrc
  9241     096B  0DA7               	rlf	___fldiv@grs,f
  9242     096C  0DA8               	rlf	___fldiv@grs+1,f
  9243     096D  0DA9               	rlf	___fldiv@grs+2,f
  9244     096E  0DAA               	rlf	___fldiv@grs+3,f
  9245     096F  0BF8               	decfsz	??___fldiv,f
  9246     0970  296A               	goto	u3635
  9247     0971                     l2742:
  9248     0971  0873               	movf	___fldiv@a+3,w
  9249     0972  0223               	subwf	___fldiv@rem+3,w
  9250     0973  1D03               	skipz
  9251     0974  297F               	goto	u3645
  9252     0975  0872               	movf	___fldiv@a+2,w
  9253     0976  0222               	subwf	___fldiv@rem+2,w
  9254     0977  1D03               	skipz
  9255     0978  297F               	goto	u3645
  9256     0979  0871               	movf	___fldiv@a+1,w
  9257     097A  0221               	subwf	___fldiv@rem+1,w
  9258     097B  1D03               	skipz
  9259     097C  297F               	goto	u3645
  9260     097D  0870               	movf	___fldiv@a,w
  9261     097E  0220               	subwf	___fldiv@rem,w
  9262     097F                     u3645:
  9263     097F  1C03               	skipc
  9264     0980  2982               	goto	u3641
  9265     0981  2983               	goto	u3640
  9266     0982                     u3641:
  9267     0982  2998               	goto	l2748
  9268     0983                     u3640:
  9269     0983                     l2744:
  9270     0983  172A               	bsf	___fldiv@grs+3,6
  9271     0984                     l2746:
  9272     0984  0870               	movf	___fldiv@a,w
  9273     0985  02A0               	subwf	___fldiv@rem,f
  9274     0986  0871               	movf	___fldiv@a+1,w
  9275     0987  1C03               	skipc
  9276     0988  0F71               	incfsz	___fldiv@a+1,w
  9277     0989  298B               	goto	u3655
  9278     098A  298C               	goto	u3656
  9279     098B                     u3655:
  9280     098B  02A1               	subwf	___fldiv@rem+1,f
  9281     098C                     u3656:
  9282     098C  0872               	movf	___fldiv@a+2,w
  9283     098D  1C03               	skipc
  9284     098E  0F72               	incfsz	___fldiv@a+2,w
  9285     098F  2991               	goto	u3657
  9286     0990  2992               	goto	u3658
  9287     0991                     u3657:
  9288     0991  02A2               	subwf	___fldiv@rem+2,f
  9289     0992                     u3658:
  9290     0992  0873               	movf	___fldiv@a+3,w
  9291     0993  1C03               	skipc
  9292     0994  0F73               	incfsz	___fldiv@a+3,w
  9293     0995  2997               	goto	u3659
  9294     0996  2998               	goto	u3650
  9295     0997                     u3659:
  9296     0997  02A3               	subwf	___fldiv@rem+3,f
  9297     0998                     u3650:
  9298     0998                     l2748:
  9299     0998  3001               	movlw	1
  9300     0999  07AC               	addwf	___fldiv@aexp,f
  9301     099A                     l2750:
  9302     099A  301A               	movlw	26
  9303     099B  022C               	subwf	___fldiv@aexp,w
  9304     099C  1C03               	skipc
  9305     099D  299F               	goto	u3661
  9306     099E  29A0               	goto	u3660
  9307     099F                     u3661:
  9308     099F  294C               	goto	l2732
  9309     09A0                     u3660:
  9310     09A0                     l2752:
  9311     09A0  0823               	movf	___fldiv@rem+3,w
  9312     09A1  0422               	iorwf	___fldiv@rem+2,w
  9313     09A2  0421               	iorwf	___fldiv@rem+1,w
  9314     09A3  0420               	iorwf	___fldiv@rem,w
  9315     09A4  1903               	skipnz
  9316     09A5  29A7               	goto	u3671
  9317     09A6  29A8               	goto	u3670
  9318     09A7                     u3671:
  9319     09A7  29C7               	goto	l2766
  9320     09A8                     u3670:
  9321     09A8                     l2754:
  9322     09A8  1427               	bsf	___fldiv@grs,0
  9323     09A9  29C7               	goto	l2766
  9324     09AA                     l2756:
  9325     09AA  3001               	movlw	1
  9326     09AB  00F8               	movwf	??___fldiv
  9327     09AC                     u3685:
  9328     09AC  1003               	clrc
  9329     09AD  0DF4               	rlf	___fldiv@b,f
  9330     09AE  0DF5               	rlf	___fldiv@b+1,f
  9331     09AF  0DF6               	rlf	___fldiv@b+2,f
  9332     09B0  0DF7               	rlf	___fldiv@b+3,f
  9333     09B1  0BF8               	decfsz	??___fldiv,f
  9334     09B2  29AC               	goto	u3685
  9335     09B3                     l2758:
  9336     09B3  1FAA               	btfss	___fldiv@grs+3,7
  9337     09B4  29B6               	goto	u3691
  9338     09B5  29B7               	goto	u3690
  9339     09B6                     u3691:
  9340     09B6  29B8               	goto	l2762
  9341     09B7                     u3690:
  9342     09B7                     l2760:
  9343     09B7  1474               	bsf	___fldiv@b,0
  9344     09B8                     l2762:
  9345     09B8  3001               	movlw	1
  9346     09B9  00F8               	movwf	??___fldiv
  9347     09BA                     u3705:
  9348     09BA  1003               	clrc
  9349     09BB  0DA7               	rlf	___fldiv@grs,f
  9350     09BC  0DA8               	rlf	___fldiv@grs+1,f
  9351     09BD  0DA9               	rlf	___fldiv@grs+2,f
  9352     09BE  0DAA               	rlf	___fldiv@grs+3,f
  9353     09BF  0BF8               	decfsz	??___fldiv,f
  9354     09C0  29BA               	goto	u3705
  9355     09C1                     l2764:
  9356     09C1  30FF               	movlw	255
  9357     09C2  07A5               	addwf	___fldiv@new_exp,f
  9358     09C3  1803               	skipnc
  9359     09C4  0AA6               	incf	___fldiv@new_exp+1,f
  9360     09C5  30FF               	movlw	255
  9361     09C6  07A6               	addwf	___fldiv@new_exp+1,f
  9362     09C7                     l2766:
  9363     09C7  1FF6               	btfss	___fldiv@b+2,7
  9364     09C8  29CA               	goto	u3711
  9365     09C9  29CB               	goto	u3710
  9366     09CA                     u3711:
  9367     09CA  29AA               	goto	l2756
  9368     09CB                     u3710:
  9369     09CB                     l2768:
  9370     09CB  01AC               	clrf	___fldiv@aexp
  9371     09CC                     l2770:
  9372     09CC  1FAA               	btfss	___fldiv@grs+3,7
  9373     09CD  29CF               	goto	u3721
  9374     09CE  29D0               	goto	u3720
  9375     09CF                     u3721:
  9376     09CF  29EC               	goto	l2778
  9377     09D0                     u3720:
  9378     09D0                     l2772:
  9379     09D0  30FF               	movlw	255
  9380     09D1  0527               	andwf	___fldiv@grs,w
  9381     09D2  00F8               	movwf	??___fldiv
  9382     09D3  30FF               	movlw	255
  9383     09D4  0528               	andwf	___fldiv@grs+1,w
  9384     09D5  00F9               	movwf	??___fldiv+1
  9385     09D6  30FF               	movlw	255
  9386     09D7  0529               	andwf	___fldiv@grs+2,w
  9387     09D8  00FA               	movwf	??___fldiv+2
  9388     09D9  307F               	movlw	127
  9389     09DA  052A               	andwf	___fldiv@grs+3,w
  9390     09DB  00FB               	movwf	??___fldiv+3
  9391     09DC  087B               	movf	??___fldiv+3,w
  9392     09DD  047A               	iorwf	??___fldiv+2,w
  9393     09DE  0479               	iorwf	??___fldiv+1,w
  9394     09DF  0478               	iorwf	??___fldiv,w
  9395     09E0  1903               	skipnz
  9396     09E1  29E3               	goto	u3731
  9397     09E2  29E4               	goto	u3730
  9398     09E3                     u3731:
  9399     09E3  29E7               	goto	l605
  9400     09E4                     u3730:
  9401     09E4                     l2774:
  9402     09E4  3001               	movlw	1
  9403     09E5  00AC               	movwf	___fldiv@aexp
  9404     09E6  29EC               	goto	l2778
  9405     09E7                     l605:
  9406     09E7  1C74               	btfss	___fldiv@b,0
  9407     09E8  29EA               	goto	u3741
  9408     09E9  29EB               	goto	u3740
  9409     09EA                     u3741:
  9410     09EA  29EC               	goto	l2778
  9411     09EB                     u3740:
  9412     09EB  29E4               	goto	l2774
  9413     09EC                     l2778:
  9414     09EC  082C               	movf	___fldiv@aexp,w
  9415     09ED  1903               	btfsc	3,2
  9416     09EE  29F0               	goto	u3751
  9417     09EF  29F1               	goto	u3750
  9418     09F0                     u3751:
  9419     09F0  2A22               	goto	l2788
  9420     09F1                     u3750:
  9421     09F1                     l2780:
  9422     09F1  3001               	movlw	1
  9423     09F2  07F4               	addwf	___fldiv@b,f
  9424     09F3  3000               	movlw	0
  9425     09F4  1803               	skipnc
  9426     09F5  3001               	movlw	1
  9427     09F6  07F5               	addwf	___fldiv@b+1,f
  9428     09F7  3000               	movlw	0
  9429     09F8  1803               	skipnc
  9430     09F9  3001               	movlw	1
  9431     09FA  07F6               	addwf	___fldiv@b+2,f
  9432     09FB  3000               	movlw	0
  9433     09FC  1803               	skipnc
  9434     09FD  3001               	movlw	1
  9435     09FE  07F7               	addwf	___fldiv@b+3,f
  9436     09FF                     l2782:
  9437     09FF  1C77               	btfss	___fldiv@b+3,0
  9438     0A00  2A02               	goto	u3761
  9439     0A01  2A03               	goto	u3760
  9440     0A02                     u3761:
  9441     0A02  2A22               	goto	l2788
  9442     0A03                     u3760:
  9443     0A03                     l2784:
  9444     0A03  0874               	movf	___fldiv@b,w
  9445     0A04  00F8               	movwf	??___fldiv
  9446     0A05  0875               	movf	___fldiv@b+1,w
  9447     0A06  00F9               	movwf	??___fldiv+1
  9448     0A07  0876               	movf	___fldiv@b+2,w
  9449     0A08  00FA               	movwf	??___fldiv+2
  9450     0A09  0877               	movf	___fldiv@b+3,w
  9451     0A0A  00FB               	movwf	??___fldiv+3
  9452     0A0B  3001               	movlw	1
  9453     0A0C  00FC               	movwf	??___fldiv+4
  9454     0A0D                     u3775:
  9455     0A0D  0D7B               	rlf	??___fldiv+3,w
  9456     0A0E  0CFB               	rrf	??___fldiv+3,f
  9457     0A0F  0CFA               	rrf	??___fldiv+2,f
  9458     0A10  0CF9               	rrf	??___fldiv+1,f
  9459     0A11  0CF8               	rrf	??___fldiv,f
  9460     0A12                     u3770:
  9461     0A12  0BFC               	decfsz	??___fldiv+4,f
  9462     0A13  2A0D               	goto	u3775
  9463     0A14  087B               	movf	??___fldiv+3,w
  9464     0A15  00F7               	movwf	___fldiv@b+3
  9465     0A16  087A               	movf	??___fldiv+2,w
  9466     0A17  00F6               	movwf	___fldiv@b+2
  9467     0A18  0879               	movf	??___fldiv+1,w
  9468     0A19  00F5               	movwf	___fldiv@b+1
  9469     0A1A  0878               	movf	??___fldiv,w
  9470     0A1B  00F4               	movwf	___fldiv@b
  9471     0A1C                     l2786:
  9472     0A1C  3001               	movlw	1
  9473     0A1D  07A5               	addwf	___fldiv@new_exp,f
  9474     0A1E  1803               	skipnc
  9475     0A1F  0AA6               	incf	___fldiv@new_exp+1,f
  9476     0A20  3000               	movlw	0
  9477     0A21  07A6               	addwf	___fldiv@new_exp+1,f
  9478     0A22                     l2788:
  9479     0A22  0826               	movf	___fldiv@new_exp+1,w
  9480     0A23  3A80               	xorlw	128
  9481     0A24  00FF               	movwf	btemp+1
  9482     0A25  3080               	movlw	128
  9483     0A26  027F               	subwf	btemp+1,w
  9484     0A27  1D03               	skipz
  9485     0A28  2A2B               	goto	u3785
  9486     0A29  30FF               	movlw	255
  9487     0A2A  0225               	subwf	___fldiv@new_exp,w
  9488     0A2B                     u3785:
  9489     0A2B  1C03               	skipc
  9490     0A2C  2A2E               	goto	u3781
  9491     0A2D  2A2F               	goto	u3780
  9492     0A2E                     u3781:
  9493     0A2E  2A3D               	goto	l2792
  9494     0A2F                     u3780:
  9495     0A2F                     l2790:
  9496     0A2F  30FF               	movlw	255
  9497     0A30  1283               	bcf	3,5	;RP0=0, select bank0
  9498     0A31  1303               	bcf	3,6	;RP1=0, select bank0
  9499     0A32  00A5               	movwf	___fldiv@new_exp
  9500     0A33  3000               	movlw	0
  9501     0A34  00A6               	movwf	___fldiv@new_exp+1
  9502     0A35  3000               	movlw	0
  9503     0A36  00F7               	movwf	___fldiv@b+3
  9504     0A37  3000               	movlw	0
  9505     0A38  00F6               	movwf	___fldiv@b+2
  9506     0A39  3000               	movlw	0
  9507     0A3A  00F5               	movwf	___fldiv@b+1
  9508     0A3B  3000               	movlw	0
  9509     0A3C  00F4               	movwf	___fldiv@b
  9510     0A3D                     l2792:
  9511     0A3D  1283               	bcf	3,5	;RP0=0, select bank0
  9512     0A3E  1303               	bcf	3,6	;RP1=0, select bank0
  9513     0A3F  0826               	movf	___fldiv@new_exp+1,w
  9514     0A40  3A80               	xorlw	128
  9515     0A41  00FF               	movwf	btemp+1
  9516     0A42  3080               	movlw	128
  9517     0A43  027F               	subwf	btemp+1,w
  9518     0A44  1D03               	skipz
  9519     0A45  2A48               	goto	u3795
  9520     0A46  3001               	movlw	1
  9521     0A47  0225               	subwf	___fldiv@new_exp,w
  9522     0A48                     u3795:
  9523     0A48  1803               	skipnc
  9524     0A49  2A4B               	goto	u3791
  9525     0A4A  2A4C               	goto	u3790
  9526     0A4B                     u3791:
  9527     0A4B  2A59               	goto	l611
  9528     0A4C                     u3790:
  9529     0A4C                     l2794:
  9530     0A4C  1283               	bcf	3,5	;RP0=0, select bank0
  9531     0A4D  1303               	bcf	3,6	;RP1=0, select bank0
  9532     0A4E  01A5               	clrf	___fldiv@new_exp
  9533     0A4F  01A6               	clrf	___fldiv@new_exp+1
  9534     0A50                     l2796:
  9535     0A50  3000               	movlw	0
  9536     0A51  00F7               	movwf	___fldiv@b+3
  9537     0A52  3000               	movlw	0
  9538     0A53  00F6               	movwf	___fldiv@b+2
  9539     0A54  3000               	movlw	0
  9540     0A55  00F5               	movwf	___fldiv@b+1
  9541     0A56  3000               	movlw	0
  9542     0A57  00F4               	movwf	___fldiv@b
  9543     0A58                     l2798:
  9544     0A58  01A4               	clrf	___fldiv@sign
  9545     0A59                     l611:
  9546     0A59  1283               	bcf	3,5	;RP0=0, select bank0
  9547     0A5A  1303               	bcf	3,6	;RP1=0, select bank0
  9548     0A5B  0825               	movf	___fldiv@new_exp,w
  9549     0A5C  00AB               	movwf	___fldiv@bexp
  9550     0A5D                     l2800:
  9551     0A5D  1C2B               	btfss	___fldiv@bexp,0
  9552     0A5E  2A60               	goto	u3801
  9553     0A5F  2A61               	goto	u3800
  9554     0A60                     u3801:
  9555     0A60  2A63               	goto	l2804
  9556     0A61                     u3800:
  9557     0A61                     l2802:
  9558     0A61  17F6               	bsf	___fldiv@b+2,7
  9559     0A62  2A65               	goto	l613
  9560     0A63                     l2804:
  9561     0A63  307F               	movlw	127
  9562     0A64  05F6               	andwf	___fldiv@b+2,f
  9563     0A65                     l613:
  9564     0A65  082B               	movf	___fldiv@bexp,w
  9565     0A66  00F8               	movwf	??___fldiv
  9566     0A67  1003               	clrc
  9567     0A68  0C78               	rrf	??___fldiv,w
  9568     0A69  00F7               	movwf	___fldiv@b+3
  9569     0A6A  0824               	movf	___fldiv@sign,w
  9570     0A6B  04F7               	iorwf	___fldiv@b+3,f
  9571     0A6C  2909               	goto	l2712
  9572     0A6D                     l591:
  9573     0A6D  0008               	return
  9574     0A6E                     __end_of___fldiv:
  9575     0002                     ___latbits      equ	2
  9576     007E                     btemp           set	126	;btemp
  9577     007E                     wtemp0          set	126
  9578                           
  9579                           	psect	text12_split_1
  9580     00AB                     l3084:
  9581                           
  9582                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.0;
  9583     00AB  303F               	movlw	63
  9584     00AC  1683               	bsf	3,5	;RP0=1, select bank1
  9585     00AD  1303               	bcf	3,6	;RP1=0, select bank1
  9586     00AE  00CB               	movwf	(efgtoa@u+3)^(0+128)
  9587     00AF  3080               	movlw	128
  9588     00B0  00CA               	movwf	(efgtoa@u+2)^(0+128)
  9589     00B1  3000               	movlw	0
  9590     00B2  00C9               	movwf	(efgtoa@u+1)^(0+128)
  9591     00B3  3000               	movlw	0
  9592     00B4  00C8               	movwf	efgtoa@u^(0+128)
  9593     00B5                     l3086:
  9594                           
  9595                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  9596     00B5  01AF               	clrf	efgtoa@e^(0+128)
  9597     00B6  01B0               	clrf	(efgtoa@e+1)^(0+128)
  9598     00B7                     l3088:
  9599                           
  9600                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f == 0.0)
      +                          ) {
  9601     00B7  0847               	movf	(efgtoa@g+3)^(0+128),w
  9602     00B8  00F3               	movwf	___fleq@ff1+3
  9603     00B9  0846               	movf	(efgtoa@g+2)^(0+128),w
  9604     00BA  00F2               	movwf	___fleq@ff1+2
  9605     00BB  0845               	movf	(efgtoa@g+1)^(0+128),w
  9606     00BC  00F1               	movwf	___fleq@ff1+1
  9607     00BD  0844               	movf	efgtoa@g^(0+128),w
  9608     00BE  00F0               	movwf	___fleq@ff1
  9609     00BF  3000               	movlw	0
  9610     00C0  00F7               	movwf	___fleq@ff2+3
  9611     00C1  3000               	movlw	0
  9612     00C2  00F6               	movwf	___fleq@ff2+2
  9613     00C3  3000               	movlw	0
  9614     00C4  00F5               	movwf	___fleq@ff2+1
  9615     00C5  3000               	movlw	0
  9616     00C6  00F4               	movwf	___fleq@ff2
  9617     00C7  160A  158A  243C  120A  118A  	fcall	___fleq
  9618     00CC  1803               	btfsc	3,0
  9619     00CD  28CF               	goto	u4491
  9620     00CE  28D0               	goto	u4490
  9621     00CF                     u4491:
  9622     00CF  2AE1               	goto	l3114
  9623     00D0                     u4490:
  9624     00D0  28E1               	goto	l3094
  9625     00D1                     l3092:
  9626                           
  9627                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  9628     00D1  1683               	bsf	3,5	;RP0=1, select bank1
  9629     00D2  1303               	bcf	3,6	;RP1=0, select bank1
  9630     00D3  0836               	movf	(efgtoa@ou+3)^(0+128),w
  9631     00D4  00CB               	movwf	(efgtoa@u+3)^(0+128)
  9632     00D5  0835               	movf	(efgtoa@ou+2)^(0+128),w
  9633     00D6  00CA               	movwf	(efgtoa@u+2)^(0+128)
  9634     00D7  0834               	movf	(efgtoa@ou+1)^(0+128),w
  9635     00D8  00C9               	movwf	(efgtoa@u+1)^(0+128)
  9636     00D9  0833               	movf	efgtoa@ou^(0+128),w
  9637     00DA  00C8               	movwf	efgtoa@u^(0+128)
  9638                           
  9639                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 662:    ++e;
  9640     00DB  3001               	movlw	1
  9641     00DC  07AF               	addwf	efgtoa@e^(0+128),f
  9642     00DD  1803               	skipnc
  9643     00DE  0AB0               	incf	(efgtoa@e+1)^(0+128),f
  9644     00DF  3000               	movlw	0
  9645     00E0  07B0               	addwf	(efgtoa@e+1)^(0+128),f
  9646     00E1                     l3094:
  9647                           
  9648                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 660:   while ((labs((g)
      +                          .u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  9649     00E1  3041               	movlw	65
  9650     00E2  1283               	bcf	3,5	;RP0=0, select bank0
  9651     00E3  1303               	bcf	3,6	;RP1=0, select bank0
  9652     00E4  00A3               	movwf	___flmul@b+3
  9653     00E5  3020               	movlw	32
  9654     00E6  00A2               	movwf	___flmul@b+2
  9655     00E7  3000               	movlw	0
  9656     00E8  00A1               	movwf	___flmul@b+1
  9657     00E9  3000               	movlw	0
  9658     00EA  00A0               	movwf	___flmul@b
  9659     00EB  1683               	bsf	3,5	;RP0=1, select bank1
  9660     00EC  1303               	bcf	3,6	;RP1=0, select bank1
  9661     00ED  084B               	movf	(efgtoa@u+3)^(0+128),w
  9662     00EE  1283               	bcf	3,5	;RP0=0, select bank0
  9663     00EF  1303               	bcf	3,6	;RP1=0, select bank0
  9664     00F0  00A7               	movwf	___flmul@a+3
  9665     00F1  1683               	bsf	3,5	;RP0=1, select bank1
  9666     00F2  1303               	bcf	3,6	;RP1=0, select bank1
  9667     00F3  084A               	movf	(efgtoa@u+2)^(0+128),w
  9668     00F4  1283               	bcf	3,5	;RP0=0, select bank0
  9669     00F5  1303               	bcf	3,6	;RP1=0, select bank0
  9670     00F6  00A6               	movwf	___flmul@a+2
  9671     00F7  1683               	bsf	3,5	;RP0=1, select bank1
  9672     00F8  1303               	bcf	3,6	;RP1=0, select bank1
  9673     00F9  0849               	movf	(efgtoa@u+1)^(0+128),w
  9674     00FA  1283               	bcf	3,5	;RP0=0, select bank0
  9675     00FB  1303               	bcf	3,6	;RP1=0, select bank0
  9676     00FC  00A5               	movwf	___flmul@a+1
  9677     00FD  1683               	bsf	3,5	;RP0=1, select bank1
  9678     00FE  1303               	bcf	3,6	;RP1=0, select bank1
  9679     00FF  0848               	movf	efgtoa@u^(0+128),w
  9680     0100  1283               	bcf	3,5	;RP0=0, select bank0
  9681     0101  1303               	bcf	3,6	;RP1=0, select bank0
  9682     0102  00A4               	movwf	___flmul@a
  9683     0103  120A  158A  24BE  120A  118A  	fcall	___flmul
  9684     0108  1283               	bcf	3,5	;RP0=0, select bank0
  9685     0109  1303               	bcf	3,6	;RP1=0, select bank0
  9686     010A  0823               	movf	?___flmul+3,w
  9687     010B  1683               	bsf	3,5	;RP0=1, select bank1
  9688     010C  1303               	bcf	3,6	;RP1=0, select bank1
  9689     010D  00B6               	movwf	(efgtoa@ou+3)^(0+128)
  9690     010E  1283               	bcf	3,5	;RP0=0, select bank0
  9691     010F  1303               	bcf	3,6	;RP1=0, select bank0
  9692     0110  0822               	movf	?___flmul+2,w
  9693     0111  1683               	bsf	3,5	;RP0=1, select bank1
  9694     0112  1303               	bcf	3,6	;RP1=0, select bank1
  9695     0113  00B5               	movwf	(efgtoa@ou+2)^(0+128)
  9696     0114  1283               	bcf	3,5	;RP0=0, select bank0
  9697     0115  1303               	bcf	3,6	;RP1=0, select bank0
  9698     0116  0821               	movf	?___flmul+1,w
  9699     0117  1683               	bsf	3,5	;RP0=1, select bank1
  9700     0118  1303               	bcf	3,6	;RP1=0, select bank1
  9701     0119  00B4               	movwf	(efgtoa@ou+1)^(0+128)
  9702     011A  1283               	bcf	3,5	;RP0=0, select bank0
  9703     011B  1303               	bcf	3,6	;RP1=0, select bank0
  9704     011C  0820               	movf	?___flmul,w
  9705     011D  1683               	bsf	3,5	;RP0=1, select bank1
  9706     011E  1303               	bcf	3,6	;RP1=0, select bank1
  9707     011F  00B3               	movwf	efgtoa@ou^(0+128)
  9708     0120                     l3096:
  9709     0120  0844               	movf	efgtoa@g^(0+128),w
  9710     0121  1283               	bcf	3,5	;RP0=0, select bank0
  9711     0122  1303               	bcf	3,6	;RP1=0, select bank0
  9712     0123  00D8               	movwf	??_efgtoa
  9713     0124  1683               	bsf	3,5	;RP0=1, select bank1
  9714     0125  1303               	bcf	3,6	;RP1=0, select bank1
  9715     0126  0845               	movf	(efgtoa@g+1)^(0+128),w
  9716     0127  1283               	bcf	3,5	;RP0=0, select bank0
  9717     0128  1303               	bcf	3,6	;RP1=0, select bank0
  9718     0129  00D9               	movwf	??_efgtoa+1
  9719     012A  1683               	bsf	3,5	;RP0=1, select bank1
  9720     012B  1303               	bcf	3,6	;RP1=0, select bank1
  9721     012C  0846               	movf	(efgtoa@g+2)^(0+128),w
  9722     012D  1283               	bcf	3,5	;RP0=0, select bank0
  9723     012E  1303               	bcf	3,6	;RP1=0, select bank0
  9724     012F  00DA               	movwf	??_efgtoa+2
  9725     0130  1683               	bsf	3,5	;RP0=1, select bank1
  9726     0131  1303               	bcf	3,6	;RP1=0, select bank1
  9727     0132  0847               	movf	(efgtoa@g+3)^(0+128),w
  9728     0133  1283               	bcf	3,5	;RP0=0, select bank0
  9729     0134  1303               	bcf	3,6	;RP1=0, select bank0
  9730     0135  00DB               	movwf	??_efgtoa+3
  9731     0136  1683               	bsf	3,5	;RP0=1, select bank1
  9732     0137  1303               	bcf	3,6	;RP1=0, select bank1
  9733     0138  0833               	movf	efgtoa@ou^(0+128),w
  9734     0139  1283               	bcf	3,5	;RP0=0, select bank0
  9735     013A  1303               	bcf	3,6	;RP1=0, select bank0
  9736     013B  02D8               	subwf	??_efgtoa,f
  9737     013C  1683               	bsf	3,5	;RP0=1, select bank1
  9738     013D  1303               	bcf	3,6	;RP1=0, select bank1
  9739     013E  0834               	movf	(efgtoa@ou+1)^(0+128),w
  9740     013F  1C03               	skipc
  9741     0140  0F34               	incfsz	(efgtoa@ou+1)^(0+128),w
  9742     0141  2943               	goto	u4501
  9743     0142  2946               	goto	u4502
  9744     0143                     u4501:
  9745     0143  1283               	bcf	3,5	;RP0=0, select bank0
  9746     0144  1303               	bcf	3,6	;RP1=0, select bank0
  9747     0145  02D9               	subwf	??_efgtoa+1,f
  9748     0146                     u4502:
  9749     0146  1683               	bsf	3,5	;RP0=1, select bank1
  9750     0147  1303               	bcf	3,6	;RP1=0, select bank1
  9751     0148  0835               	movf	(efgtoa@ou+2)^(0+128),w
  9752     0149  1C03               	skipc
  9753     014A  0F35               	incfsz	(efgtoa@ou+2)^(0+128),w
  9754     014B  294D               	goto	u4503
  9755     014C  2950               	goto	u4504
  9756     014D                     u4503:
  9757     014D  1283               	bcf	3,5	;RP0=0, select bank0
  9758     014E  1303               	bcf	3,6	;RP1=0, select bank0
  9759     014F  02DA               	subwf	??_efgtoa+2,f
  9760     0150                     u4504:
  9761     0150  1683               	bsf	3,5	;RP0=1, select bank1
  9762     0151  1303               	bcf	3,6	;RP1=0, select bank1
  9763     0152  0836               	movf	(efgtoa@ou+3)^(0+128),w
  9764     0153  1C03               	skipc
  9765     0154  0F36               	incfsz	(efgtoa@ou+3)^(0+128),w
  9766     0155  2957               	goto	u4505
  9767     0156  295A               	goto	u4506
  9768     0157                     u4505:
  9769     0157  1283               	bcf	3,5	;RP0=0, select bank0
  9770     0158  1303               	bcf	3,6	;RP1=0, select bank0
  9771     0159  02DB               	subwf	??_efgtoa+3,f
  9772     015A                     u4506:
  9773     015A  1683               	bsf	3,5	;RP0=1, select bank1
  9774     015B  1303               	bcf	3,6	;RP1=0, select bank1
  9775     015C  1283               	bcf	3,5	;RP0=0, select bank0
  9776     015D  1303               	bcf	3,6	;RP1=0, select bank0
  9777     015E  085B               	movf	??_efgtoa+3,w
  9778     015F  00F3               	movwf	labs@a+3
  9779     0160  085A               	movf	??_efgtoa+2,w
  9780     0161  00F2               	movwf	labs@a+2
  9781     0162  0859               	movf	??_efgtoa+1,w
  9782     0163  00F1               	movwf	labs@a+1
  9783     0164  0858               	movf	??_efgtoa,w
  9784     0165  00F0               	movwf	labs@a
  9785     0166  160A  158A  22CC  120A  118A  	fcall	_labs
  9786     016B  1BF3               	btfsc	?_labs+3,7
  9787     016C  297D               	goto	u4511
  9788     016D  0873               	movf	?_labs+3,w
  9789     016E  1D03               	btfss	3,2
  9790     016F  297E               	goto	u4510
  9791     0170  0872               	movf	?_labs+2,w
  9792     0171  1D03               	btfss	3,2
  9793     0172  297E               	goto	u4510
  9794     0173  0871               	movf	?_labs+1,w
  9795     0174  1D03               	btfss	3,2
  9796     0175  297E               	goto	u4510
  9797     0176  3002               	movlw	2
  9798     0177  0270               	subwf	?_labs,w
  9799     0178  1D03               	skipz
  9800     0179  297A               	goto	u4513
  9801     017A                     u4513:
  9802     017A  1C03               	btfss	3,0
  9803     017B  297D               	goto	u4511
  9804     017C  297E               	goto	u4510
  9805     017D                     u4511:
  9806     017D  28D1               	goto	l3092
  9807     017E                     u4510:
  9808     017E                     l3098:
  9809     017E  1683               	bsf	3,5	;RP0=1, select bank1
  9810     017F  1303               	bcf	3,6	;RP1=0, select bank1
  9811     0180  0836               	movf	(efgtoa@ou+3)^(0+128),w
  9812     0181  1283               	bcf	3,5	;RP0=0, select bank0
  9813     0182  1303               	bcf	3,6	;RP1=0, select bank0
  9814     0183  00B8               	movwf	___flge@ff1+3
  9815     0184  1683               	bsf	3,5	;RP0=1, select bank1
  9816     0185  1303               	bcf	3,6	;RP1=0, select bank1
  9817     0186  0835               	movf	(efgtoa@ou+2)^(0+128),w
  9818     0187  1283               	bcf	3,5	;RP0=0, select bank0
  9819     0188  1303               	bcf	3,6	;RP1=0, select bank0
  9820     0189  00B7               	movwf	___flge@ff1+2
  9821     018A  1683               	bsf	3,5	;RP0=1, select bank1
  9822     018B  1303               	bcf	3,6	;RP1=0, select bank1
  9823     018C  0834               	movf	(efgtoa@ou+1)^(0+128),w
  9824     018D  1283               	bcf	3,5	;RP0=0, select bank0
  9825     018E  1303               	bcf	3,6	;RP1=0, select bank0
  9826     018F  00B6               	movwf	___flge@ff1+1
  9827     0190  1683               	bsf	3,5	;RP0=1, select bank1
  9828     0191  1303               	bcf	3,6	;RP1=0, select bank1
  9829     0192  0833               	movf	efgtoa@ou^(0+128),w
  9830     0193  1283               	bcf	3,5	;RP0=0, select bank0
  9831     0194  1303               	bcf	3,6	;RP1=0, select bank0
  9832     0195  00B5               	movwf	___flge@ff1
  9833     0196  1683               	bsf	3,5	;RP0=1, select bank1
  9834     0197  1303               	bcf	3,6	;RP1=0, select bank1
  9835     0198  0847               	movf	(efgtoa@g+3)^(0+128),w
  9836     0199  1283               	bcf	3,5	;RP0=0, select bank0
  9837     019A  1303               	bcf	3,6	;RP1=0, select bank0
  9838     019B  00BC               	movwf	___flge@ff2+3
  9839     019C  1683               	bsf	3,5	;RP0=1, select bank1
  9840     019D  1303               	bcf	3,6	;RP1=0, select bank1
  9841     019E  0846               	movf	(efgtoa@g+2)^(0+128),w
  9842     019F  1283               	bcf	3,5	;RP0=0, select bank0
  9843     01A0  1303               	bcf	3,6	;RP1=0, select bank0
  9844     01A1  00BB               	movwf	___flge@ff2+2
  9845     01A2  1683               	bsf	3,5	;RP0=1, select bank1
  9846     01A3  1303               	bcf	3,6	;RP1=0, select bank1
  9847     01A4  0845               	movf	(efgtoa@g+1)^(0+128),w
  9848     01A5  1283               	bcf	3,5	;RP0=0, select bank0
  9849     01A6  1303               	bcf	3,6	;RP1=0, select bank0
  9850     01A7  00BA               	movwf	___flge@ff2+1
  9851     01A8  1683               	bsf	3,5	;RP0=1, select bank1
  9852     01A9  1303               	bcf	3,6	;RP1=0, select bank1
  9853     01AA  0844               	movf	efgtoa@g^(0+128),w
  9854     01AB  1283               	bcf	3,5	;RP0=0, select bank0
  9855     01AC  1303               	bcf	3,6	;RP1=0, select bank0
  9856     01AD  00B9               	movwf	___flge@ff2
  9857     01AE  120A  118A  2007  120A  118A  	fcall	___flge
  9858     01B3  1C03               	btfss	3,0
  9859     01B4  29B6               	goto	u4521
  9860     01B5  29B7               	goto	u4520
  9861     01B6                     u4521:
  9862     01B6  28D1               	goto	l3092
  9863     01B7                     u4520:
  9864     01B7                     l3100:
  9865                           
  9866                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 664:   if ((labs((g).u-
      +                          (u).u) <= 1)) {
  9867     01B7  1683               	bsf	3,5	;RP0=1, select bank1
  9868     01B8  1303               	bcf	3,6	;RP1=0, select bank1
  9869     01B9  0844               	movf	efgtoa@g^(0+128),w
  9870     01BA  1283               	bcf	3,5	;RP0=0, select bank0
  9871     01BB  1303               	bcf	3,6	;RP1=0, select bank0
  9872     01BC  00D8               	movwf	??_efgtoa
  9873     01BD  1683               	bsf	3,5	;RP0=1, select bank1
  9874     01BE  1303               	bcf	3,6	;RP1=0, select bank1
  9875     01BF  0845               	movf	(efgtoa@g+1)^(0+128),w
  9876     01C0  1283               	bcf	3,5	;RP0=0, select bank0
  9877     01C1  1303               	bcf	3,6	;RP1=0, select bank0
  9878     01C2  00D9               	movwf	??_efgtoa+1
  9879     01C3  1683               	bsf	3,5	;RP0=1, select bank1
  9880     01C4  1303               	bcf	3,6	;RP1=0, select bank1
  9881     01C5  0846               	movf	(efgtoa@g+2)^(0+128),w
  9882     01C6  1283               	bcf	3,5	;RP0=0, select bank0
  9883     01C7  1303               	bcf	3,6	;RP1=0, select bank0
  9884     01C8  00DA               	movwf	??_efgtoa+2
  9885     01C9  1683               	bsf	3,5	;RP0=1, select bank1
  9886     01CA  1303               	bcf	3,6	;RP1=0, select bank1
  9887     01CB  0847               	movf	(efgtoa@g+3)^(0+128),w
  9888     01CC  1283               	bcf	3,5	;RP0=0, select bank0
  9889     01CD  1303               	bcf	3,6	;RP1=0, select bank0
  9890     01CE  00DB               	movwf	??_efgtoa+3
  9891     01CF  1683               	bsf	3,5	;RP0=1, select bank1
  9892     01D0  1303               	bcf	3,6	;RP1=0, select bank1
  9893     01D1  0848               	movf	efgtoa@u^(0+128),w
  9894     01D2  1283               	bcf	3,5	;RP0=0, select bank0
  9895     01D3  1303               	bcf	3,6	;RP1=0, select bank0
  9896     01D4  02D8               	subwf	??_efgtoa,f
  9897     01D5  1683               	bsf	3,5	;RP0=1, select bank1
  9898     01D6  1303               	bcf	3,6	;RP1=0, select bank1
  9899     01D7  0849               	movf	(efgtoa@u+1)^(0+128),w
  9900     01D8  1C03               	skipc
  9901     01D9  0F49               	incfsz	(efgtoa@u+1)^(0+128),w
  9902     01DA  29DC               	goto	u4531
  9903     01DB  29DF               	goto	u4532
  9904     01DC                     u4531:
  9905     01DC  1283               	bcf	3,5	;RP0=0, select bank0
  9906     01DD  1303               	bcf	3,6	;RP1=0, select bank0
  9907     01DE  02D9               	subwf	??_efgtoa+1,f
  9908     01DF                     u4532:
  9909     01DF  1683               	bsf	3,5	;RP0=1, select bank1
  9910     01E0  1303               	bcf	3,6	;RP1=0, select bank1
  9911     01E1  084A               	movf	(efgtoa@u+2)^(0+128),w
  9912     01E2  1C03               	skipc
  9913     01E3  0F4A               	incfsz	(efgtoa@u+2)^(0+128),w
  9914     01E4  29E6               	goto	u4533
  9915     01E5  29E9               	goto	u4534
  9916     01E6                     u4533:
  9917     01E6  1283               	bcf	3,5	;RP0=0, select bank0
  9918     01E7  1303               	bcf	3,6	;RP1=0, select bank0
  9919     01E8  02DA               	subwf	??_efgtoa+2,f
  9920     01E9                     u4534:
  9921     01E9  1683               	bsf	3,5	;RP0=1, select bank1
  9922     01EA  1303               	bcf	3,6	;RP1=0, select bank1
  9923     01EB  084B               	movf	(efgtoa@u+3)^(0+128),w
  9924     01EC  1C03               	skipc
  9925     01ED  0F4B               	incfsz	(efgtoa@u+3)^(0+128),w
  9926     01EE  29F0               	goto	u4535
  9927     01EF  29F3               	goto	u4536
  9928     01F0                     u4535:
  9929     01F0  1283               	bcf	3,5	;RP0=0, select bank0
  9930     01F1  1303               	bcf	3,6	;RP1=0, select bank0
  9931     01F2  02DB               	subwf	??_efgtoa+3,f
  9932     01F3                     u4536:
  9933     01F3  1683               	bsf	3,5	;RP0=1, select bank1
  9934     01F4  1303               	bcf	3,6	;RP1=0, select bank1
  9935     01F5  1283               	bcf	3,5	;RP0=0, select bank0
  9936     01F6  1303               	bcf	3,6	;RP1=0, select bank0
  9937     01F7  085B               	movf	??_efgtoa+3,w
  9938     01F8  00F3               	movwf	labs@a+3
  9939     01F9  085A               	movf	??_efgtoa+2,w
  9940     01FA  00F2               	movwf	labs@a+2
  9941     01FB  0859               	movf	??_efgtoa+1,w
  9942     01FC  00F1               	movwf	labs@a+1
  9943     01FD  0858               	movf	??_efgtoa,w
  9944     01FE  00F0               	movwf	labs@a
  9945     01FF  160A  158A  22CC  120A  118A  	fcall	_labs
  9946     0204  1BF3               	btfsc	?_labs+3,7
  9947     0205  2A17               	goto	u4540
  9948     0206  0873               	movf	?_labs+3,w
  9949     0207  1D03               	btfss	3,2
  9950     0208  2A16               	goto	u4541
  9951     0209  0872               	movf	?_labs+2,w
  9952     020A  1D03               	btfss	3,2
  9953     020B  2A16               	goto	u4541
  9954     020C  0871               	movf	?_labs+1,w
  9955     020D  1D03               	btfss	3,2
  9956     020E  2A16               	goto	u4541
  9957     020F  3002               	movlw	2
  9958     0210  0270               	subwf	?_labs,w
  9959     0211  1D03               	skipz
  9960     0212  2A13               	goto	u4543
  9961     0213                     u4543:
  9962     0213  1803               	btfsc	3,0
  9963     0214  2A16               	goto	u4541
  9964     0215  2A17               	goto	u4540
  9965     0216                     u4541:
  9966     0216  2AA8               	goto	l3112
  9967     0217                     u4540:
  9968     0217                     l3102:
  9969                           
  9970                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 665:    g = u;
  9971     0217  1683               	bsf	3,5	;RP0=1, select bank1
  9972     0218  1303               	bcf	3,6	;RP1=0, select bank1
  9973     0219  084B               	movf	(efgtoa@u+3)^(0+128),w
  9974     021A  00C7               	movwf	(efgtoa@g+3)^(0+128)
  9975     021B  084A               	movf	(efgtoa@u+2)^(0+128),w
  9976     021C  00C6               	movwf	(efgtoa@g+2)^(0+128)
  9977     021D  0849               	movf	(efgtoa@u+1)^(0+128),w
  9978     021E  00C5               	movwf	(efgtoa@g+1)^(0+128)
  9979     021F  0848               	movf	efgtoa@u^(0+128),w
  9980     0220  00C4               	movwf	efgtoa@g^(0+128)
  9981                           
  9982                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 666:   }
  9983     0221  2AE1               	goto	l3114
  9984     0222                     l3104:
  9985                           
  9986                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 669:     u.f = u.f/10.0
      +                          ;
  9987     0222  3041               	movlw	65
  9988     0223  00F3               	movwf	___fldiv@a+3
  9989     0224  3020               	movlw	32
  9990     0225  00F2               	movwf	___fldiv@a+2
  9991     0226  3000               	movlw	0
  9992     0227  00F1               	movwf	___fldiv@a+1
  9993     0228  3000               	movlw	0
  9994     0229  00F0               	movwf	___fldiv@a
  9995     022A  1683               	bsf	3,5	;RP0=1, select bank1
  9996     022B  1303               	bcf	3,6	;RP1=0, select bank1
  9997     022C  084B               	movf	(efgtoa@u+3)^(0+128),w
  9998     022D  00F7               	movwf	___fldiv@b+3
  9999     022E  084A               	movf	(efgtoa@u+2)^(0+128),w
 10000     022F  00F6               	movwf	___fldiv@b+2
 10001     0230  0849               	movf	(efgtoa@u+1)^(0+128),w
 10002     0231  00F5               	movwf	___fldiv@b+1
 10003     0232  0848               	movf	efgtoa@u^(0+128),w
 10004     0233  00F4               	movwf	___fldiv@b
 10005     0234  120A  158A  209E  120A  118A  	fcall	___fldiv
 10006     0239  0873               	movf	?___fldiv+3,w
 10007     023A  1683               	bsf	3,5	;RP0=1, select bank1
 10008     023B  1303               	bcf	3,6	;RP1=0, select bank1
 10009     023C  00CB               	movwf	(efgtoa@u+3)^(0+128)
 10010     023D  0872               	movf	?___fldiv+2,w
 10011     023E  00CA               	movwf	(efgtoa@u+2)^(0+128)
 10012     023F  0871               	movf	?___fldiv+1,w
 10013     0240  00C9               	movwf	(efgtoa@u+1)^(0+128)
 10014     0241  0870               	movf	?___fldiv,w
 10015     0242  00C8               	movwf	efgtoa@u^(0+128)
 10016     0243                     l3106:
 10017                           
 10018                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 670:     --e;
 10019     0243  30FF               	movlw	255
 10020     0244  07AF               	addwf	efgtoa@e^(0+128),f
 10021     0245  1803               	skipnc
 10022     0246  0AB0               	incf	(efgtoa@e+1)^(0+128),f
 10023     0247  30FF               	movlw	255
 10024     0248  07B0               	addwf	(efgtoa@e+1)^(0+128),f
 10025     0249                     l3108:
 10026                           
 10027                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 671:     if ((labs((g).
      +                          u-(u).u) <= 1)) {
 10028     0249  0844               	movf	efgtoa@g^(0+128),w
 10029     024A  1283               	bcf	3,5	;RP0=0, select bank0
 10030     024B  1303               	bcf	3,6	;RP1=0, select bank0
 10031     024C  00D8               	movwf	??_efgtoa
 10032     024D  1683               	bsf	3,5	;RP0=1, select bank1
 10033     024E  1303               	bcf	3,6	;RP1=0, select bank1
 10034     024F  0845               	movf	(efgtoa@g+1)^(0+128),w
 10035     0250  1283               	bcf	3,5	;RP0=0, select bank0
 10036     0251  1303               	bcf	3,6	;RP1=0, select bank0
 10037     0252  00D9               	movwf	??_efgtoa+1
 10038     0253  1683               	bsf	3,5	;RP0=1, select bank1
 10039     0254  1303               	bcf	3,6	;RP1=0, select bank1
 10040     0255  0846               	movf	(efgtoa@g+2)^(0+128),w
 10041     0256  1283               	bcf	3,5	;RP0=0, select bank0
 10042     0257  1303               	bcf	3,6	;RP1=0, select bank0
 10043     0258  00DA               	movwf	??_efgtoa+2
 10044     0259  1683               	bsf	3,5	;RP0=1, select bank1
 10045     025A  1303               	bcf	3,6	;RP1=0, select bank1
 10046     025B  0847               	movf	(efgtoa@g+3)^(0+128),w
 10047     025C  1283               	bcf	3,5	;RP0=0, select bank0
 10048     025D  1303               	bcf	3,6	;RP1=0, select bank0
 10049     025E  00DB               	movwf	??_efgtoa+3
 10050     025F  1683               	bsf	3,5	;RP0=1, select bank1
 10051     0260  1303               	bcf	3,6	;RP1=0, select bank1
 10052     0261  0848               	movf	efgtoa@u^(0+128),w
 10053     0262  1283               	bcf	3,5	;RP0=0, select bank0
 10054     0263  1303               	bcf	3,6	;RP1=0, select bank0
 10055     0264  02D8               	subwf	??_efgtoa,f
 10056     0265  1683               	bsf	3,5	;RP0=1, select bank1
 10057     0266  1303               	bcf	3,6	;RP1=0, select bank1
 10058     0267  0849               	movf	(efgtoa@u+1)^(0+128),w
 10059     0268  1C03               	skipc
 10060     0269  0F49               	incfsz	(efgtoa@u+1)^(0+128),w
 10061     026A  2A6C               	goto	u4551
 10062     026B  2A6F               	goto	u4552
 10063     026C                     u4551:
 10064     026C  1283               	bcf	3,5	;RP0=0, select bank0
 10065     026D  1303               	bcf	3,6	;RP1=0, select bank0
 10066     026E  02D9               	subwf	??_efgtoa+1,f
 10067     026F                     u4552:
 10068     026F  1683               	bsf	3,5	;RP0=1, select bank1
 10069     0270  1303               	bcf	3,6	;RP1=0, select bank1
 10070     0271  084A               	movf	(efgtoa@u+2)^(0+128),w
 10071     0272  1C03               	skipc
 10072     0273  0F4A               	incfsz	(efgtoa@u+2)^(0+128),w
 10073     0274  2A76               	goto	u4553
 10074     0275  2A79               	goto	u4554
 10075     0276                     u4553:
 10076     0276  1283               	bcf	3,5	;RP0=0, select bank0
 10077     0277  1303               	bcf	3,6	;RP1=0, select bank0
 10078     0278  02DA               	subwf	??_efgtoa+2,f
 10079     0279                     u4554:
 10080     0279  1683               	bsf	3,5	;RP0=1, select bank1
 10081     027A  1303               	bcf	3,6	;RP1=0, select bank1
 10082     027B  084B               	movf	(efgtoa@u+3)^(0+128),w
 10083     027C  1C03               	skipc
 10084     027D  0F4B               	incfsz	(efgtoa@u+3)^(0+128),w
 10085     027E  2A80               	goto	u4555
 10086     027F  2A83               	goto	u4556
 10087     0280                     u4555:
 10088     0280  1283               	bcf	3,5	;RP0=0, select bank0
 10089     0281  1303               	bcf	3,6	;RP1=0, select bank0
 10090     0282  02DB               	subwf	??_efgtoa+3,f
 10091     0283                     u4556:
 10092     0283  1683               	bsf	3,5	;RP0=1, select bank1
 10093     0284  1303               	bcf	3,6	;RP1=0, select bank1
 10094     0285  1283               	bcf	3,5	;RP0=0, select bank0
 10095     0286  1303               	bcf	3,6	;RP1=0, select bank0
 10096     0287  085B               	movf	??_efgtoa+3,w
 10097     0288  00F3               	movwf	labs@a+3
 10098     0289  085A               	movf	??_efgtoa+2,w
 10099     028A  00F2               	movwf	labs@a+2
 10100     028B  0859               	movf	??_efgtoa+1,w
 10101     028C  00F1               	movwf	labs@a+1
 10102     028D  0858               	movf	??_efgtoa,w
 10103     028E  00F0               	movwf	labs@a
 10104     028F  160A  158A  22CC  120A  118A  	fcall	_labs
 10105     0294  1BF3               	btfsc	?_labs+3,7
 10106     0295  2AA7               	goto	u4560
 10107     0296  0873               	movf	?_labs+3,w
 10108     0297  1D03               	btfss	3,2
 10109     0298  2AA6               	goto	u4561
 10110     0299  0872               	movf	?_labs+2,w
 10111     029A  1D03               	btfss	3,2
 10112     029B  2AA6               	goto	u4561
 10113     029C  0871               	movf	?_labs+1,w
 10114     029D  1D03               	btfss	3,2
 10115     029E  2AA6               	goto	u4561
 10116     029F  3002               	movlw	2
 10117     02A0  0270               	subwf	?_labs,w
 10118     02A1  1D03               	skipz
 10119     02A2  2AA3               	goto	u4563
 10120     02A3                     u4563:
 10121     02A3  1803               	btfsc	3,0
 10122     02A4  2AA6               	goto	u4561
 10123     02A5  2AA7               	goto	u4560
 10124     02A6                     u4561:
 10125     02A6  2AA8               	goto	l3112
 10126     02A7                     u4560:
 10127     02A7  2A17               	goto	l3102
 10128     02A8                     l3112:
 10129                           
 10130                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 668:    while (g.f < u.
      +                          f) {
 10131     02A8  1683               	bsf	3,5	;RP0=1, select bank1
 10132     02A9  1303               	bcf	3,6	;RP1=0, select bank1
 10133     02AA  0847               	movf	(efgtoa@g+3)^(0+128),w
 10134     02AB  1283               	bcf	3,5	;RP0=0, select bank0
 10135     02AC  1303               	bcf	3,6	;RP1=0, select bank0
 10136     02AD  00B8               	movwf	___flge@ff1+3
 10137     02AE  1683               	bsf	3,5	;RP0=1, select bank1
 10138     02AF  1303               	bcf	3,6	;RP1=0, select bank1
 10139     02B0  0846               	movf	(efgtoa@g+2)^(0+128),w
 10140     02B1  1283               	bcf	3,5	;RP0=0, select bank0
 10141     02B2  1303               	bcf	3,6	;RP1=0, select bank0
 10142     02B3  00B7               	movwf	___flge@ff1+2
 10143     02B4  1683               	bsf	3,5	;RP0=1, select bank1
 10144     02B5  1303               	bcf	3,6	;RP1=0, select bank1
 10145     02B6  0845               	movf	(efgtoa@g+1)^(0+128),w
 10146     02B7  1283               	bcf	3,5	;RP0=0, select bank0
 10147     02B8  1303               	bcf	3,6	;RP1=0, select bank0
 10148     02B9  00B6               	movwf	___flge@ff1+1
 10149     02BA  1683               	bsf	3,5	;RP0=1, select bank1
 10150     02BB  1303               	bcf	3,6	;RP1=0, select bank1
 10151     02BC  0844               	movf	efgtoa@g^(0+128),w
 10152     02BD  1283               	bcf	3,5	;RP0=0, select bank0
 10153     02BE  1303               	bcf	3,6	;RP1=0, select bank0
 10154     02BF  00B5               	movwf	___flge@ff1
 10155     02C0  1683               	bsf	3,5	;RP0=1, select bank1
 10156     02C1  1303               	bcf	3,6	;RP1=0, select bank1
 10157     02C2  084B               	movf	(efgtoa@u+3)^(0+128),w
 10158     02C3  1283               	bcf	3,5	;RP0=0, select bank0
 10159     02C4  1303               	bcf	3,6	;RP1=0, select bank0
 10160     02C5  00BC               	movwf	___flge@ff2+3
 10161     02C6  1683               	bsf	3,5	;RP0=1, select bank1
 10162     02C7  1303               	bcf	3,6	;RP1=0, select bank1
 10163     02C8  084A               	movf	(efgtoa@u+2)^(0+128),w
 10164     02C9  1283               	bcf	3,5	;RP0=0, select bank0
 10165     02CA  1303               	bcf	3,6	;RP1=0, select bank0
 10166     02CB  00BB               	movwf	___flge@ff2+2
 10167     02CC  1683               	bsf	3,5	;RP0=1, select bank1
 10168     02CD  1303               	bcf	3,6	;RP1=0, select bank1
 10169     02CE  0849               	movf	(efgtoa@u+1)^(0+128),w
 10170     02CF  1283               	bcf	3,5	;RP0=0, select bank0
 10171     02D0  1303               	bcf	3,6	;RP1=0, select bank0
 10172     02D1  00BA               	movwf	___flge@ff2+1
 10173     02D2  1683               	bsf	3,5	;RP0=1, select bank1
 10174     02D3  1303               	bcf	3,6	;RP1=0, select bank1
 10175     02D4  0848               	movf	efgtoa@u^(0+128),w
 10176     02D5  1283               	bcf	3,5	;RP0=0, select bank0
 10177     02D6  1303               	bcf	3,6	;RP1=0, select bank0
 10178     02D7  00B9               	movwf	___flge@ff2
 10179     02D8  120A  118A  2007  120A  118A  	fcall	___flge
 10180     02DD  1C03               	btfss	3,0
 10181     02DE  2AE0               	goto	u4571
 10182     02DF  2AE1               	goto	u4570
 10183     02E0                     u4571:
 10184     02E0  2A22               	goto	l3104
 10185     02E1                     u4570:
 10186     02E1                     l3114:
 10187                           
 10188                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 683:  mode = c;
 10189     02E1  1283               	bcf	3,5	;RP0=0, select bank0
 10190     02E2  1303               	bcf	3,6	;RP1=0, select bank0
 10191     02E3  0857               	movf	efgtoa@c,w
 10192     02E4  1683               	bsf	3,5	;RP0=1, select bank1
 10193     02E5  1303               	bcf	3,6	;RP1=0, select bank1
 10194     02E6  00A9               	movwf	efgtoa@mode^(0+128)
 10195                           
 10196                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 685:     nmode = mode;
 10197     02E7  0829               	movf	efgtoa@mode^(0+128),w
 10198     02E8  00AA               	movwf	efgtoa@nmode^(0+128)
 10199     02E9                     l3116:
 10200                           
 10201                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 695:  {;c:\PROGRA~1\MIC
      +                          ROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0) ? 6 : prec;
 10202     02E9  1BED               	btfsc	(_prec+1)^(0+128),7
 10203     02EA  2AEC               	goto	u4581
 10204     02EB  2AED               	goto	u4580
 10205     02EC                     u4581:
 10206     02EC  2AF2               	goto	l3120
 10207     02ED                     u4580:
 10208     02ED                     l3118:
 10209     02ED  086D               	movf	(_prec+1)^(0+128),w
 10210     02EE  00A3               	movwf	(efgtoa@p+1)^(0+128)
 10211     02EF  086C               	movf	_prec^(0+128),w
 10212     02F0  00A2               	movwf	efgtoa@p^(0+128)
 10213     02F1  2AF6               	goto	l767
 10214     02F2                     l3120:
 10215     02F2  3006               	movlw	6
 10216     02F3  00A2               	movwf	efgtoa@p^(0+128)
 10217     02F4  3000               	movlw	0
 10218     02F5  00A3               	movwf	(efgtoa@p^(0+128)+1)
 10219     02F6                     l767:
 10220                           
 10221                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 697:     };c:\PROGRA~1\
      +                          MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 711:     m = p;
 10222     02F6  0823               	movf	(efgtoa@p+1)^(0+128),w
 10223     02F7  00AE               	movwf	(efgtoa@m+1)^(0+128)
 10224     02F8  0822               	movf	efgtoa@p^(0+128),w
 10225     02F9  00AD               	movwf	efgtoa@m^(0+128)
 10226                           
 10227                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 715:  {;c:\PROGRA~1\MIC
      +                          ROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 716:         ++m;
 10228     02FA  3001               	movlw	1
 10229     02FB  07AD               	addwf	efgtoa@m^(0+128),f
 10230     02FC  1803               	skipnc
 10231     02FD  0AAE               	incf	(efgtoa@m+1)^(0+128),f
 10232     02FE  3000               	movlw	0
 10233     02FF  07AE               	addwf	(efgtoa@m+1)^(0+128),f
 10234     0300                     l3122:
 10235                           
 10236                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 717:     };c:\PROGRA~1\
      +                          MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f') {
 10237     0300  3066               	movlw	102
 10238     0301  062A               	xorwf	efgtoa@nmode^(0+128),w
 10239     0302  1D03               	btfss	3,2
 10240     0303  2B05               	goto	u4591
 10241     0304  2B06               	goto	u4590
 10242     0305                     u4591:
 10243     0305  2B20               	goto	l3134
 10244     0306                     u4590:
 10245     0306                     l3124:
 10246                           
 10247                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 722:         if (e < 0)
      +                           {
 10248     0306  1FB0               	btfss	(efgtoa@e+1)^(0+128),7
 10249     0307  2B09               	goto	u4601
 10250     0308  2B0A               	goto	u4600
 10251     0309                     u4601:
 10252     0309  2B14               	goto	l3130
 10253     030A                     u4600:
 10254     030A                     l3126:
 10255                           
 10256                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 723:             u.f = 
      +                          1.0;
 10257     030A  303F               	movlw	63
 10258     030B  00CB               	movwf	(efgtoa@u+3)^(0+128)
 10259     030C  3080               	movlw	128
 10260     030D  00CA               	movwf	(efgtoa@u+2)^(0+128)
 10261     030E  3000               	movlw	0
 10262     030F  00C9               	movwf	(efgtoa@u+1)^(0+128)
 10263     0310  3000               	movlw	0
 10264     0311  00C8               	movwf	efgtoa@u^(0+128)
 10265     0312                     l3128:
 10266                           
 10267                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 724:             e = 0;
 10268     0312  01AF               	clrf	efgtoa@e^(0+128)
 10269     0313  01B0               	clrf	(efgtoa@e+1)^(0+128)
 10270     0314                     l3130:
 10271                           
 10272                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 726:         if (!(mode
      +                           == 'g')) {
 10273     0314  3067               	movlw	103
 10274     0315  0629               	xorwf	efgtoa@mode^(0+128),w
 10275     0316  1903               	btfsc	3,2
 10276     0317  2B19               	goto	u4611
 10277     0318  2B1A               	goto	u4610
 10278     0319                     u4611:
 10279     0319  2B20               	goto	l3134
 10280     031A                     u4610:
 10281     031A                     l3132:
 10282                           
 10283                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 727:             m += e
      +                          ;
 10284     031A  082F               	movf	efgtoa@e^(0+128),w
 10285     031B  07AD               	addwf	efgtoa@m^(0+128),f
 10286     031C  1803               	skipnc
 10287     031D  0AAE               	incf	(efgtoa@m+1)^(0+128),f
 10288     031E  0830               	movf	(efgtoa@e+1)^(0+128),w
 10289     031F  07AE               	addwf	(efgtoa@m+1)^(0+128),f
 10290     0320                     l3134:
 10291                           
 10292                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 733:     i = 0;
 10293     0320  01B7               	clrf	efgtoa@i^(0+128)
 10294     0321  01B8               	clrf	(efgtoa@i+1)^(0+128)
 10295     0322                     l3136:
 10296                           
 10297                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
 10298     0322  0847               	movf	(efgtoa@g+3)^(0+128),w
 10299     0323  00BC               	movwf	(efgtoa@h+3)^(0+128)
 10300     0324  0846               	movf	(efgtoa@g+2)^(0+128),w
 10301     0325  00BB               	movwf	(efgtoa@h+2)^(0+128)
 10302     0326  0845               	movf	(efgtoa@g+1)^(0+128),w
 10303     0327  00BA               	movwf	(efgtoa@h+1)^(0+128)
 10304     0328  0844               	movf	efgtoa@g^(0+128),w
 10305     0329  00B9               	movwf	efgtoa@h^(0+128)
 10306     032A                     l3138:
 10307                           
 10308                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 735:     ou = u;
 10309     032A  084B               	movf	(efgtoa@u+3)^(0+128),w
 10310     032B  00B6               	movwf	(efgtoa@ou+3)^(0+128)
 10311     032C  084A               	movf	(efgtoa@u+2)^(0+128),w
 10312     032D  00B5               	movwf	(efgtoa@ou+2)^(0+128)
 10313     032E  0849               	movf	(efgtoa@u+1)^(0+128),w
 10314     032F  00B4               	movwf	(efgtoa@ou+1)^(0+128)
 10315     0330  0848               	movf	efgtoa@u^(0+128),w
 10316     0331  00B3               	movwf	efgtoa@ou^(0+128)
 10317                           
 10318                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i < m) 
      +                          {
 10319     0332  2C1B               	goto	l3150
 10320     0333                     l3140:
 10321                           
 10322                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 737:         l = floorf
      +                          (h/u.f);
 10323     0333  1683               	bsf	3,5	;RP0=1, select bank1
 10324     0334  1303               	bcf	3,6	;RP1=0, select bank1
 10325     0335  084B               	movf	(efgtoa@u+3)^(0+128),w
 10326     0336  00F3               	movwf	___fldiv@a+3
 10327     0337  084A               	movf	(efgtoa@u+2)^(0+128),w
 10328     0338  00F2               	movwf	___fldiv@a+2
 10329     0339  0849               	movf	(efgtoa@u+1)^(0+128),w
 10330     033A  00F1               	movwf	___fldiv@a+1
 10331     033B  0848               	movf	efgtoa@u^(0+128),w
 10332     033C  00F0               	movwf	___fldiv@a
 10333     033D  083C               	movf	(efgtoa@h+3)^(0+128),w
 10334     033E  00F7               	movwf	___fldiv@b+3
 10335     033F  083B               	movf	(efgtoa@h+2)^(0+128),w
 10336     0340  00F6               	movwf	___fldiv@b+2
 10337     0341  083A               	movf	(efgtoa@h+1)^(0+128),w
 10338     0342  00F5               	movwf	___fldiv@b+1
 10339     0343  0839               	movf	efgtoa@h^(0+128),w
 10340     0344  00F4               	movwf	___fldiv@b
 10341     0345  120A  158A  209E  120A  118A  	fcall	___fldiv
 10342     034A  0873               	movf	?___fldiv+3,w
 10343     034B  1283               	bcf	3,5	;RP0=0, select bank0
 10344     034C  1303               	bcf	3,6	;RP1=0, select bank0
 10345     034D  00B0               	movwf	floorf@x+3
 10346     034E  0872               	movf	?___fldiv+2,w
 10347     034F  00AF               	movwf	floorf@x+2
 10348     0350  0871               	movf	?___fldiv+1,w
 10349     0351  00AE               	movwf	floorf@x+1
 10350     0352  0870               	movf	?___fldiv,w
 10351     0353  00AD               	movwf	floorf@x
 10352     0354  160A  118A  2112  120A  118A  	fcall	_floorf
 10353     0359  1283               	bcf	3,5	;RP0=0, select bank0
 10354     035A  1303               	bcf	3,6	;RP1=0, select bank0
 10355     035B  0830               	movf	?_floorf+3,w
 10356     035C  1683               	bsf	3,5	;RP0=1, select bank1
 10357     035D  1303               	bcf	3,6	;RP1=0, select bank1
 10358     035E  00C0               	movwf	(efgtoa@l+3)^(0+128)
 10359     035F  1283               	bcf	3,5	;RP0=0, select bank0
 10360     0360  1303               	bcf	3,6	;RP1=0, select bank0
 10361     0361  082F               	movf	?_floorf+2,w
 10362     0362  1683               	bsf	3,5	;RP0=1, select bank1
 10363     0363  1303               	bcf	3,6	;RP1=0, select bank1
 10364     0364  00BF               	movwf	(efgtoa@l+2)^(0+128)
 10365     0365  1283               	bcf	3,5	;RP0=0, select bank0
 10366     0366  1303               	bcf	3,6	;RP1=0, select bank0
 10367     0367  082E               	movf	?_floorf+1,w
 10368     0368  1683               	bsf	3,5	;RP0=1, select bank1
 10369     0369  1303               	bcf	3,6	;RP1=0, select bank1
 10370     036A  00BE               	movwf	(efgtoa@l+1)^(0+128)
 10371     036B  1283               	bcf	3,5	;RP0=0, select bank0
 10372     036C  1303               	bcf	3,6	;RP1=0, select bank0
 10373     036D  082D               	movf	?_floorf,w
 10374     036E  1683               	bsf	3,5	;RP0=1, select bank1
 10375     036F  1303               	bcf	3,6	;RP1=0, select bank1
 10376     0370  00BD               	movwf	efgtoa@l^(0+128)
 10377     0371                     l3142:
 10378                           
 10379                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 738:         d = (int)l
      +                          ;
 10380     0371  0840               	movf	(efgtoa@l+3)^(0+128),w
 10381     0372  00F3               	movwf	___fltol@f1+3
 10382     0373  083F               	movf	(efgtoa@l+2)^(0+128),w
 10383     0374  00F2               	movwf	___fltol@f1+2
 10384     0375  083E               	movf	(efgtoa@l+1)^(0+128),w
 10385     0376  00F1               	movwf	___fltol@f1+1
 10386     0377  083D               	movf	efgtoa@l^(0+128),w
 10387     0378  00F0               	movwf	___fltol@f1
 10388     0379  160A  158A  24DD  120A  118A  	fcall	___fltol
 10389     037E  0871               	movf	?___fltol+1,w
 10390     037F  1683               	bsf	3,5	;RP0=1, select bank1
 10391     0380  1303               	bcf	3,6	;RP1=0, select bank1
 10392     0381  00AC               	movwf	(efgtoa@d+1)^(0+128)
 10393     0382  0870               	movf	?___fltol,w
 10394     0383  00AB               	movwf	efgtoa@d^(0+128)
 10395     0384                     l3144:
 10396                           
 10397                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 739:         h -= l*u.f
      +                          ;
 10398     0384  084B               	movf	(efgtoa@u+3)^(0+128),w
 10399     0385  1283               	bcf	3,5	;RP0=0, select bank0
 10400     0386  1303               	bcf	3,6	;RP1=0, select bank0
 10401     0387  00A7               	movwf	___flmul@a+3
 10402     0388  1683               	bsf	3,5	;RP0=1, select bank1
 10403     0389  1303               	bcf	3,6	;RP1=0, select bank1
 10404     038A  084A               	movf	(efgtoa@u+2)^(0+128),w
 10405     038B  1283               	bcf	3,5	;RP0=0, select bank0
 10406     038C  1303               	bcf	3,6	;RP1=0, select bank0
 10407     038D  00A6               	movwf	___flmul@a+2
 10408     038E  1683               	bsf	3,5	;RP0=1, select bank1
 10409     038F  1303               	bcf	3,6	;RP1=0, select bank1
 10410     0390  0849               	movf	(efgtoa@u+1)^(0+128),w
 10411     0391  1283               	bcf	3,5	;RP0=0, select bank0
 10412     0392  1303               	bcf	3,6	;RP1=0, select bank0
 10413     0393  00A5               	movwf	___flmul@a+1
 10414     0394  1683               	bsf	3,5	;RP0=1, select bank1
 10415     0395  1303               	bcf	3,6	;RP1=0, select bank1
 10416     0396  0848               	movf	efgtoa@u^(0+128),w
 10417     0397  1283               	bcf	3,5	;RP0=0, select bank0
 10418     0398  1303               	bcf	3,6	;RP1=0, select bank0
 10419     0399  00A4               	movwf	___flmul@a
 10420     039A  1683               	bsf	3,5	;RP0=1, select bank1
 10421     039B  1303               	bcf	3,6	;RP1=0, select bank1
 10422     039C  0840               	movf	(efgtoa@l+3)^(0+128),w
 10423     039D  1283               	bcf	3,5	;RP0=0, select bank0
 10424     039E  1303               	bcf	3,6	;RP1=0, select bank0
 10425     039F  00A3               	movwf	___flmul@b+3
 10426     03A0  1683               	bsf	3,5	;RP0=1, select bank1
 10427     03A1  1303               	bcf	3,6	;RP1=0, select bank1
 10428     03A2  083F               	movf	(efgtoa@l+2)^(0+128),w
 10429     03A3  1283               	bcf	3,5	;RP0=0, select bank0
 10430     03A4  1303               	bcf	3,6	;RP1=0, select bank0
 10431     03A5  00A2               	movwf	___flmul@b+2
 10432     03A6  1683               	bsf	3,5	;RP0=1, select bank1
 10433     03A7  1303               	bcf	3,6	;RP1=0, select bank1
 10434     03A8  083E               	movf	(efgtoa@l+1)^(0+128),w
 10435     03A9  1283               	bcf	3,5	;RP0=0, select bank0
 10436     03AA  1303               	bcf	3,6	;RP1=0, select bank0
 10437     03AB  00A1               	movwf	___flmul@b+1
 10438     03AC  1683               	bsf	3,5	;RP0=1, select bank1
 10439     03AD  1303               	bcf	3,6	;RP1=0, select bank1
 10440     03AE  083D               	movf	efgtoa@l^(0+128),w
 10441     03AF  1283               	bcf	3,5	;RP0=0, select bank0
 10442     03B0  1303               	bcf	3,6	;RP1=0, select bank0
 10443     03B1  00A0               	movwf	___flmul@b
 10444     03B2  120A  158A  24BE  120A  118A  	fcall	___flmul
 10445     03B7  1283               	bcf	3,5	;RP0=0, select bank0
 10446     03B8  1303               	bcf	3,6	;RP1=0, select bank0
 10447     03B9  0823               	movf	?___flmul+3,w
 10448     03BA  00CC               	movwf	___flsub@a+3
 10449     03BB  0822               	movf	?___flmul+2,w
 10450     03BC  00CB               	movwf	___flsub@a+2
 10451     03BD  0821               	movf	?___flmul+1,w
 10452     03BE  00CA               	movwf	___flsub@a+1
 10453     03BF  0820               	movf	?___flmul,w
 10454     03C0  00C9               	movwf	___flsub@a
 10455     03C1  1683               	bsf	3,5	;RP0=1, select bank1
 10456     03C2  1303               	bcf	3,6	;RP1=0, select bank1
 10457     03C3  083C               	movf	(efgtoa@h+3)^(0+128),w
 10458     03C4  1283               	bcf	3,5	;RP0=0, select bank0
 10459     03C5  1303               	bcf	3,6	;RP1=0, select bank0
 10460     03C6  00D0               	movwf	___flsub@b+3
 10461     03C7  1683               	bsf	3,5	;RP0=1, select bank1
 10462     03C8  1303               	bcf	3,6	;RP1=0, select bank1
 10463     03C9  083B               	movf	(efgtoa@h+2)^(0+128),w
 10464     03CA  1283               	bcf	3,5	;RP0=0, select bank0
 10465     03CB  1303               	bcf	3,6	;RP1=0, select bank0
 10466     03CC  00CF               	movwf	___flsub@b+2
 10467     03CD  1683               	bsf	3,5	;RP0=1, select bank1
 10468     03CE  1303               	bcf	3,6	;RP1=0, select bank1
 10469     03CF  083A               	movf	(efgtoa@h+1)^(0+128),w
 10470     03D0  1283               	bcf	3,5	;RP0=0, select bank0
 10471     03D1  1303               	bcf	3,6	;RP1=0, select bank0
 10472     03D2  00CE               	movwf	___flsub@b+1
 10473     03D3  1683               	bsf	3,5	;RP0=1, select bank1
 10474     03D4  1303               	bcf	3,6	;RP1=0, select bank1
 10475     03D5  0839               	movf	efgtoa@h^(0+128),w
 10476     03D6  1283               	bcf	3,5	;RP0=0, select bank0
 10477     03D7  1303               	bcf	3,6	;RP1=0, select bank0
 10478     03D8  00CD               	movwf	___flsub@b
 10479     03D9  160A  158A  2355  120A  118A  	fcall	___flsub
 10480     03DE  1283               	bcf	3,5	;RP0=0, select bank0
 10481     03DF  1303               	bcf	3,6	;RP1=0, select bank0
 10482     03E0  084C               	movf	?___flsub+3,w
 10483     03E1  1683               	bsf	3,5	;RP0=1, select bank1
 10484     03E2  1303               	bcf	3,6	;RP1=0, select bank1
 10485     03E3  00BC               	movwf	(efgtoa@h+3)^(0+128)
 10486     03E4  1283               	bcf	3,5	;RP0=0, select bank0
 10487     03E5  1303               	bcf	3,6	;RP1=0, select bank0
 10488     03E6  084B               	movf	?___flsub+2,w
 10489     03E7  1683               	bsf	3,5	;RP0=1, select bank1
 10490     03E8  1303               	bcf	3,6	;RP1=0, select bank1
 10491     03E9  00BB               	movwf	(efgtoa@h+2)^(0+128)
 10492     03EA  1283               	bcf	3,5	;RP0=0, select bank0
 10493     03EB  1303               	bcf	3,6	;RP1=0, select bank0
 10494     03EC  084A               	movf	?___flsub+1,w
 10495     03ED  1683               	bsf	3,5	;RP0=1, select bank1
 10496     03EE  1303               	bcf	3,6	;RP1=0, select bank1
 10497     03EF  00BA               	movwf	(efgtoa@h+1)^(0+128)
 10498     03F0  1283               	bcf	3,5	;RP0=0, select bank0
 10499     03F1  1303               	bcf	3,6	;RP1=0, select bank0
 10500     03F2  0849               	movf	?___flsub,w
 10501     03F3  1683               	bsf	3,5	;RP0=1, select bank1
 10502     03F4  1303               	bcf	3,6	;RP1=0, select bank1
 10503     03F5  00B9               	movwf	efgtoa@h^(0+128)
 10504     03F6                     l3146:
 10505                           
 10506                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 740:         u.f = u.f/
      +                          10.0;
 10507     03F6  3041               	movlw	65
 10508     03F7  00F3               	movwf	___fldiv@a+3
 10509     03F8  3020               	movlw	32
 10510     03F9  00F2               	movwf	___fldiv@a+2
 10511     03FA  3000               	movlw	0
 10512     03FB  00F1               	movwf	___fldiv@a+1
 10513     03FC  3000               	movlw	0
 10514     03FD  00F0               	movwf	___fldiv@a
 10515     03FE  084B               	movf	(efgtoa@u+3)^(0+128),w
 10516     03FF  00F7               	movwf	___fldiv@b+3
 10517     0400  084A               	movf	(efgtoa@u+2)^(0+128),w
 10518     0401  00F6               	movwf	___fldiv@b+2
 10519     0402  0849               	movf	(efgtoa@u+1)^(0+128),w
 10520     0403  00F5               	movwf	___fldiv@b+1
 10521     0404  0848               	movf	efgtoa@u^(0+128),w
 10522     0405  00F4               	movwf	___fldiv@b
 10523     0406  120A  158A  209E  120A  118A  	fcall	___fldiv
 10524     040B  0873               	movf	?___fldiv+3,w
 10525     040C  1683               	bsf	3,5	;RP0=1, select bank1
 10526     040D  1303               	bcf	3,6	;RP1=0, select bank1
 10527     040E  00CB               	movwf	(efgtoa@u+3)^(0+128)
 10528     040F  0872               	movf	?___fldiv+2,w
 10529     0410  00CA               	movwf	(efgtoa@u+2)^(0+128)
 10530     0411  0871               	movf	?___fldiv+1,w
 10531     0412  00C9               	movwf	(efgtoa@u+1)^(0+128)
 10532     0413  0870               	movf	?___fldiv,w
 10533     0414  00C8               	movwf	efgtoa@u^(0+128)
 10534     0415                     l3148:
 10535                           
 10536                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 741:         ++i;
 10537     0415  3001               	movlw	1
 10538     0416  07B7               	addwf	efgtoa@i^(0+128),f
 10539     0417  1803               	skipnc
 10540     0418  0AB8               	incf	(efgtoa@i+1)^(0+128),f
 10541     0419  3000               	movlw	0
 10542     041A  07B8               	addwf	(efgtoa@i+1)^(0+128),f
 10543     041B                     l3150:
 10544                           
 10545                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 736:     while (i < m) 
      +                          {
 10546     041B  0838               	movf	(efgtoa@i+1)^(0+128),w
 10547     041C  3A80               	xorlw	128
 10548     041D  1283               	bcf	3,5	;RP0=0, select bank0
 10549     041E  1303               	bcf	3,6	;RP1=0, select bank0
 10550     041F  00D8               	movwf	??_efgtoa
 10551     0420  1683               	bsf	3,5	;RP0=1, select bank1
 10552     0421  1303               	bcf	3,6	;RP1=0, select bank1
 10553     0422  082E               	movf	(efgtoa@m+1)^(0+128),w
 10554     0423  3A80               	xorlw	128
 10555     0424  1283               	bcf	3,5	;RP0=0, select bank0
 10556     0425  1303               	bcf	3,6	;RP1=0, select bank0
 10557     0426  0258               	subwf	??_efgtoa,w
 10558     0427  1D03               	skipz
 10559     0428  2C2D               	goto	u4625
 10560     0429  1683               	bsf	3,5	;RP0=1, select bank1
 10561     042A  1303               	bcf	3,6	;RP1=0, select bank1
 10562     042B  082D               	movf	efgtoa@m^(0+128),w
 10563     042C  0237               	subwf	efgtoa@i^(0+128),w
 10564     042D                     u4625:
 10565     042D  1C03               	skipc
 10566     042E  2C30               	goto	u4621
 10567     042F  2C31               	goto	u4620
 10568     0430                     u4621:
 10569     0430  2B33               	goto	l3140
 10570     0431                     u4620:
 10571     0431                     l3152:
 10572                           
 10573                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 745:     l = u.f*5.0;
 10574     0431  3040               	movlw	64
 10575     0432  1283               	bcf	3,5	;RP0=0, select bank0
 10576     0433  1303               	bcf	3,6	;RP1=0, select bank0
 10577     0434  00A3               	movwf	___flmul@b+3
 10578     0435  30A0               	movlw	160
 10579     0436  00A2               	movwf	___flmul@b+2
 10580     0437  3000               	movlw	0
 10581     0438  00A1               	movwf	___flmul@b+1
 10582     0439  3000               	movlw	0
 10583     043A  00A0               	movwf	___flmul@b
 10584     043B  1683               	bsf	3,5	;RP0=1, select bank1
 10585     043C  1303               	bcf	3,6	;RP1=0, select bank1
 10586     043D  084B               	movf	(efgtoa@u+3)^(0+128),w
 10587     043E  1283               	bcf	3,5	;RP0=0, select bank0
 10588     043F  1303               	bcf	3,6	;RP1=0, select bank0
 10589     0440  00A7               	movwf	___flmul@a+3
 10590     0441  1683               	bsf	3,5	;RP0=1, select bank1
 10591     0442  1303               	bcf	3,6	;RP1=0, select bank1
 10592     0443  084A               	movf	(efgtoa@u+2)^(0+128),w
 10593     0444  1283               	bcf	3,5	;RP0=0, select bank0
 10594     0445  1303               	bcf	3,6	;RP1=0, select bank0
 10595     0446  00A6               	movwf	___flmul@a+2
 10596     0447  1683               	bsf	3,5	;RP0=1, select bank1
 10597     0448  1303               	bcf	3,6	;RP1=0, select bank1
 10598     0449  0849               	movf	(efgtoa@u+1)^(0+128),w
 10599     044A  1283               	bcf	3,5	;RP0=0, select bank0
 10600     044B  1303               	bcf	3,6	;RP1=0, select bank0
 10601     044C  00A5               	movwf	___flmul@a+1
 10602     044D  1683               	bsf	3,5	;RP0=1, select bank1
 10603     044E  1303               	bcf	3,6	;RP1=0, select bank1
 10604     044F  0848               	movf	efgtoa@u^(0+128),w
 10605     0450  1283               	bcf	3,5	;RP0=0, select bank0
 10606     0451  1303               	bcf	3,6	;RP1=0, select bank0
 10607     0452  00A4               	movwf	___flmul@a
 10608     0453  120A  158A  24BE  120A  118A  	fcall	___flmul
 10609     0458  1283               	bcf	3,5	;RP0=0, select bank0
 10610     0459  1303               	bcf	3,6	;RP1=0, select bank0
 10611     045A  0823               	movf	?___flmul+3,w
 10612     045B  1683               	bsf	3,5	;RP0=1, select bank1
 10613     045C  1303               	bcf	3,6	;RP1=0, select bank1
 10614     045D  00C0               	movwf	(efgtoa@l+3)^(0+128)
 10615     045E  1283               	bcf	3,5	;RP0=0, select bank0
 10616     045F  1303               	bcf	3,6	;RP1=0, select bank0
 10617     0460  0822               	movf	?___flmul+2,w
 10618     0461  1683               	bsf	3,5	;RP0=1, select bank1
 10619     0462  1303               	bcf	3,6	;RP1=0, select bank1
 10620     0463  00BF               	movwf	(efgtoa@l+2)^(0+128)
 10621     0464  1283               	bcf	3,5	;RP0=0, select bank0
 10622     0465  1303               	bcf	3,6	;RP1=0, select bank0
 10623     0466  0821               	movf	?___flmul+1,w
 10624     0467  1683               	bsf	3,5	;RP0=1, select bank1
 10625     0468  1303               	bcf	3,6	;RP1=0, select bank1
 10626     0469  00BE               	movwf	(efgtoa@l+1)^(0+128)
 10627     046A  1283               	bcf	3,5	;RP0=0, select bank0
 10628     046B  1303               	bcf	3,6	;RP1=0, select bank0
 10629     046C  0820               	movf	?___flmul,w
 10630     046D  1683               	bsf	3,5	;RP0=1, select bank1
 10631     046E  1303               	bcf	3,6	;RP1=0, select bank1
 10632     046F  00BD               	movwf	efgtoa@l^(0+128)
 10633     0470                     l3154:
 10634                           
 10635                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 746:     if (h < l) {
 10636     0470  083C               	movf	(efgtoa@h+3)^(0+128),w
 10637     0471  1283               	bcf	3,5	;RP0=0, select bank0
 10638     0472  1303               	bcf	3,6	;RP1=0, select bank0
 10639     0473  00B8               	movwf	___flge@ff1+3
 10640     0474  1683               	bsf	3,5	;RP0=1, select bank1
 10641     0475  1303               	bcf	3,6	;RP1=0, select bank1
 10642     0476  083B               	movf	(efgtoa@h+2)^(0+128),w
 10643     0477  1283               	bcf	3,5	;RP0=0, select bank0
 10644     0478  1303               	bcf	3,6	;RP1=0, select bank0
 10645     0479  00B7               	movwf	___flge@ff1+2
 10646     047A  1683               	bsf	3,5	;RP0=1, select bank1
 10647     047B  1303               	bcf	3,6	;RP1=0, select bank1
 10648     047C  083A               	movf	(efgtoa@h+1)^(0+128),w
 10649     047D  1283               	bcf	3,5	;RP0=0, select bank0
 10650     047E  1303               	bcf	3,6	;RP1=0, select bank0
 10651     047F  00B6               	movwf	___flge@ff1+1
 10652     0480  1683               	bsf	3,5	;RP0=1, select bank1
 10653     0481  1303               	bcf	3,6	;RP1=0, select bank1
 10654     0482  0839               	movf	efgtoa@h^(0+128),w
 10655     0483  1283               	bcf	3,5	;RP0=0, select bank0
 10656     0484  1303               	bcf	3,6	;RP1=0, select bank0
 10657     0485  00B5               	movwf	___flge@ff1
 10658     0486  1683               	bsf	3,5	;RP0=1, select bank1
 10659     0487  1303               	bcf	3,6	;RP1=0, select bank1
 10660     0488  0840               	movf	(efgtoa@l+3)^(0+128),w
 10661     0489  1283               	bcf	3,5	;RP0=0, select bank0
 10662     048A  1303               	bcf	3,6	;RP1=0, select bank0
 10663     048B  00BC               	movwf	___flge@ff2+3
 10664     048C  1683               	bsf	3,5	;RP0=1, select bank1
 10665     048D  1303               	bcf	3,6	;RP1=0, select bank1
 10666     048E  083F               	movf	(efgtoa@l+2)^(0+128),w
 10667     048F  1283               	bcf	3,5	;RP0=0, select bank0
 10668     0490  1303               	bcf	3,6	;RP1=0, select bank0
 10669     0491  00BB               	movwf	___flge@ff2+2
 10670     0492  1683               	bsf	3,5	;RP0=1, select bank1
 10671     0493  1303               	bcf	3,6	;RP1=0, select bank1
 10672     0494  083E               	movf	(efgtoa@l+1)^(0+128),w
 10673     0495  1283               	bcf	3,5	;RP0=0, select bank0
 10674     0496  1303               	bcf	3,6	;RP1=0, select bank0
 10675     0497  00BA               	movwf	___flge@ff2+1
 10676     0498  1683               	bsf	3,5	;RP0=1, select bank1
 10677     0499  1303               	bcf	3,6	;RP1=0, select bank1
 10678     049A  083D               	movf	efgtoa@l^(0+128),w
 10679     049B  1283               	bcf	3,5	;RP0=0, select bank0
 10680     049C  1303               	bcf	3,6	;RP1=0, select bank0
 10681     049D  00B9               	movwf	___flge@ff2
 10682     049E  120A  118A  2007  120A  118A  	fcall	___flge
 10683     04A3  1803               	btfsc	3,0
 10684     04A4  2CA6               	goto	u4631
 10685     04A5  2CA7               	goto	u4630
 10686     04A6                     u4631:
 10687     04A6  2CB2               	goto	l3158
 10688     04A7                     u4630:
 10689     04A7                     l3156:
 10690                           
 10691                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 747:         l = 0.0;
 10692     04A7  3000               	movlw	0
 10693     04A8  1683               	bsf	3,5	;RP0=1, select bank1
 10694     04A9  1303               	bcf	3,6	;RP1=0, select bank1
 10695     04AA  00C0               	movwf	(efgtoa@l+3)^(0+128)
 10696     04AB  3000               	movlw	0
 10697     04AC  00BF               	movwf	(efgtoa@l+2)^(0+128)
 10698     04AD  3000               	movlw	0
 10699     04AE  00BE               	movwf	(efgtoa@l+1)^(0+128)
 10700     04AF  3000               	movlw	0
 10701     04B0  00BD               	movwf	efgtoa@l^(0+128)
 10702                           
 10703                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 748:     } else {
 10704     04B1  2CDB               	goto	l3164
 10705     04B2                     l3158:
 10706                           
 10707                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 750:         if ((h == 
      +                          l) && !(d % 2)) {
 10708     04B2  1683               	bsf	3,5	;RP0=1, select bank1
 10709     04B3  1303               	bcf	3,6	;RP1=0, select bank1
 10710     04B4  083C               	movf	(efgtoa@h+3)^(0+128),w
 10711     04B5  00F3               	movwf	___fleq@ff1+3
 10712     04B6  083B               	movf	(efgtoa@h+2)^(0+128),w
 10713     04B7  00F2               	movwf	___fleq@ff1+2
 10714     04B8  083A               	movf	(efgtoa@h+1)^(0+128),w
 10715     04B9  00F1               	movwf	___fleq@ff1+1
 10716     04BA  0839               	movf	efgtoa@h^(0+128),w
 10717     04BB  00F0               	movwf	___fleq@ff1
 10718     04BC  0840               	movf	(efgtoa@l+3)^(0+128),w
 10719     04BD  00F7               	movwf	___fleq@ff2+3
 10720     04BE  083F               	movf	(efgtoa@l+2)^(0+128),w
 10721     04BF  00F6               	movwf	___fleq@ff2+2
 10722     04C0  083E               	movf	(efgtoa@l+1)^(0+128),w
 10723     04C1  00F5               	movwf	___fleq@ff2+1
 10724     04C2  083D               	movf	efgtoa@l^(0+128),w
 10725     04C3  00F4               	movwf	___fleq@ff2
 10726     04C4  160A  158A  243C  120A  118A  	fcall	___fleq
 10727     04C9  1C03               	btfss	3,0
 10728     04CA  2CCC               	goto	u4641
 10729     04CB  2CCD               	goto	u4640
 10730     04CC                     u4641:
 10731     04CC  2CDB               	goto	l3164
 10732     04CD                     u4640:
 10733     04CD                     l3160:
 10734     04CD  1683               	bsf	3,5	;RP0=1, select bank1
 10735     04CE  1303               	bcf	3,6	;RP1=0, select bank1
 10736     04CF  182B               	btfsc	efgtoa@d^(0+128),0
 10737     04D0  2CD2               	goto	u4651
 10738     04D1  2CD3               	goto	u4650
 10739     04D2                     u4651:
 10740     04D2  2CDB               	goto	l3164
 10741     04D3                     u4650:
 10742     04D3                     l3162:
 10743                           
 10744                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 751:             l = 0.
      +                          0;
 10745     04D3  3000               	movlw	0
 10746     04D4  00C0               	movwf	(efgtoa@l+3)^(0+128)
 10747     04D5  3000               	movlw	0
 10748     04D6  00BF               	movwf	(efgtoa@l+2)^(0+128)
 10749     04D7  3000               	movlw	0
 10750     04D8  00BE               	movwf	(efgtoa@l+1)^(0+128)
 10751     04D9  3000               	movlw	0
 10752     04DA  00BD               	movwf	efgtoa@l^(0+128)
 10753     04DB                     l3164:
 10754                           
 10755                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 756:     h = g.f + l;
 10756     04DB  1683               	bsf	3,5	;RP0=1, select bank1
 10757     04DC  1303               	bcf	3,6	;RP1=0, select bank1
 10758     04DD  0840               	movf	(efgtoa@l+3)^(0+128),w
 10759     04DE  1283               	bcf	3,5	;RP0=0, select bank0
 10760     04DF  1303               	bcf	3,6	;RP1=0, select bank0
 10761     04E0  00B8               	movwf	___fladd@b+3
 10762     04E1  1683               	bsf	3,5	;RP0=1, select bank1
 10763     04E2  1303               	bcf	3,6	;RP1=0, select bank1
 10764     04E3  083F               	movf	(efgtoa@l+2)^(0+128),w
 10765     04E4  1283               	bcf	3,5	;RP0=0, select bank0
 10766     04E5  1303               	bcf	3,6	;RP1=0, select bank0
 10767     04E6  00B7               	movwf	___fladd@b+2
 10768     04E7  1683               	bsf	3,5	;RP0=1, select bank1
 10769     04E8  1303               	bcf	3,6	;RP1=0, select bank1
 10770     04E9  083E               	movf	(efgtoa@l+1)^(0+128),w
 10771     04EA  1283               	bcf	3,5	;RP0=0, select bank0
 10772     04EB  1303               	bcf	3,6	;RP1=0, select bank0
 10773     04EC  00B6               	movwf	___fladd@b+1
 10774     04ED  1683               	bsf	3,5	;RP0=1, select bank1
 10775     04EE  1303               	bcf	3,6	;RP1=0, select bank1
 10776     04EF  083D               	movf	efgtoa@l^(0+128),w
 10777     04F0  1283               	bcf	3,5	;RP0=0, select bank0
 10778     04F1  1303               	bcf	3,6	;RP1=0, select bank0
 10779     04F2  00B5               	movwf	___fladd@b
 10780     04F3  1683               	bsf	3,5	;RP0=1, select bank1
 10781     04F4  1303               	bcf	3,6	;RP1=0, select bank1
 10782     04F5  0847               	movf	(efgtoa@g+3)^(0+128),w
 10783     04F6  1283               	bcf	3,5	;RP0=0, select bank0
 10784     04F7  1303               	bcf	3,6	;RP1=0, select bank0
 10785     04F8  00BC               	movwf	___fladd@a+3
 10786     04F9  1683               	bsf	3,5	;RP0=1, select bank1
 10787     04FA  1303               	bcf	3,6	;RP1=0, select bank1
 10788     04FB  0846               	movf	(efgtoa@g+2)^(0+128),w
 10789     04FC  1283               	bcf	3,5	;RP0=0, select bank0
 10790     04FD  1303               	bcf	3,6	;RP1=0, select bank0
 10791     04FE  00BB               	movwf	___fladd@a+2
 10792     04FF  1683               	bsf	3,5	;RP0=1, select bank1
 10793     0500  1303               	bcf	3,6	;RP1=0, select bank1
 10794     0501  0845               	movf	(efgtoa@g+1)^(0+128),w
 10795     0502  1283               	bcf	3,5	;RP0=0, select bank0
 10796     0503  1303               	bcf	3,6	;RP1=0, select bank0
 10797     0504  00BA               	movwf	___fladd@a+1
 10798     0505  1683               	bsf	3,5	;RP0=1, select bank1
 10799     0506  1303               	bcf	3,6	;RP1=0, select bank1
 10800     0507  0844               	movf	efgtoa@g^(0+128),w
 10801     0508  1283               	bcf	3,5	;RP0=0, select bank0
 10802     0509  1303               	bcf	3,6	;RP1=0, select bank0
 10803     050A  00B9               	movwf	___fladd@a
 10804     050B  120A  158A  226E  120A  118A  	fcall	___fladd
 10805     0510  1283               	bcf	3,5	;RP0=0, select bank0
 10806     0511  1303               	bcf	3,6	;RP1=0, select bank0
 10807     0512  0838               	movf	?___fladd+3,w
 10808     0513  1683               	bsf	3,5	;RP0=1, select bank1
 10809     0514  1303               	bcf	3,6	;RP1=0, select bank1
 10810     0515  00BC               	movwf	(efgtoa@h+3)^(0+128)
 10811     0516  1283               	bcf	3,5	;RP0=0, select bank0
 10812     0517  1303               	bcf	3,6	;RP1=0, select bank0
 10813     0518  0837               	movf	?___fladd+2,w
 10814     0519  1683               	bsf	3,5	;RP0=1, select bank1
 10815     051A  1303               	bcf	3,6	;RP1=0, select bank1
 10816     051B  00BB               	movwf	(efgtoa@h+2)^(0+128)
 10817     051C  1283               	bcf	3,5	;RP0=0, select bank0
 10818     051D  1303               	bcf	3,6	;RP1=0, select bank0
 10819     051E  0836               	movf	?___fladd+1,w
 10820     051F  1683               	bsf	3,5	;RP0=1, select bank1
 10821     0520  1303               	bcf	3,6	;RP1=0, select bank1
 10822     0521  00BA               	movwf	(efgtoa@h+1)^(0+128)
 10823     0522  1283               	bcf	3,5	;RP0=0, select bank0
 10824     0523  1303               	bcf	3,6	;RP1=0, select bank0
 10825     0524  0835               	movf	?___fladd,w
 10826     0525  1683               	bsf	3,5	;RP0=1, select bank1
 10827     0526  1303               	bcf	3,6	;RP1=0, select bank1
 10828     0527  00B9               	movwf	efgtoa@h^(0+128)
 10829     0528                     l3166:
 10830                           
 10831                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 758:  if (h >= (ou.f*10
      +                          .0)) {
 10832     0528  083C               	movf	(efgtoa@h+3)^(0+128),w
 10833     0529  1283               	bcf	3,5	;RP0=0, select bank0
 10834     052A  1303               	bcf	3,6	;RP1=0, select bank0
 10835     052B  00B8               	movwf	___flge@ff1+3
 10836     052C  1683               	bsf	3,5	;RP0=1, select bank1
 10837     052D  1303               	bcf	3,6	;RP1=0, select bank1
 10838     052E  083B               	movf	(efgtoa@h+2)^(0+128),w
 10839     052F  1283               	bcf	3,5	;RP0=0, select bank0
 10840     0530  1303               	bcf	3,6	;RP1=0, select bank0
 10841     0531  00B7               	movwf	___flge@ff1+2
 10842     0532  1683               	bsf	3,5	;RP0=1, select bank1
 10843     0533  1303               	bcf	3,6	;RP1=0, select bank1
 10844     0534  083A               	movf	(efgtoa@h+1)^(0+128),w
 10845     0535  1283               	bcf	3,5	;RP0=0, select bank0
 10846     0536  1303               	bcf	3,6	;RP1=0, select bank0
 10847     0537  00B6               	movwf	___flge@ff1+1
 10848     0538  1683               	bsf	3,5	;RP0=1, select bank1
 10849     0539  1303               	bcf	3,6	;RP1=0, select bank1
 10850     053A  0839               	movf	efgtoa@h^(0+128),w
 10851     053B  1283               	bcf	3,5	;RP0=0, select bank0
 10852     053C  1303               	bcf	3,6	;RP1=0, select bank0
 10853     053D  00B5               	movwf	___flge@ff1
 10854     053E  3041               	movlw	65
 10855     053F  00A3               	movwf	___flmul@b+3
 10856     0540  3020               	movlw	32
 10857     0541  00A2               	movwf	___flmul@b+2
 10858     0542  3000               	movlw	0
 10859     0543  00A1               	movwf	___flmul@b+1
 10860     0544  3000               	movlw	0
 10861     0545  00A0               	movwf	___flmul@b
 10862     0546  1683               	bsf	3,5	;RP0=1, select bank1
 10863     0547  1303               	bcf	3,6	;RP1=0, select bank1
 10864     0548  0836               	movf	(efgtoa@ou+3)^(0+128),w
 10865     0549  1283               	bcf	3,5	;RP0=0, select bank0
 10866     054A  1303               	bcf	3,6	;RP1=0, select bank0
 10867     054B  00A7               	movwf	___flmul@a+3
 10868     054C  1683               	bsf	3,5	;RP0=1, select bank1
 10869     054D  1303               	bcf	3,6	;RP1=0, select bank1
 10870     054E  0835               	movf	(efgtoa@ou+2)^(0+128),w
 10871     054F  1283               	bcf	3,5	;RP0=0, select bank0
 10872     0550  1303               	bcf	3,6	;RP1=0, select bank0
 10873     0551  00A6               	movwf	___flmul@a+2
 10874     0552  1683               	bsf	3,5	;RP0=1, select bank1
 10875     0553  1303               	bcf	3,6	;RP1=0, select bank1
 10876     0554  0834               	movf	(efgtoa@ou+1)^(0+128),w
 10877     0555  1283               	bcf	3,5	;RP0=0, select bank0
 10878     0556  1303               	bcf	3,6	;RP1=0, select bank0
 10879     0557  00A5               	movwf	___flmul@a+1
 10880     0558  1683               	bsf	3,5	;RP0=1, select bank1
 10881     0559  1303               	bcf	3,6	;RP1=0, select bank1
 10882     055A  0833               	movf	efgtoa@ou^(0+128),w
 10883     055B  1283               	bcf	3,5	;RP0=0, select bank0
 10884     055C  1303               	bcf	3,6	;RP1=0, select bank0
 10885     055D  00A4               	movwf	___flmul@a
 10886     055E  120A  158A  24BE  120A  118A  	fcall	___flmul
 10887     0563  1283               	bcf	3,5	;RP0=0, select bank0
 10888     0564  1303               	bcf	3,6	;RP1=0, select bank0
 10889     0565  0823               	movf	?___flmul+3,w
 10890     0566  00BC               	movwf	___flge@ff2+3
 10891     0567  0822               	movf	?___flmul+2,w
 10892     0568  00BB               	movwf	___flge@ff2+2
 10893     0569  0821               	movf	?___flmul+1,w
 10894     056A  00BA               	movwf	___flge@ff2+1
 10895     056B  0820               	movf	?___flmul,w
 10896     056C  00B9               	movwf	___flge@ff2
 10897     056D  120A  118A  2007  120A  118A  	fcall	___flge
 10898     0572  1C03               	btfss	3,0
 10899     0573  2D75               	goto	u4661
 10900     0574  2D76               	goto	u4660
 10901     0575                     u4661:
 10902     0575  2DC9               	goto	l777
 10903     0576                     u4660:
 10904     0576                     l3168:
 10905                           
 10906                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 759:   e++;
 10907     0576  3001               	movlw	1
 10908     0577  1683               	bsf	3,5	;RP0=1, select bank1
 10909     0578  1303               	bcf	3,6	;RP1=0, select bank1
 10910     0579  07AF               	addwf	efgtoa@e^(0+128),f
 10911     057A  1803               	skipnc
 10912     057B  0AB0               	incf	(efgtoa@e+1)^(0+128),f
 10913     057C  3000               	movlw	0
 10914     057D  07B0               	addwf	(efgtoa@e+1)^(0+128),f
 10915     057E                     l3170:
 10916                           
 10917                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10.0;
 10918     057E  3041               	movlw	65
 10919     057F  1283               	bcf	3,5	;RP0=0, select bank0
 10920     0580  1303               	bcf	3,6	;RP1=0, select bank0
 10921     0581  00A3               	movwf	___flmul@b+3
 10922     0582  3020               	movlw	32
 10923     0583  00A2               	movwf	___flmul@b+2
 10924     0584  3000               	movlw	0
 10925     0585  00A1               	movwf	___flmul@b+1
 10926     0586  3000               	movlw	0
 10927     0587  00A0               	movwf	___flmul@b
 10928     0588  1683               	bsf	3,5	;RP0=1, select bank1
 10929     0589  1303               	bcf	3,6	;RP1=0, select bank1
 10930     058A  0836               	movf	(efgtoa@ou+3)^(0+128),w
 10931     058B  1283               	bcf	3,5	;RP0=0, select bank0
 10932     058C  1303               	bcf	3,6	;RP1=0, select bank0
 10933     058D  00A7               	movwf	___flmul@a+3
 10934     058E  1683               	bsf	3,5	;RP0=1, select bank1
 10935     058F  1303               	bcf	3,6	;RP1=0, select bank1
 10936     0590  0835               	movf	(efgtoa@ou+2)^(0+128),w
 10937     0591  1283               	bcf	3,5	;RP0=0, select bank0
 10938     0592  1303               	bcf	3,6	;RP1=0, select bank0
 10939     0593  00A6               	movwf	___flmul@a+2
 10940     0594  1683               	bsf	3,5	;RP0=1, select bank1
 10941     0595  1303               	bcf	3,6	;RP1=0, select bank1
 10942     0596  0834               	movf	(efgtoa@ou+1)^(0+128),w
 10943     0597  1283               	bcf	3,5	;RP0=0, select bank0
 10944     0598  1303               	bcf	3,6	;RP1=0, select bank0
 10945     0599  00A5               	movwf	___flmul@a+1
 10946     059A  1683               	bsf	3,5	;RP0=1, select bank1
 10947     059B  1303               	bcf	3,6	;RP1=0, select bank1
 10948     059C  0833               	movf	efgtoa@ou^(0+128),w
 10949     059D  1283               	bcf	3,5	;RP0=0, select bank0
 10950     059E  1303               	bcf	3,6	;RP1=0, select bank0
 10951     059F  00A4               	movwf	___flmul@a
 10952     05A0  120A  158A  24BE  120A  118A  	fcall	___flmul
 10953     05A5  1283               	bcf	3,5	;RP0=0, select bank0
 10954     05A6  1303               	bcf	3,6	;RP1=0, select bank0
 10955     05A7  0823               	movf	?___flmul+3,w
 10956     05A8  1683               	bsf	3,5	;RP0=1, select bank1
 10957     05A9  1303               	bcf	3,6	;RP1=0, select bank1
 10958     05AA  00B6               	movwf	(efgtoa@ou+3)^(0+128)
 10959     05AB  1283               	bcf	3,5	;RP0=0, select bank0
 10960     05AC  1303               	bcf	3,6	;RP1=0, select bank0
 10961     05AD  0822               	movf	?___flmul+2,w
 10962     05AE  1683               	bsf	3,5	;RP0=1, select bank1
 10963     05AF  1303               	bcf	3,6	;RP1=0, select bank1
 10964     05B0  00B5               	movwf	(efgtoa@ou+2)^(0+128)
 10965     05B1  1283               	bcf	3,5	;RP0=0, select bank0
 10966     05B2  1303               	bcf	3,6	;RP1=0, select bank0
 10967     05B3  0821               	movf	?___flmul+1,w
 10968     05B4  1683               	bsf	3,5	;RP0=1, select bank1
 10969     05B5  1303               	bcf	3,6	;RP1=0, select bank1
 10970     05B6  00B4               	movwf	(efgtoa@ou+1)^(0+128)
 10971     05B7  1283               	bcf	3,5	;RP0=0, select bank0
 10972     05B8  1303               	bcf	3,6	;RP1=0, select bank0
 10973     05B9  0820               	movf	?___flmul,w
 10974     05BA  1683               	bsf	3,5	;RP0=1, select bank1
 10975     05BB  1303               	bcf	3,6	;RP1=0, select bank1
 10976     05BC  00B3               	movwf	efgtoa@ou^(0+128)
 10977     05BD                     l3172:
 10978                           
 10979                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 762:   if (nmode == 'f'
      +                          ) {
 10980     05BD  3066               	movlw	102
 10981     05BE  062A               	xorwf	efgtoa@nmode^(0+128),w
 10982     05BF  1D03               	btfss	3,2
 10983     05C0  2DC2               	goto	u4671
 10984     05C1  2DC3               	goto	u4670
 10985     05C2                     u4671:
 10986     05C2  2DC9               	goto	l777
 10987     05C3                     u4670:
 10988     05C3                     l3174:
 10989                           
 10990                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 764:    m++;
 10991     05C3  3001               	movlw	1
 10992     05C4  07AD               	addwf	efgtoa@m^(0+128),f
 10993     05C5  1803               	skipnc
 10994     05C6  0AAE               	incf	(efgtoa@m+1)^(0+128),f
 10995     05C7  3000               	movlw	0
 10996     05C8  07AE               	addwf	(efgtoa@m+1)^(0+128),f
 10997     05C9                     l777:	
 10998                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 767:  }
 10999                           
 11000                           
 11001                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 770:     u = ou;
 11002     05C9  1683               	bsf	3,5	;RP0=1, select bank1
 11003     05CA  1303               	bcf	3,6	;RP1=0, select bank1
 11004     05CB  0836               	movf	(efgtoa@ou+3)^(0+128),w
 11005     05CC  00CB               	movwf	(efgtoa@u+3)^(0+128)
 11006     05CD  0835               	movf	(efgtoa@ou+2)^(0+128),w
 11007     05CE  00CA               	movwf	(efgtoa@u+2)^(0+128)
 11008     05CF  0834               	movf	(efgtoa@ou+1)^(0+128),w
 11009     05D0  00C9               	movwf	(efgtoa@u+1)^(0+128)
 11010     05D1  0833               	movf	efgtoa@ou^(0+128),w
 11011     05D2  00C8               	movwf	efgtoa@u^(0+128)
 11012                           
 11013                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 774:  ne = e;
 11014     05D3  0830               	movf	(efgtoa@e+1)^(0+128),w
 11015     05D4  00A1               	movwf	(efgtoa@ne+1)^(0+128)
 11016     05D5  082F               	movf	efgtoa@e^(0+128),w
 11017     05D6  00A0               	movwf	efgtoa@ne^(0+128)
 11018     05D7                     l3176:
 11019                           
 11020                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
 11021     05D7  01A8               	clrf	efgtoa@pp^(0+128)
 11022     05D8                     l3178:
 11023                           
 11024                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 777:     t = 0;
 11025     05D8  01A4               	clrf	efgtoa@t^(0+128)
 11026     05D9  01A5               	clrf	(efgtoa@t+1)^(0+128)
 11027     05DA                     l3180:
 11028                           
 11029                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 778:     i = 0;
 11030     05DA  01B7               	clrf	efgtoa@i^(0+128)
 11031     05DB  01B8               	clrf	(efgtoa@i+1)^(0+128)
 11032                           
 11033                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((i < m)
      +                           && (n < (80 - 5))) {
 11034     05DC  2F3D               	goto	l3224
 11035     05DD                     l3182:
 11036                           
 11037                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 780:         l = floorf
      +                          (h/u.f);
 11038     05DD  1683               	bsf	3,5	;RP0=1, select bank1
 11039     05DE  1303               	bcf	3,6	;RP1=0, select bank1
 11040     05DF  084B               	movf	(efgtoa@u+3)^(0+128),w
 11041     05E0  00F3               	movwf	___fldiv@a+3
 11042     05E1  084A               	movf	(efgtoa@u+2)^(0+128),w
 11043     05E2  00F2               	movwf	___fldiv@a+2
 11044     05E3  0849               	movf	(efgtoa@u+1)^(0+128),w
 11045     05E4  00F1               	movwf	___fldiv@a+1
 11046     05E5  0848               	movf	efgtoa@u^(0+128),w
 11047     05E6  00F0               	movwf	___fldiv@a
 11048     05E7  083C               	movf	(efgtoa@h+3)^(0+128),w
 11049     05E8  00F7               	movwf	___fldiv@b+3
 11050     05E9  083B               	movf	(efgtoa@h+2)^(0+128),w
 11051     05EA  00F6               	movwf	___fldiv@b+2
 11052     05EB  083A               	movf	(efgtoa@h+1)^(0+128),w
 11053     05EC  00F5               	movwf	___fldiv@b+1
 11054     05ED  0839               	movf	efgtoa@h^(0+128),w
 11055     05EE  00F4               	movwf	___fldiv@b
 11056     05EF  120A  158A  209E  120A  118A  	fcall	___fldiv
 11057     05F4  0873               	movf	?___fldiv+3,w
 11058     05F5  1283               	bcf	3,5	;RP0=0, select bank0
 11059     05F6  1303               	bcf	3,6	;RP1=0, select bank0
 11060     05F7  00B0               	movwf	floorf@x+3
 11061     05F8  0872               	movf	?___fldiv+2,w
 11062     05F9  00AF               	movwf	floorf@x+2
 11063     05FA  0871               	movf	?___fldiv+1,w
 11064     05FB  00AE               	movwf	floorf@x+1
 11065     05FC  0870               	movf	?___fldiv,w
 11066     05FD  00AD               	movwf	floorf@x
 11067     05FE  160A  118A  2112  120A  118A  	fcall	_floorf
 11068     0603  1283               	bcf	3,5	;RP0=0, select bank0
 11069     0604  1303               	bcf	3,6	;RP1=0, select bank0
 11070     0605  0830               	movf	?_floorf+3,w
 11071     0606  1683               	bsf	3,5	;RP0=1, select bank1
 11072     0607  1303               	bcf	3,6	;RP1=0, select bank1
 11073     0608  00C0               	movwf	(efgtoa@l+3)^(0+128)
 11074     0609  1283               	bcf	3,5	;RP0=0, select bank0
 11075     060A  1303               	bcf	3,6	;RP1=0, select bank0
 11076     060B  082F               	movf	?_floorf+2,w
 11077     060C  1683               	bsf	3,5	;RP0=1, select bank1
 11078     060D  1303               	bcf	3,6	;RP1=0, select bank1
 11079     060E  00BF               	movwf	(efgtoa@l+2)^(0+128)
 11080     060F  1283               	bcf	3,5	;RP0=0, select bank0
 11081     0610  1303               	bcf	3,6	;RP1=0, select bank0
 11082     0611  082E               	movf	?_floorf+1,w
 11083     0612  1683               	bsf	3,5	;RP0=1, select bank1
 11084     0613  1303               	bcf	3,6	;RP1=0, select bank1
 11085     0614  00BE               	movwf	(efgtoa@l+1)^(0+128)
 11086     0615  1283               	bcf	3,5	;RP0=0, select bank0
 11087     0616  1303               	bcf	3,6	;RP1=0, select bank0
 11088     0617  082D               	movf	?_floorf,w
 11089     0618  1683               	bsf	3,5	;RP0=1, select bank1
 11090     0619  1303               	bcf	3,6	;RP1=0, select bank1
 11091     061A  00BD               	movwf	efgtoa@l^(0+128)
 11092                           
 11093                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 781:         d = (int)l
      +                           > 9 ? 9 : (int)l;
 11094     061B  0840               	movf	(efgtoa@l+3)^(0+128),w
 11095     061C  00F3               	movwf	___fltol@f1+3
 11096     061D  083F               	movf	(efgtoa@l+2)^(0+128),w
 11097     061E  00F2               	movwf	___fltol@f1+2
 11098     061F  083E               	movf	(efgtoa@l+1)^(0+128),w
 11099     0620  00F1               	movwf	___fltol@f1+1
 11100     0621  083D               	movf	efgtoa@l^(0+128),w
 11101     0622  00F0               	movwf	___fltol@f1
 11102     0623  160A  158A  24DD  120A  118A  	fcall	___fltol
 11103     0628  0871               	movf	?___fltol+1,w
 11104     0629  3A80               	xorlw	128
 11105     062A  00FF               	movwf	btemp+1
 11106     062B  3080               	movlw	128
 11107     062C  027F               	subwf	btemp+1,w
 11108     062D  1D03               	skipz
 11109     062E  2E31               	goto	u4685
 11110     062F  300A               	movlw	10
 11111     0630  0270               	subwf	?___fltol,w
 11112     0631                     u4685:
 11113     0631  1803               	skipnc
 11114     0632  2E34               	goto	u4681
 11115     0633  2E35               	goto	u4680
 11116     0634                     u4681:
 11117     0634  2E4B               	goto	l3186
 11118     0635                     u4680:
 11119     0635                     l3184:
 11120     0635  1683               	bsf	3,5	;RP0=1, select bank1
 11121     0636  1303               	bcf	3,6	;RP1=0, select bank1
 11122     0637  0840               	movf	(efgtoa@l+3)^(0+128),w
 11123     0638  00F3               	movwf	___fltol@f1+3
 11124     0639  083F               	movf	(efgtoa@l+2)^(0+128),w
 11125     063A  00F2               	movwf	___fltol@f1+2
 11126     063B  083E               	movf	(efgtoa@l+1)^(0+128),w
 11127     063C  00F1               	movwf	___fltol@f1+1
 11128     063D  083D               	movf	efgtoa@l^(0+128),w
 11129     063E  00F0               	movwf	___fltol@f1
 11130     063F  160A  158A  24DD  120A  118A  	fcall	___fltol
 11131     0644  0871               	movf	?___fltol+1,w
 11132     0645  1683               	bsf	3,5	;RP0=1, select bank1
 11133     0646  1303               	bcf	3,6	;RP1=0, select bank1
 11134     0647  00AC               	movwf	(efgtoa@d+1)^(0+128)
 11135     0648  0870               	movf	?___fltol,w
 11136     0649  00AB               	movwf	efgtoa@d^(0+128)
 11137     064A  2E51               	goto	l3188
 11138     064B                     l3186:
 11139     064B  3009               	movlw	9
 11140     064C  1683               	bsf	3,5	;RP0=1, select bank1
 11141     064D  1303               	bcf	3,6	;RP1=0, select bank1
 11142     064E  00AB               	movwf	efgtoa@d^(0+128)
 11143     064F  3000               	movlw	0
 11144     0650  00AC               	movwf	(efgtoa@d^(0+128)+1)
 11145     0651                     l3188:
 11146                           
 11147                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 792:   {;c:\PROGRA~1\MI
      +                          CROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 793:             if (!pp && (ne < 0)) 
      +                          {
 11148     0651  0828               	movf	efgtoa@pp^(0+128),w
 11149     0652  1D03               	btfss	3,2
 11150     0653  2E55               	goto	u4691
 11151     0654  2E56               	goto	u4690
 11152     0655                     u4691:
 11153     0655  2E87               	goto	l3208
 11154     0656                     u4690:
 11155     0656                     l3190:
 11156     0656  1FA1               	btfss	(efgtoa@ne+1)^(0+128),7
 11157     0657  2E59               	goto	u4701
 11158     0658  2E5A               	goto	u4700
 11159     0659                     u4701:
 11160     0659  2E87               	goto	l3208
 11161     065A                     u4700:
 11162     065A                     l3192:
 11163                           
 11164                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 794:                 db
      +                          uf[n++] = '.';
 11165     065A  0842               	movf	efgtoa@n^(0+128),w
 11166     065B  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11167     065C  0084               	movwf	4
 11168     065D  302E               	movlw	46
 11169     065E  1783               	bsf	3,7	;select IRP bank2
 11170     065F  0080               	movwf	0
 11171     0660                     l3194:
 11172     0660  3001               	movlw	1
 11173     0661  07C2               	addwf	efgtoa@n^(0+128),f
 11174     0662  1803               	skipnc
 11175     0663  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 11176     0664  3000               	movlw	0
 11177     0665  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 11178     0666                     l3196:
 11179                           
 11180                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 795:                 --
      +                          w;
 11181     0666  30FF               	movlw	255
 11182     0667  07B1               	addwf	efgtoa@w^(0+128),f
 11183     0668  1803               	skipnc
 11184     0669  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 11185     066A  30FF               	movlw	255
 11186     066B  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 11187     066C                     l3198:
 11188                           
 11189                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 796:                 pp
      +                           = 1;
 11190     066C  3001               	movlw	1
 11191     066D  00A8               	movwf	efgtoa@pp^(0+128)
 11192     066E  2E87               	goto	l3208
 11193     066F                     l3200:
 11194                           
 11195                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 799:                 db
      +                          uf[n++] = '0';
 11196     066F  0842               	movf	efgtoa@n^(0+128),w
 11197     0670  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11198     0671  0084               	movwf	4
 11199     0672  3030               	movlw	48
 11200     0673  1783               	bsf	3,7	;select IRP bank2
 11201     0674  0080               	movwf	0
 11202     0675                     l3202:
 11203     0675  3001               	movlw	1
 11204     0676  07C2               	addwf	efgtoa@n^(0+128),f
 11205     0677  1803               	skipnc
 11206     0678  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 11207     0679  3000               	movlw	0
 11208     067A  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 11209     067B                     l3204:
 11210                           
 11211                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 800:                 --
      +                          w;
 11212     067B  30FF               	movlw	255
 11213     067C  07B1               	addwf	efgtoa@w^(0+128),f
 11214     067D  1803               	skipnc
 11215     067E  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 11216     067F  30FF               	movlw	255
 11217     0680  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 11218     0681                     l3206:
 11219                           
 11220                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 801:                 --
      +                          t;
 11221     0681  30FF               	movlw	255
 11222     0682  07A4               	addwf	efgtoa@t^(0+128),f
 11223     0683  1803               	skipnc
 11224     0684  0AA5               	incf	(efgtoa@t+1)^(0+128),f
 11225     0685  30FF               	movlw	255
 11226     0686  07A5               	addwf	(efgtoa@t+1)^(0+128),f
 11227     0687                     l3208:
 11228                           
 11229                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 798:             while 
      +                          (t) {
 11230     0687  0824               	movf	efgtoa@t^(0+128),w
 11231     0688  0425               	iorwf	(efgtoa@t+1)^(0+128),w
 11232     0689  1D03               	btfss	3,2
 11233     068A  2E8C               	goto	u4711
 11234     068B  2E8D               	goto	u4710
 11235     068C                     u4711:
 11236     068C  2E6F               	goto	l3200
 11237     068D                     u4710:
 11238     068D                     l3210:
 11239                           
 11240                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 803:             dbuf[n
      +                          ++] = (char)((int)'0' + d);
 11241     068D  0842               	movf	efgtoa@n^(0+128),w
 11242     068E  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11243     068F  0084               	movwf	4
 11244     0690  082B               	movf	efgtoa@d^(0+128),w
 11245     0691  3E30               	addlw	48
 11246     0692  1783               	bsf	3,7	;select IRP bank2
 11247     0693  0080               	movwf	0
 11248     0694                     l3212:
 11249     0694  3001               	movlw	1
 11250     0695  07C2               	addwf	efgtoa@n^(0+128),f
 11251     0696  1803               	skipnc
 11252     0697  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 11253     0698  3000               	movlw	0
 11254     0699  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 11255     069A                     l3214:
 11256                           
 11257                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 804:             --w;
 11258     069A  30FF               	movlw	255
 11259     069B  07B1               	addwf	efgtoa@w^(0+128),f
 11260     069C  1803               	skipnc
 11261     069D  0AB2               	incf	(efgtoa@w+1)^(0+128),f
 11262     069E  30FF               	movlw	255
 11263     069F  07B2               	addwf	(efgtoa@w+1)^(0+128),f
 11264     06A0                     l3216:
 11265                           
 11266                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 805:         };c:\PROGR
      +                          A~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 806:         h -= l*u.f;
 11267     06A0  084B               	movf	(efgtoa@u+3)^(0+128),w
 11268     06A1  1283               	bcf	3,5	;RP0=0, select bank0
 11269     06A2  1303               	bcf	3,6	;RP1=0, select bank0
 11270     06A3  00A7               	movwf	___flmul@a+3
 11271     06A4  1683               	bsf	3,5	;RP0=1, select bank1
 11272     06A5  1303               	bcf	3,6	;RP1=0, select bank1
 11273     06A6  084A               	movf	(efgtoa@u+2)^(0+128),w
 11274     06A7  1283               	bcf	3,5	;RP0=0, select bank0
 11275     06A8  1303               	bcf	3,6	;RP1=0, select bank0
 11276     06A9  00A6               	movwf	___flmul@a+2
 11277     06AA  1683               	bsf	3,5	;RP0=1, select bank1
 11278     06AB  1303               	bcf	3,6	;RP1=0, select bank1
 11279     06AC  0849               	movf	(efgtoa@u+1)^(0+128),w
 11280     06AD  1283               	bcf	3,5	;RP0=0, select bank0
 11281     06AE  1303               	bcf	3,6	;RP1=0, select bank0
 11282     06AF  00A5               	movwf	___flmul@a+1
 11283     06B0  1683               	bsf	3,5	;RP0=1, select bank1
 11284     06B1  1303               	bcf	3,6	;RP1=0, select bank1
 11285     06B2  0848               	movf	efgtoa@u^(0+128),w
 11286     06B3  1283               	bcf	3,5	;RP0=0, select bank0
 11287     06B4  1303               	bcf	3,6	;RP1=0, select bank0
 11288     06B5  00A4               	movwf	___flmul@a
 11289     06B6  1683               	bsf	3,5	;RP0=1, select bank1
 11290     06B7  1303               	bcf	3,6	;RP1=0, select bank1
 11291     06B8  0840               	movf	(efgtoa@l+3)^(0+128),w
 11292     06B9  1283               	bcf	3,5	;RP0=0, select bank0
 11293     06BA  1303               	bcf	3,6	;RP1=0, select bank0
 11294     06BB  00A3               	movwf	___flmul@b+3
 11295     06BC  1683               	bsf	3,5	;RP0=1, select bank1
 11296     06BD  1303               	bcf	3,6	;RP1=0, select bank1
 11297     06BE  083F               	movf	(efgtoa@l+2)^(0+128),w
 11298     06BF  1283               	bcf	3,5	;RP0=0, select bank0
 11299     06C0  1303               	bcf	3,6	;RP1=0, select bank0
 11300     06C1  00A2               	movwf	___flmul@b+2
 11301     06C2  1683               	bsf	3,5	;RP0=1, select bank1
 11302     06C3  1303               	bcf	3,6	;RP1=0, select bank1
 11303     06C4  083E               	movf	(efgtoa@l+1)^(0+128),w
 11304     06C5  1283               	bcf	3,5	;RP0=0, select bank0
 11305     06C6  1303               	bcf	3,6	;RP1=0, select bank0
 11306     06C7  00A1               	movwf	___flmul@b+1
 11307     06C8  1683               	bsf	3,5	;RP0=1, select bank1
 11308     06C9  1303               	bcf	3,6	;RP1=0, select bank1
 11309     06CA  083D               	movf	efgtoa@l^(0+128),w
 11310     06CB  1283               	bcf	3,5	;RP0=0, select bank0
 11311     06CC  1303               	bcf	3,6	;RP1=0, select bank0
 11312     06CD  00A0               	movwf	___flmul@b
 11313     06CE  120A  158A  24BE  120A  118A  	fcall	___flmul
 11314     06D3  1283               	bcf	3,5	;RP0=0, select bank0
 11315     06D4  1303               	bcf	3,6	;RP1=0, select bank0
 11316     06D5  0823               	movf	?___flmul+3,w
 11317     06D6  00CC               	movwf	___flsub@a+3
 11318     06D7  0822               	movf	?___flmul+2,w
 11319     06D8  00CB               	movwf	___flsub@a+2
 11320     06D9  0821               	movf	?___flmul+1,w
 11321     06DA  00CA               	movwf	___flsub@a+1
 11322     06DB  0820               	movf	?___flmul,w
 11323     06DC  00C9               	movwf	___flsub@a
 11324     06DD  1683               	bsf	3,5	;RP0=1, select bank1
 11325     06DE  1303               	bcf	3,6	;RP1=0, select bank1
 11326     06DF  083C               	movf	(efgtoa@h+3)^(0+128),w
 11327     06E0  1283               	bcf	3,5	;RP0=0, select bank0
 11328     06E1  1303               	bcf	3,6	;RP1=0, select bank0
 11329     06E2  00D0               	movwf	___flsub@b+3
 11330     06E3  1683               	bsf	3,5	;RP0=1, select bank1
 11331     06E4  1303               	bcf	3,6	;RP1=0, select bank1
 11332     06E5  083B               	movf	(efgtoa@h+2)^(0+128),w
 11333     06E6  1283               	bcf	3,5	;RP0=0, select bank0
 11334     06E7  1303               	bcf	3,6	;RP1=0, select bank0
 11335     06E8  00CF               	movwf	___flsub@b+2
 11336     06E9  1683               	bsf	3,5	;RP0=1, select bank1
 11337     06EA  1303               	bcf	3,6	;RP1=0, select bank1
 11338     06EB  083A               	movf	(efgtoa@h+1)^(0+128),w
 11339     06EC  1283               	bcf	3,5	;RP0=0, select bank0
 11340     06ED  1303               	bcf	3,6	;RP1=0, select bank0
 11341     06EE  00CE               	movwf	___flsub@b+1
 11342     06EF  1683               	bsf	3,5	;RP0=1, select bank1
 11343     06F0  1303               	bcf	3,6	;RP1=0, select bank1
 11344     06F1  0839               	movf	efgtoa@h^(0+128),w
 11345     06F2  1283               	bcf	3,5	;RP0=0, select bank0
 11346     06F3  1303               	bcf	3,6	;RP1=0, select bank0
 11347     06F4  00CD               	movwf	___flsub@b
 11348     06F5  160A  158A  2355  120A  118A  	fcall	___flsub
 11349     06FA  1283               	bcf	3,5	;RP0=0, select bank0
 11350     06FB  1303               	bcf	3,6	;RP1=0, select bank0
 11351     06FC  084C               	movf	?___flsub+3,w
 11352     06FD  1683               	bsf	3,5	;RP0=1, select bank1
 11353     06FE  1303               	bcf	3,6	;RP1=0, select bank1
 11354     06FF  00BC               	movwf	(efgtoa@h+3)^(0+128)
 11355     0700  1283               	bcf	3,5	;RP0=0, select bank0
 11356     0701  1303               	bcf	3,6	;RP1=0, select bank0
 11357     0702  084B               	movf	?___flsub+2,w
 11358     0703  1683               	bsf	3,5	;RP0=1, select bank1
 11359     0704  1303               	bcf	3,6	;RP1=0, select bank1
 11360     0705  00BB               	movwf	(efgtoa@h+2)^(0+128)
 11361     0706  1283               	bcf	3,5	;RP0=0, select bank0
 11362     0707  1303               	bcf	3,6	;RP1=0, select bank0
 11363     0708  084A               	movf	?___flsub+1,w
 11364     0709  1683               	bsf	3,5	;RP0=1, select bank1
 11365     070A  1303               	bcf	3,6	;RP1=0, select bank1
 11366     070B  00BA               	movwf	(efgtoa@h+1)^(0+128)
 11367     070C  1283               	bcf	3,5	;RP0=0, select bank0
 11368     070D  1303               	bcf	3,6	;RP1=0, select bank0
 11369     070E  0849               	movf	?___flsub,w
 11370     070F  1683               	bsf	3,5	;RP0=1, select bank1
 11371     0710  1303               	bcf	3,6	;RP1=0, select bank1
 11372     0711  00B9               	movwf	efgtoa@h^(0+128)
 11373     0712                     l3218:
 11374                           
 11375                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 807:         u.f = u.f/
      +                          10.0;
 11376     0712  3041               	movlw	65
 11377     0713  00F3               	movwf	___fldiv@a+3
 11378     0714  3020               	movlw	32
 11379     0715  00F2               	movwf	___fldiv@a+2
 11380     0716  3000               	movlw	0
 11381     0717  00F1               	movwf	___fldiv@a+1
 11382     0718  3000               	movlw	0
 11383     0719  00F0               	movwf	___fldiv@a
 11384     071A  084B               	movf	(efgtoa@u+3)^(0+128),w
 11385     071B  00F7               	movwf	___fldiv@b+3
 11386     071C  084A               	movf	(efgtoa@u+2)^(0+128),w
 11387     071D  00F6               	movwf	___fldiv@b+2
 11388     071E  0849               	movf	(efgtoa@u+1)^(0+128),w
 11389     071F  00F5               	movwf	___fldiv@b+1
 11390     0720  0848               	movf	efgtoa@u^(0+128),w
 11391     0721  00F4               	movwf	___fldiv@b
 11392     0722  120A  158A  209E  120A  118A  	fcall	___fldiv
 11393     0727  0873               	movf	?___fldiv+3,w
 11394     0728  1683               	bsf	3,5	;RP0=1, select bank1
 11395     0729  1303               	bcf	3,6	;RP1=0, select bank1
 11396     072A  00CB               	movwf	(efgtoa@u+3)^(0+128)
 11397     072B  0872               	movf	?___fldiv+2,w
 11398     072C  00CA               	movwf	(efgtoa@u+2)^(0+128)
 11399     072D  0871               	movf	?___fldiv+1,w
 11400     072E  00C9               	movwf	(efgtoa@u+1)^(0+128)
 11401     072F  0870               	movf	?___fldiv,w
 11402     0730  00C8               	movwf	efgtoa@u^(0+128)
 11403     0731                     l3220:
 11404                           
 11405                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 808:         --ne;
 11406     0731  30FF               	movlw	255
 11407     0732  07A0               	addwf	efgtoa@ne^(0+128),f
 11408     0733  1803               	skipnc
 11409     0734  0AA1               	incf	(efgtoa@ne+1)^(0+128),f
 11410     0735  30FF               	movlw	255
 11411     0736  07A1               	addwf	(efgtoa@ne+1)^(0+128),f
 11412     0737                     l3222:
 11413                           
 11414                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 809:         ++i;
 11415     0737  3001               	movlw	1
 11416     0738  07B7               	addwf	efgtoa@i^(0+128),f
 11417     0739  1803               	skipnc
 11418     073A  0AB8               	incf	(efgtoa@i+1)^(0+128),f
 11419     073B  3000               	movlw	0
 11420     073C  07B8               	addwf	(efgtoa@i+1)^(0+128),f
 11421     073D                     l3224:
 11422                           
 11423                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 779:     while ((i < m)
      +                           && (n < (80 - 5))) {
 11424     073D  0838               	movf	(efgtoa@i+1)^(0+128),w
 11425     073E  3A80               	xorlw	128
 11426     073F  1283               	bcf	3,5	;RP0=0, select bank0
 11427     0740  1303               	bcf	3,6	;RP1=0, select bank0
 11428     0741  00D8               	movwf	??_efgtoa
 11429     0742  1683               	bsf	3,5	;RP0=1, select bank1
 11430     0743  1303               	bcf	3,6	;RP1=0, select bank1
 11431     0744  082E               	movf	(efgtoa@m+1)^(0+128),w
 11432     0745  3A80               	xorlw	128
 11433     0746  1283               	bcf	3,5	;RP0=0, select bank0
 11434     0747  1303               	bcf	3,6	;RP1=0, select bank0
 11435     0748  0258               	subwf	??_efgtoa,w
 11436     0749  1D03               	skipz
 11437     074A  2F4F               	goto	u4725
 11438     074B  1683               	bsf	3,5	;RP0=1, select bank1
 11439     074C  1303               	bcf	3,6	;RP1=0, select bank1
 11440     074D  082D               	movf	efgtoa@m^(0+128),w
 11441     074E  0237               	subwf	efgtoa@i^(0+128),w
 11442     074F                     u4725:
 11443     074F  1803               	skipnc
 11444     0750  2F52               	goto	u4721
 11445     0751  2F53               	goto	u4720
 11446     0752                     u4721:
 11447     0752  2F62               	goto	l3228
 11448     0753                     u4720:
 11449     0753                     l3226:
 11450     0753  1683               	bsf	3,5	;RP0=1, select bank1
 11451     0754  1303               	bcf	3,6	;RP1=0, select bank1
 11452     0755  0843               	movf	(efgtoa@n+1)^(0+128),w
 11453     0756  3A80               	xorlw	128
 11454     0757  00FF               	movwf	btemp+1
 11455     0758  3080               	movlw	128
 11456     0759  027F               	subwf	btemp+1,w
 11457     075A  1D03               	skipz
 11458     075B  2F5E               	goto	u4735
 11459     075C  304B               	movlw	75
 11460     075D  0242               	subwf	efgtoa@n^(0+128),w
 11461     075E                     u4735:
 11462     075E  1C03               	skipc
 11463     075F  2F61               	goto	u4731
 11464     0760  2F62               	goto	u4730
 11465     0761                     u4731:
 11466     0761  2DDD               	goto	l3182
 11467     0762                     u4730:
 11468     0762                     l3228:
 11469                           
 11470                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(dbuf) 
      +                          - 1;
 11471     0762  304F               	movlw	79
 11472     0763  1683               	bsf	3,5	;RP0=1, select bank1
 11473     0764  1303               	bcf	3,6	;RP1=0, select bank1
 11474     0765  00B7               	movwf	efgtoa@i^(0+128)
 11475     0766  3000               	movlw	0
 11476     0767  00B8               	movwf	(efgtoa@i^(0+128)+1)
 11477     0768                     l3230:
 11478                           
 11479                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] = '\0'
      +                          ;
 11480     0768  0837               	movf	efgtoa@i^(0+128),w
 11481     0769  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11482     076A  0084               	movwf	4
 11483     076B  1783               	bsf	3,7	;select IRP bank2
 11484     076C  0180               	clrf	0
 11485     076D                     l3232:
 11486                           
 11487                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbuf[i-n]
      +                          , &dbuf[0], (size_t)n);
 11488     076D  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
 11489     076E  1283               	bcf	3,5	;RP0=0, select bank0
 11490     076F  1303               	bcf	3,6	;RP1=0, select bank0
 11491     0770  00D8               	movwf	??_efgtoa
 11492     0771  1683               	bsf	3,5	;RP0=1, select bank1
 11493     0772  1303               	bcf	3,6	;RP1=0, select bank1
 11494     0773  0842               	movf	efgtoa@n^(0+128),w
 11495     0774  1283               	bcf	3,5	;RP0=0, select bank0
 11496     0775  1303               	bcf	3,6	;RP1=0, select bank0
 11497     0776  02D8               	subwf	??_efgtoa,f
 11498     0777  1683               	bsf	3,5	;RP0=1, select bank1
 11499     0778  1303               	bcf	3,6	;RP1=0, select bank1
 11500     0779  0837               	movf	efgtoa@i^(0+128),w
 11501     077A  1283               	bcf	3,5	;RP0=0, select bank0
 11502     077B  1303               	bcf	3,6	;RP1=0, select bank0
 11503     077C  0758               	addwf	??_efgtoa,w
 11504     077D  00F0               	movwf	memcpy@d1
 11505     077E  3010               	movlw	(low (_dbuf| (0+256)))& (0+255)
 11506     077F  00F1               	movwf	memcpy@s1
 11507     0780  1683               	bsf	3,5	;RP0=1, select bank1
 11508     0781  1303               	bcf	3,6	;RP1=0, select bank1
 11509     0782  0843               	movf	(efgtoa@n+1)^(0+128),w
 11510     0783  00F3               	movwf	memcpy@n+1
 11511     0784  0842               	movf	efgtoa@n^(0+128),w
 11512     0785  00F2               	movwf	memcpy@n
 11513     0786  160A  158A  2313  120A  118A  	fcall	_memcpy
 11514     078B                     l3234:
 11515                           
 11516                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 11517     078B  1683               	bsf	3,5	;RP0=1, select bank1
 11518     078C  1303               	bcf	3,6	;RP1=0, select bank1
 11519     078D  0842               	movf	efgtoa@n^(0+128),w
 11520     078E  0237               	subwf	efgtoa@i^(0+128),w
 11521     078F  00C2               	movwf	efgtoa@n^(0+128)
 11522     0790  0843               	movf	(efgtoa@n+1)^(0+128),w
 11523     0791  1C03               	skipc
 11524     0792  0A43               	incf	(efgtoa@n+1)^(0+128),w
 11525     0793  0238               	subwf	(efgtoa@i+1)^(0+128),w
 11526     0794  00C3               	movwf	(efgtoa@n+1)^(0+128)
 11527     0795                     l3236:
 11528                           
 11529                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 850:  i = sign == 0 ? 0
      +                           : 1;
 11530     0795  0841               	movf	efgtoa@sign^(0+128),w
 11531     0796  1D03               	btfss	3,2
 11532     0797  2F99               	goto	u4741
 11533     0798  2F9B               	goto	u4740
 11534     0799                     u4741:
 11535     0799  3001               	movlw	1
 11536     079A  2F9C               	goto	u4750
 11537     079B                     u4740:
 11538     079B  3000               	movlw	0
 11539     079C                     u4750:
 11540     079C  1283               	bcf	3,5	;RP0=0, select bank0
 11541     079D  1303               	bcf	3,6	;RP1=0, select bank0
 11542     079E  00D8               	movwf	??_efgtoa
 11543     079F  01D9               	clrf	??_efgtoa+1
 11544     07A0  0858               	movf	??_efgtoa,w
 11545     07A1  1683               	bsf	3,5	;RP0=1, select bank1
 11546     07A2  1303               	bcf	3,6	;RP1=0, select bank1
 11547     07A3  00B7               	movwf	efgtoa@i^(0+128)
 11548     07A4  1283               	bcf	3,5	;RP0=0, select bank0
 11549     07A5  1303               	bcf	3,6	;RP1=0, select bank0
 11550     07A6  0859               	movf	??_efgtoa+1,w
 11551     07A7  1683               	bsf	3,5	;RP0=1, select bank1
 11552     07A8  1303               	bcf	3,6	;RP1=0, select bank1
 11553     07A9  00B8               	movwf	(efgtoa@i+1)^(0+128)
 11554     07AA                     l3238:
 11555                           
 11556                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 11557     07AA  0841               	movf	efgtoa@sign^(0+128),w
 11558     07AB  1903               	btfsc	3,2
 11559     07AC  2FAE               	goto	u4761
 11560     07AD  2FAF               	goto	u4760
 11561     07AE                     u4761:
 11562     07AE  2FBB               	goto	l3242
 11563     07AF                     u4760:
 11564     07AF                     l3240:
 11565                           
 11566                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] = sign
      +                          ;
 11567     07AF  30FF               	movlw	255
 11568     07B0  07C2               	addwf	efgtoa@n^(0+128),f
 11569     07B1  1803               	skipnc
 11570     07B2  0AC3               	incf	(efgtoa@n+1)^(0+128),f
 11571     07B3  30FF               	movlw	255
 11572     07B4  07C3               	addwf	(efgtoa@n+1)^(0+128),f
 11573     07B5  0842               	movf	efgtoa@n^(0+128),w
 11574     07B6  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11575     07B7  0084               	movwf	4
 11576     07B8  0841               	movf	efgtoa@sign^(0+128),w
 11577     07B9  1783               	bsf	3,7	;select IRP bank2
 11578     07BA  0080               	movwf	0
 11579     07BB                     l3242:
 11580                           
 11581                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 11582     07BB  0837               	movf	efgtoa@i^(0+128),w
 11583     07BC  02B1               	subwf	efgtoa@w^(0+128),f
 11584     07BD  0838               	movf	(efgtoa@i+1)^(0+128),w
 11585     07BE  1C03               	skipc
 11586     07BF  03B2               	decf	(efgtoa@w+1)^(0+128),f
 11587     07C0  02B2               	subwf	(efgtoa@w+1)^(0+128),f
 11588     07C1                     l3244:
 11589                           
 11590                           ;c:\PROGRA~1\MICROC~1\xc8\v3.00\pic\sources\c99\common\doprnt.c: 867:     return (int) p
      +                          ad(fp, &dbuf[n], w);
 11591     07C1  1283               	bcf	3,5	;RP0=0, select bank0
 11592     07C2  1303               	bcf	3,6	;RP1=0, select bank0
 11593     07C3  0851               	movf	efgtoa@fp,w
 11594     07C4  00A8               	movwf	pad@fp
 11595     07C5  0852               	movf	efgtoa@fp+1,w
 11596     07C6  00A9               	movwf	pad@fp+1
 11597     07C7  1683               	bsf	3,5	;RP0=1, select bank1
 11598     07C8  1303               	bcf	3,6	;RP1=0, select bank1
 11599     07C9  0842               	movf	efgtoa@n^(0+128),w
 11600     07CA  3E10               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11601     07CB  1283               	bcf	3,5	;RP0=0, select bank0
 11602     07CC  1303               	bcf	3,6	;RP1=0, select bank0
 11603     07CD  00AA               	movwf	pad@buf
 11604     07CE  1683               	bsf	3,5	;RP0=1, select bank1
 11605     07CF  1303               	bcf	3,6	;RP1=0, select bank1
 11606     07D0  0832               	movf	(efgtoa@w+1)^(0+128),w
 11607     07D1  1283               	bcf	3,5	;RP0=0, select bank0
 11608     07D2  1303               	bcf	3,6	;RP1=0, select bank0
 11609     07D3  00AC               	movwf	pad@p+1
 11610     07D4  1683               	bsf	3,5	;RP0=1, select bank1
 11611     07D5  1303               	bcf	3,6	;RP1=0, select bank1
 11612     07D6  0831               	movf	efgtoa@w^(0+128),w
 11613     07D7  1283               	bcf	3,5	;RP0=0, select bank0
 11614     07D8  1303               	bcf	3,6	;RP1=0, select bank0
 11615     07D9  00AB               	movwf	pad@p
 11616     07DA  160A  158A  248A  120A  118A  	fcall	_pad
 11617     07DF  1283               	bcf	3,5	;RP0=0, select bank0
 11618     07E0  1303               	bcf	3,6	;RP1=0, select bank0
 11619     07E1  0829               	movf	?_pad+1,w
 11620     07E2  00D2               	movwf	?_efgtoa+1
 11621     07E3  0828               	movf	?_pad,w
 11622     07E4  00D1               	movwf	?_efgtoa
 11623     07E5                     l751:
 11624     07E5  0008               	return
 11625     07E6                     __end_of_efgtoa:

Data Sizes:
    Strings     43
    Constant    0
    Data        0
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     76      79
    BANK3            96     32      70
    BANK2            96      0      80

Pointer List with Targets:

    calculate@num1	PTR  size(1) Largest target is 8
		 -> main@values(BANK3[8]), 

    calculate@num2	PTR  size(1) Largest target is 8
		 -> main@values(BANK3[8]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK1[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> calculate@result(BANK3[16]), 

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK1[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> calculate@result(BANK3[16]), 

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK1[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    getInput@output	PTR unsigned char [1] size(1) Largest target is 2
		 -> STR_1(CODE[1]), STR_10(CODE[2]), STR_11(CODE[2]), STR_12(CODE[2]), 
		 -> STR_13(CODE[2]), STR_14(CODE[2]), STR_15(CODE[2]), STR_16(CODE[2]), 
		 -> STR_17(CODE[2]), STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), 
		 -> STR_5(CODE[2]), STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), 
		 -> STR_9(CODE[2]), 

    LCDdisplay@sentence	PTR unsigned char  size(2) Largest target is 16
		 -> main@output(BANK3[16]), STR_1(CODE[1]), STR_10(CODE[2]), STR_11(CODE[2]), 
		 -> STR_12(CODE[2]), STR_13(CODE[2]), STR_14(CODE[2]), STR_15(CODE[2]), 
		 -> STR_16(CODE[2]), STR_17(CODE[2]), STR_2(CODE[2]), STR_3(CODE[2]), 
		 -> STR_4(CODE[2]), STR_5(CODE[2]), STR_6(CODE[2]), STR_7(CODE[2]), 
		 -> STR_8(CODE[2]), STR_9(CODE[2]), 

    main$1077	PTR const unsigned char  size(1) Largest target is 16
		 -> calculate@result(BANK3[16]), 

    main@newInput	PTR unsigned char [1] size(1) Largest target is 2
		 -> STR_1(CODE[1]), STR_10(CODE[2]), STR_11(CODE[2]), STR_12(CODE[2]), 
		 -> STR_13(CODE[2]), STR_14(CODE[2]), STR_15(CODE[2]), STR_16(CODE[2]), 
		 -> STR_17(CODE[2]), STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), 
		 -> STR_5(CODE[2]), STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), 
		 -> STR_9(CODE[2]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK1[11]), 

    S668$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> calculate@result(BANK3[16]), 

    S668$source	PTR const unsigned char  size(1) Largest target is 0

    setDigit@newValue	PTR unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[1]), STR_10(CODE[2]), STR_11(CODE[2]), STR_12(CODE[2]), 
		 -> STR_13(CODE[2]), STR_14(CODE[2]), STR_15(CODE[2]), STR_16(CODE[2]), 
		 -> STR_17(CODE[2]), STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), 
		 -> STR_5(CODE[2]), STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), 
		 -> STR_9(CODE[2]), 

    setDigit@oldValue	PTR  size(1) Largest target is 8
		 -> main@values(BANK3[8]), 

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(BANK1[2]), 

    snprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_18(CODE[3]), 

    snprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> calculate@result(BANK3[16]), 

    sp__calculate	PTR unsigned char  size(1) Largest target is 16
		 -> calculate@result(BANK3[16]), 

    sp__getInput	PTR unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[1]), STR_10(CODE[2]), STR_11(CODE[2]), STR_12(CODE[2]), 
		 -> STR_13(CODE[2]), STR_14(CODE[2]), STR_15(CODE[2]), STR_16(CODE[2]), 
		 -> STR_17(CODE[2]), STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), 
		 -> STR_5(CODE[2]), STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), 
		 -> STR_9(CODE[2]), 

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), main@output(BANK3[16]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), main@output(BANK3[16]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK2[80]), main@output(BANK3[16]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 16
		 -> calculate@result(BANK3[16]), STR_19(CODE[4]), STR_22(CODE[4]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> calculate@result(BANK3[16]), dbuf(BANK2[80]), main@output(BANK3[16]), STR_1(CODE[1]), 
		 -> STR_10(CODE[2]), STR_11(CODE[2]), STR_12(CODE[2]), STR_13(CODE[2]), 
		 -> STR_14(CODE[2]), STR_15(CODE[2]), STR_16(CODE[2]), STR_17(CODE[2]), 
		 -> STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), STR_5(CODE[2]), 
		 -> STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), STR_9(CODE[2]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> calculate@result(BANK3[16]), dbuf(BANK2[80]), main@output(BANK3[16]), STR_1(CODE[1]), 
		 -> STR_10(CODE[2]), STR_11(CODE[2]), STR_12(CODE[2]), STR_13(CODE[2]), 
		 -> STR_14(CODE[2]), STR_15(CODE[2]), STR_16(CODE[2]), STR_17(CODE[2]), 
		 -> STR_2(CODE[2]), STR_3(CODE[2]), STR_4(CODE[2]), STR_5(CODE[2]), 
		 -> STR_6(CODE[2]), STR_7(CODE[2]), STR_8(CODE[2]), STR_9(CODE[2]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK1[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_18(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK1[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(BANK1[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_18(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_18(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> snprintf@f(BANK1[11]), 


Critical Paths under _main in COMMON

    _setDigit->___flmul
    _setDigit->___xxtofl
    _LCDdisplay->_strlen
    _selectRow->_sendCommand
    _sendCommand->_toggleEnable
    _getInput->_strlen
    _calculate->___flmul
    _efgtoa->___flmul
    _efgtoa->_pad
    _pad->_fputc
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flsub->___xxtofl
    ___fladd->___flmul
    ___fladd->___xxtofl
    ___flmul->__Umul8_16
    ___flge->___flmul

Critical Paths under _main in BANK0

    _setDigit->___flsub
    _calculate->_snprintf
    _snprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flge->___flmul

Critical Paths under _main in BANK1

    _main->_calculate
    _calculate->_snprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0   27402
                                             73 BANK1      3     3      0
                                              0 BANK3     32    32      0
                         _LCDdisplay
                          _calculate
                           _getInput
                          _selectRow
                        _sendCommand
                           _setDigit
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _setDigit                                             6     3      3    6394
                                             49 BANK0      6     3      3
                         _LCDdisplay
                            ___fladd
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     338
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) _LCDdisplay                                           6     4      2     212
                                              4 COMMON     6     4      2
                             _strlen
                       _toggleEnable
 ---------------------------------------------------------------------------------
 (1) _selectRow                                            2     0      2      54
                                              3 COMMON     2     0      2
                        _sendCommand
 ---------------------------------------------------------------------------------
 (1) _sendCommand                                          1     1      0      29
                                              2 COMMON     1     1      0
                       _toggleEnable
 ---------------------------------------------------------------------------------
 (3) _toggleEnable                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _getInput                                             4     4      0     155
                                              4 COMMON     4     4      0
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _calculate                                            5     2      3   19767
                                             68 BANK1      5     2      3
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           _snprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            27    19      8   12448
                                             77 BANK0      3     3      0
                                             44 BANK1     24    16      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             5     1      4   11997
                                             72 BANK0      5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13     9      4   11872
                                             60 BANK0     12     8      4
                             _efgtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              56    49      7   11212
                                             49 BANK0     11     4      7
                                              0 BANK1     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               6     3      3      81
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5     845
                                             13 COMMON     1     1      0
                                              8 BANK0      7     2      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               4     2      2      94
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                8     5      3     331
                                              0 BANK0      8     5      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                               13     9      4     232
                                              0 COMMON    13     9      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _memcpy                                               7     3      4     146
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) _labs                                                 4     0      4      69
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     340
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       16    12      4     137
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     232
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2047
                                             41 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    1994
                                             21 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4      46
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    1624
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     139
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     192
                                             21 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8      94
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    1134
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDdisplay
     _strlen
     _toggleEnable
   _calculate
     ___fladd
       ___flmul (ARG)
         __Umul8_16
       ___xxtofl (ARG)
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
       ___flmul (ARG)
       ___xxtofl (ARG)
     _snprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
             _strcpy
           _fputc
     _strlen
   _getInput
     _strlen
   _selectRow
     _sendCommand
       _toggleEnable
   _sendCommand
   _setDigit
     _LCDdisplay
     ___fladd
     ___flmul
     ___flsub
     ___xxtofl
   _strcpy

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14     14      14    100.0%
BANK0               80     80      80    100.0%
BANK1               80     76      79     98.8%
BANK3               96     32      70     72.9%
BANK2               96      0      80     83.3%
STACK                0      0       0      0.0%
DATA                 0      0     323      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Feb 23 15:02:44 2025

       setDigit@oldValue 0051         setDigit@newValue 0052       LCDdisplay@sentence 0074  
           ___fldiv@aexp 002C             ___fldiv@bexp 002B                        pc 0002  
           ___fldiv@sign 0024                       l23 1AF5                       l32 1BFC  
                     l26 1ACB                       l51 14C8                       l43 1FE6  
                     l60 1517                       l44 1FFF                       l54 14DE  
                     l63 152D                       l39 1B12                       l72 157C  
                     l48 14B2                       l90 160D                       l66 1543  
                     l75 1592                       l84 15E1                       l78 15A8  
                     l87 15F7                       l97 1641                       fsr 0004  
    __Umul8_16@word_mpld 0076                      l130 16F2                      l115 1489  
                    l132 16F2                      l401 1C58                      l402 1C74  
                    l410 0025                      l413 0091                      l422 100A  
                    l407 1C89                      l433 1D3B                      l418 00AA  
                    l426 1D50                      l611 0A59                      l436 1D50  
                    l613 0A65                      l605 09E7                      l533 0ACB  
                    l528 0A9A                      l800 1069                      l641 0FF5  
                    l537 0B4A                      l650 1BC3                      l554 0C10  
                    l546 0CBD                      l635 0F71                      l539 0B25  
                    l811 1111                      l564 0C57                      l740 1CDC  
                    l629 0FFF                      l558 0C34                      l591 0A6D  
                    l575 0CB3                      l567 0C93                      l751 07E5  
                    l648 1BB1                      l576 0CBD                      l736 1C92  
                    l841 1218                      l673 1E9A                      l818 1C3B  
                    l674 1EAB                      l579 1B78                      l851 1AE0  
                    l675 1F2B                      l828 1DDD                      l836 115F  
                    l748 12A1                      l589 08F3                      l837 1220  
                    l854 1B25                      l686 1EF5                      l767 02F6  
                    l687 1F01                      l679 1ED9                      l880 0006  
                    l857 1B33                      l777 05C9                      l698 089D  
       setDigit@positive 0053                      l892 1B9C                      l869 1E77  
                    l877 1035                      l886 1B54                      _pad 1C8A  
                    fsr0 0004                      indf 0000              ?_LCDdisplay 0074  
           ___flmul@aexp 002D             ___flmul@bexp 002E             ___flmul@sign 0028  
           ___flmul@temp 0033             ___flmul@prod 002F             ___fltol@exp1 0079  
                   l3000 1112                     l3010 117F                     l3002 1132  
                   l3020 11D5                     l3004 1151                     l3100 01B7  
                   l3022 11EE                     l3014 1194                     l3006 115E  
                   l3030 1B13                     l3102 0217                     l2400 0AC0  
                   l3024 11F7                     l3016 11AD                     l3008 1165  
                   l3032 1B18                     l3200 066F                     l3120 02F2  
                   l3104 0222                     l3112 02A8                     l3040 1224  
                   l2410 0AD7                     l2402 0AC1                     l3026 1210  
                   l3018 11C4                     l3034 1B1D                     l3210 068D  
                   l3202 0675                     l3130 0314                     l3122 0300  
                   l3106 0243                     l3114 02E1                     l3050 1282  
                   l3042 123C                     l2500 0C1D                     l2420 0AE1  
                   l2412 0AD9                     l2404 0AC3                     l3036 1B1F  
                   l2340 1DEA                     l3220 0731                     l3212 0694  
                   l3204 067B                     l3140 0333                     l3132 031A  
                   l3124 0306                     l3116 02E9                     l3108 0249  
                   l3060 12A3                     l3052 128E                     l3044 1263  
                   l2510 0C38                     l2430 0AEB                     l2422 0AE3  
                   l2414 0ADB                     l2406 0AD1                     l2342 1DF1  
                   l2350 1B79                     l3230 0768                     l3222 0737  
                   l3214 069A                     l3206 0681                     l3142 0371  
                   l3150 041B                     l3126 030A                     l3134 0320  
                   l3118 02ED                     l3062 12B6                     l3054 1293  
                   l3046 1267                     l3038 1221                     l3310 1C01  
                   l3302 1AE1                     l2600 0039                     l2512 0C3C  
                   l2504 0C26                     l2520 0C49                     l2432 0AED  
                   l2424 0AE5                     l2416 0ADD                     l2408 0AD5  
                   l2440 0AF5                     l2360 0A6E                     l2344 1E09  
                   l2336 1DDE                     l2352 1B7E                     l3240 07AF  
                   l3232 076D                     l3216 06A0                     l3208 0687  
                   l3224 073D                     l3160 04CD                     l3152 0431  
                   l3144 0384                     l3136 0322                     l3128 0312  
                   l3064 12BD                     l3072 1303                     l3056 1298  
                   l3048 127E                     l3312 1C06                     l3304 1AE4  
                   l3320 1AC0                     l3400 1EEF                     l2610 00A7  
                   l2602 0041                     l2530 0C5C                     l2522 0C4A  
                   l2514 0C3E                     l2506 0C2F                     l2450 0B32  
                   l2442 0AF6                     l2434 0AEF                     l2426 0AE7  
                   l2418 0ADF                     l2370 0A7D                     l2362 0A72  
                   l2346 1E3B                     l2338 1DE4                     l2354 1B84  
                   l3242 07BB                     l3234 078B                     l3226 0753  
                   l3218 0712                     l3170 057E                     l3162 04D3  
                   l3154 0470                     l3146 03F6                     l3138 032A  
                   l3074 131A                     l3066 12CD                     l3058 129D  
                   l3250 1047                     l3314 1C21                     l3306 1AE9  
                   l3322 1AC4                     l3330 1BD5                     l3410 1F22  
                   l3402 1EF9                     l2700 08E0                     l2612 00A9  
                   l2604 0045                     l2620 100A                     l2540 0C98  
                   l2532 0C61                     l2524 0C4E                     l2516 0C43  
                   l2508 0C33                     l2460 0B4E                     l2452 0B36  
                   l2444 0B0D                     l2436 0AF1                     l2428 0AE9  
                   l2372 0A82                     l2380 0A92                     l2364 0A74  
                   l2356 1B94                     l3244 07C1                     l3236 0795  
                   l3228 0762                     l3180 05DA                     l3172 05BD  
                   l3164 04DB                     l3156 04A7                     l3148 0415  
                   l3092 00D1                     l3076 1321                     l3084 00AB  
                   l3068 12D9                     l3260 1066                     l3252 104B  
                   l3316 1C2F                     l3308 1BFD                     l3340 0804  
                   l3500 1559                     l3324 1AC6                     l3420 1AFE  
                   l3332 1BD8                     l3412 1F23                     l3404 1F03  
                   l2710 0907                     l2702 08E8                     l2606 0069  
                   l2550 0CAF                     l2542 0C9D                     l2534 0C6F  
                   l2526 0C54                     l2518 0C45                     l2470 0B77  
                   l2462 0B53                     l2454 0B37                     l2446 0B29  
                   l2438 0AF3                     l2390 0AA9                     l2382 0A9C  
                   l2374 0A87                     l2366 0A78                     l2630 1CEF  
                   l3238 07AA                     l3190 0656                     l3182 05DD  
                   l3174 05C3                     l3166 0528                     l3158 04B2  
                   l3094 00E1                     l3086 00B5                     l3078 1331  
                   l3270 1086                     l3262 106C                     l3254 1053  
                   l3350 081C                     l3342 080F                     l3510 1573  
                   l3502 1562                     l3334 1BE7                     l3326 1BC4  
                   l3406 1F19                     l3430 1F2C                     l2800 0A5D  
                   l2712 0909                     l2704 08E9                     l2608 006D  
                   l2560 1BA0                     l2616 1000                     l2552 0CB1  
                   l2544 0CA5                     l2536 0C73                     l2480 0B89  
                   l2472 0B7B                     l2456 0B40                     l2448 0B30  
                   l2392 0AAD                     l2384 0A9E                     l2376 0A8F  
                   l2368 0A7C                     l2640 1D11                     l2632 1D02  
                   l2624 1CDD                     l3192 065A                     l3184 0635  
                   l3176 05D7                     l3168 0576                     l3096 0120  
                   l3088 00B7                     l3280 10BC                     l3272 109A  
                   l3256 1057                     l3248 1036                     l3360 0857  
                   l3352 0825                     l3600 147C                     l3520 1596  
                   l3512 1579                     l3504 1565                     l3440 1499  
                   l3424 1B05                     l3416 1AF6                     l3336 1BEC  
                   l3328 1BC8                     l3408 1F1E                     l3432 1F33  
                   l2802 0A61                     l2730 094A                     l2722 0920  
                   l2706 08EB                     l2562 1BA7                     l2810 0CBE  
                   l2618 1008                     l2554 0CB8                     l2546 0CAA  
                   l2538 0C91                     l2490 0BEB                     l2482 0B92  
                   l2474 0B82                     l2466 0B5C                     l2458 0B42  
                   l2394 0AAE                     l2386 0AA4                     l2378 0A90  
                   l2634 1D03                     l2626 1CE6                     l3194 0660  
                   l3186 064B                     l3178 05D8                     l3098 017E  
                   l3290 10EB                     l3266 106E                     l3258 105D  
                   l3370 0894                     l3362 085D                     l3354 082D  
                   l3346 0816                     l3602 1481                     l3530 15BB  
                   l3522 159F                     l3514 1580                     l3506 1566  
                   l3450 14B6                     l3442 149C                     l3418 1AF7  
                   l3338 1BF2                     l3434 1F8D                     l3610 1652  
                   l2804 0A63                     l2740 0968                     l2732 094C  
                   l2724 0932                     l2708 08FB                     l2716 0912  
                   l2564 1BAB                     l2900 0F3D                     l2820 0CCD  
                   l2812 0CC2                     l2556 0CBC                     l2548 0CAB  
                   l2492 0BEE                     l2476 0B84                     l2468 0B73  
                   l2484 0B95                     l2396 0AB3                     l2388 0AA5  
                   l2660 1B55                     l2636 1D0B                     l2572 100B  
                   l2580 1B34                     l3196 0666                     l3188 0651  
                   l3276 10AE                     l3268 1079                     l3364 0861  
                   l3356 0830                     l3348 0818                     l3604 1488  
                   l3540 15CF                     l3532 15BE                     l3524 15A5  
                   l3516 1589                     l3508 156A                     l3460 14DB  
                   l3452 14BF                     l3444 14A0                     l3380 1E92  
                   l3436 1FF1                     l3700 17AD                     l3612 1655  
                   l2734 0951                     l2742 0971                     l2750 099A  
                   l2726 093A                     l2718 0917                     l2670 08A4  
                   l2590 1C86                     l2566 1BBA                     l2558 1B9E  
                   l2910 0F55                     l2902 0F41                     l2830 0CE9  
                   l2822 0CD2                     l2814 0CC4                     l2494 0BF3  
                   l2486 0BAB                     l2478 0B88                     l2398 0AB8  
                   l2662 1B59                     l2654 1D30                     l2646 1D19  
                   l2638 1D0D                     l2574 1010                     l2582 1B36  
                   l3198 066C                     l3286 10DC                     l3278 10B6  
                   l3294 10EE                     l3366 0883                     l3358 0838  
                   l3550 15F4                     l3542 15D8                     l3526 15AC  
                   l3518 158F                     l3534 15C7                     l3462 14E2  
                   l3454 14C5                     l3470 14FD                     l3446 14A9  
                   l3438 148A                     l3390 1EC0                     l3382 1EA2  
                   l3374 1E79                     l3702 17B5                     l3710 17E6  
                   l3630 1681                     l3622 165C                     l3614 1656  
                   l2760 09B7                     l2752 09A0                     l2744 0983  
                   l2736 0963                     l2728 0942                     l2680 08B7  
                   l2672 08A8                     l2592 1C88                     l2584 1C3C  
                   l2568 1BBF                     l2920 0F76                     l2912 0F56  
                   l2904 0F42                     l2840 0CFA                     l2832 0CEC  
                   l2824 0CD7                     l2816 0CC8                     l2488 0BE9  
                   l2496 0C02                     l2656 1D40                     l2648 1D29  
                   l2576 1020                     l3296 1106                     l3288 10E7  
                   l3368 088E                     l3560 161A                     l3552 15FB  
                   l3544 15DE                     l3536 15CA                     l3528 15B5  
                   l3480 1514                     l3472 1500                     l3464 14EB  
                   l3456 14CC                     l3448 14AF                     l3392 1EC2  
                   l3376 1E7E                     l3704 17B7                     l3640 16A7  
                   l3632 168F                     l3624 166A                     l3616 1657  
                   l3608 1642                     l2770 09CC                     l2762 09B8  
                   l2754 09A8                     l2746 0984                     l2738 0967  
                   l2690 08CD                     l2682 08BF                     l2674 08AC  
                   l2666 089E                     l2586 1C50                     l2922 0F7B  
                   l2930 0FAC                     l2914 0F5A                     l2906 0F4B  
                   l2850 0D16                     l2842 0CFF                     l2834 0CF0  
                   l2826 0CDF                     l2818 0CCC                     l2498 0C18  
                   l2658 1D45                     l2578 1028                     l3298 110D  
                   l3570 1640                     l3562 1620                     l3554 1604  
                   l3546 15E5                     l3538 15CB                     l3490 153A  
                   l3482 151B                     l3474 1501                     l3466 14F1  
                   l3458 14D5                     l3394 1ED0                     l3386 1EAE  
                   l3378 1E82                     l3650 16C5                     l3642 16AD  
                   l3634 1695                     l3626 1670                     l2780 09F1  
                   l2772 09D0                     l2764 09C1                     l2756 09AA  
                   l2748 0998                     l2692 08D1                     l2684 08C0  
                   l2676 08AD                     l2668 08A2                     l2588 1C6C  
                   l2596 0007                     l2940 0FDF                     l2932 0FB9  
                   l2924 0F89                     l2916 0F6E                     l2908 0F51  
                   l2860 0D3F                     l2852 0D1B                     l2844 0D07  
                   l2836 0CF4                     l2828 0CE1                     l3580 13B1  
                   l3564 1623                     l3556 160A                     l3548 15EE  
                   l3492 1540                     l3484 1524                     l3476 1505  
                   l3468 14F4                     l3396 1EE0                     l3388 1EB9  
                   l3708 17C4                     l3660 16DF                     l3652 16C7  
                   l3644 16B6                     l3636 169B                     l3628 1678  
                   l2790 0A2F                     l2782 09FF                     l2774 09E4  
                   l2758 09B3                     l2766 09C7                     l2694 08D5  
                   l2678 08B2                     l2686 08C2                     l2598 001D  
                   l2942 0FEB                     l2934 0FC4                     l2926 0F8D  
                   l2870 0DD8                     l2862 0D5A                     l2846 0D09  
                   l2838 0CF5                     l3590 1451                     l3582 13E2  
                   l3574 133E                     l3558 1611                     l3566 162C  
                   l3494 1547                     l3486 152A                     l3478 150E  
                   l3398 1EEB                     l3670 1723                     l3662 16E4  
                   l3654 16D0                     l3646 16BA                     l3638 16A1  
                   ?_pad 0028                     l2792 0A3D                     l2784 0A03  
                   l2768 09CB                     l2696 08D6                     l2688 08CA  
                   l2944 0FEF                     l2936 0FD3                     l2928 0FA6  
                   l2880 0E37                     l2872 0DE1                     l2864 0D76  
                   l2856 0D24                     l2848 0D11                     l2960 1CAC  
                   l2952 1C8A                     l3576 133F                     l3584 141B  
                   l3568 162F                     l3496 1550                     l3488 1531  
                   l3680 1746                     l3672 1729                     l3664 16F4  
                   l3656 16D5                     l3648 16C3                     l2794 0A4C  
                   l2786 0A1C                     l2778 09EC                     l2698 08DB  
                   l2946 0FF0                     l2938 0FDD                     l2890 0ECF  
                   l2882 0E4E                     l2874 0DEF                     l2866 0DA0  
                   l2858 0D32                     l2970 1D71                     l2962 1CBA  
                   l2954 1C90                     l3594 1464                     l3578 1378  
                   l3586 1428                     l3498 1556                     l3690 1793  
                   l3682 1765                     l3674 172F                     l3666 16FD  
                   l3658 16DE                     l2796 0A50                     l2788 0A22  
                   l2948 0FF7                     l2892 0EF5                     l2884 0E6B  
                   l2876 0E0C                     l2868 0DBC                     l2972 1D88  
                   l2964 1CC7                     l2956 1C95                     l3596 146E  
                   l3588 1437                     l3692 179A                     l3684 176E  
                   l3780 173E                     l3668 1704                     l3676 1739  
                   l2798 0A58                     l2894 0F1D                     l2886 0E96  
                   l2878 0E1A                     l2974 1D8E                     l2982 1DB1  
                   l2958 1CA4                     l3598 1473                     l3782 1B0A  
                   l3694 179C                     l3686 1780                     l2896 0F26  
                   l2888 0EA4                     l2984 1DB7                     l2976 1DA7  
                   l2968 1D51                     l2992 1ACC                     l3696 17A2  
                   l3688 1787                     l2898 0F34                     l2978 1DAC  
                   l2994 1AD0                     l3698 17A5                     l2988 1DD9  
                   l2996 1AD1                     STR_1 181C                     STR_2 182F  
                   STR_3 1829                     STR_4 1823                     STR_5 1837  
                   STR_6 1831                     STR_7 182B                     STR_8 1825  
                   STR_9 1821                     u3000 0B88                     u3001 0B87  
                   u3100 0C38                     u3020 0BAB                     u3101 0C37  
                   u3021 0BAA                     u3110 0C43                     u3111 0C42  
                   u3031 0BC2                     u3023 0BA7                     u3015 0B8B  
                   u4000 0EDB                     u3200 0C98                     u3120 0C49  
                   u3040 0BD6                     u3032 0BC3                     u3201 0C97  
                   u3121 0C48                     u3041 0BD7                     u3033 0BC8  
                   u3210 0C9D                     u3130 0C4E                     u3050 0BF3  
                   u3042 0BDC                     u3034 0BC9                     u4011 0EE7  
                   u3211 0C9C                     u3131 0C4D                     u3051 0BF2  
                   u3043 0BDD                     u3035 0BCE                     u3300 1C50  
                   u4100 0F6E                     u4020 0F03                     u4012 0EEE  
                   u3220 0CAA                     u3140 0C54                     u3060 0C18  
                   u3036 0BCF                     u3301 1C4F                     u4101 0F6D  
                   u4013 0EF5                     u4005 0ED6                     u3221 0CA9  
                   u3141 0C53                     u3061 0C17                     u3310 1C6C  
                   u4110 0F75                     u3230 0CAF                     u3150 0C5B  
                   u3070 0C1D                     u3311 1C6B                     u4111 0F74  
                   u4031 0F0F                     u3231 0CAE                     u3151 0C5A  
                   u3071 0C1C                     u3320 1C86                     u4120 0F7B  
                   u4032 0F16                     u3400 1008                     u3240 0CBC  
                   u3160 0C61                     u4200 1D7F                     u5000 1F33  
                   u3321 1C85                     u4121 0F7A                     u4033 0F1D  
                   u4025 0EFE                     u3401 1007                     u3241 0CBB  
                   u3161 0C60                     u5001 1F32                     u3330 001D  
                   u3250 1BAB                     u4130 0F8D                     u3170 0C73  
                   u3090 0C33                     u3410 1CE6                     u4210 1D8E  
                   u5010 14A0                     u3331 001C                     u3251 1BAA  
                   u4131 0F8C                     u3171 0C72                     u3091 0C32  
                   u3411 1CE5                     u4211 1D8D                     u5011 149F  
                   u3340 0039                     u4140 0F9C                     u4060 0F41  
                   u3180 0C82                     u3500 1D45                     u3420 1CFD  
                   u4220 1D9C                     u4300 115E                     u5100 1514  
                   u5020 14AF                     u3325 1C82                     u3341 0038  
                   u4061 0F40                     u4045 0F1F                     u3085 0C28  
                   u3501 1D44                     u4205 1D7A                     u4301 115D  
                   u5101 1513                     u5021 14AE                     u3510 08AC  
                   u3350 0045                     u3270 1BBF                     u4150 0FB9  
                   u3190 0C91                     u3430 1D11                     u4230 1DA7  
                   u4310 1165                     u5110 151B                     u5030 14B6  
                   u3511 08AB                     u3351 0044                     u3271 1BBE  
                   u4151 0FB8                     u4055 0F36                     u3191 0C90  
                   u3431 1D10                     u4231 1DA6                     u4311 1164  
                   u5111 151A                     u5031 14B5                     u3520 08B2  
                   u4160 0FD3                     u4080 0F55                     u2800 0A82  
                   u3440 1D18                     u4240 1DB7                     u4400 1210  
                   u4320 1175                     u3280 1035                     u5200 158F  
                   u5120 152A                     u5040 14C5                     u3521 08B1  
                   u3361 0054                     u3265 1BB2                     u4161 0FD2  
                   u4145 0F97                     u4081 0F54                     u3185 0C7D  
                   u2801 0A81                     u3441 1D17                     u3425 1CF8  
                   u4241 1DB6                     u4225 1D97                     u4401 120F  
                   u4305 115A                     u3281 1034                     u5201 158E  
                   u5121 1529                     u5041 14C4                     u3530 08B7  
                   u3370 006D                     u3362 0055                     u4170 0FEF  
                   u4090 0F5A                     u2810 0A87                     u4250 1DC5  
                   u4330 1193                     u4410 1B33                     u2730 1DE4  
                   u3290 1B54                     u5210 1596                     u5130 1531  
                   u5050 14CC                     u3531 08B6                     u3371 006C  
                   u3363 005A                     u4171 0FEE                     u4155 0FB5  
                   u4091 0F59                     u4075 0F44                     u2811 0A86  
                   u4331 1192                     u4411 1B32                     u2731 1DE3  
                   u3291 1B53                     u5211 1595                     u5131 1530  
                   u5051 14CB                     u3620 0967                     u3540 08D5  
                   u3364 005B                     u2900 0B19                     u2820 0AA4  
                   u3460 1D28                     u4260 1DD1                     u4340 11A2  
                   u2740 1DEA                     u4180 1C90                     u4420 1263  
                   u5300 160A                     u5220 15A5                     u5140 1540  
                   u5060 14DB                     u3621 0966                     u3605 0953  
                   u3541 08D4                     u3381 007C                     u3365 0060  
                   u4165 0FCF                     u2821 0AA3                     u3461 1D27  
                   u4261 1DCF                     u4325 1170                     u2741 1DE9  
                   u4181 1C8F                     u4501 0143                     u4421 1262  
                   u5301 1609                     u5221 15A4                     u5141 153F  
                   u5061 14DA                     u3710 09CB                     u3550 08DB  
                   u3390 00A7                     u3382 007D                     u3366 0061  
                   u2910 0B29                     u2830 0AAD                     u3470 1D2F  
                   u4270 1DD2                     u4350 11AD                     u2750 1E09  
                   u4190 1CBA                     u4510 017E                     u4502 0146  
                   u4430 1293                     u5310 1611                     u5230 15AC  
                   u5150 1547                     u5070 14E2                     u3711 09CA  
                   u3615 095C                     u3551 08DA                     u3391 00A6  
                   u3383 0082                     u2911 0B28                     u2831 0AAC  
                   u3471 1D2E                     u3455 1D1A                     u4255 1DC0  
                   u4351 11AC                     u2751 1E08                     u4191 1CB9  
                   u4511 017D                     u4503 014D                     u4431 1292  
                   u5311 1610                     u5231 15AB                     u5151 1546  
                   u5071 14E1                     u3800 0A61                     u3720 09D0  
                   u3640 0983                     u3560 08E0                     u3384 0083  
                   u2920 0B36                     u2840 0AB3                     u4280 1AD0  
                   u2760 1E3B                     u4600 030A                     u4520 01B7  
                   u4504 0150                     u4440 1298                     u5320 1620  
                   u5240 15BB                     u5160 1556                     u5080 14F1  
                   u5400 16E4                     u3801 0A60                     u3721 09CF  
                   u3705 09BA                     u3641 0982                     u3561 08DF  
                   u3385 0088                     u2921 0B35                     u2841 0AB2  
                   u4361 11B6                     u4345 119D                     u4281 1ACF  
                   u2761 1E3A                     u4601 0309                     u4521 01B6  
                   u4513 017A                     u4505 0157                     u4441 1297  
                   u5321 161F                     u5241 15BA                     u5161 1555  
                   u5081 14F0                     u5401 16E3                     u3730 09E4  
                   u3650 0998                     u3570 08FB                     u3386 0089  
                   u3810 0CCC                     u2850 0AB8                     u3490 1D40  
                   u4370 11E3                     u4362 11BD                     u4290 1140  
                   u2770 1E5C                     u4610 031A                     u4506 015A  
                   u4450 12B6                     u5330 1640                     u5250 15CF  
                   u5170 156A                     u5090 1505                     u5410 1793  
                   u3731 09E3                     u3635 096A                     u3571 08FA  
                   u3395 00A3                     u3811 0CCB                     u2851 0AB7  
                   u3491 1D3F                     u4363 11C4                     u4195 1CB6  
                   u4611 0319                     u4531 01DC                     u4451 12B5  
                   u5331 163F                     u5251 15CE                     u5171 1569  
                   u5091 1504                     u5411 1792                     u3740 09EB  
                   u3660 09A0                     u3580 0917                     u3820 0CD2  
                   u2940 0B4A                     u2860 0AD1                     u4380 11EE  
                   u2780 1B94                     u4700 065A                     u4620 0431  
                   u4540 0217                     u4532 01DF                     u4460 12BD  
                   u5340 146E                     u5260 15DE                     u5180 1579  
                   u5420 179A                     u3741 09EA                     u3661 099F  
                   u3645 097F                     u3581 0916                     u3901 0D84  
                   u3821 0CD1                     u2941 0B49                     u2861 0AD0  
                   u3485 1D32                     u4381 11ED                     u2765 1E37  
                   u2781 1B93                     u4701 0659                     u4621 0430  
                   u4541 0216                     u4533 01E6                     u4461 12BC  
                   u5341 146D                     u5261 15DD                     u5181 1578  
                   u5421 1799                     u3750 09F1                     u3670 09A8  
                   u3590 0951                     u3902 0D8B                     u3830 0CD7  
                   u2950 0B4E                     u2870 0AD5                     u2790 0A7C  
                   u4390 1205                     u4710 068D                     u4630 04A7  
                   u4534 01E9                     u4470 131A                     u5350 147C  
                   u5270 15E5                     u5190 1580                     u5430 17C3  
                   u3751 09F0                     u3671 09A7                     u3655 098B  
                   u3591 0950                     u3911 0DAE                     u3903 0D92  
                   u3831 0CD6                     u2951 0B4D                     u2935 0B39  
                   u2871 0AD4                     u2791 0A7B                     u4375 11DE  
                   u4295 113B                     u4711 068C                     u4631 04A6  
                   u4551 026C                     u4543 0213                     u4535 01F0  
                   u4471 1317                     u5351 147B                     u5271 15E4  
                   u5191 157F                     u5431 17C2                     u3760 0A03  
                   u3656 098C                     u3912 0DB5                     u3840 0CF4  
                   u2960 0B53                     u2880 0B0D                     u4720 0753  
                   u4640 04CD                     u4560 02A7                     u4552 026F  
                   u4536 01F3                     u4480 1321                     u5280 15F4  
                   u4800 1BFC                     u5360 1681                     u3761 0A02  
                   u3657 0991                     u3921 0DCA                     u3913 0DBC  
                   u3841 0CF3                     u2961 0B52                     u2881 0B0C  
                   u4721 0752                     u4641 04CC                     u4625 042D  
                   u4561 02A6                     u4553 0276                     u4481 1320  
                   u5281 15F3                     u4801 1BFB                     u5361 1680  
                   u3770 0A12                     u3690 09B7                     u3658 0992  
                   u3922 0DD1                     u3850 0CFA                     u2890 0B18  
                   u4730 0762                     u4650 04D3                     u4570 02E1  
                   u4554 0279                     u4490 00D0                     u4810 080F  
                   u5290 15FB                     u5370 16BE                     u3691 09B6  
                   u3659 0997                     u3923 0DD8                     u3851 0CF9  
                   u2971 0B65                     u2891 0B16                     u4395 1200  
                   u4731 0761                     u4651 04D2                     u4571 02E0  
                   u4563 02A3                     u4555 0280                     u4491 00CF  
                   u4811 080E                     u5291 15FA                     u5507 1492  
                   u3780 0A2F                     u3860 0CFF                     u2980 0B77  
                   u2972 0B6C                     u4740 079B                     u4660 0576  
                   u4580 02ED                     u4556 0283                     u4820 0825  
                   u4900 1EBF                     u5380 16D5                     u3781 0A2E  
                   u3685 09AC                     u3941 0DFE                     u3861 0CFE  
                   u2981 0B76                     u2973 0B73                     u2885 0B09  
                   u4741 0799                     u4725 074F                     u4661 0575  
                   u4581 02EC                     u4821 0824                     u5517 14A4  
                   u4805 1BF8                     u4901 1EBE                     u5445 17C9  
                   u5381 16D4                     u3790 0A4C                     u3942 0E05  
                   u3870 0D16                     u2990 0B7B                     u4750 079C  
                   u4670 05C3                     u4590 0306                     u4830 085D  
                   u5390 16DE                     u3791 0A4B                     u3775 0A0D  
                   u3951 0E29                     u3943 0E0C                     u3935 0DDA  
                   u3871 0D15                     u2991 0B7A                     u4735 075E  
                   u4671 05C2                     u4591 0305                     u4831 085C  
                   u5607 155D                     u5527 14BA                     u5391 16DD  
                   u3952 0E30                     u3880 0D1B                     u4760 07AF  
                   u4680 0635                     u4840 0861                     u4920 1EDF  
                   u3785 0A2B                     u3953 0E37                     u3881 0D1A  
                   u4761 07AE                     u4681 0634                     u4841 0860  
                   u5617 156E                     u5537 14D0                     u4921 1EDE  
                   u5457 1664                     u4690 0656                     u4770 1047  
                   u4850 0883                     u3795 0A48                     u3971 0E5D  
                   u3891 0D68                     u4691 0655                     u4771 1046  
                   u4851 0882                     u5707 1627                     u5627 1584  
                   u5547 14E6                     u4915 1ED1                     u5467 1689  
                   u3972 0E64                     u3892 0D6F                     u4780 1085  
                   u4940 1EEF                     u4860 1E7E                     u3981 0E88  
                   u3973 0E6B                     u3965 0E39                     u3893 0D76  
                   u4685 0631                     u4781 1084                     u5637 159A  
                   u5557 14F8                     u4941 1EEE                     u4861 1E7D  
                   u5477 1FF9                     u3982 0E8F                     u4790 1C2F  
                   u4950 1EF5                     u4870 1E82                     u3991 0EB3  
                   u3983 0E96                     u4791 1C2E                     u4855 087F  
                   u5647 15B0                     u5567 1509                     u5487 1AE6  
                   u4951 1EF4                     u4935 1EE4                     u4871 1E81  
                   u3992 0EBA                     u4960 1EF9                     u4880 1EA2  
                   u3993 0EC1                     u5657 15C2                     u5577 151F  
                   u5497 1AF0                     u4961 1EF8                     u4881 1EA1  
                   u4970 1F0E                     u5667 15D3                     u5587 1535  
                   u4980 1F1E                     u5677 15E9                     u5597 154B  
                   u4981 1F1D                     u4990 1F22                     u5687 15FF  
                   u4991 1F21                     u4975 1F09                     u4895 1EB1  
                   u5697 1615                     _dbuf 0110                     _labs 1ACC  
                   _main 1642                     _prec 00EC                     _nout 01A0  
                   pad@i 002D                     pad@p 002B                     btemp 007E  
          ___fpclassifyf 1D51             _snprintf$705 00D4                     start 0000  
        ___fldiv@new_exp 0025                    ??_pad 007D            ___fltol@sign1 0078  
                  ?_labs 0070          __end_of___fladd 0CBE                    ?_main 0070  
        __end_of___fldiv 0A6E          __end_of___flneg 100B                    STR_10 1833  
                  STR_11 182D                    STR_12 1827                    STR_13 1835  
                  STR_14 181F                    STR_22 1814                    STR_15 1839  
                  STR_16 181D                    STR_17 181B                    STR_18 1818  
                  STR_19 1810          __end_of___flmul 1000          __end_of___flsub 1B79  
        __end_of___fltol 1D51             vfpfcnvrt@fmt 005E                    _PORTB 0006  
                  _TRISB 0086             main@newInput 01D5                    _flags 00EE  
                  _errno 01A4                    _fputc 1DDE                    _fputs 100B  
           main@operator 01CA                    labs@a 0070                    pad@fp 0028  
                  _width 01A2                    _putch 0006                    main@x 01C6  
                  pclath 000A             main@positive 01C9                    status 0003  
                  wtemp0 007E           ?___fpclassifyf 0070       sendCommand@command 0072  
        __initialization 07E6             __end_of_labs 1AE1             __end_of_main 1800  
           ?_sendCommand 0070                   ??_labs 0074                   ??_main 00E9  
                 ?_fputc 0070                   ?_fputs 0020                   ?_putch 0070  
          calculate@num1 00E4            calculate@num2 00E6      main@valuesCompleted 01CB  
       __end_of___xxtofl 1F2C         __end_of_getInput 1642             vfprintf@cfmt 006C  
                 ___flge 0007                   ___fleq 1C3C                ??___fladd 003D  
              ??___fldiv 0078                ??___flneg 0074                ??___flmul 0079  
              ??___flsub 007E                ??___fltol 0074                   _efgtoa 1221  
                 _floorf 1112                   _memcpy 1B13                   pad@buf 002A  
       __end_of_setDigit 2000                   _strcpy 1B34                   _strlen 1B79  
                 fputc@c 0070                   fputs@c 0025                   fputs@i 0026  
                 fputs@s 0020          ___fpclassifyf@e 0020          ___fpclassifyf@u 0022  
        ___fpclassifyf@x 0070                   putch@c 0070         __end_of_vfprintf 1C3C  
       __end_of_snprintf 089E               ___flge@ff1 0035               ___flge@ff2 0039  
        ??___fpclassifyf 0074             ___xxtofl@arg 007A             ___xxtofl@exp 0079  
           ___xxtofl@val 0070               ___fleq@ff1 0070               ___fleq@ff2 0074  
__end_of__initialization 07FC               ___flneg@f1 0070               ___fltol@f1 0070  
         __pcstackCOMMON 0070            __end_of_fputc 1E78            __end_of_fputs 1036  
          __end_of_putch 0007             ??_LCDdisplay 0076                  ??_fputc 0074  
                ??_fputs 0023                  ??_putch 0070               __pbssBANK1 00EC  
             __pbssBANK2 0110               __pbssBANK3 0190        __end_of__Umul8_16 1BC4  
             _efgtoa$792 00A6               __pmaintext 1642                  ?___flge 0035  
                ?___fleq 0070       __end_of_LCDdisplay 1BFD                  ?_efgtoa 0051  
                ?_floorf 002D                  ?_memcpy 0070                  ?_strcpy 0070  
                ?_strlen 0070                ?___xxtofl 0070                ?_getInput 0070  
      __end_of_calculate 148A               __stringtab 1800                ?_setDigit 0051  
             calculate@x 00E7                  ___fladd 0A6E                  ___fldiv 089E  
                ___flneg 1000                  ___flmul 0CBE                  ___flsub 1B55  
                ___fltol 1CDD                ?_vfprintf 0068                ?_snprintf 00CC  
                __ptext1 1F2C                  __ptext2 1E78                  __ptext3 1BC4  
                __ptext4 1AF6                  __ptext5 1ABF                  __ptext6 1AE1  
                __ptext7 148A                  __ptext8 133E                  __ptext9 0804  
             ??___xxtofl 0074                  efgtoa@c 0057                  efgtoa@d 00AB  
                efgtoa@e 00AF                  efgtoa@f 0053                  efgtoa@g 00C4  
                efgtoa@h 00B9                  efgtoa@i 00B7                  efgtoa@l 00BD  
                efgtoa@m 00AD                  efgtoa@n 00C2                  efgtoa@p 00A2  
                efgtoa@t 00A4                  efgtoa@u 00C8                  efgtoa@w 00B1  
             ??_getInput 0074                  clrloop0 1AB8     end_of_initialization 07FC  
                floorf@e 003B                  floorf@m 0037                  floorf@u 003D  
                floorf@x 002D        __end_of_selectRow 1B13                  memcpy@d 0075  
                memcpy@n 0072                  memcpy@s 0076                  fputc@fp 0072  
                fputs@fp 0021               ??_setDigit 0054        __end_of_vfpfcnvrt 1112  
             efgtoa@mode 00A9               efgtoa@sign 00C1                  psplit$0 18002C  
       vfpfcnvrt@convarg 0062               ??_vfprintf 007E               ??_snprintf 006D  
                strcpy@d 0075                  strlen@a 0072                  strlen@s 0070  
              _PORTCbits 0007                _PORTDbits 0008              ___fladd@grs 0048  
          ___xxtofl@sign 0078                _TRISCbits 0087                _TRISDbits 0088  
            ___fldiv@grs 0027              ___fldiv@rem 0020            ?_toggleEnable 0070  
            ___flmul@grs 0029               main@values 01CD               main@output 01B6  
         __end_of___flge 00AB           __end_of___fleq 1C8A              vfpfcnvrt@ap 005F  
            vfpfcnvrt@cp 0067              vfpfcnvrt@fp 005C           __end_of_efgtoa 07E6  
         __end_of_floorf 1221           __end_of_memcpy 1B34               floorf@F521 0198  
         __end_of_strcpy 1B55           __end_of_strlen 1B9D      start_initialization 07E6  
         ??_toggleEnable 0070              __end_of_pad 1CDD    __end_of___fpclassifyf 1DDE  
            vfprintf@fmt 006A                 ??___flge 003D                 ??___fleq 0078  
               ??_efgtoa 0058                __Umul8_16 1B9D                 ??_floorf 0031  
               ??_memcpy 0074                 ??_strcpy 0073                 ??_strlen 0072  
              ___fladd@a 0039                ___fladd@b 0035                ___fldiv@a 0070  
              ___fldiv@b 0074                ___flmul@a 0024                ___flmul@b 0020  
              ___flsub@a 0049                ___flsub@b 004D                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00A0            __pcstackBANK3 01B6  
            snprintf@cnt 00D7              snprintf@fmt 00CF           getInput@output 0077  
              _calculate 133E            LCDdisplay@ind 0078                _main$1077 01C8  
               ?___fladd 0035                 ?___fldiv 0070                 ?___flneg 0070  
               ?___flmul 0020                 ?___flsub 0049                 ?___fltol 0070  
             ?__Umul8_16 0070            ??_sendCommand 0072                __pstrings 1800  
             pnum$text12 0018               ?_calculate 00E4                clear_ram0 1AB7  
              _selectRow 1AF6          calculate@result 01A6     __end_of_toggleEnable 1AF6  
              main@F1519 0190                _vfpfcnvrt 1036              __stringbase 180F  
           selectRow@row 0073      __end_of_sendCommand 1ACC               vfpfcnvrt@c 0066  
             ?_selectRow 0073                memcpy@tmp 0074               vfprintf@ap 006B  
             vfprintf@fp 0068              ??__Umul8_16 0072               ?_vfpfcnvrt 005C  
             snprintf@ap 00D6       __end_of__stringtab 1810       ___fpclassifyf@F465 019C  
               ___xxtofl 1E78                 _getInput 148A                 __ptext10 1BFD  
               __ptext11 1036                 __ptext20 1ACC                 __ptext12 1221  
               __ptext21 1112                 __ptext13 1B34                 __ptext30 1C3C  
               __ptext22 1D51                 __ptext14 1C8A                 __ptext31 089E  
               __ptext23 1CDD                 __ptext15 1B79                 __ptext24 1B55  
               __ptext16 100B                 __ptext25 0A6E                 __ptext17 1DDE  
               __ptext26 1000                 __ptext18 0006                 __ptext27 0CBE  
               __ptext19 1B13                 __ptext28 1B9D                 __ptext29 0007  
             strcpy@dest 0070              ??_calculate 007E                 _setDigit 1F2C  
               efgtoa@fp 0051                 efgtoa@ne 00A0                 efgtoa@pp 00A8  
               efgtoa@ou 00B3       pnum$text12_split_1 002C                 _vfprintf 1BFD  
               _snprintf 0804              _sendCommand 1ABF                 memcpy@d1 0070  
               memcpy@s1 0071               _LCDdisplay 1BC4        calculate@operator 00E5  
              snprintf@f 00D9                snprintf@n 00CD                snprintf@s 00CC  
              strcpy@src 0071              ??_selectRow 0075                stringcode 180A  
            efgtoa@nmode 00AA              ??_vfpfcnvrt 0060     LCDdisplay@lineLength 0076  
 __Umul8_16@multiplicand 0070                 stringdir 180A                 stringtab 1800  
           _toggleEnable 1AE1            ___fladd@signs 0045             ___fladd@aexp 0046  
           ___fladd@bexp 0047     __Umul8_16@multiplier 0078        __Umul8_16@product 0074  
